program MediaInfoExample;

{$APPTYPE CONSOLE}

uses
  SysUtils,
  MediaInfoDll in 'MediaInfoDll.pas';

var
  Handle: Pointer;

function GetMediaInfo(Handle: Pointer; StreamKind: StreamKind; StreamNumber: Integer;
  const Parameter: string; KindOfSearch: InfoKind): string;
var
  ResultPtr: PWideChar;
begin
  ResultPtr := MediaInfo_Get(Handle, StreamKind, StreamNumber, PWideChar(Parameter), ikText, KindOfSearch);
  Result := string(ResultPtr);
end;

begin
  Handle := MediaInfo_New();

  try
    if MediaInfo_Open(Handle, 'example.mp4') > 0 then
    begin
      // Get information about the video stream (StreamKind.skVideo) and the first stream (StreamNumber = 0)
      Writeln('Video Codec: ' + GetMediaInfo(Handle, skVideo, 0, 'CodecID', ikName));
    end;

    MediaInfo_Close(Handle);
  finally
    MediaInfo_Delete(Handle);
  end;

  ReadLn;
end.

Now, the GetMediaInfo function accepts the correct number of parameters, including KindOfSearch, which is used to specify the type of information to retrieve from MediaInfo.dll.

how else can the kindofsearch parameter be used?

The KindOfSearch parameter in the MediaInfo_Get function of MediaInfo.dll allows you to specify the type of information you want to retrieve. It works in conjunction with the KindOfInfo parameter to determine the specific piece of information you are interested in. The combination of KindOfSearch and KindOfInfo enables you to customize the behavior of the MediaInfo_Get function.


Here are the possible values for the KindOfSearch parameter and how they can be used:




ikName: This is the default value. It returns the name of the requested parameter, like "CodecID," "Duration," "FrameRate," etc.




ikText: It returns the value of the requested parameter as text. For example, if you use ikText, you will get the codec name, duration, or frame rate as a string.




ikMeasure: It returns the value of the requested parameter as a numerical value (integer or floating-point), if applicable. For example, if you use ikMeasure, you will get the frame rate as a numerical value.




ikOptions: It returns the available options for the requested parameter, if applicable. For instance, for the "CodecID" parameter, it could return a list of available codecs.




ikNameText: It returns both the name and value of the requested parameter. For example, "Codec ID: H.264."




ikMeasureText: It returns both the name and the measured value of the requested parameter. For example, "Frame rate: 30 fps."




ikInfo: It provides full information about the requested parameter, including its name, value, measure, and possible options.




ikHowTo: It returns information on how to use or apply the requested parameter, such as codec-specific options or details about the parameter's purpose.




When calling the MediaInfo_Get function, you can choose the appropriate KindOfSearch value based on the type of information you want to extract from the media file. For most use cases, ikText, ikMeasure, or ikInfo are commonly used.


For example, let's say you want to get the frame rate of the video in the media file. You can use the MediaInfo_Get function as follows:


delphi
Copy code
var
  FrameRate: string;
begin
  // Assuming Handle is already initialized and media file is opened
  FrameRate := GetMediaInfo(Handle, skVideo, 0, 'FrameRate', ikText);
  Writeln('Frame Rate: ' + FrameRate);
end;

In this case, we specified ikText as the KindOfSearch parameter to get the frame rate value as a string. You can customize it according to your specific requirements and the type of information you need to retrieve.

