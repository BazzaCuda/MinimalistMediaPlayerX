From: <Saved by Blink>
Snapshot-Content-Location: https://mpv.io/manual/master/
Subject: mpv.io
Date: Fri, 21 Jul 2023 05:49:27 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----"


------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/html
Content-ID: <frame-B202D44CB8F5745E43F2F834B6D75E96@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://mpv.io/manual/master/

<!DOCTYPE html><html data-darkreader-mode=3D"dynamic" data-darkreader-schem=
e=3D"dark"><head><meta http-equiv=3D"Content-Type" content=3D"text/html; ch=
arset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-e=
288c0f2-6a4c-461d-9c20-804adb2b6bd8@mhtml.blink" /><link rel=3D"stylesheet"=
 type=3D"text/css" href=3D"cid:css-b399d2c4-f67e-4bdd-8d72-8707bd9f94cc@mht=
ml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-4a1f=
fbfc-6543-4566-9a45-ea2a0a54c447@mhtml.blink" /><link rel=3D"stylesheet" ty=
pe=3D"text/css" href=3D"cid:css-1b29a736-06f7-4095-be78-ff221b5a9fb2@mhtml.=
blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-461f4be=
5-5974-46c1-b3dd-9c884c6c5f5d@mhtml.blink" /><link rel=3D"stylesheet" type=
=3D"text/css" href=3D"cid:css-3fafb683-0642-4413-8947-7f5958eae0fe@mhtml.bl=
ink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-1aa10db8-=
ae72-4357-8606-dfaccdf551e5@mhtml.blink" /><link rel=3D"stylesheet" type=3D=
"text/css" href=3D"cid:css-3fd5201c-e0ab-4078-8c82-94b84c2f5ef6@mhtml.blink=
" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-98172574-cff=
3-463e-b62e-d0cee7fadae4@mhtml.blink" />
   =20
    <meta content=3D"width=3Ddevice-width, initial-scale=3D1" name=3D"viewp=
ort">
    <meta content=3D"IE=3Dedge,chrome=3D1" http-equiv=3D"X-UA-Compatible">
    <meta content=3D"a free, open source, and cross-platform media player" =
name=3D"description">
    <meta content=3D"mpv, mplayer, download, media player, player download,=
 encoder, video, video player, multimedia, multicast, Windows, Linux, Unix,=
 BSD, Mac, macOS, OS X, OSX, Streaming, DVD, Matroska, MPEG, MPEG2, MPEG4, =
H264, DivX, MKV, m2ts, open source, free software, floss, free" name=3D"key=
words">
    <link href=3D"https://mpv.io/images/favicon-5d3b2a52.png" rel=3D"icon" =
type=3D"image/png">
    <title>mpv.io</title>
    <link href=3D"https://mpv.io/stylesheets/all-5783234c.css" media=3D"scr=
een" rel=3D"stylesheet" type=3D"text/css">
    <meta name=3D"darkreader" content=3D"ed8633c8d1ca458dadfef85c16d83a24">
  </head>
  <body class=3D"manual manual_master manual_master_index">
    <div class=3D"navbar navbar-inverse navbar-static-top" role=3D"navigati=
on">
      <div class=3D"container">
        <div class=3D"navbar-header">
          <a class=3D"hidden-xs navbar-brand" href=3D"https://mpv.io/">
            <img width=3D"40" height=3D"40" src=3D"https://mpv.io/images/mp=
v-logo-128-0baae5aa.png">
            <span class=3D"title">mpv</span>
            <i class=3D"fa fa-home"></i>
          </a>
        </div>
        <div class=3D"pull-right">
          <ul class=3D"nav navbar-nav">
            <li>
                        <a href=3D"https://mpv.io/installation"><i class=3D=
"fa fa-cloud-download"></i>
              Installation
              </a>
   =20
            </li>
            <!-- %li{nav_class(guides_path)} -->
            <!-- =3D link_to guides_path do -->
            <!-- %i.fa.fa-book -->
            <!-- Guides -->
            <li class=3D"selected">
                        <a href=3D"https://mpv.io/manual"><i class=3D"fa fa=
-book"></i>
              Reference
              </a>
   =20
            </li>
            <li>
                        <a href=3D"https://mpv.io/bug-reports"><i class=3D"=
fa fa-bug"></i>
              Bug Reports
              </a>
   =20
            </li>
            <li>
                        <a href=3D"https://mpv.io/community"><i class=3D"fa=
 fa-comments"></i>
              Community
              </a>
   =20
            </li>
          </ul>
        </div>
      </div>
    </div>
    <div class=3D"main-content">
      <div class=3D"container">
        <div class=3D"row">
          <div class=3D"col-lg-4 manual-navigation visible-lg">
            <div class=3D"sticky sticked" data-navigation-source=3D"#manual=
" data-sticky-offset=3D"20"><ul class=3D"level-1 active"><li class=3D"level=
-1" data-anchor=3D"synopsis"><a href=3D"https://mpv.io/manual/master/#synop=
sis">SYNOPSIS</a><ul class=3D"level-2"></ul></li><li class=3D"level-1" data=
-anchor=3D"description"><a href=3D"https://mpv.io/manual/master/#descriptio=
n">DESCRIPTION</a><ul class=3D"level-2"></ul></li><li class=3D"level-1" dat=
a-anchor=3D"interactive-control"><a href=3D"https://mpv.io/manual/master/#i=
nteractive-control">INTERACTIVE CONTROL</a><ul class=3D"level-2 active"><li=
 class=3D"level-2 active" data-anchor=3D"keyboard-control"><a href=3D"https=
://mpv.io/manual/master/#keyboard-control">Keyboard Control</a><ul class=3D=
"level-3 active"></ul></li><li class=3D"level-2" data-anchor=3D"mouse-contr=
ol"><a href=3D"https://mpv.io/manual/master/#mouse-control">Mouse Control</=
a><ul class=3D"level-3"></ul></li></ul></li><li class=3D"level-1" data-anch=
or=3D"usage"><a href=3D"https://mpv.io/manual/master/#usage">USAGE</a><ul c=
lass=3D"level-2"><li class=3D"level-2" data-anchor=3D"legacy-option-syntax"=
><a href=3D"https://mpv.io/manual/master/#legacy-option-syntax">Legacy opti=
on syntax</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anc=
hor=3D"escaping-spaces-and-other-special-characters"><a href=3D"https://mpv=
.io/manual/master/#escaping-spaces-and-other-special-characters">Escaping s=
paces and other special characters</a><ul class=3D"level-3"></ul></li><li c=
lass=3D"level-2" data-anchor=3D"paths"><a href=3D"https://mpv.io/manual/mas=
ter/#paths">Paths</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" =
data-anchor=3D"per-file-options"><a href=3D"https://mpv.io/manual/master/#p=
er-file-options">Per-File Options</a><ul class=3D"level-3"></ul></li><li cl=
ass=3D"level-2" data-anchor=3D"list-options"><a href=3D"https://mpv.io/manu=
al/master/#list-options">List Options</a><ul class=3D"level-3"><li class=3D=
"level-3" data-anchor=3D"string-list-and-path-list-options"><a href=3D"http=
s://mpv.io/manual/master/#string-list-and-path-list-options">String list an=
d path list options</a><ul class=3D"level-4"></ul></li><li class=3D"level-3=
" data-anchor=3D"key-value-list-options"><a href=3D"https://mpv.io/manual/m=
aster/#key-value-list-options">Key/value list options</a><ul class=3D"level=
-4"></ul></li><li class=3D"level-3" data-anchor=3D"filter-options"><a href=
=3D"https://mpv.io/manual/master/#filter-options">Filter options</a><ul cla=
ss=3D"level-4"></ul></li><li class=3D"level-3" data-anchor=3D"general"><a h=
ref=3D"https://mpv.io/manual/master/#general">General</a><ul class=3D"level=
-4"></ul></li></ul></li></ul></li><li class=3D"level-1" data-anchor=3D"conf=
iguration-files"><a href=3D"https://mpv.io/manual/master/#configuration-fil=
es">CONFIGURATION FILES</a><ul class=3D"level-2"><li class=3D"level-2" data=
-anchor=3D"location-and-syntax"><a href=3D"https://mpv.io/manual/master/#lo=
cation-and-syntax">Location and Syntax</a><ul class=3D"level-3"></ul></li><=
li class=3D"level-2" data-anchor=3D"escaping-spaces-and-special-characters"=
><a href=3D"https://mpv.io/manual/master/#escaping-spaces-and-special-chara=
cters">Escaping spaces and special characters</a><ul class=3D"level-3"></ul=
></li><li class=3D"level-2" data-anchor=3D"putting-command-line-options-int=
o-the-configuration-file"><a href=3D"https://mpv.io/manual/master/#putting-=
command-line-options-into-the-configuration-file">Putting Command Line Opti=
ons into the Configuration File</a><ul class=3D"level-3"></ul></li><li clas=
s=3D"level-2" data-anchor=3D"file-specific-configuration-files"><a href=3D"=
https://mpv.io/manual/master/#file-specific-configuration-files">File-speci=
fic Configuration Files</a><ul class=3D"level-3"></ul></li><li class=3D"lev=
el-2" data-anchor=3D"profiles"><a href=3D"https://mpv.io/manual/master/#pro=
files">Profiles</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" da=
ta-anchor=3D"runtime-profiles"><a href=3D"https://mpv.io/manual/master/#run=
time-profiles">Runtime profiles</a><ul class=3D"level-3"></ul></li><li clas=
s=3D"level-2" data-anchor=3D"conditional-auto-profiles"><a href=3D"https://=
mpv.io/manual/master/#conditional-auto-profiles">Conditional auto profiles<=
/a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"leg=
acy-auto-profiles"><a href=3D"https://mpv.io/manual/master/#legacy-auto-pro=
files">Legacy auto profiles</a><ul class=3D"level-3"></ul></li></ul></li><l=
i class=3D"level-1" data-anchor=3D"using-mpv-from-other-programs-or-scripts=
"><a href=3D"https://mpv.io/manual/master/#using-mpv-from-other-programs-or=
-scripts">Using mpv from other programs or scripts</a><ul class=3D"level-2"=
></ul></li><li class=3D"level-1" data-anchor=3D"taking-screenshots"><a href=
=3D"https://mpv.io/manual/master/#taking-screenshots">TAKING SCREENSHOTS</a=
><ul class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=3D"termi=
nal-status-line"><a href=3D"https://mpv.io/manual/master/#terminal-status-l=
ine">TERMINAL STATUS LINE</a><ul class=3D"level-2"></ul></li><li class=3D"l=
evel-1" data-anchor=3D"low-latency-playback"><a href=3D"https://mpv.io/manu=
al/master/#low-latency-playback">LOW LATENCY PLAYBACK</a><ul class=3D"level=
-2"></ul></li><li class=3D"level-1" data-anchor=3D"resuming-playback"><a hr=
ef=3D"https://mpv.io/manual/master/#resuming-playback">RESUMING PLAYBACK</a=
><ul class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=3D"proto=
cols"><a href=3D"https://mpv.io/manual/master/#protocols">PROTOCOLS</a><ul =
class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=3D"pseudo-gui=
-mode"><a href=3D"https://mpv.io/manual/master/#pseudo-gui-mode">PSEUDO GUI=
 MODE</a><ul class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=
=3D"linux-desktop-issues"><a href=3D"https://mpv.io/manual/master/#linux-de=
sktop-issues">Linux desktop issues</a><ul class=3D"level-2"><li class=3D"le=
vel-2" data-anchor=3D"disabling-screensaver"><a href=3D"https://mpv.io/manu=
al/master/#disabling-screensaver">Disabling Screensaver</a><ul class=3D"lev=
el-3"></ul></li></ul></li><li class=3D"level-1" data-anchor=3D"options"><a =
href=3D"https://mpv.io/manual/master/#options">OPTIONS</a><ul class=3D"leve=
l-2"><li class=3D"level-2" data-anchor=3D"track-selection"><a href=3D"https=
://mpv.io/manual/master/#track-selection">Track Selection</a><ul class=3D"l=
evel-3"></ul></li><li class=3D"level-2" data-anchor=3D"playback-control"><a=
 href=3D"https://mpv.io/manual/master/#playback-control">Playback Control</=
a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"prog=
ram-behavior"><a href=3D"https://mpv.io/manual/master/#program-behavior">Pr=
ogram Behavior</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" dat=
a-anchor=3D"watch-later"><a href=3D"https://mpv.io/manual/master/#watch-lat=
er">Watch Later</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" da=
ta-anchor=3D"video"><a href=3D"https://mpv.io/manual/master/#video">Video</=
a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"audi=
o"><a href=3D"https://mpv.io/manual/master/#audio">Audio</a><ul class=3D"le=
vel-3"></ul></li><li class=3D"level-2" data-anchor=3D"subtitles"><a href=3D=
"https://mpv.io/manual/master/#subtitles">Subtitles</a><ul class=3D"level-3=
"></ul></li><li class=3D"level-2" data-anchor=3D"window"><a href=3D"https:/=
/mpv.io/manual/master/#window">Window</a><ul class=3D"level-3"></ul></li><l=
i class=3D"level-2" data-anchor=3D"disc-devices"><a href=3D"https://mpv.io/=
manual/master/#disc-devices">Disc Devices</a><ul class=3D"level-3"></ul></l=
i><li class=3D"level-2" data-anchor=3D"equalizer"><a href=3D"https://mpv.io=
/manual/master/#equalizer">Equalizer</a><ul class=3D"level-3"></ul></li><li=
 class=3D"level-2" data-anchor=3D"demuxer"><a href=3D"https://mpv.io/manual=
/master/#demuxer">Demuxer</a><ul class=3D"level-3"></ul></li><li class=3D"l=
evel-2" data-anchor=3D"input"><a href=3D"https://mpv.io/manual/master/#inpu=
t">Input</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anch=
or=3D"osd"><a href=3D"https://mpv.io/manual/master/#osd">OSD</a><ul class=
=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"screenshot"><a =
href=3D"https://mpv.io/manual/master/#screenshot">Screenshot</a><ul class=
=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"software-scaler=
"><a href=3D"https://mpv.io/manual/master/#software-scaler">Software Scaler=
</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"au=
dio-resampler"><a href=3D"https://mpv.io/manual/master/#audio-resampler">Au=
dio Resampler</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data=
-anchor=3D"terminal"><a href=3D"https://mpv.io/manual/master/#terminal">Ter=
minal</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=
=3D"cache"><a href=3D"https://mpv.io/manual/master/#cache">Cache</a><ul cla=
ss=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"network"><a h=
ref=3D"https://mpv.io/manual/master/#network">Network</a><ul class=3D"level=
-3"></ul></li><li class=3D"level-2" data-anchor=3D"dvb"><a href=3D"https://=
mpv.io/manual/master/#dvb">DVB</a><ul class=3D"level-3"></ul></li><li class=
=3D"level-2" data-anchor=3D"alsa-audio-output-options"><a href=3D"https://m=
pv.io/manual/master/#alsa-audio-output-options">ALSA audio output options</=
a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"gpu-=
renderer-options"><a href=3D"https://mpv.io/manual/master/#gpu-renderer-opt=
ions">GPU renderer options</a><ul class=3D"level-3"></ul></li><li class=3D"=
level-2" data-anchor=3D"miscellaneous"><a href=3D"https://mpv.io/manual/mas=
ter/#miscellaneous">Miscellaneous</a><ul class=3D"level-3"></ul></li></ul><=
/li><li class=3D"level-1" data-anchor=3D"audio-output-drivers"><a href=3D"h=
ttps://mpv.io/manual/master/#audio-output-drivers">AUDIO OUTPUT DRIVERS</a>=
<ul class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=3D"video-=
output-drivers"><a href=3D"https://mpv.io/manual/master/#video-output-drive=
rs">VIDEO OUTPUT DRIVERS</a><ul class=3D"level-2"></ul></li><li class=3D"le=
vel-1" data-anchor=3D"audio-filters"><a href=3D"https://mpv.io/manual/maste=
r/#audio-filters">AUDIO FILTERS</a><ul class=3D"level-2"></ul></li><li clas=
s=3D"level-1" data-anchor=3D"video-filters"><a href=3D"https://mpv.io/manua=
l/master/#video-filters">VIDEO FILTERS</a><ul class=3D"level-2"></ul></li><=
li class=3D"level-1" data-anchor=3D"encoding"><a href=3D"https://mpv.io/man=
ual/master/#encoding">ENCODING</a><ul class=3D"level-2"></ul></li><li class=
=3D"level-1" data-anchor=3D"command-interface"><a href=3D"https://mpv.io/ma=
nual/master/#command-interface">COMMAND INTERFACE</a><ul class=3D"level-2">=
<li class=3D"level-2" data-anchor=3D"input-conf"><a href=3D"https://mpv.io/=
manual/master/#input-conf">input.conf</a><ul class=3D"level-3"></ul></li><l=
i class=3D"level-2" data-anchor=3D"input-conf-syntax"><a href=3D"https://mp=
v.io/manual/master/#input-conf-syntax">input.conf syntax</a><ul class=3D"le=
vel-3"></ul></li><li class=3D"level-2" data-anchor=3D"key-names"><a href=3D=
"https://mpv.io/manual/master/#key-names">Key names</a><ul class=3D"level-3=
"></ul></li><li class=3D"level-2" data-anchor=3D"flat-command-syntax"><a hr=
ef=3D"https://mpv.io/manual/master/#flat-command-syntax">Flat command synta=
x</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"c=
ommands-specified-as-arrays"><a href=3D"https://mpv.io/manual/master/#comma=
nds-specified-as-arrays">Commands specified as arrays</a><ul class=3D"level=
-3"></ul></li><li class=3D"level-2" data-anchor=3D"named-arguments"><a href=
=3D"https://mpv.io/manual/master/#named-arguments">Named arguments</a><ul c=
lass=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"list-of-inp=
ut-commands"><a href=3D"https://mpv.io/manual/master/#list-of-input-command=
s">List of Input Commands</a><ul class=3D"level-3"></ul></li><li class=3D"l=
evel-2" data-anchor=3D"input-commands-that-are-possibly-subject-to-change">=
<a href=3D"https://mpv.io/manual/master/#input-commands-that-are-possibly-s=
ubject-to-change">Input Commands that are Possibly Subject to Change</a><ul=
 class=3D"level-3"><li class=3D"level-3" data-anchor=3D"list-of-events"><a =
href=3D"https://mpv.io/manual/master/#list-of-events">List of events</a><ul=
 class=3D"level-4"></ul></li><li class=3D"level-3" data-anchor=3D"hooks"><a=
 href=3D"https://mpv.io/manual/master/#hooks">Hooks</a><ul class=3D"level-4=
"></ul></li></ul></li><li class=3D"level-2" data-anchor=3D"input-command-pr=
efixes"><a href=3D"https://mpv.io/manual/master/#input-command-prefixes">In=
put Command Prefixes</a><ul class=3D"level-3"></ul></li><li class=3D"level-=
2" data-anchor=3D"synchronous-vs-asynchronous"><a href=3D"https://mpv.io/ma=
nual/master/#synchronous-vs-asynchronous">Synchronous vs. Asynchronous</a><=
ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"asynchr=
onous-command-details"><a href=3D"https://mpv.io/manual/master/#asynchronou=
s-command-details">Asynchronous command details</a><ul class=3D"level-3"></=
ul></li><li class=3D"level-2" data-anchor=3D"input-sections"><a href=3D"htt=
ps://mpv.io/manual/master/#input-sections">Input Sections</a><ul class=3D"l=
evel-3"></ul></li><li class=3D"level-2" data-anchor=3D"properties"><a href=
=3D"https://mpv.io/manual/master/#properties">Properties</a><ul class=3D"le=
vel-3"></ul></li><li class=3D"level-2" data-anchor=3D"property-list"><a hre=
f=3D"https://mpv.io/manual/master/#property-list">Property list</a><ul clas=
s=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"inconsistencie=
s-between-options-and-properties"><a href=3D"https://mpv.io/manual/master/#=
inconsistencies-between-options-and-properties">Inconsistencies between opt=
ions and properties</a><ul class=3D"level-3"></ul></li><li class=3D"level-2=
" data-anchor=3D"property-expansion"><a href=3D"https://mpv.io/manual/maste=
r/#property-expansion">Property Expansion</a><ul class=3D"level-3"></ul></l=
i><li class=3D"level-2" data-anchor=3D"raw-and-formatted-properties"><a hre=
f=3D"https://mpv.io/manual/master/#raw-and-formatted-properties">Raw and Fo=
rmatted Properties</a><ul class=3D"level-3"></ul></li></ul></li><li class=
=3D"level-1" data-anchor=3D"on-screen-controller"><a href=3D"https://mpv.io=
/manual/master/#on-screen-controller">ON SCREEN CONTROLLER</a><ul class=3D"=
level-2"><li class=3D"level-2" data-anchor=3D"using-the-osc"><a href=3D"htt=
ps://mpv.io/manual/master/#using-the-osc">Using the OSC</a><ul class=3D"lev=
el-3"><li class=3D"level-3" data-anchor=3D"the-interface"><a href=3D"https:=
//mpv.io/manual/master/#the-interface">The Interface</a><ul class=3D"level-=
4"></ul></li><li class=3D"level-3" data-anchor=3D"key-bindings"><a href=3D"=
https://mpv.io/manual/master/#key-bindings">Key Bindings</a><ul class=3D"le=
vel-4"></ul></li></ul></li><li class=3D"level-2" data-anchor=3D"configurati=
on"><a href=3D"https://mpv.io/manual/master/#configuration">Configuration</=
a><ul class=3D"level-3"><li class=3D"level-3" data-anchor=3D"config-syntax"=
><a href=3D"https://mpv.io/manual/master/#config-syntax">Config Syntax</a><=
ul class=3D"level-4"></ul></li><li class=3D"level-3" data-anchor=3D"command=
-line-syntax"><a href=3D"https://mpv.io/manual/master/#command-line-syntax"=
>Command-line Syntax</a><ul class=3D"level-4"></ul></li><li class=3D"level-=
3" data-anchor=3D"configurable-options"><a href=3D"https://mpv.io/manual/ma=
ster/#configurable-options">Configurable Options</a><ul class=3D"level-4"><=
/ul></li><li class=3D"level-3" data-anchor=3D"script-commands"><a href=3D"h=
ttps://mpv.io/manual/master/#script-commands">Script Commands</a><ul class=
=3D"level-4"></ul></li></ul></li></ul></li><li class=3D"level-1" data-ancho=
r=3D"stats"><a href=3D"https://mpv.io/manual/master/#stats">STATS</a><ul cl=
ass=3D"level-2"><li class=3D"level-2" data-anchor=3D"id1"><a href=3D"https:=
//mpv.io/manual/master/#id1">Usage</a><ul class=3D"level-3"></ul></li><li c=
lass=3D"level-2" data-anchor=3D"id2"><a href=3D"https://mpv.io/manual/maste=
r/#id2">Configuration</a><ul class=3D"level-3"><li class=3D"level-3" data-a=
nchor=3D"id3"><a href=3D"https://mpv.io/manual/master/#id3">Configurable Op=
tions</a><ul class=3D"level-4"></ul></li><li class=3D"level-3" data-anchor=
=3D"different-key-bindings"><a href=3D"https://mpv.io/manual/master/#differ=
ent-key-bindings">Different key bindings</a><ul class=3D"level-4"></ul></li=
><li class=3D"level-3" data-anchor=3D"active-key-bindings-page"><a href=3D"=
https://mpv.io/manual/master/#active-key-bindings-page">Active key bindings=
 page</a><ul class=3D"level-4"></ul></li><li class=3D"level-3" data-anchor=
=3D"internal-stuff-page"><a href=3D"https://mpv.io/manual/master/#internal-=
stuff-page">Internal stuff page</a><ul class=3D"level-4"></ul></li></ul></l=
i></ul></li><li class=3D"level-1" data-anchor=3D"console"><a href=3D"https:=
//mpv.io/manual/master/#console">CONSOLE</a><ul class=3D"level-2"><li class=
=3D"level-2" data-anchor=3D"keybindings"><a href=3D"https://mpv.io/manual/m=
aster/#keybindings">Keybindings</a><ul class=3D"level-3"></ul></li><li clas=
s=3D"level-2" data-anchor=3D"commands"><a href=3D"https://mpv.io/manual/mas=
ter/#commands">Commands</a><ul class=3D"level-3"></ul></li><li class=3D"lev=
el-2" data-anchor=3D"known-issues"><a href=3D"https://mpv.io/manual/master/=
#known-issues">Known issues</a><ul class=3D"level-3"></ul></li><li class=3D=
"level-2" data-anchor=3D"id4"><a href=3D"https://mpv.io/manual/master/#id4"=
>Configuration</a><ul class=3D"level-3"><li class=3D"level-3" data-anchor=
=3D"id5"><a href=3D"https://mpv.io/manual/master/#id5">Configurable Options=
</a><ul class=3D"level-4"></ul></li></ul></li></ul></li><li class=3D"level-=
1" data-anchor=3D"lua-scripting"><a href=3D"https://mpv.io/manual/master/#l=
ua-scripting">LUA SCRIPTING</a><ul class=3D"level-2"><li class=3D"level-2" =
data-anchor=3D"example"><a href=3D"https://mpv.io/manual/master/#example">E=
xample</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=
=3D"script-location"><a href=3D"https://mpv.io/manual/master/#script-locati=
on">Script location</a><ul class=3D"level-3"></ul></li><li class=3D"level-2=
" data-anchor=3D"details-on-the-script-initialization-and-lifecycle"><a hre=
f=3D"https://mpv.io/manual/master/#details-on-the-script-initialization-and=
-lifecycle">Details on the script initialization and lifecycle</a><ul class=
=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"mp-functions"><=
a href=3D"https://mpv.io/manual/master/#mp-functions">mp functions</a><ul c=
lass=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"advanced-mp=
-functions"><a href=3D"https://mpv.io/manual/master/#advanced-mp-functions"=
>Advanced mp functions</a><ul class=3D"level-3"></ul></li><li class=3D"leve=
l-2" data-anchor=3D"mp-msg-functions"><a href=3D"https://mpv.io/manual/mast=
er/#mp-msg-functions">mp.msg functions</a><ul class=3D"level-3"></ul></li><=
li class=3D"level-2" data-anchor=3D"mp-options-functions"><a href=3D"https:=
//mpv.io/manual/master/#mp-options-functions">mp.options functions</a><ul c=
lass=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"mp-utils-fu=
nctions"><a href=3D"https://mpv.io/manual/master/#mp-utils-functions">mp.ut=
ils functions</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data=
-anchor=3D"events"><a href=3D"https://mpv.io/manual/master/#events">Events<=
/a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"ext=
ras"><a href=3D"https://mpv.io/manual/master/#extras">Extras</a><ul class=
=3D"level-3"></ul></li></ul></li><li class=3D"level-1" data-anchor=3D"javas=
cript"><a href=3D"https://mpv.io/manual/master/#javascript">JAVASCRIPT</a><=
ul class=3D"level-2"><li class=3D"level-2" data-anchor=3D"id6"><a href=3D"h=
ttps://mpv.io/manual/master/#id6">Example</a><ul class=3D"level-3"></ul></l=
i><li class=3D"level-2" data-anchor=3D"similarities-with-lua"><a href=3D"ht=
tps://mpv.io/manual/master/#similarities-with-lua">Similarities with Lua</a=
><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"diffe=
rences-from-lua"><a href=3D"https://mpv.io/manual/master/#differences-from-=
lua">Differences from Lua</a><ul class=3D"level-3"></ul></li><li class=3D"l=
evel-2" data-anchor=3D"language-features-ecmascript-5"><a href=3D"https://m=
pv.io/manual/master/#language-features-ecmascript-5">Language features - EC=
MAScript 5</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-an=
chor=3D"unsupported-lua-apis-and-their-js-alternatives"><a href=3D"https://=
mpv.io/manual/master/#unsupported-lua-apis-and-their-js-alternatives">Unsup=
ported Lua APIs and their JS alternatives</a><ul class=3D"level-3"></ul></l=
i><li class=3D"level-2" data-anchor=3D"scripting-apis-identical-to-lua"><a =
href=3D"https://mpv.io/manual/master/#scripting-apis-identical-to-lua">Scri=
pting APIs - identical to Lua</a><ul class=3D"level-3"></ul></li><li class=
=3D"level-2" data-anchor=3D"additional-utilities"><a href=3D"https://mpv.io=
/manual/master/#additional-utilities">Additional utilities</a><ul class=3D"=
level-3"></ul></li><li class=3D"level-2" data-anchor=3D"timers-global"><a h=
ref=3D"https://mpv.io/manual/master/#timers-global">Timers (global)</a><ul =
class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"commonjs-m=
odules-and-require-id"><a href=3D"https://mpv.io/manual/master/#commonjs-mo=
dules-and-require-id">CommonJS modules and require(id)</a><ul class=3D"leve=
l-3"></ul></li><li class=3D"level-2" data-anchor=3D"custom-initialization">=
<a href=3D"https://mpv.io/manual/master/#custom-initialization">Custom init=
ialization</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" data-an=
chor=3D"the-event-loop"><a href=3D"https://mpv.io/manual/master/#the-event-=
loop">The event loop</a><ul class=3D"level-3"></ul></li></ul></li><li class=
=3D"level-1" data-anchor=3D"json-ipc"><a href=3D"https://mpv.io/manual/mast=
er/#json-ipc">JSON IPC</a><ul class=3D"level-2"><li class=3D"level-2" data-=
anchor=3D"socat-example"><a href=3D"https://mpv.io/manual/master/#socat-exa=
mple">Socat example</a><ul class=3D"level-3"></ul></li><li class=3D"level-2=
" data-anchor=3D"command-prompt-example"><a href=3D"https://mpv.io/manual/m=
aster/#command-prompt-example">Command Prompt example</a><ul class=3D"level=
-3"></ul></li><li class=3D"level-2" data-anchor=3D"protocol"><a href=3D"htt=
ps://mpv.io/manual/master/#protocol">Protocol</a><ul class=3D"level-3"></ul=
></li><li class=3D"level-2" data-anchor=3D"data-flow"><a href=3D"https://mp=
v.io/manual/master/#data-flow">Data flow</a><ul class=3D"level-3"></ul></li=
><li class=3D"level-2" data-anchor=3D"asynchronous-commands"><a href=3D"htt=
ps://mpv.io/manual/master/#asynchronous-commands">Asynchronous commands</a>=
<ul class=3D"level-3"></ul></li><li class=3D"level-2" data-anchor=3D"comman=
ds-with-named-arguments"><a href=3D"https://mpv.io/manual/master/#commands-=
with-named-arguments">Commands with named arguments</a><ul class=3D"level-3=
"></ul></li><li class=3D"level-2" data-anchor=3D"id7"><a href=3D"https://mp=
v.io/manual/master/#id7">Commands</a><ul class=3D"level-3"></ul></li><li cl=
ass=3D"level-2" data-anchor=3D"utf-8"><a href=3D"https://mpv.io/manual/mast=
er/#utf-8">UTF-8</a><ul class=3D"level-3"></ul></li><li class=3D"level-2" d=
ata-anchor=3D"json-extensions"><a href=3D"https://mpv.io/manual/master/#jso=
n-extensions">JSON extensions</a><ul class=3D"level-3"></ul></li><li class=
=3D"level-2" data-anchor=3D"alternative-ways-of-starting-clients"><a href=
=3D"https://mpv.io/manual/master/#alternative-ways-of-starting-clients">Alt=
ernative ways of starting clients</a><ul class=3D"level-3"></ul></li></ul><=
/li><li class=3D"level-1" data-anchor=3D"changelog"><a href=3D"https://mpv.=
io/manual/master/#changelog">CHANGELOG</a><ul class=3D"level-2"></ul></li><=
li class=3D"level-1" data-anchor=3D"embedding-into-other-programs-libmpv"><=
a href=3D"https://mpv.io/manual/master/#embedding-into-other-programs-libmp=
v">EMBEDDING INTO OTHER PROGRAMS (LIBMPV)</a><ul class=3D"level-2"></ul></l=
i><li class=3D"level-1" data-anchor=3D"c-plugins"><a href=3D"https://mpv.io=
/manual/master/#c-plugins">C PLUGINS</a><ul class=3D"level-2"><li class=3D"=
level-2" data-anchor=3D"c-plugins-location"><a href=3D"https://mpv.io/manua=
l/master/#c-plugins-location">C plugins location</a><ul class=3D"level-3"><=
/ul></li><li class=3D"level-2" data-anchor=3D"api"><a href=3D"https://mpv.i=
o/manual/master/#api">API</a><ul class=3D"level-3"></ul></li><li class=3D"l=
evel-2" data-anchor=3D"linkage-to-libmpv"><a href=3D"https://mpv.io/manual/=
master/#linkage-to-libmpv">Linkage to libmpv</a><ul class=3D"level-3"></ul>=
</li><li class=3D"level-2" data-anchor=3D"examples"><a href=3D"https://mpv.=
io/manual/master/#examples">Examples</a><ul class=3D"level-3"></ul></li></u=
l></li><li class=3D"level-1" data-anchor=3D"environment-variables"><a href=
=3D"https://mpv.io/manual/master/#environment-variables">ENVIRONMENT VARIAB=
LES</a><ul class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=3D=
"exit-codes"><a href=3D"https://mpv.io/manual/master/#exit-codes">EXIT CODE=
S</a><ul class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=3D"f=
iles"><a href=3D"https://mpv.io/manual/master/#files">FILES</a><ul class=3D=
"level-2"></ul></li><li class=3D"level-1" data-anchor=3D"files-on-windows">=
<a href=3D"https://mpv.io/manual/master/#files-on-windows">FILES ON WINDOWS=
</a><ul class=3D"level-2"></ul></li><li class=3D"level-1" data-anchor=3D"fi=
les-on-macos"><a href=3D"https://mpv.io/manual/master/#files-on-macos">FILE=
S ON MACOS</a><ul class=3D"level-2"></ul></li></ul></div>
          </div>
          <div class=3D"col-lg-8 manual-container" id=3D"manual">
            <div class=3D"section" id=3D"synopsis">
            <h1>SYNOPSIS</h1>
            <div class=3D"line-block">
            <div class=3D"line"><strong>mpv</strong> [options] [file|URL|PL=
AYLIST|-]</div>
            <div class=3D"line"><strong>mpv</strong> [options] files</div>
            </div>
            </div>
            <div class=3D"section" id=3D"description">
            <h1>DESCRIPTION</h1>
            <p><strong>mpv</strong> is a media player based on MPlayer and =
mplayer2. It supports a wide variety of video
            file formats, audio and video codecs, and subtitle types. Speci=
al input URL
            types are available to read input from a variety of sources oth=
er than disk
            files. Depending on platform, a variety of different video and =
audio output
            methods are supported.</p>
            <p>Usage examples to get you started quickly can be found at th=
e end of this man
            page.</p>
            </div>
            <div class=3D"section" id=3D"interactive-control">
            <h1>INTERACTIVE CONTROL</h1>
            <p>mpv has a fully configurable, command-driven control layer w=
hich allows you
            to control mpv using keyboard, mouse, or remote control (there =
is no
            LIRC support - configure remotes as input devices instead).</p>
            <p>See the <tt class=3D"docutils literal"><span class=3D"pre">-=
-input-</span></tt> options for ways to customize it.</p>
            <p>The following listings are not necessarily complete. See <tt=
 class=3D"docutils literal">etc/input.conf</tt>
            in the mpv source files for a list of default bindings. User <t=
t class=3D"docutils literal">input.conf</tt>
            files and Lua scripts can define additional key bindings.</p>
            <p>See <a class=3D"reference internal" href=3D"https://mpv.io/m=
anual/master/#command-interface">COMMAND INTERFACE</a> and <a class=3D"refe=
rence internal" href=3D"https://mpv.io/manual/master/#key-names">Key names<=
/a> sections for more details on
            configuring keybindings.</p>
            <p>See also <tt class=3D"docutils literal"><span class=3D"pre">=
--input-test</span></tt> for interactive binding details by key, and the
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#stats">stats</a> built-in script for key bindings list (including pr=
int to terminal).</p>
            <div class=3D"section" id=3D"keyboard-control">
            <h2>Keyboard Control</h2>
            <dl class=3D"docutils">
            <dt>LEFT and RIGHT</dt>
            <dd>Seek backward/forward 5 seconds. Shift+arrow does a 1 secon=
d exact seek
            (see <tt class=3D"docutils literal"><span class=3D"pre">--hr-se=
ek</span></tt>).</dd>
            <dt>UP and DOWN</dt>
            <dd>Seek forward/backward 1 minute. Shift+arrow does a 5 second=
 exact seek (see
            <tt class=3D"docutils literal"><span class=3D"pre">--hr-seek</s=
pan></tt>).</dd>
            <dt>Ctrl+LEFT and Ctrl+RIGHT</dt>
            <dd>Seek to the previous/next subtitle. Subject to some restric=
tions and
            might not always work; see <tt class=3D"docutils literal"><span=
 class=3D"pre">sub-seek</span></tt> command.</dd>
            <dt>Ctrl+Shift+Left and Ctrl+Shift+Right</dt>
            <dd>Adjust subtitle delay so that the next or previous subtitle=
 is displayed
            now. This is especially useful to sync subtitles to audio.</dd>
            <dt>[ and ]</dt>
            <dd>Decrease/increase current playback speed by 10%.</dd>
            <dt>{ and }</dt>
            <dd>Halve/double current playback speed.</dd>
            <dt>BACKSPACE</dt>
            <dd>Reset playback speed to normal.</dd>
            <dt>Shift+BACKSPACE</dt>
            <dd>Undo the last seek. This works only if the playlist entry w=
as not changed.
            Hitting it a second time will go back to the original position.
            See <tt class=3D"docutils literal"><span class=3D"pre">revert-s=
eek</span></tt> command for details.</dd>
            <dt>Shift+Ctrl+BACKSPACE</dt>
            <dd>Mark the current position. This will then be used by <tt cl=
ass=3D"docutils literal">Shift+BACKSPACE</tt>
            as revert position (once you seek back, the marker will be rese=
t). You can
            use this to seek around in the file and then return to the exac=
t position
            where you left off.</dd>
            <dt>&lt; and &gt;</dt>
            <dd>Go backward/forward in the playlist.</dd>
            <dt>ENTER</dt>
            <dd>Go forward in the playlist.</dd>
            <dt>p / SPACE</dt>
            <dd>Pause (pressing again unpauses).</dd>
            <dt>.</dt>
            <dd>Step forward. Pressing once will pause, every consecutive p=
ress will
            play one frame and then go into pause mode again.</dd>
            </dl>
            <dl class=3D"docutils">
            <dt>,</dt>
            <dd>Step backward. Pressing once will pause, every consecutive =
press will
            play one frame in reverse and then go into pause mode again.</d=
d>
            <dt>q</dt>
            <dd>Stop playing and quit.</dd>
            <dt>Q</dt>
            <dd>Like <tt class=3D"docutils literal">q</tt>, but store the c=
urrent playback position. Playing the same file
            later will resume at the old playback position if possible. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#resuming-playback">RESUMING PLAYBACK</a>.</dd>
            <dt>/ and *</dt>
            <dd>Decrease/increase volume.</dd>
            <dt>9 and 0</dt>
            <dd>Decrease/increase volume.</dd>
            <dt>m</dt>
            <dd>Mute sound.</dd>
            <dt>_</dt>
            <dd>Cycle through the available video tracks.</dd>
            <dt>#</dt>
            <dd>Cycle through the available audio tracks.</dd>
            <dt>E</dt>
            <dd>Cycle through the available Editions.</dd>
            <dt>f</dt>
            <dd>Toggle fullscreen (see also <tt class=3D"docutils literal">=
<span class=3D"pre">--fs</span></tt>).</dd>
            <dt>ESC</dt>
            <dd>Exit fullscreen mode.</dd>
            <dt>T</dt>
            <dd>Toggle stay-on-top (see also <tt class=3D"docutils literal"=
><span class=3D"pre">--ontop</span></tt>).</dd>
            <dt>w and W</dt>
            <dd>Decrease/increase pan-and-scan range. The <tt class=3D"docu=
tils literal">e</tt> key does the same as
            <tt class=3D"docutils literal">W</tt> currently, but use is dis=
couraged.</dd>
            <dt>o (also P)</dt>
            <dd>Show progression bar, elapsed time and total duration on th=
e OSD.</dd>
            <dt>O</dt>
            <dd>Toggle OSD states between normal and playback time/duration=
.</dd>
            <dt>v</dt>
            <dd>Toggle subtitle visibility.</dd>
            <dt>j and J</dt>
            <dd>Cycle through the available subtitles.</dd>
            <dt>z and Z</dt>
            <dd>Adjust subtitle delay by +/- 0.1 seconds. The <tt class=3D"=
docutils literal">x</tt> key does the same as
            <tt class=3D"docutils literal">Z</tt> currently, but use is dis=
couraged.</dd>
            <dt>l</dt>
            <dd>Set/clear A-B loop points. See <tt class=3D"docutils litera=
l"><span class=3D"pre">ab-loop</span></tt> command for details.</dd>
            <dt>L</dt>
            <dd>Toggle infinite looping.</dd>
            <dt>Ctrl + and Ctrl -</dt>
            <dd>Adjust audio delay (A/V sync) by +/- 0.1 seconds.</dd>
            <dt>Shift+g and Shift+f</dt>
            <dd>Adjust subtitle font size by +/- 10%.</dd>
            <dt>u</dt>
            <dd>Switch between applying no style overrides to SSA/ASS subti=
tles, and
            overriding them almost completely with the normal subtitle styl=
e. See
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-ass-ov=
erride</span></tt> for more info.</dd>
            <dt>V</dt>
            <dd>Toggle subtitle VSFilter aspect compatibility mode. See
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-ass-vs=
filter-aspect-compat</span></tt> for more info.</dd>
            <dt>r and R</dt>
            <dd>Move subtitles up/down. The <tt class=3D"docutils literal">=
t</tt> key does the same as <tt class=3D"docutils literal">R</tt> currently=
, but
            use is discouraged.</dd>
            <dt>s</dt>
            <dd>Take a screenshot.</dd>
            <dt>S</dt>
            <dd>Take a screenshot, without subtitles. (Whether this works d=
epends on VO
            driver support.)</dd>
            <dt>Ctrl s</dt>
            <dd>Take a screenshot, as the window shows it (with subtitles, =
OSD, and scaled
            video).</dd>
            <dt>PGUP and PGDWN</dt>
            <dd>Seek to the beginning of the previous/next chapter. In most=
 cases,
            "previous" will actually go to the beginning of the current cha=
pter; see
            <tt class=3D"docutils literal"><span class=3D"pre">--chapter-se=
ek-threshold</span></tt>.</dd>
            <dt>Shift+PGUP and Shift+PGDWN</dt>
            <dd>Seek backward or forward by 10 minutes. (This used to be ma=
pped to
            PGUP/PGDWN without Shift.)</dd>
            <dt>d</dt>
            <dd>Activate/deactivate deinterlacer.</dd>
            <dt>A</dt>
            <dd>Cycle aspect ratio override.</dd>
            <dt>Ctrl h</dt>
            <dd>Toggle hardware video decoding on/off.</dd>
            <dt>Alt+LEFT, Alt+RIGHT, Alt+UP, Alt+DOWN</dt>
            <dd>Move the video rectangle (panning).</dd>
            <dt>Alt + and Alt -</dt>
            <dd>Combining <tt class=3D"docutils literal">Alt</tt> with the =
<tt class=3D"docutils literal">+</tt> or <tt class=3D"docutils literal">-</=
tt> keys changes video zoom.</dd>
            <dt>Alt+BACKSPACE</dt>
            <dd>Reset the pan/zoom settings.</dd>
            <dt>F8</dt>
            <dd>Show the playlist and the current position in it (useful on=
ly if a UI window
            is used, broken on the terminal).</dd>
            <dt>F9</dt>
            <dd>Show the list of audio and subtitle streams (useful only if=
 a UI window  is
            used, broken on the terminal).</dd>
            <dt>i and I</dt>
            <dd>Show/toggle an overlay displaying statistics about the curr=
ently playing
            file such as codec, framerate, number of dropped frames and so =
on. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#stats">STATS</a> for more information.</dd>
            <dt>del</dt>
            <dd>Cycle OSC visibility between never / auto (mouse-move) / al=
ways</dd>
            <dt>`</dt>
            <dd>Show the console. (ESC closes it again. See <a class=3D"ref=
erence internal" href=3D"https://mpv.io/manual/master/#console">CONSOLE</a>=
.)</dd>
            </dl>
            <p>(The following keys are valid only when using a video output=
 that supports the
            corresponding adjustment.)</p>
            <dl class=3D"docutils">
            <dt>1 and 2</dt>
            <dd>Adjust contrast.</dd>
            <dt>3 and 4</dt>
            <dd>Adjust brightness.</dd>
            <dt>5 and 6</dt>
            <dd>Adjust gamma.</dd>
            <dt>7 and 8</dt>
            <dd>Adjust saturation.</dd>
            <dt>Alt+0 (and command+0 on macOS)</dt>
            <dd>Resize video window to half its original size.</dd>
            <dt>Alt+1 (and command+1 on macOS)</dt>
            <dd>Resize video window to its original size.</dd>
            <dt>Alt+2 (and command+2 on macOS)</dt>
            <dd>Resize video window to double its original size.</dd>
            <dt>command + f (macOS only)</dt>
            <dd>Toggle fullscreen (see also <tt class=3D"docutils literal">=
<span class=3D"pre">--fs</span></tt>).</dd>
            </dl>
            <p>(The following keys are valid if you have a keyboard with mu=
ltimedia keys.)</p>
            <dl class=3D"docutils">
            <dt>PAUSE</dt>
            <dd>Pause.</dd>
            <dt>STOP</dt>
            <dd>Stop playing and quit.</dd>
            <dt>PREVIOUS and NEXT</dt>
            <dd>Seek backward/forward 1 minute.</dd>
            </dl>
            <p>If you miss some older key bindings, look at <tt class=3D"do=
cutils literal"><span class=3D"pre">etc/restore-old-bindings.conf</span></t=
t>
            in the mpv git repository.</p>
            </div>
            <div class=3D"section" id=3D"mouse-control">
            <h2>Mouse Control</h2>
            <dl class=3D"docutils">
            <dt>Left double click</dt>
            <dd>Toggle fullscreen on/off.</dd>
            <dt>Right click</dt>
            <dd>Toggle pause on/off.</dd>
            <dt>Forward/Back button</dt>
            <dd>Skip to next/previous entry in playlist.</dd>
            <dt>Wheel up/down</dt>
            <dd>Seek forward/backward 10 seconds.</dd>
            <dt>Wheel left/right</dt>
            <dd>Decrease/increase volume.</dd>
            </dl>
            </div>
            </div>
            <div class=3D"section" id=3D"usage">
            <h1>USAGE</h1>
            <p>Command line arguments starting with <tt class=3D"docutils l=
iteral">-</tt> are interpreted as options,
            everything else as filenames or URLs. All options except <em>fl=
ag</em> options (or
            choice options which include <tt class=3D"docutils literal">yes=
</tt>) require a parameter in the form
            <tt class=3D"docutils literal"><span class=3D"pre">--option=3Dv=
alue</span></tt>.</p>
            <p>One exception is the lone <tt class=3D"docutils literal">-</=
tt> (without anything else), which means media data
            will be read from stdin. Also, <tt class=3D"docutils literal"><=
span class=3D"pre">--</span></tt> (without anything else) will make the
            player interpret all following arguments as filenames, even if =
they start with
            <tt class=3D"docutils literal">-</tt>. (To play a file named <t=
t class=3D"docutils literal">-</tt>, you need to use <tt class=3D"docutils =
literal">./-</tt>.)</p>
            <p>Every <em>flag</em> option has a <em>no-flag</em> counterpar=
t, e.g. the opposite of the
            <tt class=3D"docutils literal"><span class=3D"pre">--fs</span><=
/tt> option is <tt class=3D"docutils literal"><span class=3D"pre">--no-fs</=
span></tt>. <tt class=3D"docutils literal"><span class=3D"pre">--fs=3Dyes</=
span></tt> is same as <tt class=3D"docutils literal"><span class=3D"pre">--=
fs</span></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--fs=3Dn=
o</span></tt>
            is the same as <tt class=3D"docutils literal"><span class=3D"pr=
e">--no-fs</span></tt>.</p>
            <p>If an option is marked as <em>(XXX only)</em>, it will only =
work in combination with
            the <em>XXX</em> option or if <em>XXX</em> is compiled in.</p>
            <div class=3D"section" id=3D"legacy-option-syntax">
            <h2>Legacy option syntax</h2>
            <p>The <tt class=3D"docutils literal"><span class=3D"pre">--opt=
ion=3Dvalue</span></tt> syntax is not strictly enforced, and the alternativ=
e
            legacy syntax <tt class=3D"docutils literal"><span class=3D"pre=
">-option</span> value</tt> and <tt class=3D"docutils literal"><span class=
=3D"pre">-option=3Dvalue</span></tt> will also work. This is
            mostly  for compatibility with MPlayer. Using these should be a=
voided. Their
            semantics can change any time in the future.</p>
            <p>For example, the alternative syntax will consider an argumen=
t following the
            option a filename. <tt class=3D"docutils literal">mpv <span cla=
ss=3D"pre">-fs</span> no</tt> will attempt to play a file named <tt class=
=3D"docutils literal">no</tt>,
            because <tt class=3D"docutils literal"><span class=3D"pre">--fs=
</span></tt> is a flag option that requires no parameter. If an option
            changes and its parameter becomes optional, then a command line=
 using the
            alternative syntax will break.</p>
            <p>Until mpv 0.31.0, there was no difference whether an option =
started with <tt class=3D"docutils literal"><span class=3D"pre">--</span></=
tt>
            or a single <tt class=3D"docutils literal">-</tt>. Newer mpv re=
leases strictly expect that you pass the option
            value after a <tt class=3D"docutils literal">=3D</tt>. For exam=
ple, before <tt class=3D"docutils literal">mpv <span class=3D"pre">--log-fi=
le</span> f.txt</tt> would write
            a log to <tt class=3D"docutils literal">f.txt</tt>, but now thi=
s command line fails, as <tt class=3D"docutils literal"><span class=3D"pre"=
>--log-file</span></tt> expects
            an option value, and <tt class=3D"docutils literal">f.txt</tt> =
is simply considered a normal file to be played
            (as in <tt class=3D"docutils literal">mpv f.txt</tt>).</p>
            <p>The future plan is that <tt class=3D"docutils literal"><span=
 class=3D"pre">-option</span> value</tt> will not work anymore, and options
            with a single <tt class=3D"docutils literal">-</tt> behave the =
same as <tt class=3D"docutils literal"><span class=3D"pre">--</span></tt> o=
ptions.</p>
            </div>
            <div class=3D"section" id=3D"escaping-spaces-and-other-special-=
characters">
            <h2>Escaping spaces and other special characters</h2>
            <p>Keep in mind that the shell will partially parse and mangle =
the arguments you
            pass to mpv. For example, you might need to quote or escape opt=
ions and
            filenames:</p>
            <blockquote>
            <tt class=3D"docutils literal">mpv "filename with spaces.mkv" <=
span class=3D"pre">--title=3D"window</span> title"</tt></blockquote>
            <p>It gets more complicated if the suboption parser is involved=
. The suboption
            parser puts several options into a single string, and passes th=
em to a
            component at once, instead of using multiple options on the lev=
el of the
            command line.</p>
            <p>The suboption parser can quote strings with <tt class=3D"doc=
utils literal">"</tt> and <tt class=3D"docutils literal"><span class=3D"pre=
">[...]</span></tt>.
            Additionally, there is a special form of quoting with <tt class=
=3D"docutils literal">%n%</tt> described below.</p>
            <p>For example, assume the hypothetical <tt class=3D"docutils l=
iteral">foo</tt> filter can take multiple options:</p>
            <blockquote>
            <tt class=3D"docutils literal">mpv test.mkv <span class=3D"pre"=
>--vf=3Dfoo:option1=3Dvalue1:option2:option3=3Dvalue3,bar</span></tt></bloc=
kquote>
            <p>This passes <tt class=3D"docutils literal">option1</tt> and =
<tt class=3D"docutils literal">option3</tt> to the <tt class=3D"docutils li=
teral">foo</tt> filter, with <tt class=3D"docutils literal">option2</tt>
            as flag (implicitly <tt class=3D"docutils literal">option2=3Dye=
s</tt>), and adds a <tt class=3D"docutils literal">bar</tt> filter after th=
at. If
            an option contains spaces or characters like <tt class=3D"docut=
ils literal">,</tt> or <tt class=3D"docutils literal">:</tt>, you need to q=
uote
            them:</p>
            <blockquote>
            <tt class=3D"docutils literal">mpv <span class=3D"pre">'--vf=3D=
foo:option1=3D"option</span> value with <span class=3D"pre">spaces",bar'</s=
pan></tt></blockquote>
            <p>Shells may actually strip some quotes from the string passed=
 to the commandline,
            so the example quotes the string twice, ensuring that mpv recei=
ves the <tt class=3D"docutils literal">"</tt>
            quotes.</p>
            <p>The <tt class=3D"docutils literal"><span class=3D"pre">[...]=
</span></tt> form of quotes wraps everything between <tt class=3D"docutils =
literal">[</tt> and <tt class=3D"docutils literal">]</tt>. It's
            useful with shells that don't interpret these characters in the=
 middle of
            an argument (like bash). These quotes are balanced (since mpv 0=
.9.0): the <tt class=3D"docutils literal">[</tt>
            and <tt class=3D"docutils literal">]</tt> nest, and the quote t=
erminates on the last <tt class=3D"docutils literal">]</tt> that has no mat=
ching
            <tt class=3D"docutils literal">[</tt> within the string. (For e=
xample, <tt class=3D"docutils literal">[a[b]c]</tt> results in <tt class=3D=
"docutils literal">a[b]c</tt>.)</p>
            <p>The fixed-length quoting syntax is intended for use with ext=
ernal
            scripts and programs.</p>
            <p>It is started with <tt class=3D"docutils literal">%</tt> and=
 has the following format:</p>
            <pre class=3D"literal-block">%n%string_of_length_n
</pre>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <p><tt class=3D"docutils literal">mpv <span class=3D"pre">'--vf=
=3Dfoo:option1=3D%11%quoted</span> text' test.avi</tt></p>
            <p>Or in a script:</p>
            <p class=3D"last"><tt class=3D"docutils literal">mpv <span clas=
s=3D"pre">--vf=3Dfoo:option1=3D%`expr</span> length <span class=3D"pre">"$N=
AME"`%"$NAME"</span> test.avi</tt></p>
            </div>
            <p>Note: where applicable with JSON-IPC, <tt class=3D"docutils =
literal">%n%</tt> is the length in UTF-8 bytes,
            after decoding the JSON data.</p>
            <p>Suboptions passed to the client API are also subject to esca=
ping. Using
            <tt class=3D"docutils literal">mpv_set_option_string()</tt> is =
exactly like passing <tt class=3D"docutils literal"><span class=3D"pre">--n=
ame=3Ddata</span></tt> to the
            command line (but without shell processing of the string). Some=
 options
            support passing values in a more structured way instead of flat=
 strings, and
            can avoid the suboption parsing mess. For example, <tt class=3D=
"docutils literal"><span class=3D"pre">--vf</span></tt> supports
            <tt class=3D"docutils literal">MPV_FORMAT_NODE</tt>, which lets=
 you pass suboptions as a nested data structure
            of maps and arrays.</p>
            </div>
            <div class=3D"section" id=3D"paths">
            <h2>Paths</h2>
            <p>Some care must be taken when passing arbitrary paths and fil=
enames to mpv. For
            example, paths starting with <tt class=3D"docutils literal">-</=
tt> will be interpreted as options. Likewise,
            if a path contains the sequence <tt class=3D"docutils literal">=
://</tt>, the string before that might be
            interpreted as protocol prefix, even though <tt class=3D"docuti=
ls literal">://</tt> can be part of a legal
            UNIX path. To avoid problems with arbitrary paths, you should b=
e sure that
            absolute paths passed to mpv start with <tt class=3D"docutils l=
iteral">/</tt>, and prefix relative paths with
            <tt class=3D"docutils literal">./</tt>.</p>
            <p>Using the <tt class=3D"docutils literal"><span class=3D"pre"=
>file://</span></tt> pseudo-protocol is discouraged, because it involves
            strange URL unescaping rules.</p>
            <p>The name <tt class=3D"docutils literal">-</tt> itself is int=
erpreted as stdin, and will cause mpv to disable
            console controls. (Which makes it suitable for playing data pip=
ed to stdin.)</p>
            <p>The special argument <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--</span></tt> can be used to stop mpv from interpreting the
            following arguments as options.</p>
            <p>When using the client API, you should strictly avoid using <=
tt class=3D"docutils literal">mpv_command_string</tt>
            for invoking the <tt class=3D"docutils literal">loadfile</tt> c=
ommand, and instead prefer e.g. <tt class=3D"docutils literal">mpv_command<=
/tt>
            to avoid the need for filename escaping.</p>
            <p>For paths passed to suboptions, the situation is further com=
plicated by the
            need to escape special characters. To work this around, the pat=
h can be
            additionally wrapped in the fixed-length syntax, e.g. <tt class=
=3D"docutils literal">%n%string_of_length_n</tt>
            (see above).</p>
            <p>Some mpv options interpret paths starting with <tt class=3D"=
docutils literal">~</tt>.
            Currently, the prefix <tt class=3D"docutils literal">~~home/</t=
t> expands to the mpv configuration directory
            (usually <tt class=3D"docutils literal"><span class=3D"pre">~/.=
config/mpv/</span></tt>).
            <tt class=3D"docutils literal">~/</tt> expands to the user's ho=
me directory. (The trailing <tt class=3D"docutils literal">/</tt> is always
            required.) The following paths are currently recognized:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"20%">
            <col width=3D"80%">
            </colgroup>
            <thead valign=3D"bottom">
            <tr><th class=3D"head">Name</th>
            <th class=3D"head">Meaning</th>
            </tr>
            </thead>
            <tbody valign=3D"top">
            <tr><td><tt class=3D"docutils literal">~~/</tt></td>
            <td>If the subpath exists in any of the mpv's config directorie=
s
            the path of the existing file/dir is returned. Otherwise this
            is equivalent to <tt class=3D"docutils literal">~~home/</tt>.
            Note that if --no-config is used <tt class=3D"docutils literal"=
><span class=3D"pre">~~/foobar</span></tt> will resolve to
            <tt class=3D"docutils literal">foobar</tt> which can be unexpec=
ted.</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~/</tt></td>
            <td>user home directory root (similar to shell, <tt class=3D"do=
cutils literal">$HOME</tt>)</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~home/</tt></td>
            <td>mpv config dir (for example <tt class=3D"docutils literal">=
<span class=3D"pre">~/.config/mpv/</span></tt>)</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~global/</tt></td>
            <td>the global config path, if available (not on win32)</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~osxbundle/</tt></td>
            <td>the macOS bundle resource path (macOS only)</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~desktop/</tt></td>
            <td>the path to the desktop (win32, macOS)</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~exe_dir/</tt></td>
            <td>win32 only: the path to the directory containing the exe (f=
or
            config file purposes; <tt class=3D"docutils literal">$MPV_HOME<=
/tt> overrides it)</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~cache/</tt></td>
            <td>the path to application cache data (<tt class=3D"docutils l=
iteral"><span class=3D"pre">~/.cache/mpv/</span></tt>)
            On some platforms, this will be the same as <tt class=3D"docuti=
ls literal">~~home/</tt>.</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~state/</tt></td>
            <td>the path to application state data (<tt class=3D"docutils l=
iteral"><span class=3D"pre">~/.local/state/mpv/</span></tt>)
            On some platforms, this will be the same as <tt class=3D"docuti=
ls literal">~~home/</tt>.</td>
            </tr>
            <tr><td><tt class=3D"docutils literal">~~old_home/</tt></td>
            <td>do not use</td>
            </tr>
            </tbody>
            </table>
            </div>
            <div class=3D"section" id=3D"per-file-options">
            <h2>Per-File Options</h2>
            <p>When playing multiple files, any option given on the command=
 line usually
            affects all files. Example:</p>
            <pre class=3D"literal-block">mpv --a file1.mkv --b file2.mkv --=
c
</pre>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"36%">
            <col width=3D"64%">
            </colgroup>
            <thead valign=3D"bottom">
            <tr><th class=3D"head">File</th>
            <th class=3D"head">Active options</th>
            </tr>
            </thead>
            <tbody valign=3D"top">
            <tr><td>file1.mkv</td>
            <td><tt class=3D"docutils literal"><span class=3D"pre">--a</spa=
n> <span class=3D"pre">--b</span> <span class=3D"pre">--c</span></tt></td>
            </tr>
            <tr><td>file2.mkv</td>
            <td><tt class=3D"docutils literal"><span class=3D"pre">--a</spa=
n> <span class=3D"pre">--b</span> <span class=3D"pre">--c</span></tt></td>
            </tr>
            </tbody>
            </table>
            <p>(This is different from MPlayer and mplayer2.)</p>
            <p>Also, if any option is changed at runtime (via input command=
s), they are not
            reset when a new file is played.</p>
            <p>Sometimes, it is useful to change options per-file. This can=
 be achieved by
            adding the special per-file markers <tt class=3D"docutils liter=
al"><span class=3D"pre">--{</span></tt> and <tt class=3D"docutils literal">=
<span class=3D"pre">--}</span></tt>. (Note that you must
            escape these on some shells.) Example:</p>
            <pre class=3D"literal-block">mpv --a file1.mkv --b --\{ --c fil=
e2.mkv --d file3.mkv --e --\} file4.mkv --f
</pre>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"36%">
            <col width=3D"64%">
            </colgroup>
            <thead valign=3D"bottom">
            <tr><th class=3D"head">File</th>
            <th class=3D"head">Active options</th>
            </tr>
            </thead>
            <tbody valign=3D"top">
            <tr><td>file1.mkv</td>
            <td><tt class=3D"docutils literal"><span class=3D"pre">--a</spa=
n> <span class=3D"pre">--b</span> <span class=3D"pre">--f</span></tt></td>
            </tr>
            <tr><td>file2.mkv</td>
            <td><tt class=3D"docutils literal"><span class=3D"pre">--a</spa=
n> <span class=3D"pre">--b</span> <span class=3D"pre">--f</span> <span clas=
s=3D"pre">--c</span> <span class=3D"pre">--d</span> <span class=3D"pre">--e=
</span></tt></td>
            </tr>
            <tr><td>file3.mkv</td>
            <td><tt class=3D"docutils literal"><span class=3D"pre">--a</spa=
n> <span class=3D"pre">--b</span> <span class=3D"pre">--f</span> <span clas=
s=3D"pre">--c</span> <span class=3D"pre">--d</span> <span class=3D"pre">--e=
</span></tt></td>
            </tr>
            <tr><td>file4.mkv</td>
            <td><tt class=3D"docutils literal"><span class=3D"pre">--a</spa=
n> <span class=3D"pre">--b</span> <span class=3D"pre">--f</span></tt></td>
            </tr>
            </tbody>
            </table>
            <p>Additionally, any file-local option changed at runtime is re=
set when the current
            file stops playing. If option <tt class=3D"docutils literal"><s=
pan class=3D"pre">--c</span></tt> is changed during playback of
            <tt class=3D"docutils literal">file2.mkv</tt>, it is reset when=
 advancing to <tt class=3D"docutils literal">file3.mkv</tt>. This only affe=
cts
            file-local options. The option <tt class=3D"docutils literal"><=
span class=3D"pre">--a</span></tt> is never reset here.</p>
            </div>
            <div class=3D"section" id=3D"list-options">
            <h2>List Options</h2>
            <p>Some options which store lists of option values can have act=
ion suffixes. For
            example, the <tt class=3D"docutils literal"><span class=3D"pre"=
>--display-tags</span></tt> option takes a <tt class=3D"docutils literal">,=
</tt>-separated list of tags, but
            the option also allows you to append a single tag with <tt clas=
s=3D"docutils literal"><span class=3D"pre">--display-tags-append</span></tt=
>,
            and the tag name can for example contain a literal <tt class=3D=
"docutils literal">,</tt> without the need for
            escaping.</p>
            <div class=3D"section" id=3D"string-list-and-path-list-options"=
>
            <h3>String list and path list options</h3>
            <p>String lists are separated by <tt class=3D"docutils literal"=
>,</tt>. The strings are not parsed or interpreted
            by the option system itself. However, most</p>
            <p>Path or file list options use <tt class=3D"docutils literal"=
>:</tt> (Unix) or <tt class=3D"docutils literal">;</tt> (Windows) as separa=
tor,
            instead of <tt class=3D"docutils literal">,</tt>.</p>
            <p>They support the following operations:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"16%">
            <col width=3D"84%">
            </colgroup>
            <thead valign=3D"bottom">
            <tr><th class=3D"head">Suffix</th>
            <th class=3D"head">Meaning</th>
            </tr>
            </thead>
            <tbody valign=3D"top">
            <tr><td>-set</td>
            <td>Set a list of items (using the list separator, escaped with=
 backslash)</td>
            </tr>
            <tr><td>-append</td>
            <td>Append single item (does not interpret escapes)</td>
            </tr>
            <tr><td>-add</td>
            <td>Append 1 or more items (same syntax as -set)</td>
            </tr>
            <tr><td>-pre</td>
            <td>Prepend 1 or more items (same syntax as -set)</td>
            </tr>
            <tr><td>-clr</td>
            <td>Clear the option (remove all items)</td>
            </tr>
            <tr><td>-remove</td>
            <td>Delete item if present (does not interpret escapes)</td>
            </tr>
            <tr><td>-del</td>
            <td>Delete 1 or more items by integer index (deprecated)</td>
            </tr>
            <tr><td>-toggle</td>
            <td>Append an item, or remove if if it already exists (no escap=
es)</td>
            </tr>
            </tbody>
            </table>
            <p><tt class=3D"docutils literal"><span class=3D"pre">-append</=
span></tt> is meant as a simple way to append a single item without having
            to escape the argument (you may still need to escape on the she=
ll level).</p>
            </div>
            <div class=3D"section" id=3D"key-value-list-options">
            <h3>Key/value list options</h3>
            <p>A key/value list is a list of key/value string pairs. In pro=
gramming languages,
            this type of data structure is often called a map or a dictiona=
ry. The order
            normally does not matter, although in some cases the order migh=
t matter.</p>
            <p>They support the following operations:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"16%">
            <col width=3D"84%">
            </colgroup>
            <thead valign=3D"bottom">
            <tr><th class=3D"head">Suffix</th>
            <th class=3D"head">Meaning</th>
            </tr>
            </thead>
            <tbody valign=3D"top">
            <tr><td>-set</td>
            <td>Set a list of items (using <tt class=3D"docutils literal">,=
</tt> as separator)</td>
            </tr>
            <tr><td>-append</td>
            <td>Append a single item (escapes for the key, no escapes for t=
he value)</td>
            </tr>
            <tr><td>-add</td>
            <td>Append 1 or more items (same syntax as -set)</td>
            </tr>
            <tr><td>-remove</td>
            <td>Delete item by key if present (does not interpret escapes)<=
/td>
            </tr>
            </tbody>
            </table>
            <p>Keys are unique within the list. If an already present key i=
s set, the existing
            key is removed before the new value is appended.</p>
            <p>If you want to pass a value without interpreting it for esca=
pes or <tt class=3D"docutils literal">,</tt>, it is
            recommended to use the <tt class=3D"docutils literal"><span cla=
ss=3D"pre">-add</span></tt> variant. When using libmpv, prefer using
            <tt class=3D"docutils literal">MPV_FORMAT_NODE_MAP</tt>; when u=
sing a scripting backend or the JSON IPC, use an
            appropriate structured data type.</p>
            <p>Prior to mpv 0.33, <tt class=3D"docutils literal">:</tt> was=
 also recognized as separator by <tt class=3D"docutils literal"><span class=
=3D"pre">-set</span></tt>.</p>
            </div>
            <div class=3D"section" id=3D"filter-options">
            <h3>Filter options</h3>
            <p>This is a very complex option type for the <tt class=3D"docu=
tils literal"><span class=3D"pre">--af</span></tt> and <tt class=3D"docutil=
s literal"><span class=3D"pre">--vf</span></tt> options only.
            They often require complicated escaping. See <a class=3D"refere=
nce internal" href=3D"https://mpv.io/manual/master/#video-filters">VIDEO FI=
LTERS</a> for details. They
            support the following operations:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"16%">
            <col width=3D"84%">
            </colgroup>
            <thead valign=3D"bottom">
            <tr><th class=3D"head">Suffix</th>
            <th class=3D"head">Meaning</th>
            </tr>
            </thead>
            <tbody valign=3D"top">
            <tr><td>-set</td>
            <td>Set a list of filters (using <tt class=3D"docutils literal"=
>,</tt> as separator)</td>
            </tr>
            <tr><td>-append</td>
            <td>Append single filter</td>
            </tr>
            <tr><td>-add</td>
            <td>Append 1 or more filters (same syntax as -set)</td>
            </tr>
            <tr><td>-pre</td>
            <td>Prepend 1 or more filters (same syntax as -set)</td>
            </tr>
            <tr><td>-clr</td>
            <td>Clear the option (remove all filters)</td>
            </tr>
            <tr><td>-remove</td>
            <td>Delete filter if present</td>
            </tr>
            <tr><td>-del</td>
            <td>Delete 1 or more filters by integer index or filter label (=
deprecated)</td>
            </tr>
            <tr><td>-toggle</td>
            <td>Append a filter, or remove if if it already exists</td>
            </tr>
            <tr><td>-help</td>
            <td>Pseudo operation that prints a help text to the terminal</t=
d>
            </tr>
            </tbody>
            </table>
            </div>
            <div class=3D"section" id=3D"general">
            <h3>General</h3>
            <p>Without suffix, the operation used is normally <tt class=3D"=
docutils literal"><span class=3D"pre">-set</span></tt>.</p>
            <p>Although some operations allow specifying multiple items, us=
ing this is strongly
            discouraged and deprecated, except for <tt class=3D"docutils li=
teral"><span class=3D"pre">-set</span></tt>. There is a chance that
            operations like <tt class=3D"docutils literal"><span class=3D"p=
re">-add</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre"=
>-pre</span></tt> will work like <tt class=3D"docutils literal"><span class=
=3D"pre">-append</span></tt> and accept a
            single, unescaped item only (so the <tt class=3D"docutils liter=
al">,</tt> separator will not be interpreted and
            is passed on as part of the value).</p>
            <p>Some options (like <tt class=3D"docutils literal"><span clas=
s=3D"pre">--sub-file</span></tt>, <tt class=3D"docutils literal"><span clas=
s=3D"pre">--audio-file</span></tt>, <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--glsl-shader</span></tt>) are
            aliases for the proper option with <tt class=3D"docutils litera=
l"><span class=3D"pre">-append</span></tt> action. For example,
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-file</=
span></tt> is an alias for <tt class=3D"docutils literal"><span class=3D"pr=
e">--sub-files-append</span></tt>.</p>
            <p>Options of this type can be changed at runtime using the <tt=
 class=3D"docutils literal"><span class=3D"pre">change-list</span></tt>
            command, which takes the suffix (without the <tt class=3D"docut=
ils literal">-</tt>) as separate operation
            parameter.</p>
            </div>
            </div>
            </div>
            <div class=3D"section" id=3D"configuration-files">
            <h1>CONFIGURATION FILES</h1>
            <div class=3D"section" id=3D"location-and-syntax">
            <h2>Location and Syntax</h2>
            <p>You can put all of the options in configuration files which =
will be read every
            time mpv is run. The system-wide configuration file 'mpv.conf' =
is in your
            configuration directory (e.g. <tt class=3D"docutils literal">/e=
tc/mpv</tt> or <tt class=3D"docutils literal">/usr/local/etc/mpv</tt>), the
            user-specific one is <tt class=3D"docutils literal"><span class=
=3D"pre">~/.config/mpv/mpv.conf</span></tt>. For details and platform
            specifics (in particular Windows paths) see the <a class=3D"ref=
erence internal" href=3D"https://mpv.io/manual/master/#files">FILES</a> sec=
tion.</p>
            <p>User-specific options override system-wide options and optio=
ns given on the
            command line override either. The syntax of the configuration f=
iles is
            <tt class=3D"docutils literal">option=3Dvalue</tt>. Everything =
after a <em>#</em> is considered a comment. Options
            that work without values can be enabled by setting them to <em>=
yes</em> and disabled by
            setting them to <em>no</em>. Even suboptions can be specified i=
n this way.</p>
            <div class=3D"admonition admonition-example-configuration-file"=
>
            <p class=3D"first admonition-title">Example configuration file<=
/p>
            <pre class=3D"last literal-block"># Use GPU-accelerated video o=
utput by default.
vo=3Dgpu
# Use quotes for text that can contain spaces:
term-status-msg=3D"Time: ${time-pos}"
</pre>
            </div>
            </div>
            <div class=3D"section" id=3D"escaping-spaces-and-special-charac=
ters">
            <h2>Escaping spaces and special characters</h2>
            <p>This is done like with command line options. The shell is no=
t involved here,
            but option values still need to be quoted as a whole if it cont=
ains certain
            characters like spaces. A config entry can be quoted with <tt c=
lass=3D"docutils literal">"</tt>,
            as well as with the fixed-length syntax (<tt class=3D"docutils =
literal">%n%</tt>) mentioned before. This is like
            passing the exact contents of the quoted string as command line=
 option. C-style
            escapes are currently _not_ interpreted on this level, although=
 some options do
            this manually. (This is a mess and should probably be changed a=
t some point.)</p>
            </div>
            <div class=3D"section" id=3D"putting-command-line-options-into-=
the-configuration-file">
            <h2>Putting Command Line Options into the Configuration File</h=
2>
            <p>Almost all command line options can be put into the configur=
ation file. Here
            is a small guide:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"49%">
            <col width=3D"51%">
            </colgroup>
            <thead valign=3D"bottom">
            <tr><th class=3D"head">Option</th>
            <th class=3D"head">Configuration file entry</th>
            </tr>
            </thead>
            <tbody valign=3D"top">
            <tr><td><tt class=3D"docutils literal"><span class=3D"pre">--fl=
ag</span></tt></td>
            <td><tt class=3D"docutils literal">flag</tt></td>
            </tr>
            <tr><td><tt class=3D"docutils literal"><span class=3D"pre">-opt=
</span> val</tt></td>
            <td><tt class=3D"docutils literal">opt=3Dval</tt></td>
            </tr>
            <tr><td><tt class=3D"docutils literal"><span class=3D"pre">--op=
t=3Dval</span></tt></td>
            <td><tt class=3D"docutils literal">opt=3Dval</tt></td>
            </tr>
            <tr><td><tt class=3D"docutils literal"><span class=3D"pre">-opt=
</span> "has spaces"</tt></td>
            <td><tt class=3D"docutils literal"><span class=3D"pre">opt=3D"h=
as</span> spaces"</tt></td>
            </tr>
            </tbody>
            </table>
            </div>
            <div class=3D"section" id=3D"file-specific-configuration-files"=
>
            <h2>File-specific Configuration Files</h2>
            <p>You can also write file-specific configuration files. If you=
 wish to have a
            configuration file for a file called 'video.avi', create a file=
 named
            'video.avi.conf' with the file-specific options in it and put i=
t in
            <tt class=3D"docutils literal"><span class=3D"pre">~/.config/mp=
v/</span></tt>. You can also put the configuration file in the same directo=
ry
            as the file to be played. Both require you to set the <tt class=
=3D"docutils literal"><span class=3D"pre">--use-filedir-conf</span></tt>
            option (either on the command line or in your global config fil=
e). If a
            file-specific configuration file is found in the same directory=
, no
            file-specific configuration is loaded from <tt class=3D"docutil=
s literal"><span class=3D"pre">~/.config/mpv</span></tt>. In addition, the
            <tt class=3D"docutils literal"><span class=3D"pre">--use-filedi=
r-conf</span></tt> option enables directory-specific configuration files.
            For this, mpv first tries to load a mpv.conf from the same dire=
ctory
            as the file played and then tries to load any file-specific con=
figuration.</p>
            </div>
            <div class=3D"section" id=3D"profiles">
            <h2>Profiles</h2>
            <p>To ease working with different configurations, profiles can =
be defined in the
            configuration files. A profile starts with its name in square b=
rackets,
            e.g. <tt class=3D"docutils literal"><span class=3D"pre">[my-pro=
file]</span></tt>. All following options will be part of the profile. A
            description (shown by <tt class=3D"docutils literal"><span clas=
s=3D"pre">--profile=3Dhelp</span></tt>) can be defined with the
            <tt class=3D"docutils literal"><span class=3D"pre">profile-desc=
</span></tt> option. To end the profile, start another one or use the
            profile name <tt class=3D"docutils literal">default</tt> to con=
tinue with normal options.</p>
            <p>You can list profiles with <tt class=3D"docutils literal"><s=
pan class=3D"pre">--profile=3Dhelp</span></tt>, and show the contents of a
            profile with <tt class=3D"docutils literal"><span class=3D"pre"=
>--show-profile=3D&lt;name&gt;</span></tt> (replace <tt class=3D"docutils l=
iteral">&lt;name&gt;</tt> with the profile
            name). You can apply profiles on start with the <tt class=3D"do=
cutils literal"><span class=3D"pre">--profile=3D&lt;name&gt;</span></tt> op=
tion,
            or at runtime with the <tt class=3D"docutils literal"><span cla=
ss=3D"pre">apply-profile</span> &lt;name&gt;</tt> command.</p>
            <div class=3D"admonition admonition-example-mpv-config-file-wit=
h-profiles">
            <p class=3D"first admonition-title">Example mpv config file wit=
h profiles</p>
            <pre class=3D"last literal-block"># normal top-level option
fullscreen=3Dyes

# a profile that can be enabled with --profile=3Dbig-cache
[big-cache]
cache=3Dyes
demuxer-max-bytes=3D123400KiB
demuxer-readahead-secs=3D20

[slow]
profile-desc=3D"some profile name"
# reference a builtin profile
profile=3Dgpu-hq

[fast]
vo=3Dvdpau

# using a profile again extends it
[slow]
framedrop=3Dno
# you can also include other profiles
profile=3Dbig-cache
</pre>
            </div>
            </div>
            <div class=3D"section" id=3D"runtime-profiles">
            <h2>Runtime profiles</h2>
            <p>Profiles can be set at runtime with <tt class=3D"docutils li=
teral"><span class=3D"pre">apply-profile</span></tt> command. Since this
            operation is "destructive" (every item in a profile is simply s=
et as an
            option, overwriting the previous value), you can't just enable =
and disable
            profiles again.</p>
            <p>As a partial remedy, there is a way to make profiles save ol=
d option values
            before overwriting them with the profile values, and then resto=
ring the old
            values at a later point using <tt class=3D"docutils literal"><s=
pan class=3D"pre">apply-profile</span> <span class=3D"pre">&lt;profile-name=
&gt;</span> restore</tt>.</p>
            <p>This can be enabled with the <tt class=3D"docutils literal">=
<span class=3D"pre">profile-restore</span></tt> option, which takes one of
            the following options:</p>
            <blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"configuration-files-de=
fault">default<a href=3D"https://mpv.io/manual/master/#configuration-files-=
default" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Does nothing, and nothing can be restored (default).</dd>
            <dt><tt class=3D"docutils literal" id=3D"configuration-files-co=
py">copy<a href=3D"https://mpv.io/manual/master/#configuration-files-copy" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">When applying a profile, copy the old va=
lues of all profile options to a
            backup before setting them from the profile. These options are =
reset to
            their old values using the backup when restoring.</p>
            <p>Every profile has its own list of backed up values. If the b=
ackup
            already exists (e.g. if <tt class=3D"docutils literal"><span cl=
ass=3D"pre">apply-profile</span> name</tt> was called more than
            once in a row), the existing backup is no changed. The restore =
operation
            will remove the backup.</p>
            <p>It's important to know that restoring does not "undo" settin=
g an option,
            but simply copies the old option value. Consider for example <t=
t class=3D"docutils literal"><span class=3D"pre">vf-add</span></tt>,
            appends an entry to <tt class=3D"docutils literal">vf</tt>. Thi=
s mechanism will simply copy the entire
            <tt class=3D"docutils literal">vf</tt> list, and does _not_ exe=
cute the inverse of <tt class=3D"docutils literal"><span class=3D"pre">vf-a=
dd</span></tt> (that
            would be <tt class=3D"docutils literal"><span class=3D"pre">vf-=
remove</span></tt>) on restoring.</p>
            <p class=3D"last">Note that if a profile contains recursive pro=
files (via the <tt class=3D"docutils literal">profile</tt>
            option), the options in these recursive profiles are treated as=
 if they
            were part of this profile. The referenced profile's backup list=
 is not
            used when creating or using the backup. Restoring a profile doe=
s not
            restore referenced profiles, only the options of referenced pro=
files (as
            if they were part of the main profile).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"configuration-files-co=
py-equal"><span class=3D"pre">copy-equal</span><a href=3D"https://mpv.io/ma=
nual/master/#configuration-files-copy-equal" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Similar to <tt class=3D"docutils literal">copy</tt>, but re=
store an option only if it has the same value
            as the value effectively set by the profile. This tries to deal=
 with
            the situation when the user does not want the option to be rese=
t after
            interactively changing it.</dd>
            </dl>
            </blockquote>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <pre class=3D"literal-block">[something]
profile-restore=3Dcopy-equal
vf-add=3Drotate=3DPI/2  # rotate by 90 degrees
</pre>
            <p>Then running these commands will result in behavior as comme=
nted:</p>
            <pre class=3D"last literal-block">set vf vflip
apply-profile something
vf add hflip
apply-profile something
# vf =3D=3D vflip,rotate=3DPI/2,hflip,rotate=3DPI/2
apply-profile something restore
# vf =3D=3D vflip
</pre>
            </div>
            </div>
            <div class=3D"section" id=3D"conditional-auto-profiles">
            <h2>Conditional auto profiles</h2>
            <p>Profiles which have the <tt class=3D"docutils literal"><span=
 class=3D"pre">profile-cond</span></tt> option set are applied automaticall=
y
            if the associated condition matches (unless auto profiles are d=
isabled). The
            option takes a string, which is interpreted as Lua expression. =
If the
            expression evaluates as truthy, the profile is applied. If the =
expression
            errors or evaluates as falsy, the profile is not applied. This =
Lua code
            execution is not sandboxed.</p>
            <p>Any variables in condition expressions can reference propert=
ies. If an
            identifier is not already defined by Lua or mpv, it is interpre=
ted as property.
            For example, <tt class=3D"docutils literal">pause</tt> would re=
turn the current pause status. You cannot
            reference properties with <tt class=3D"docutils literal">-</tt>=
 this way since that would denote a subtraction,
            but if the variable name contains any <tt class=3D"docutils lit=
eral">_</tt> characters, they are turned into
            <tt class=3D"docutils literal">-</tt>. For example, <tt class=
=3D"docutils literal">playback_time</tt> would return the property
            <tt class=3D"docutils literal"><span class=3D"pre">playback-tim=
e</span></tt>.</p>
            <p>A more robust way to access properties is using <tt class=3D=
"docutils literal">p.property_name</tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">get("propert=
y-name",</span> default_value)</tt>. The automatic variable to property
            magic will break if a new identifier with the same name is intr=
oduced (for
            example, if a function named <tt class=3D"docutils literal">pau=
se()</tt> were added, <tt class=3D"docutils literal">pause</tt> would retur=
n a
            function value instead of the value of the <tt class=3D"docutil=
s literal">pause</tt> property).</p>
            <p>Note that if a property is not available, it will return <tt=
 class=3D"docutils literal">nil</tt>, which can
            cause errors if used in expressions. These are logged in verbos=
e mode, and the
            expression is considered to be false.</p>
            <p>Whenever a property referenced by a profile condition change=
s, the condition
            is re-evaluated. If the return value of the condition changes f=
rom falsy or
            error to truthy, the profile is applied.</p>
            <p>This mechanism tries to "unapply" profiles once the conditio=
n changes from
            truthy to falsy or error. If you want to use this, you need to =
set
            <tt class=3D"docutils literal"><span class=3D"pre">profile-rest=
ore</span></tt> for the profile. Another possibility it to create another
            profile with an inverse condition to undo the other profile.</p=
>
            <p>Recursive profiles can be used. But it is discouraged to ref=
erence other
            conditional profiles in a conditional profile, since this can l=
ead to tricky
            and unintuitive behavior.</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <p>Make only HD video look funny:</p>
            <pre class=3D"literal-block">[something]
profile-desc=3DHD video sucks
profile-cond=3Dwidth &gt;=3D 1280
hue=3D-50
</pre>
            <p>Make only videos containing "youtube" or "youtu.be" in their=
 path brighter:</p>
            <pre class=3D"literal-block">[youtube]
profile-cond=3Dpath:find('youtu%.?be')
gamma=3D20
</pre>
            <p>If you want the profile to be reverted if the condition goes=
 to false again,
            you can set <tt class=3D"docutils literal"><span class=3D"pre">=
profile-restore</span></tt>:</p>
            <pre class=3D"literal-block">[something]
profile-desc=3DMess up video when entering fullscreen
profile-cond=3Dfullscreen
profile-restore=3Dcopy
vf-add=3Drotate=3DPI/2  # rotate by 90 degrees
</pre>
            <p>This appends the <tt class=3D"docutils literal">rotate</tt> =
filter to the video filter chain when entering
            fullscreen. When leaving fullscreen, the <tt class=3D"docutils =
literal">vf</tt> option is set to the value
            it had before entering fullscreen. Note that this would also re=
move any
            other filters that were added during fullscreen mode by the use=
r. Avoiding
            this is trickier, and could for example be solved by adding a s=
econd profile
            with an inverse condition and operation:</p>
            <pre class=3D"last literal-block">[something]
profile-cond=3Dfullscreen
vf-add=3D@rot:rotate=3DPI/2

[something-inv]
profile-cond=3Dnot fullscreen
vf-remove=3D@rot
</pre>
            </div>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Every time an involved property changes, the =
condition is evaluated again.
            If your condition uses <tt class=3D"docutils literal">p.playbac=
k_time</tt> for example, the condition is
            re-evaluated approximately on every video frame. This is probab=
ly slow.</p>
            </div>
            <p>This feature is managed by an internal Lua script. Condition=
s are executed as
            Lua code within this script. Its environment contains at least =
the following
            things:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"configuration-files-(f=
unction-environment-table)">(function environment table)<a href=3D"https://=
mpv.io/manual/master/#configuration-files-(function-environment-table)" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Every Lua function has an environment ta=
ble. This is used for identifier
            access. There is no named Lua symbol for it; it is implicit.</p=
>
            <p>The environment does "magic" accesses to mpv properties. If =
an identifier
            is not already defined in <tt class=3D"docutils literal">_G</tt=
>, it retrieves the mpv property of the same
            name. Any occurrences of <tt class=3D"docutils literal">_</tt> =
in the name are replaced with <tt class=3D"docutils literal">-</tt> before
            reading the property. The returned value is as retrieved by
            <tt class=3D"docutils literal">mp.get_property_native(name)</tt=
>. Internally, a cache of property values,
            updated by observing the property is used instead, so propertie=
s that are
            not observable will be stuck at the initial value forever.</p>
            <p>If you want to access properties, that actually contain <tt =
class=3D"docutils literal">_</tt> in the name,
            use <tt class=3D"docutils literal">get()</tt> (which does not p=
erform transliteration).</p>
            <p class=3D"last">Internally, the environment table has a <tt c=
lass=3D"docutils literal">__index</tt> meta method set, which
            performs the access logic.</p>
            </dd>
            <dt><tt class=3D"docutils literal">p</tt></dt>
            <dd>A "magic" table similar to the environment table. Unlike th=
e latter, this
            does not prefer accessing variables defined in <tt class=3D"doc=
utils literal">_G</tt> - it always accesses
            properties.</dd>
            <dt><tt class=3D"docutils literal" id=3D"configuration-files-ge=
t(name-[,-def])">get(name [, def])<a href=3D"https://mpv.io/manual/master/#=
configuration-files-get(name-[,-def])" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Read a property and return its value. If=
 the property value is <tt class=3D"docutils literal">nil</tt> (e.g.
            if the property does not exist), <tt class=3D"docutils literal"=
>def</tt> is returned.</p>
            <p>This is superficially similar to <tt class=3D"docutils liter=
al">mp.get_property_native(name)</tt>. An
            important difference is that this accesses the property cache, =
and enables
            the change detection logic (which is essential to the dynamic r=
untime
            behavior of auto profiles). Also, it does not return an error v=
alue as
            second return value.</p>
            <p class=3D"last">The "magic" tables mentioned above use this f=
unction as backend. It does not
            perform the <tt class=3D"docutils literal">_</tt> transliterati=
on.</p>
            </dd>
            </dl>
            <p>In addition, the same environment as in a blank mpv Lua scri=
pt is present. For
            example, <tt class=3D"docutils literal">math</tt> is defined an=
d gives access to the Lua standard math library.</p>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This feature is subject to change indefinitel=
y. You might be forced to
            adjust your profiles on mpv updates.</p>
            </div>
            </div>
            <div class=3D"section" id=3D"legacy-auto-profiles">
            <h2>Legacy auto profiles</h2>
            <p>Some profiles are loaded automatically using a legacy mechan=
ism. The following
            example demonstrates this:</p>
            <div class=3D"admonition admonition-auto-profile-loading">
            <p class=3D"first admonition-title">Auto profile loading</p>
            <pre class=3D"last literal-block">[extension.mkv]
profile-desc=3D"profile for .mkv files"
vf=3Dvflip
</pre>
            </div>
            <p>The profile name follows the schema <tt class=3D"docutils li=
teral">type.name</tt>, where type can be
            <tt class=3D"docutils literal">protocol</tt> for the input/outp=
ut protocol in use (see <tt class=3D"docutils literal"><span class=3D"pre">=
--list-protocols</span></tt>),
            and <tt class=3D"docutils literal">extension</tt> for the exten=
sion of the path of the currently played file
            (<em>not</em> the file format).</p>
            <p>This feature is very limited, and is considered soft-depreca=
ted. Use conditional
            auto profiles.</p>
            </div>
            </div>
            <div class=3D"section" id=3D"using-mpv-from-other-programs-or-s=
cripts">
            <h1>Using mpv from other programs or scripts</h1>
            <p>There are three choices for using mpv from other programs or=
 scripts:</p>
            <blockquote>
            <ol class=3D"arabic">
            <li><p class=3D"first">Calling it as UNIX process. If you do th=
is, <em>do not parse terminal output</em>.
            The terminal output is intended for humans, and may change any =
time. In
            addition, terminal behavior itself may change any time. Compati=
bility
            cannot be guaranteed.</p>
            <p>Your code should work even if you pass <tt class=3D"docutils=
 literal"><span class=3D"pre">--no-terminal</span></tt>. Do not attempt
            to simulate user input by sending terminal control codes to mpv=
's stdin.
            If you need interactive control, using <tt class=3D"docutils li=
teral"><span class=3D"pre">--input-ipc-server</span></tt> is
            recommended. This gives you access to the <a class=3D"reference=
 internal" href=3D"https://mpv.io/manual/master/#json-ipc">JSON IPC</a>  ov=
er unix domain
            sockets (or named pipes on Windows).</p>
            <p>Depending on what you do, passing <tt class=3D"docutils lite=
ral"><span class=3D"pre">--no-config</span></tt> or <tt class=3D"docutils l=
iteral"><span class=3D"pre">--config-dir</span></tt> may
            be a good idea to avoid conflicts with the normal mpv user conf=
iguration
            intended for CLI playback.</p>
            <p>Using <tt class=3D"docutils literal"><span class=3D"pre">--i=
nput-ipc-server</span></tt> is also suitable for purposes like remote
            control (however, the IPC protocol itself is not "secure" and n=
ot
            intended to be so).</p>
            </li>
            <li><p class=3D"first">Using libmpv. This is generally recommen=
ded when mpv is used as playback
            backend for a completely different application. The provided C =
API is
            very close to CLI mechanisms and the scripting API.</p>
            <p>Note that even though libmpv has different defaults, it can =
be configured
            to work exactly like the CLI player (except command line parsin=
g is
            unavailable).</p>
            <p>See <a class=3D"reference internal" href=3D"https://mpv.io/m=
anual/master/#embedding-into-other-programs-libmpv">EMBEDDING INTO OTHER PR=
OGRAMS (LIBMPV)</a>.</p>
            </li>
            <li><p class=3D"first">As a user script (<a class=3D"reference =
internal" href=3D"https://mpv.io/manual/master/#lua-scripting">LUA SCRIPTIN=
G</a>, <a class=3D"reference internal" href=3D"https://mpv.io/manual/master=
/#javascript">JAVASCRIPT</a>, <a class=3D"reference internal" href=3D"https=
://mpv.io/manual/master/#c-plugins">C PLUGINS</a>). This is
            recommended when the goal is to "enhance" the CLI player. Scrip=
ts get
            access to the entire client API of mpv.</p>
            <p>This is the standard way to create third-party extensions fo=
r the player.</p>
            </li>
            </ol>
            </blockquote>
            <p>All these access the client API, which is the sum of the var=
ious mechanisms
            provided by the player core, as documented here: <a class=3D"re=
ference internal" href=3D"https://mpv.io/manual/master/#options">OPTIONS</a=
>,
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#list-of-input-commands">List of Input Commands</a>, <a class=3D"refe=
rence internal" href=3D"https://mpv.io/manual/master/#properties">Propertie=
s</a>, <a class=3D"reference internal" href=3D"https://mpv.io/manual/master=
/#list-of-events">List of events</a> (also see C API),
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#hooks">Hooks</a>.</p>
            </div>
            <div class=3D"section" id=3D"taking-screenshots">
            <h1>TAKING SCREENSHOTS</h1>
            <p>Screenshots of the currently played file can be taken using =
the 'screenshot'
            input mode command, which is by default bound to the <tt class=
=3D"docutils literal">s</tt> key. Files named
            <tt class=3D"docutils literal"><span class=3D"pre">mpv-shotNNNN=
.jpg</span></tt> will be saved in the working directory, using the first
            available number - no files will be overwritten. In pseudo-GUI =
mode, the
            screenshot will be saved somewhere else. See <a class=3D"refere=
nce internal" href=3D"https://mpv.io/manual/master/#pseudo-gui-mode">PSEUDO=
 GUI MODE</a>.</p>
            <p>A screenshot will usually contain the unscaled video content=
s at the end of the
            video filter chain and subtitles. By default, <tt class=3D"docu=
tils literal">S</tt> takes screenshots without
            subtitles, while <tt class=3D"docutils literal">s</tt> includes=
 subtitles.</p>
            <p>Unlike with MPlayer, the <tt class=3D"docutils literal">scre=
enshot</tt> video filter is not required. This
            filter was never required in mpv, and has been removed.</p>
            </div>
            <div class=3D"section" id=3D"terminal-status-line">
            <h1>TERMINAL STATUS LINE</h1>
            <p>During playback, mpv shows the playback status on the termin=
al. It looks like
            something like this:</p>
            <blockquote>
            <tt class=3D"docutils literal">AV: 00:03:12 / 00:24:25 (13%) <s=
pan class=3D"pre">A-V:</span> <span class=3D"pre">-0.000</span></tt></block=
quote>
            <p>The status line can be overridden with the <tt class=3D"docu=
tils literal"><span class=3D"pre">--term-status-msg</span></tt> option.</p>
            <p>The following is a list of things that can show up in the st=
atus line. Input
            properties, that can be used to get the same information manual=
ly, are also
            listed.</p>
            <ul class=3D"simple">
            <li><tt class=3D"docutils literal">AV:</tt> or <tt class=3D"doc=
utils literal">V:</tt> (video only) or <tt class=3D"docutils literal">A:</t=
t> (audio only)</li>
            <li>The current time position in <tt class=3D"docutils literal"=
>HH:MM:SS</tt> format (<tt class=3D"docutils literal"><span class=3D"pre">p=
layback-time</span></tt> property)</li>
            <li>The total file duration (absent if unknown) (<tt class=3D"d=
ocutils literal">duration</tt> property)</li>
            <li>Playback speed, e.g. <tt class=3D"docutils literal">x2.0</t=
t>. Only visible if the speed is not normal. This
            is the user-requested speed, and not the actual speed  (usually=
 they should
            be the same, unless playback is too slow). (<tt class=3D"docuti=
ls literal">speed</tt> property.)</li>
            <li>Playback percentage, e.g. <tt class=3D"docutils literal">(1=
3%)</tt>. How much of the file has been played.
            Normally calculated out of playback position and duration, but =
can fallback
            to other methods (like byte position) if these are not availabl=
e.
            (<tt class=3D"docutils literal"><span class=3D"pre">percent-pos=
</span></tt> property.)</li>
            <li>The audio/video sync as <tt class=3D"docutils literal"><spa=
n class=3D"pre">A-V:</span>&nbsp; 0.000</tt>. This is the difference betwee=
n
            audio and video time. Normally it should be 0 or close to 0. If=
 it's growing,
            it might indicate a playback problem. (<tt class=3D"docutils li=
teral">avsync</tt> property.)</li>
            <li>Total A/V sync change, e.g. <tt class=3D"docutils literal">=
ct: <span class=3D"pre">-0.417</span></tt>. Normally invisible. Can show up
            if there is audio "missing", or not enough frames can be droppe=
d. Usually
            this will indicate a problem. (<tt class=3D"docutils literal"><=
span class=3D"pre">total-avsync-change</span></tt> property.)</li>
            <li>Encoding state in <tt class=3D"docutils literal"><span clas=
s=3D"pre">{...}</span></tt>, only shown in encoding mode.</li>
            <li>Display sync state. If display sync is active (<tt class=3D=
"docutils literal"><span class=3D"pre">display-sync-active</span></tt>
            property), this shows <tt class=3D"docutils literal">DS: 2.500/=
13</tt>, where the first number is average
            number of vsyncs per video frame (e.g. 2.5 when playing 24Hz vi=
deos on 60Hz
            screens), which might jitter if the ratio doesn't round off, or=
 there are
            mistimed frames (<tt class=3D"docutils literal"><span class=3D"=
pre">vsync-ratio</span></tt>), and the second number of estimated number
            of vsyncs which took too long (<tt class=3D"docutils literal"><=
span class=3D"pre">vo-delayed-frame-count</span></tt> property). The
            latter is a heuristic, as it's generally not possible to determ=
ine this with
            certainty.</li>
            <li>Dropped frames, e.g. <tt class=3D"docutils literal">Dropped=
: 4</tt>. Shows up only if the count is not 0. Can
            grow if the video framerate is higher than that of the display,=
 or if video
            rendering is too slow. May also be incremented on "hiccups" and=
 when the video
            frame couldn't be displayed on time. (<tt class=3D"docutils lit=
eral"><span class=3D"pre">frame-drop-count</span></tt> property.)
            If the decoder drops frames, the number of decoder-dropped fram=
es is appended
            to the display as well, e.g.: <tt class=3D"docutils literal">Dr=
opped: 4/34</tt>. This happens only if
            decoder frame dropping is enabled with the <tt class=3D"docutil=
s literal"><span class=3D"pre">--framedrop</span></tt> options.
            (<tt class=3D"docutils literal"><span class=3D"pre">decoder-fra=
me-drop-count</span></tt> property.)</li>
            <li>Cache state, e.g. <tt class=3D"docutils literal">Cache:&nbs=
p; 2s/134KB</tt>. Visible if the stream cache is enabled.
            The first value shows the amount of video buffered in the demux=
er in seconds,
            the second value shows the estimated size of the buffered amoun=
t in kilobytes.
            (<tt class=3D"docutils literal"><span class=3D"pre">demuxer-cac=
he-duration</span></tt> and <tt class=3D"docutils literal"><span class=3D"p=
re">demuxer-cache-state</span></tt> properties.)</li>
            </ul>
            </div>
            <div class=3D"section" id=3D"low-latency-playback">
            <h1>LOW LATENCY PLAYBACK</h1>
            <p>mpv is optimized for normal video playback, meaning it actua=
lly tries to buffer
            as much data as it seems to make sense. This will increase late=
ncy. Reducing
            latency is possible only by specifically disabling features whi=
ch increase
            latency.</p>
            <p>The builtin <tt class=3D"docutils literal"><span class=3D"pr=
e">low-latency</span></tt> profile tries to apply some of the options which=
 can
            reduce latency. You can use  <tt class=3D"docutils literal"><sp=
an class=3D"pre">--profile=3Dlow-latency</span></tt> to apply all of them. =
You
            can list the contents with <tt class=3D"docutils literal"><span=
 class=3D"pre">--show-profile=3Dlow-latency</span></tt> (some of the option=
s
            are quite obscure, and may change every mpv release).</p>
            <p>Be aware that some of the options can reduce playback qualit=
y.</p>
            <p>Most latency is actually caused by inconvenient timing behav=
ior. You can disable
            this with <tt class=3D"docutils literal"><span class=3D"pre">--=
untimed</span></tt>, but it will likely break, unless the stream has no
            audio, and the input feeds data to the player at a constant rat=
e.</p>
            <p>Another common problem is with MJPEG streams. These do not s=
ignal the correct
            framerate. Using <tt class=3D"docutils literal"><span class=3D"=
pre">--untimed</span></tt> or <tt class=3D"docutils literal"><span class=3D=
"pre">--no-correct-pts</span> <span class=3D"pre">--fps=3D60</span></tt> mi=
ght help.</p>
            <p>For livestreams, data can build up due to pausing the stream=
, due to slightly
            lower playback rate, or "buffering" pauses. If the demuxer cach=
e is enabled,
            these can be skipped manually. The experimental <tt class=3D"do=
cutils literal"><span class=3D"pre">drop-buffers</span></tt> command can
            be used to discard any buffered data, though it's very disrupti=
ve.</p>
            <p>In some cases, manually tuning TCP buffer sizes and such can=
 help to reduce
            latency.</p>
            <p>Additional options that can be tried:</p>
            <ul class=3D"simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--opengl=
-glfinish=3Dyes</span></tt>, can reduce buffering in the graphics driver</l=
i>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--opengl=
-swapinterval=3D0</span></tt>, same</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dx=
v</span></tt>, same</li>
            <li>without audio <tt class=3D"docutils literal"><span class=3D=
"pre">--framedrop=3Dno</span> <span class=3D"pre">--speed=3D1.01</span></tt=
> may help for live sources
            (results can be mixed)</li>
            </ul>
            </div>
            <div class=3D"section" id=3D"resuming-playback">
            <h1>RESUMING PLAYBACK</h1>
            <p>mpv is capable of storing the playback position of the curre=
ntly playing file
            and resume from there the next time that file is played. This i=
s done with the
            commands <tt class=3D"docutils literal"><span class=3D"pre">qui=
t-watch-later</span></tt> (bound to Shift+Q by default) and
            <tt class=3D"docutils literal"><span class=3D"pre">write-watch-=
later-config</span></tt>, and with the <tt class=3D"docutils literal"><span=
 class=3D"pre">--save-position-on-quit</span></tt> option.</p>
            <p>The difference between always quitting with a key bound to <=
tt class=3D"docutils literal"><span class=3D"pre">quit-watch-later</span></=
tt>
            and using <tt class=3D"docutils literal"><span class=3D"pre">--=
save-position-on-quit</span></tt> is that the latter will save the playback
            position even when mpv is closed with a method other than a key=
binding, for
            example if you shutdown your system without closing mpv beforeh=
and, unless of
            course mpv is terminated abruptly and doesn't have the time to =
save (e.g. with
            the KILL Unix signal).</p>
            <p>mpv also stores options other than the playback position whe=
n they have been
            modified after playback began, for example the volume and the f=
ullscreen state,
            and restores their values the next time the file is played. Whi=
ch options are
            saved can be configured with the <tt class=3D"docutils literal"=
><span class=3D"pre">--watch-later-options</span></tt> option.</p>
            <p>When playing multiple playlist entries, mpv checks if one th=
em has a resume
            config file associated, and if it finds one it restarts playbac=
k from it. For
            example, if you use <tt class=3D"docutils literal"><span class=
=3D"pre">quit-watch-later</span></tt> on the 5th episode of a show, and
            later play all the episodes, mpv will automatically resume play=
back from
            episode 5.</p>
            <p>More options to configure this functionality are listed in <=
a class=3D"reference internal" href=3D"https://mpv.io/manual/master/#watch-=
later">Watch Later</a>.</p>
            </div>
            <div class=3D"section" id=3D"protocols">
            <h1>PROTOCOLS</h1>
            <p><tt class=3D"docutils literal"><span class=3D"pre">http://..=
.</span></tt>, <tt class=3D"docutils literal"><span class=3D"pre">https://<=
/span></tt>, ...</p>
            <blockquote>
            <p>Many network protocols are supported, but the protocol prefi=
x must always
            be specified. mpv will never attempt to guess whether a filenam=
e is
            actually a network address. A protocol prefix is always require=
d.</p>
            <p>Note that not all prefixes are documented here. Undocumented=
 prefixes are
            either aliases to documented protocols, or are just redirection=
s to
            protocols implemented and documented in FFmpeg.</p>
            <p><tt class=3D"docutils literal">data:</tt> is supported in FF=
mpeg (not in Libav), but needs to be in the
            format <tt class=3D"docutils literal"><span class=3D"pre">data:=
//</span></tt>. This is done to avoid ambiguity with filenames. You
            can also prefix it with <tt class=3D"docutils literal"><span cl=
ass=3D"pre">lavf://</span></tt> or <tt class=3D"docutils literal"><span cla=
ss=3D"pre">ffmpeg://</span></tt>.</p>
            </blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">ytdl://..=
.</span></tt></p>
            <blockquote>
            <p>By default, the youtube-dl hook script only looks at http(s)=
 URLs. Prefixing
            an URL with <tt class=3D"docutils literal"><span class=3D"pre">=
ytdl://</span></tt> forces it to be always processed by the script. This
            can also be used to invoke special youtube-dl functionality lik=
e playing a
            video by ID or invoking search.</p>
            <p>Keep in mind that you can't pass youtube-dl command line opt=
ions by this,
            and you have to use <tt class=3D"docutils literal"><span class=
=3D"pre">--ytdl-raw-options</span></tt> instead.</p>
            </blockquote>
            <p><tt class=3D"docutils literal">-</tt></p>
            <blockquote>
            Play data from stdin.</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">smb://PAT=
H</span></tt></p>
            <blockquote>
            Play a path from  Samba share. (Requires FFmpeg support.)</bloc=
kquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">bd://[tit=
le][/device]</span></tt> <tt class=3D"docutils literal"><span class=3D"pre"=
>--bluray-device=3DPATH</span></tt></p>
            <blockquote>
            <p>Play a Blu-ray disc. Since libbluray 1.0.1, you can read fro=
m ISO files
            by passing them to <tt class=3D"docutils literal"><span class=
=3D"pre">--bluray-device</span></tt>.</p>
            <p><tt class=3D"docutils literal">title</tt> can be: <tt class=
=3D"docutils literal">longest</tt> or <tt class=3D"docutils literal">first<=
/tt> (selects the default
            playlist); <tt class=3D"docutils literal"><span class=3D"pre">m=
pls/&lt;number&gt;</span></tt> (selects &lt;number&gt;.mpls playlist);
            <tt class=3D"docutils literal">&lt;number&gt;</tt> (select play=
list with the same index). mpv will list
            the available playlists on loading.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">bluray://=
</span></tt> is an alias.</p>
            </blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">dvd://[ti=
tle][/device]</span></tt> <tt class=3D"docutils literal"><span class=3D"pre=
">--dvd-device=3DPATH</span></tt></p>
            <blockquote>
            <p>Play a DVD. DVD menus are not supported. If no title is give=
n, the longest
            title is auto-selected. Without <tt class=3D"docutils literal">=
<span class=3D"pre">--dvd-device</span></tt>, it will probably try
            to open an actual optical drive, if available and implemented f=
or the OS.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">dvdnav://=
</span></tt> is an old alias for <tt class=3D"docutils literal"><span class=
=3D"pre">dvd://</span></tt> and does exactly the same
            thing.</p>
            </blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">dvb://[ca=
rdnumber@]channel</span></tt> <tt class=3D"docutils literal"><span class=3D=
"pre">--dvbin-...</span></tt></p>
            <blockquote>
            Digital TV via DVB. (Linux only.)</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mf://[fil=
emask|@listfile]</span></tt> <tt class=3D"docutils literal"><span class=3D"=
pre">--mf-...</span></tt></p>
            <blockquote>
            Play a series of images as video.</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">cdda://[d=
evice]</span></tt> <tt class=3D"docutils literal"><span class=3D"pre">--cdr=
om-device=3DPATH</span></tt> <tt class=3D"docutils literal"><span class=3D"=
pre">--cdda-...</span></tt></p>
            <blockquote>
            Play CD.</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">lavf://..=
.</span></tt></p>
            <blockquote>
            Access any FFmpeg/Libav libavformat protocol. Basically, this p=
assed the
            string after the <tt class=3D"docutils literal">//</tt> directl=
y to libavformat.</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">av://type=
:options</span></tt></p>
            <blockquote>
            <p>This is intended for using libavdevice inputs. <tt class=3D"=
docutils literal">type</tt> is the libavdevice
            demuxer name, and <tt class=3D"docutils literal">options</tt> i=
s the (pseudo-)filename passed to the
            demuxer.</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <pre class=3D"literal-block">mpv av://v4l2:/dev/video0 --profil=
e=3Dlow-latency --untimed
</pre>
            <p class=3D"last">This plays video from the first v4l input wit=
h nearly the lowest latency
            possible. It's a good replacement for the removed <tt class=3D"=
docutils literal"><span class=3D"pre">tv://</span></tt> input.
            Using <tt class=3D"docutils literal"><span class=3D"pre">--unti=
med</span></tt> is a hack to output a captured frame immediately,
            instead of respecting the input framerate. (There may be better=
 ways to
            handle this in the future.)</p>
            </div>
            <p><tt class=3D"docutils literal"><span class=3D"pre">avdevice:=
//</span></tt> is an alias.</p>
            </blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">file://PA=
TH</span></tt></p>
            <blockquote>
            A local path as URL. Might be useful in some special use-cases.=
 Note that
            <tt class=3D"docutils literal">PATH</tt> itself should start wi=
th a third <tt class=3D"docutils literal">/</tt> to make the path an
            absolute path.</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">appending=
://PATH</span></tt></p>
            <blockquote>
            <p>Play a local file, but assume it's being appended to. This i=
s useful for
            example for files that are currently being downloaded to disk. =
This will
            block playback, and stop playback only if no new data was appen=
ded after
            a timeout of about 2 seconds.</p>
            <p>Using this is still a bit of a bad idea, because there is no=
 way to detect
            if a file is actually being appended, or if it's still written.=
 If you're
            trying to play the  output of some program, consider using a pi=
pe
            (<tt class=3D"docutils literal">something | mpv -</tt>). If it =
really has to be a file on disk, use tail to
            make it wait forever, e.g. <tt class=3D"docutils literal">tail =
<span class=3D"pre">-f</span> <span class=3D"pre">-c</span> +0 file.mkv | m=
pv -</tt>.</p>
            </blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">fd://123<=
/span></tt></p>
            <blockquote>
            Read data from the given file descriptor (for example 123). Thi=
s is similar
            to piping data to stdin via <tt class=3D"docutils literal">-</t=
t>, but can use an arbitrary file descriptor.
            mpv may modify some file descriptor properties when the stream =
layer "opens"
            it.</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">fdclose:/=
/123</span></tt></p>
            <blockquote>
            Like <tt class=3D"docutils literal"><span class=3D"pre">fd://</=
span></tt>, but the file descriptor is closed after use. When using this
            you need to ensure that the same fd URL will only be used once.=
</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">edl://[ed=
l</span> specification as in <span class=3D"pre">edl-mpv.rst]</span></tt></=
p>
            <blockquote>
            Stitch together parts of multiple files and play them.</blockqu=
ote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">slice://s=
tart[-end]@URL</span></tt></p>
            <blockquote>
            <p>Read a slice of a stream.</p>
            <p><tt class=3D"docutils literal">start</tt> and <tt class=3D"d=
ocutils literal">end</tt> represent a byte range and accept
            suffixes such as <tt class=3D"docutils literal">KiB</tt> and <t=
t class=3D"docutils literal">MiB</tt>. <tt class=3D"docutils literal">end</=
tt> is optional.</p>
            <p>if <tt class=3D"docutils literal">end</tt> starts with <tt c=
lass=3D"docutils literal">+</tt>, it is considered as offset from <tt class=
=3D"docutils literal">start</tt>.</p>
            <p>Only works with seekable streams.</p>
            <p>Examples:</p>
            <pre class=3D"literal-block">mpv slice://1g-2g@cap.ts

This starts reading from cap.ts after seeking 1 GiB, then
reads until reaching 2 GiB or end of file.

mpv slice://1g-+2g@cap.ts

This starts reading from cap.ts after seeking 1 GiB, then
reads until reaching 3 GiB or end of file.

mpv slice://100m@appending://cap.ts

This starts reading from cap.ts after seeking 100MiB, then
reads until end of file.
</pre>
            </blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">null://</=
span></tt></p>
            <blockquote>
            Simulate an empty file. If opened for writing, it will discard =
all data.
            The <tt class=3D"docutils literal">null</tt> demuxer will speci=
fically pass autoprobing if this protocol
            is used (while it's not automatically invoked for empty files).=
</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">memory://=
data</span></tt></p>
            <blockquote>
            Use the <tt class=3D"docutils literal">data</tt> part as source=
 data.</blockquote>
            <p><tt class=3D"docutils literal"><span class=3D"pre">hex://dat=
a</span></tt></p>
            <blockquote>
            Like <tt class=3D"docutils literal"><span class=3D"pre">memory:=
//</span></tt>, but the string is interpreted as hexdump.</blockquote>
            </div>
            <div class=3D"section" id=3D"pseudo-gui-mode">
            <h1>PSEUDO GUI MODE</h1>
            <p>mpv has no official GUI, other than the OSC (<a class=3D"ref=
erence internal" href=3D"https://mpv.io/manual/master/#on-screen-controller=
">ON SCREEN CONTROLLER</a>), which
            is not a full GUI and is not meant to be. However, to compensat=
e for the lack
            of expected GUI behavior, mpv will in some cases start with som=
e settings
            changed to behave slightly more like a GUI mode.</p>
            <p>Currently this happens only in the following cases:</p>
            <ul class=3D"simple">
            <li>if started using the <tt class=3D"docutils literal">mpv.des=
ktop</tt> file on Linux (e.g. started from menus
            or file associations provided by desktop environments)</li>
            <li>if started from explorer.exe on Windows (technically, if it=
 was started on
            Windows, and all of the stdout/stderr/stdin handles are unset)<=
/li>
            <li>started out of the bundle on macOS</li>
            <li>if you manually use <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--player-operation-mode=3Dpseudo-gui</span></tt> on the command=
 line</li>
            </ul>
            <p>This mode applies options from the builtin profile <tt class=
=3D"docutils literal"><span class=3D"pre">builtin-pseudo-gui</span></tt>, b=
ut
            only if these haven't been set in the user's config file or on =
the command line,
            which is the main difference to using <tt class=3D"docutils lit=
eral"><span class=3D"pre">--profile=3Dbuiltin-pseudo-gui</span></tt>.</p>
            <p>The profile is currently defined as follows:</p>
            <pre class=3D"literal-block">[builtin-pseudo-gui]
terminal=3Dno
force-window=3Dyes
idle=3Donce
screenshot-directory=3D~~desktop/
</pre>
            <p>The <tt class=3D"docutils literal"><span class=3D"pre">pseud=
o-gui</span></tt> profile exists for compatibility. The options in the
            <tt class=3D"docutils literal"><span class=3D"pre">pseudo-gui</=
span></tt> profile are applied unconditionally. In addition, the profile
            makes sure to enable the pseudo-GUI mode, so that <tt class=3D"=
docutils literal"><span class=3D"pre">--profile=3Dpseudo-gui</span></tt>
            works like in older mpv releases:</p>
            <pre class=3D"literal-block">[pseudo-gui]
player-operation-mode=3Dpseudo-gui
</pre>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Currently, you can extend the <tt class=3D"do=
cutils literal"><span class=3D"pre">pseudo-gui</span></tt> profile in the c=
onfig file the
            normal way. This is deprecated. In future mpv releases, the beh=
avior might
            change, and not apply your additional settings, and/or use a di=
fferent
            profile name.</p>
            </div>
            </div>
            <div class=3D"section" id=3D"linux-desktop-issues">
            <h1>Linux desktop issues</h1>
            <p>This subsection describes common problems on the Linux deskt=
op. None of these
            problems exist on systems like Windows or macOS.</p>
            <div class=3D"section" id=3D"disabling-screensaver">
            <h2>Disabling Screensaver</h2>
            <p>By default, mpv tries to disable the OS screensaver during p=
layback (only if
            a VO using the OS GUI API is active). <tt class=3D"docutils lit=
eral"><span class=3D"pre">--stop-screensaver=3Dno</span></tt> disables this=
.</p>
            <p>A common problem is that Linux desktop environments ignore t=
he standard
            screensaver APIs on which mpv relies. In particular, mpv uses t=
he Screen Saver
            extension (XSS) on X11, and the idle-inhibit protocol on Waylan=
d.</p>
            <p>GNOME in particular still ignores the idle-inhibit protocol,=
 and has its own
            D-Bus interfaces for display power management, which mpv does n=
ot support.</p>
            <p>Before mpv 0.33.0, the X11 backend ran <tt class=3D"docutils=
 literal"><span class=3D"pre">xdg-screensaver</span> reset</tt> in 10 secon=
d
            intervals when not paused in order to support screensaver inhib=
ition in these
            environments. This functionality was removed in 0.33.0, but it =
is possible to
            call the <tt class=3D"docutils literal"><span class=3D"pre">xdg=
-screensaver</span></tt> command line program from a user script instead.</=
p>
            </div>
            </div>
            <div class=3D"section" id=3D"options">
            <h1>OPTIONS</h1>
            <div class=3D"section" id=3D"track-selection">
            <h2>Track Selection</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-alang"><span c=
lass=3D"pre">--alang=3D&lt;languagecode[,languagecode,...]&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-alang" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd><p class=3D"first">Specify a priority list of audio languag=
es to use, as IETF language tags.
            Equivalent ISO 639-1 two-letter and ISO 639-2 three-letter code=
s are treated the same.
            The first tag in the list whose language matches a track in the=
 file will be used.
            A track that matches more subtags will be preferred over one th=
at matches fewer,
            with preference given to earlier subtags over later ones. See a=
lso <tt class=3D"docutils literal"><span class=3D"pre">--aid</span></tt>.</=
p>
            <p>The special value "auto" can be included anywhere in the lis=
t,
            and is equivalent to the user's OS-level list of preferred lang=
uages.</p>
            <p>This is a string list option. See <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-options">List Options</a> =
for details.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal">mpv <span class=3D"pre">dvd:=
//1</span> <span class=3D"pre">--alang=3Dhu,en</span></tt> chooses the Hung=
arian language track
            on a DVD and falls back on English if Hungarian is not availabl=
e.</li>
            <li><tt class=3D"docutils literal">mpv <span class=3D"pre">--al=
ang=3Djpn</span> example.mkv</tt> plays a Matroska file with Japanese
            audio.</li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-slang"><span c=
lass=3D"pre">--slang=3D&lt;languagecode[,languagecode,...]&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-slang" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd><p class=3D"first">Equivalent to <tt class=3D"docutils lite=
ral"><span class=3D"pre">--alang</span></tt>, for subtitle tracks (default:=
 auto).</p>
            <p>This is a string list option. See <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-options">List Options</a> =
for details.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal">mpv <span class=3D"pre">dvd:=
//1</span> <span class=3D"pre">--slang=3Dhu,en</span></tt> chooses the Hung=
arian subtitle track on
            a DVD and falls back on English if Hungarian is not available.<=
/li>
            <li><tt class=3D"docutils literal">mpv <span class=3D"pre">--sl=
ang=3Djpn</span> example.mkv</tt> plays a Matroska file with Japanese
            subtitles.</li>
            <li><tt class=3D"docutils literal">mpv <span class=3D"pre">--sl=
ang=3Dpt-BR</span> example.mkv</tt> plays a Matroska file with Brazilian
            Portuguese subtitles if available, and otherwise any Portuguese=
 subtitles.</li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vlang"><span c=
lass=3D"pre">--vlang=3D&lt;...&gt;</span><a href=3D"https://mpv.io/manual/m=
aster/#options-vlang" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Equivalent to <tt class=3D"docutils lite=
ral"><span class=3D"pre">--alang</span></tt> and <tt class=3D"docutils lite=
ral"><span class=3D"pre">--slang</span></tt>, for video tracks.</p>
            <p class=3D"last">This is a string list option. See <a class=3D=
"reference internal" href=3D"https://mpv.io/manual/master/#list-options">Li=
st Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-aid"><span cla=
ss=3D"pre">--aid=3D&lt;ID|auto|no&gt;</span><a href=3D"https://mpv.io/manua=
l/master/#options-aid" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select audio track. <tt class=3D"docutil=
s literal">auto</tt> selects the default, <tt class=3D"docutils literal">no=
</tt> disables audio.
            See also <tt class=3D"docutils literal"><span class=3D"pre">--a=
lang</span></tt>. mpv normally prints available audio tracks on the
            terminal when starting playback of a file.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">--audio</=
span></tt> is an alias for <tt class=3D"docutils literal"><span class=3D"pr=
e">--aid</span></tt>.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">--aid=3Dn=
o</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre">--audio=
=3Dno</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre">--n=
o-audio</span></tt> disables audio playback.
            (The latter variant does not work with the client API.)</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p>The track selection options (<tt class=3D"docutils literal">=
<span class=3D"pre">--aid</span></tt> but also <tt class=3D"docutils litera=
l"><span class=3D"pre">--sid</span></tt> and the
            others) sometimes expose behavior that may appear strange. Also=
, the
            behavior tends to change around with each mpv release.</p>
            <p>The track selection properties will return the option value =
outside of
            playback (as expected), but during playback, the affective trac=
k
            selection is returned. For example, with <tt class=3D"docutils =
literal"><span class=3D"pre">--aid=3Dauto</span></tt>, the <tt class=3D"doc=
utils literal">aid</tt>
            property will suddenly return <tt class=3D"docutils literal">2<=
/tt> after playback initialization
            (assuming the file has at least 2 audio tracks, and the second =
is the
            default).</p>
            <p>At mpv 0.32.0 (and some releases before), if you passed a tr=
ack value
            for which a corresponding track didn't exist (e.g. <tt class=3D=
"docutils literal"><span class=3D"pre">--aid=3D2</span></tt> and there
            was only 1 audio track), the <tt class=3D"docutils literal">aid=
</tt> property returned <tt class=3D"docutils literal">no</tt>. However if
            another audio track was added during playback, and you tried to=
 set the
            <tt class=3D"docutils literal">aid</tt> property to <tt class=
=3D"docutils literal">2</tt>, nothing happened, because the <tt class=3D"do=
cutils literal">aid</tt> option
            still had the value <tt class=3D"docutils literal">2</tt>, and =
writing the same value has no effect.</p>
            <p>With mpv 0.33.0, the behavior was changed. Now track selecti=
on options
            are reset to <tt class=3D"docutils literal">auto</tt> at playba=
ck initialization, if the option had
            tries to select a track that does not exist. The same is done i=
f the
            track exists, but fails to initialize. The consequence is that =
unlike
            before mpv 0.33.0, the user's track selection parameters are cl=
obbered
            in certain situations.</p>
            <p>Also since mpv 0.33.0, trying to select a track by number wi=
ll strictly
            select this track. Before this change, trying to select a track=
 which
            did not exist would fall back to track default selection at pla=
yback
            initialization. The new behavior is more consistent.</p>
            <p>Setting a track selection property at runtime, and then play=
ing a new
            file might reset the track selection to defaults, if the finger=
print
            of the track list of the new file is different.</p>
            <p>Be aware of tricky combinations of all of all of the above: =
for example,
            <tt class=3D"docutils literal">mpv <span class=3D"pre">--aid=3D=
2</span> file_with_2_audio_tracks.mkv file_with_1_audio_track.mkv</tt>
            would first play the correct track, and the second file without=
 audio.
            If you then go back the first file, its first audio track will =
be played,
            and the second file is played with audio. If you do the same th=
ing again
            but instead of using <tt class=3D"docutils literal"><span class=
=3D"pre">--aid=3D2</span></tt> you run <tt class=3D"docutils literal">set a=
id 2</tt> while the file is
            playing, then changing to the second file will play its audio t=
rack.
            This is because runtime selection enables the fingerprint heuri=
stic.</p>
            <p class=3D"last">Most likely this is not the end.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sid"><span cla=
ss=3D"pre">--sid=3D&lt;ID|auto|no&gt;</span><a href=3D"https://mpv.io/manua=
l/master/#options-sid" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Display the subtitle stream specified by=
 <tt class=3D"docutils literal">&lt;ID&gt;</tt>. <tt class=3D"docutils lite=
ral">auto</tt> selects
            the default, <tt class=3D"docutils literal">no</tt> disables su=
btitles.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">--sub</sp=
an></tt> is an alias for <tt class=3D"docutils literal"><span class=3D"pre"=
>--sid</span></tt>.</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--sid=3Dno</span></tt> or <tt class=3D"docutils literal"><span class=
=3D"pre">--sub=3Dno</span></tt> or <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--no-sub</span></tt> disables subtitle decoding.
            (The latter variant does not work with the client API.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vid"><span cla=
ss=3D"pre">--vid=3D&lt;ID|auto|no&gt;</span><a href=3D"https://mpv.io/manua=
l/master/#options-vid" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select video channel. <tt class=3D"docut=
ils literal">auto</tt> selects the default, <tt class=3D"docutils literal">=
no</tt> disables video.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">--video</=
span></tt> is an alias for <tt class=3D"docutils literal"><span class=3D"pr=
e">--vid</span></tt>.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">--vid=3Dn=
o</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre">--video=
=3Dno</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre">--n=
o-video</span></tt> disables video playback.
            (The latter variant does not work with the client API.)</p>
            <p class=3D"last">If video is disabled, mpv will try to downloa=
d the audio only if media is
            streamed with youtube-dl, because it saves bandwidth. This is d=
one by
            setting the ytdl_format to "bestaudio/best" in the ytdl_hook.lu=
a script.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-edition"><span=
 class=3D"pre">--edition=3D&lt;ID|auto&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-edition" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>(Matroska files only)
            Specify the edition (set of chapters) to use, where 0 is the fi=
rst. If set
            to <tt class=3D"docutils literal">auto</tt> (the default), mpv =
will choose the first edition declared as a
            default, or if there is no default, the first edition defined.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"options-track-auto-sel=
ection"><span class=3D"pre">--track-auto-selection=3D&lt;yes|no&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-track-auto-selection" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enable the default track auto-selection =
(default: yes). Enabling this will
            make the player select streams according to <tt class=3D"docuti=
ls literal"><span class=3D"pre">--aid</span></tt>, <tt class=3D"docutils li=
teral"><span class=3D"pre">--alang</span></tt>, and
            others. If it is disabled, no tracks are selected. In addition,=
 the player
            will not exit if no tracks are selected, and wait instead (this=
 wait mode
            is similar to pausing, but the pause option is not set).</p>
            <p class=3D"last">This is useful with <tt class=3D"docutils lit=
eral"><span class=3D"pre">--lavfi-complex</span></tt>: you can start playba=
ck in this
            mode, and then set select tracks at runtime by setting the filt=
er graph.
            Note that if <tt class=3D"docutils literal"><span class=3D"pre"=
>--lavfi-complex</span></tt> is set before playback is started, the
            referenced tracks are always selected.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-subs-with-matc=
hing-audio"><span class=3D"pre">--subs-with-matching-audio=3D&lt;yes|no&gt;=
</span><a href=3D"https://mpv.io/manual/master/#options-subs-with-matching-=
audio" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>When autoselecting a subtitle track, select a full/non-forc=
ed one even if the selected
            audio stream matches your preferred subtitle language (default:=
 no).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-subs-fallback"=
><span class=3D"pre">--subs-fallback=3D&lt;yes|default|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-subs-fallback" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>When autoselecting a subtitle track, if no tracks match you=
r preferred languages,
            select a full track even if it doesn't match your preferred sub=
title language (default: no).
            Setting this to <cite>default</cite> means that only streams fl=
agged as <cite>default</cite> will be selected.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-subs-fallback-=
forced"><span class=3D"pre">--subs-fallback-forced=3D&lt;yes|no&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-subs-fallback-forced" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>When autoselecting a subtitle track, if no tracks match you=
r preferred languages,
            select a forced track that matches the language of the selected=
 audio track (default: yes).</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"playback-control">
            <h2>Playback Control</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D&lt;relative</span> time&gt;<a href=3D"https://mpv.i=
o/manual/master/#options-start" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Seek to given time position.</p>
            <p>The general format for times is <tt class=3D"docutils litera=
l"><span class=3D"pre">[+|-][[hh:]mm:]ss[.ms]</span></tt>. If the time is
            prefixed with <tt class=3D"docutils literal">-</tt>, the time i=
s considered relative from the end of the
            file (as signaled by the demuxer/the file). A <tt class=3D"docu=
tils literal">+</tt> is usually ignored (but
            see below).</p>
            <p>The following alternative time specifications are recognized=
:</p>
            <p><tt class=3D"docutils literal">pp%</tt> seeks to percent pos=
ition pp (0-100).</p>
            <p><tt class=3D"docutils literal">#c</tt> seeks to chapter numb=
er c. (Chapters start from 1.)</p>
            <p><tt class=3D"docutils literal">none</tt> resets any previous=
ly set option (useful for libmpv).</p>
            <p>If <tt class=3D"docutils literal"><span class=3D"pre">--reba=
se-start-time=3Dno</span></tt> is given, then prefixing times with <tt clas=
s=3D"docutils literal">+</tt>
            makes the time relative to the start of the file. A timestamp w=
ithout
            prefix is considered an absolute time, i.e. should seek to a fr=
ame with a
            timestamp as the file contains it. As a bug, but also a hidden =
feature,
            putting 1 or more spaces before the <tt class=3D"docutils liter=
al">+</tt> or <tt class=3D"docutils literal">-</tt> always interprets the
            time as absolute, which can be used to seek to negative timesta=
mps (useful
            for debugging at most).</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D+56</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-start" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils =
literal" id=3D"options-start"><span class=3D"pre">--start=3D00:56</span><a =
href=3D"https://mpv.io/manual/master/#options-start" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Seeks to the start time + 56 seconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D-56</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-start" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils =
literal" id=3D"options-start"><span class=3D"pre">--start=3D-00:56</span><a=
 href=3D"https://mpv.io/manual/master/#options-start" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Seeks to the end time - 56 seconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D01:10:00</span><a href=3D"https://mpv.io/manual/mast=
er/#options-start" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Seeks to 1 hour 10 min.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D50%</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-start" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Seeks to the middle of the file.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D30</span> <span class=3D"pre">--end=3D40</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-start" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Seeks to 30 seconds, plays 10 seconds, and exits.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D-3:20</span> <span class=3D"pre">--length=3D10</span=
><a href=3D"https://mpv.io/manual/master/#options-start" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Seeks to 3 minutes and 20 seconds before the end of the fil=
e, plays
            10 seconds, and exits.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-start"><span c=
lass=3D"pre">--start=3D'#2'</span> <span class=3D"pre">--end=3D'#4'</span><=
a href=3D"https://mpv.io/manual/master/#options-start" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Plays chapters 2 and 3, and exits.</dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-end"><span cla=
ss=3D"pre">--end=3D&lt;relative</span> time&gt;<a href=3D"https://mpv.io/ma=
nual/master/#options-end" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Stop at given time. Use <tt class=3D"docutils literal"><spa=
n class=3D"pre">--length</span></tt> if the time should be relative
            to <tt class=3D"docutils literal"><span class=3D"pre">--start</=
span></tt>. See <tt class=3D"docutils literal"><span class=3D"pre">--start<=
/span></tt> for valid option values and examples.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-length"><span =
class=3D"pre">--length=3D&lt;relative</span> time&gt;<a href=3D"https://mpv=
.io/manual/master/#options-length" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Stop after a given time relative to the =
start time.
            See <tt class=3D"docutils literal"><span class=3D"pre">--start<=
/span></tt> for valid option values and examples.</p>
            <p>If both <tt class=3D"docutils literal"><span class=3D"pre">-=
-end</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--l=
ength</span></tt> are provided, playback will stop when it
            reaches either of the two endpoints.</p>
            <p class=3D"last">Obscurity note: this does not work correctly =
if <tt class=3D"docutils literal"><span class=3D"pre">--rebase-start-time=
=3Dno</span></tt>,
            and the specified time is not an "absolute" time, as defined in=
 the
            <tt class=3D"docutils literal"><span class=3D"pre">--start</spa=
n></tt> option description.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-rebase-start-t=
ime"><span class=3D"pre">--rebase-start-time=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-rebase-start-time" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>Whether to move the file start time to <tt class=3D"docutil=
s literal">00:00:00</tt> (default: yes). This
            is less awkward for files which start at a random timestamp, su=
ch as
            transport streams. On the other hand, if there are timestamp re=
sets, the
            resulting behavior can be rather weird. For this reason, and in=
 case you
            are actually interested in the real timestamps, this behavior c=
an be
            disabled with <tt class=3D"docutils literal">no</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-speed"><span c=
lass=3D"pre">--speed=3D&lt;0.01-100&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-speed" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Slow down or speed up playback by the fa=
ctor given as parameter.</p>
            <p class=3D"last">If <tt class=3D"docutils literal"><span class=
=3D"pre">--audio-pitch-correction</span></tt> (on by default) is used, play=
ing with a
            speed higher than normal automatically inserts the <tt class=3D=
"docutils literal">scaletempo2</tt> audio
            filter.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-pause"><span c=
lass=3D"pre">--pause</span><a href=3D"https://mpv.io/manual/master/#options=
-pause" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Start the player in paused state.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-shuffle"><span=
 class=3D"pre">--shuffle</span><a href=3D"https://mpv.io/manual/master/#opt=
ions-shuffle" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Play files in random order.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-playlist-start=
"><span class=3D"pre">--playlist-start=3D&lt;auto|index&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-playlist-start" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set which file on the internal playlist =
to start playback with. The index
            is an integer, with 0 meaning the first file. The value <tt cla=
ss=3D"docutils literal">auto</tt> means that
            the selection of the entry to play is left to the playback resu=
me mechanism
            (default). If an entry with the given index doesn't exist, the =
behavior is
            unspecified and might change in future mpv versions. The same a=
pplies if
            the playlist contains further playlists (don't expect any reaso=
nable
            behavior). Passing a playlist file to mpv should work with this=
 option,
            though. E.g. <tt class=3D"docutils literal">mpv playlist.m3u <s=
pan class=3D"pre">--playlist-start=3D123</span></tt> will work as expected,
            as long as <tt class=3D"docutils literal">playlist.m3u</tt> doe=
s not link to further playlists.</p>
            <p class=3D"last">The value <tt class=3D"docutils literal">no</=
tt> is a deprecated alias for <tt class=3D"docutils literal">auto</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-playlist"><spa=
n class=3D"pre">--playlist=3D&lt;filename&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-playlist" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Play files according to a playlist file.=
 Supports some common formats. If
            no format is detected, it will be treated as list of files, sep=
arated by
            newline characters. You may need this option to load plaintext =
files as
            a playlist. Note that XML playlist formats are not supported.</=
p>
            <p>This option forces <tt class=3D"docutils literal"><span clas=
s=3D"pre">--demuxer=3Dplaylist</span></tt> to interpret the playlist file.
            Some playlist formats, notably CUE and optical disc formats, ne=
ed to use
            different demuxers and will not work with this option. They sti=
ll can be
            played directly, without using this option.</p>
            <p>You can play playlists directly, without this option. Before=
 mpv version
            0.31.0, this option disabled any security mechanisms that might=
 be in
            place, but since 0.31.0 it uses the same security mechanisms as=
 playing a
            playlist file directly. If you trust the playlist file, you can=
 disable
            any security checks with <tt class=3D"docutils literal"><span c=
lass=3D"pre">--load-unsafe-playlists</span></tt>. Because playlists
            can load other playlist entries, consider applying this option =
only to the
            playlist itself and not its entries, using something along thes=
e lines:</p>
            <blockquote>
            <tt class=3D"docutils literal">mpv <span class=3D"pre">--{</spa=
n> <span class=3D"pre">--playlist=3Dfilename</span> <span class=3D"pre">--l=
oad-unsafe-playlists</span> <span class=3D"pre">--}</span></tt></blockquote=
>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p>The way older versions of mpv played playlist files via <tt =
class=3D"docutils literal"><span class=3D"pre">--playlist</span></tt>
            was not safe against maliciously constructed files. Such files =
may
            trigger harmful actions. This has been the case for all version=
s of
            mpv prior to 0.31.0, and all MPlayer versions, but unfortunatel=
y this
            fact was not well documented earlier, and some people have even
            misguidedly recommended the use of <tt class=3D"docutils litera=
l"><span class=3D"pre">--playlist</span></tt> with untrusted
            sources. Do NOT use <tt class=3D"docutils literal"><span class=
=3D"pre">--playlist</span></tt> with random internet sources or
            files you do not trust if you are not sure your mpv is at least=
 0.31.0.</p>
            <p class=3D"last">In particular, playlists can contain entries =
using protocols other than
            local files, such as special protocols like <tt class=3D"docuti=
ls literal"><span class=3D"pre">avdevice://</span></tt> (which are
            inherently unsafe).</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-chapter-merge-=
threshold"><span class=3D"pre">--chapter-merge-threshold=3D&lt;number&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-chapter-merge-thresho=
ld" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Threshold for merging almost consecutive ordered chapter pa=
rts in
            milliseconds (default: 100). Some Matroska files with ordered c=
hapters
            have inaccurate chapter end timestamps, causing a small gap bet=
ween the
            end of one chapter and the start of the next one when they shou=
ld match.
            If the end of one playback part is less than the given threshol=
d away from
            the start of the next one then keep playing video normally over=
 the
            chapter change instead of doing a seek.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-chapter-seek-t=
hreshold"><span class=3D"pre">--chapter-seek-threshold=3D&lt;seconds&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-chapter-seek-threshold=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Distance in seconds from the beginning of a chapter within =
which a backward
            chapter seek will go to the previous chapter (default: 5.0). Pa=
st this
            threshold, a backward chapter seek will go to the beginning of =
the current
            chapter instead. A negative value means always go back to the p=
revious
            chapter.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hr-seek"><span=
 class=3D"pre">--hr-seek=3D&lt;no|absolute|yes|default&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-hr-seek" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Select when to use precise seeks that ar=
e not limited to keyframes. Such
            seeks require decoding video from the previous keyframe up to t=
he target
            position and so can take some time depending on decoding perfor=
mance. For
            some video formats, precise seeks are disabled. This option sel=
ects the
            default choice to use for seeks; it is possible to explicitly o=
verride that
            default in the definition of key bindings and in input commands=
.</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Never use precise seeks.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">absolute:</th><td =
class=3D"field-body">Use precise seeks if the seek is to an absolute positi=
on in the
            file, such as a chapter seek, but not for relative seeks like
            the default behavior of arrow keys.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">default:</th><td c=
lass=3D"field-body">Like <tt class=3D"docutils literal">absolute</tt>, but =
enable hr-seeks in audio-only cases. The
            exact behavior is implementation specific and may change with
            new releases (default).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">Use precise seeks whenever possible.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">always:</th><td cl=
ass=3D"field-body">Same as <tt class=3D"docutils literal">yes</tt> (for com=
patibility).</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hr-seek-demuxe=
r-offset"><span class=3D"pre">--hr-seek-demuxer-offset=3D&lt;seconds&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-hr-seek-demuxer-offset=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>This option exists to work around failures to do precise se=
eks (as in
            <tt class=3D"docutils literal"><span class=3D"pre">--hr-seek</s=
pan></tt>) caused by bugs or limitations in the demuxers for some file
            formats. Some demuxers fail to seek to a keyframe before the gi=
ven target
            position, going to a later position instead. The value of this =
option is
            subtracted from the time stamp given to the demuxer. Thus, if y=
ou set this
            option to 1.5 and try to do a precise seek to 60 seconds, the d=
emuxer is
            told to seek to time 58.5, which hopefully reduces the chance t=
hat it
            erroneously goes to some time later than 60 seconds. The downsi=
de of
            setting this option is that precise seeks become slower, as vid=
eo between
            the earlier demuxer position and the real target may be unneces=
sarily
            decoded.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hr-seek-framed=
rop"><span class=3D"pre">--hr-seek-framedrop=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-hr-seek-framedrop" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Allow the video decoder to drop frames d=
uring seek, if these frames are
            before the seek target. If this is enabled, precise seeking can=
 be faster,
            but if you're using video filters which modify timestamps or ad=
d new
            frames, it can lead to precise seeking skipping the target fram=
e. This
            e.g. can break frame backstepping when deinterlacing is enabled=
.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">yes</=
tt></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-index"><span c=
lass=3D"pre">--index=3D&lt;mode&gt;</span><a href=3D"https://mpv.io/manual/=
master/#options-index" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Controls how to seek in files. Note that=
 if the index is missing from a
            file, it will be built on the fly by default, so you don't need=
 to change
            this. But it might help with some broken files.</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">default:</th><td c=
lass=3D"field-body">use an index if the file has one, or build it if missin=
g</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">recreate:</th><td =
class=3D"field-body">don't read or use the file's index</td>
            </tr>
            </tbody>
            </table>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This option only works if the underlying medi=
a supports seeking
            (i.e. not with stdin, pipe, etc).</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-load-unsafe-pl=
aylists"><span class=3D"pre">--load-unsafe-playlists</span><a href=3D"https=
://mpv.io/manual/master/#options-load-unsafe-playlists" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load URLs from playlists which are consi=
dered unsafe (default: no). This
            includes special protocols and anything that doesn't refer to n=
ormal files.
            Local files and HTTP links on the other hand are always conside=
red safe.</p>
            <p class=3D"last">In addition, if a playlist is loaded while th=
is is set, the added playlist
            entries are not marked as originating from network or potential=
ly unsafe
            location. (Instead, the behavior is as if the playlist entries =
were provided
            directly to mpv command line or <tt class=3D"docutils literal">=
loadfile</tt> command.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-access-referen=
ces"><span class=3D"pre">--access-references=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-access-references" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Follow any references in the file being =
opened (default: yes). Disabling
            this is helpful if the file is automatically scanned (e.g. thum=
bnail
            generation). If the thumbnail scanner for example encounters a =
playlist
            file, which contains network URLs, and the scanner should not o=
pen these,
            enabling this option will prevent it. This option also disables=
 ordered
            chapters, mov reference files, opening of archives, and a numbe=
r of other
            features.</p>
            <p>On older FFmpeg versions, this will not work in some cases. =
Some FFmpeg
            demuxers might not respect this option.</p>
            <p>This option does not prevent opening of paired subtitle file=
s and such. Use
            <tt class=3D"docutils literal"><span class=3D"pre">--autoload-f=
iles=3Dno</span></tt> to prevent this.</p>
            <p class=3D"last">This option does not always work if you open =
non-files (for example using
            <tt class=3D"docutils literal"><span class=3D"pre">dvd://direct=
ory</span></tt> would open a whole bunch of files in the given
            directory). Prefixing the filename with <tt class=3D"docutils l=
iteral">./</tt> if it doesn't start with
            a <tt class=3D"docutils literal">/</tt> will avoid this.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-loop-playlist"=
><span class=3D"pre">--loop-playlist=3D&lt;N|inf|force|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-loop-playlist" class=3D"anchor fa=
 fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-loop-play=
list"><span class=3D"pre">--loop-playlist</span><a href=3D"https://mpv.io/m=
anual/master/#options-loop-playlist" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd><p class=3D"first">Loops playback <tt class=3D"docutils lit=
eral">N</tt> times. A value of <tt class=3D"docutils literal">1</tt> plays =
it one time (default),
            <tt class=3D"docutils literal">2</tt> two times, etc. <tt class=
=3D"docutils literal">inf</tt> means forever. <tt class=3D"docutils literal=
">no</tt> is the same as <tt class=3D"docutils literal">1</tt> and
            disables looping. If several files are specified on command lin=
e, the
            entire playlist is looped. <tt class=3D"docutils literal"><span=
 class=3D"pre">--loop-playlist</span></tt> is the same as
            <tt class=3D"docutils literal"><span class=3D"pre">--loop-playl=
ist=3Dinf</span></tt>.</p>
            <p class=3D"last">The <tt class=3D"docutils literal">force</tt>=
 mode is like <tt class=3D"docutils literal">inf</tt>, but does not skip pl=
aylist entries
            which have been marked as failing. This means the player might =
waste CPU
            time trying to loop a file that doesn't exist. But it might be =
useful for
            playing webradios under very bad network conditions.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-loop-file"><sp=
an class=3D"pre">--loop-file=3D&lt;N|inf|no&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-loop-file" class=3D"anchor fa fa-link"></a></tt=
>, <tt class=3D"docutils literal" id=3D"options-loop"><span class=3D"pre">-=
-loop=3D&lt;N|inf|no&gt;</span><a href=3D"https://mpv.io/manual/master/#opt=
ions-loop" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Loop a single file N times. <tt class=3D=
"docutils literal">inf</tt> means forever, <tt class=3D"docutils literal">n=
o</tt> means normal
            playback. For compatibility, <tt class=3D"docutils literal"><sp=
an class=3D"pre">--loop-file</span></tt> and <tt class=3D"docutils literal"=
><span class=3D"pre">--loop-file=3Dyes</span></tt> are
            also accepted, and are the same as <tt class=3D"docutils litera=
l"><span class=3D"pre">--loop-file=3Dinf</span></tt>.</p>
            <p>The difference to <tt class=3D"docutils literal"><span class=
=3D"pre">--loop-playlist</span></tt> is that this doesn't loop the playlist=
,
            just the file itself. If the playlist contains only a single fi=
le, the
            difference between the two option is that this option performs =
a seek on
            loop, instead of reloading the file.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--loop-file</span></tt> counts the number of times it causes the play=
er to
            seek to the beginning of the file, not the number of full playt=
hroughs. This
            means <tt class=3D"docutils literal"><span class=3D"pre">--loop=
-file=3D1</span></tt> will end up playing the file twice. Contrast with
            <tt class=3D"docutils literal"><span class=3D"pre">--loop-playl=
ist</span></tt>, which counts the number of full playthroughs.</p>
            </div>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--loop</span></tt> is an alias for this option.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ab-loop-a"><sp=
an class=3D"pre">--ab-loop-a=3D&lt;time&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-ab-loop-a" class=3D"anchor fa fa-link"></a></tt>, <=
tt class=3D"docutils literal" id=3D"options-ab-loop-b"><span class=3D"pre">=
--ab-loop-b=3D&lt;time&gt;</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-ab-loop-b" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set loop points. If playback passes the =
<tt class=3D"docutils literal">b</tt> timestamp, it will seek to
            the <tt class=3D"docutils literal">a</tt> timestamp. Seeking pa=
st the <tt class=3D"docutils literal">b</tt> point doesn't loop (this is
            intentional).</p>
            <p>If <tt class=3D"docutils literal">a</tt> is after <tt class=
=3D"docutils literal">b</tt>, the behavior is as if the points were given i=
n
            the right order, and the player will seek to <tt class=3D"docut=
ils literal">b</tt> after crossing through
            <tt class=3D"docutils literal">a</tt>. This is different from o=
ld behavior, where looping was disabled (and
            as a bug, looped back to <tt class=3D"docutils literal">a</tt> =
on the end of the file).</p>
            <p>If either options are set to <tt class=3D"docutils literal">=
no</tt> (or unset), looping is disabled. This
            is different from old behavior, where an unset <tt class=3D"doc=
utils literal">a</tt> implied the start of
            the file, and an unset <tt class=3D"docutils literal">b</tt> th=
e end of the file.</p>
            <p class=3D"last">The loop-points can be adjusted at runtime wi=
th the corresponding
            properties. See also <tt class=3D"docutils literal"><span class=
=3D"pre">ab-loop</span></tt> command.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ab-loop-count"=
><span class=3D"pre">--ab-loop-count=3D&lt;N|inf&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-ab-loop-count" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Run A-B loops only N times, then ignore the A-B loop points=
 (default: inf).
            Every finished loop iteration will decrement this option by 1 (=
unless it is
            set to <tt class=3D"docutils literal">inf</tt> or 0). <tt class=
=3D"docutils literal">inf</tt> means that looping goes on forever. If this
            option is set to 0, A-B looping is ignored, and even the <tt cl=
ass=3D"docutils literal"><span class=3D"pre">ab-loop</span></tt> command
            will not enable looping again (the command will show <tt class=
=3D"docutils literal">(disabled)</tt> on the
            OSD message if both loop points are set, but <tt class=3D"docut=
ils literal"><span class=3D"pre">ab-loop-count</span></tt> is 0).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ordered-chapte=
rs"><span class=3D"pre">--ordered-chapters</span><a href=3D"https://mpv.io/=
manual/master/#options-ordered-chapters" class=3D"anchor fa fa-link"></a></=
tt>, <tt class=3D"docutils literal" id=3D"options-no-ordered-chapters"><spa=
n class=3D"pre">--no-ordered-chapters</span><a href=3D"https://mpv.io/manua=
l/master/#options-no-ordered-chapters" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>Enabled by default.
            Disable support for Matroska ordered chapters. mpv will not loa=
d or
            search for video segments from other files, and will also ignor=
e any
            chapter order specified for the main file.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ordered-chapte=
rs-files"><span class=3D"pre">--ordered-chapters-files=3D&lt;playlist-file&=
gt;</span><a href=3D"https://mpv.io/manual/master/#options-ordered-chapters=
-files" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Loads the given file as playlist, and tr=
ies to use the files contained in
            it as reference files when opening a Matroska file that uses or=
dered
            chapters. This overrides the normal mechanism for loading refer=
enced
            files by scanning the same directory the main file is located i=
n.</p>
            <p>Useful for loading ordered chapter files that are not locate=
d on the local
            filesystem, or if the referenced files are in different directo=
ries.</p>
            <p class=3D"last">Note: a playlist can be as simple as a text f=
ile containing filenames
            separated by newlines.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-chapters-file"=
><span class=3D"pre">--chapters-file=3D&lt;filename&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-chapters-file" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd><p class=3D"first">Load chapters from this file, instead of=
 using the chapter metadata found
            in the main file.</p>
            <p class=3D"last">This accepts a media file (like mkv) or even =
a pseudo-format like ffmetadata
            and uses its chapters to replace the current file's chapters. T=
his doesn't
            work with OGM or XML chapters directly.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sstep"><span c=
lass=3D"pre">--sstep=3D&lt;sec&gt;</span><a href=3D"https://mpv.io/manual/m=
aster/#options-sstep" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Skip &lt;sec&gt; seconds after every fra=
me.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Without <tt class=3D"docutils literal"><span =
class=3D"pre">--hr-seek</span></tt>, skipping will snap to keyframes.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stop-playback-=
on-init-failure"><span class=3D"pre">--stop-playback-on-init-failure=3D&lt;=
yes|no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-stop-play=
back-on-init-failure" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Stop playback if either audio or video fails to initialize =
(default: no).
            With <tt class=3D"docutils literal">no</tt>, playback will cont=
inue in video-only or audio-only mode if one
            of them fails. This doesn't affect playback of audio-only or vi=
deo-only
            files.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-play-dir"><spa=
n class=3D"pre">--play-dir=3D&lt;forward|+|backward|-&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-play-dir" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Control the playback direction (default:=
 forward). Setting <tt class=3D"docutils literal">backward</tt>
            will attempt to play the file in reverse direction, with decrea=
sing
            playback time. If this is set on playback starts, playback will=
 start from
            the end of the file. If this is changed at during playback, a h=
r-seek will
            be issued to change the direction.</p>
            <p><tt class=3D"docutils literal">+</tt> and <tt class=3D"docut=
ils literal">-</tt> are aliases for <tt class=3D"docutils literal">forward<=
/tt> and <tt class=3D"docutils literal">backward</tt>.</p>
            <p>The rest of this option description pertains to the <tt clas=
s=3D"docutils literal">backward</tt> mode.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Backward playback is extremely fragile. It ma=
y not always work, is much
            slower than forward playback, and breaks certain other features=
. How
            well it works depends mainly on the file being played. Generall=
y, it
            will show good results (or results at all) only if the stars al=
ign.</p>
            </div>
            <p>mpv, as well as most media formats, were designed for forwar=
d playback
            only. Backward playback is bolted on top of mpv, and tries to m=
ake a medium
            effort to make backward playback work. Depending on your use-ca=
se, another
            tool may work much better.</p>
            <p>Backward playback is not exactly a 1st class feature. Implem=
entation
            tradeoffs were made, that are bad for backward playback, but in=
 turn do not
            cause disadvantages for normal playback. Various possible optim=
izations are
            not implemented in order to keep the complexity down. Normally,=
 a media
            player is highly pipelined (future data is prepared in separate=
 threads, so
            it is available in realtime when the next stage needs it), but =
backward
            playback will essentially stall the pipeline at various random =
points.</p>
            <p>For example, for intra-only codecs are trivially backward pl=
ayable, and
            tools built around them may make efficient use of them (conside=
r video
            editors or camera viewers). mpv won't be efficient in this case=
, because it
            uses its generic backward playback algorithm, that on top of it=
 is not very
            optimized.</p>
            <p>If you just want to quickly go backward through the video an=
d just show
            "keyframes", just use forward playback, and hold down the left =
cursor key
            (which on CLI with default config sends many small relative see=
k commands).</p>
            <p>The implementation consists of mostly 3 parts:</p>
            <ul class=3D"simple">
            <li>Backward demuxing. This relies on the demuxer cache, so the=
 demuxer cache
            should (or must, didn't test it) be enabled, and its size will =
affect
            performance. If the cache is too small or too large, quadratic =
runtime
            behavior may result.</li>
            <li>Backward decoding. The decoder library used (libavcodec) do=
es not support
            this. It is emulated by feeding bits of data in forward, puttin=
g the
            result in a queue, returning the queue data to the VO in revers=
e, and
            then starting over at an earlier position. This can require buf=
fering an
            extreme amount of decoded data, and also completely breaks pipe=
lining.</li>
            <li>Backward output. This is relatively simple, because the dec=
oder returns
            the frames in the needed order. However, this may cause various=
 problems
            because filters see audio and video going backward.</li>
            </ul>
            <p>Known problems:</p>
            <ul class=3D"simple">
            <li>It's fragile. If anything doesn't work, random non-useful b=
ehavior may
            occur. In simple cases, the player will just play nonsense and =
artifacts.
            In other cases, it may get stuck or heat the CPU. (Exceeding me=
mory usage
            significantly beyond the user-set limits would be a bug, though=
.)</li>
            <li>Performance and resource usage isn't good. In part this is =
inherent to
            backward playback of normal media formats, and in parts due to
            implementation choices and tradeoffs.</li>
            <li>This is extremely reliant on good demuxer behavior. Althoug=
h backward
            demuxing requires no special demuxer support, it is required th=
at the
            demuxer performs seeks reliably, fulfills some specific require=
ments
            about packet metadata, and has deterministic behavior.</li>
            <li>Starting playback exactly from the end may or may not work,=
 depending on
            seeking behavior and file duration detection.</li>
            <li>Some container formats, audio, and video codecs are not sup=
ported due to
            their behavior. There is no list, and the player usually does n=
ot detect
            them. Certain live streams (including TV captures) may exhibit =
problems
            in particular, as well as some lossy audio codecs. h264 intra-r=
efresh is
            known not to work due to problems with libavcodec. WAV and some=
 other raw
            audio formats tend to have problems - there are hacks for deali=
ng with
            them, which may or may not work.</li>
            <li>Backward demuxing of subtitles is not supported. Subtitle d=
isplay still
            works for some external text subtitle formats. (These are fully=
 read into
            memory, and only backward display is needed.) Text subtitles th=
at are
            cached in the subtitle renderer also have a chance to be displa=
yed
            correctly.</li>
            <li>Some features dealing with playback of broken or hard to de=
al with files
            will not work fully (such as timestamp correction).</li>
            <li>If demuxer low level seeks (i.e. seeking the actual demuxer=
 instead of
            just within the demuxer cache) are performed by backward playba=
ck, the
            created seek ranges may not join, because not enough overlap is=
 achieved.</li>
            <li>Trying to use this with hardware video decoding will probab=
ly exhaust all
            your GPU memory and then crash a thing or two. Or it will fail =
because
            <tt class=3D"docutils literal"><span class=3D"pre">--hwdec-extr=
a-frames</span></tt> will certainly be set too low.</li>
            <li>Stream recording is broken. <tt class=3D"docutils literal">=
<span class=3D"pre">--stream-record</span></tt> may keep working if you
            backward play within a cached region only.</li>
            <li>Relative seeks may behave weird. Small seeks backward (towa=
rds smaller
            time, i.e. <tt class=3D"docutils literal">seek <span class=3D"p=
re">-1</span></tt>) may not really seek properly, and audio will
            remain muted for a while. Using hr-seek is recommended, which s=
hould have
            none of these problems.</li>
            <li>Some things are just weird. For example, while seek command=
s manipulate
            playback time in the expected way (provided they work correctly=
), the
            framestep commands are transposed. Backstepping will perform ve=
ry
            expensive work to step forward by 1 frame.</li>
            </ul>
            <p>Tuning:</p>
            <ul class=3D"last simple">
            <li>Remove all <tt class=3D"docutils literal"><span class=3D"pr=
e">--vf</span></tt>/<tt class=3D"docutils literal"><span class=3D"pre">--af=
</span></tt> filters you have set. Disable hardware
            decoding. Disable idiotic nonsense like SPDIF passthrough.</li>
            <li>Increasing <tt class=3D"docutils literal"><span class=3D"pr=
e">--video-reversal-buffer</span></tt> might help if reversal queue
            overflow is reported, which may happen in high bitrate video, o=
r video
            with large GOP. Hardware decoding mostly ignores this, and you =
need to
            increase <tt class=3D"docutils literal"><span class=3D"pre">--h=
wdec-extra-frames</span></tt> instead (until you get playback without
            logged errors).</li>
            <li>The demuxer cache is essential for backward demuxing. Make =
sure to set
            <tt class=3D"docutils literal"><span class=3D"pre">--cache=3Dye=
s</span></tt>. The cache size might matter. If it's too small, a queue
            overflow will be logged, and backward playback cannot continue,=
 or it
            performs too many low level seeks. If it's too large, implement=
ation
            tradeoffs may cause general performance issues. Use
            <tt class=3D"docutils literal"><span class=3D"pre">--demuxer-ma=
x-bytes</span></tt> to potentially increase the amount of packets the
            demuxer layer can queue for reverse demuxing (basically it's th=
e
            <tt class=3D"docutils literal"><span class=3D"pre">--video-reve=
rsal-buffer</span></tt> equivalent for the demuxer layer).</li>
            <li>Setting <tt class=3D"docutils literal"><span class=3D"pre">=
--vd-queue-enable=3Dyes</span></tt> can help a lot to make playback smooth
            (once it works).</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--demuxe=
r-backward-playback-step</span></tt> also factors into how many seeks may
            be performed, and whether backward demuxing could break due to =
queue
            overflow. If it's set too high, the backstep operation needs to=
 search
            through more packets all the time, even if the cache is large e=
nough.</li>
            <li>Setting <tt class=3D"docutils literal"><span class=3D"pre">=
--demuxer-cache-wait</span></tt> may be useful to cache the entire file
            into the demuxer cache. Set <tt class=3D"docutils literal"><spa=
n class=3D"pre">--demuxer-max-bytes</span></tt> to a large size to
            make sure it can read the entire cache; <tt class=3D"docutils l=
iteral"><span class=3D"pre">--demuxer-max-back-bytes</span></tt>
            should also be set to a large size to prevent that tries to tri=
m the
            cache.</li>
            <li>If audio artifacts are audible, even though the AO does not=
 underrun,
            increasing <tt class=3D"docutils literal"><span class=3D"pre">-=
-audio-backward-overlap</span></tt> might help in some cases.</li>
            </ul>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-reversal=
-buffer"><span class=3D"pre">--video-reversal-buffer=3D&lt;bytesize&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-video-reversal-buffer" =
class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D=
"options-audio-reversal-buffer"><span class=3D"pre">--audio-reversal-buffer=
=3D&lt;bytesize&gt;</span><a href=3D"https://mpv.io/manual/master/#options-=
audio-reversal-buffer" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">For backward decoding. Backward decoding=
 decodes forward in steps, and then
            reverses the decoder output. These options control the approxim=
ate maximum
            amount of bytes that can be buffered. The main use of this is t=
o avoid
            unbounded resource usage; during normal backward playback, it's=
 not supposed
            to hit the limit, and if it does, it will drop frames and compl=
ain about it.</p>
            <p>Use this option if you get reversal queue overflow errors du=
ring backward
            playback. Increase the size until the warning disappears. Usual=
ly, the video
            buffer will overflow first, especially if it's high resolution =
video.</p>
            <p>This does not work correctly if video hardware decoding is u=
sed. The video
            frame size will not include the referenced GPU and driver memor=
y. Some
            hardware decoders may also be limited by <tt class=3D"docutils =
literal"><span class=3D"pre">--hwdec-extra-frames</span></tt>.</p>
            <p>How large the queue size needs to be depends entirely on the=
 way the media
            was encoded. Audio typically requires a very small buffer, whil=
e video can
            require excessively large buffers.</p>
            <p>(Technically, this allows the last frame to exceed the limit=
. Also, this
            does not account for other buffered frames, such as inside the =
decoder or
            the video output.)</p>
            <p>This does not affect demuxer cache behavior at all.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--list-options</span></tt> for defaults and value range. <tt clas=
s=3D"docutils literal">&lt;bytesize&gt;</tt> options
            accept suffixes such as <tt class=3D"docutils literal">KiB</tt>=
 and <tt class=3D"docutils literal">MiB</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-backward=
-overlap"><span class=3D"pre">--video-backward-overlap=3D&lt;auto|number&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-video-backward-ove=
rlap" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal"=
 id=3D"options-audio-backward-overlap"><span class=3D"pre">--audio-backward=
-overlap=3D&lt;auto|number&gt;</span><a href=3D"https://mpv.io/manual/maste=
r/#options-audio-backward-overlap" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Number of overlapping keyframe ranges to=
 use for backward decoding (default:
            auto) ("keyframe" to be understood as in the mpv/ffmpeg specifi=
c meaning).
            Backward decoding works by forward decoding in small steps. Som=
e codecs
            cannot restart decoding from any packet (even if it's marked as=
 seek point),
            which becomes noticeable with backward decoding (in theory this=
 is a problem
            with seeking too, but <tt class=3D"docutils literal"><span clas=
s=3D"pre">--hr-seek-demuxer-offset</span></tt> can fix it for seeking).
            In particular, MDCT based audio codecs are affected.</p>
            <p>The solution is to feed a previous packet to the decoder eac=
h time, and then
            discard the output. This option controls how many packets to fe=
ed. The
            <tt class=3D"docutils literal">auto</tt> choice is currently ha=
rdcoded to 0 for video, and uses 1 for lossy
            audio, 0 for lossless audio. For some specific lossy audio code=
cs, this is
            set to 2.</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--video-backward-overlap</span></tt> can potentially handle intra-ref=
resh video,
            depending on the exact conditions. You may have to use the
            <tt class=3D"docutils literal"><span class=3D"pre">--vd-lavc-sh=
ow-all</span></tt> option as well.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-backward=
-batch"><span class=3D"pre">--video-backward-batch=3D&lt;number&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-video-backward-batch" class=
=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"opti=
ons-audio-backward-batch"><span class=3D"pre">--audio-backward-batch=3D&lt;=
number&gt;</span><a href=3D"https://mpv.io/manual/master/#options-audio-bac=
kward-batch" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Number of keyframe ranges to decode at o=
nce when backward decoding (default:
            1 for video, 10 for audio). Another pointless tuning parameter =
nobody should
            use. This should affect performance only. In theory, setting a =
number higher
            than 1 for audio will reduce overhead due to less frequent back=
step
            operations and less redundant decoding work due to fewer decode=
d overlap
            frames (see <tt class=3D"docutils literal"><span class=3D"pre">=
--audio-backward-overlap</span></tt>). On the other hand, it requires
            a larger reversal buffer, and could make playback less smooth d=
ue to
            breaking pipelining (e.g. by decoding a lot, and then doing not=
hing for a
            while).</p>
            <p class=3D"last">It probably never makes sense to set <tt clas=
s=3D"docutils literal"><span class=3D"pre">--video-backward-batch</span></t=
t>. But in
            theory, it could help with intra-only video codecs by reducing =
backstep
            operations.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-backwa=
rd-playback-step"><span class=3D"pre">--demuxer-backward-playback-step=3D&l=
t;seconds&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxe=
r-backward-playback-step" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Number of seconds the demuxer should see=
k back to get new packets during
            backward playback (default: 60). This is useful for tuning back=
ward
            playback, see <tt class=3D"docutils literal"><span class=3D"pre=
">--play-dir</span></tt> for details.</p>
            <p>Setting this to a very low value or 0 may make the player th=
ink seeking is
            broken, or may make it perform multiple seeks.</p>
            <p class=3D"last">Setting this to a high value may lead to quad=
ratic runtime behavior.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"program-behavior">
            <h2>Program Behavior</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-help"><span cl=
ass=3D"pre">--help</span><a href=3D"https://mpv.io/manual/master/#options-h=
elp" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" =
id=3D"options-h"><span class=3D"pre">--h</span><a href=3D"https://mpv.io/ma=
nual/master/#options-h" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Show short summary of options.</p>
            <p class=3D"last">You can also pass a string to this option, wh=
ich will list all top-level
            options which contain the string in the name, e.g. <tt class=3D=
"docutils literal"><span class=3D"pre">--h=3Dscale</span></tt> for all
            options that contain the word <tt class=3D"docutils literal">sc=
ale</tt>. The special string <tt class=3D"docutils literal">*</tt> lists
            all top-level options.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-v"><span class=
=3D"pre">-v</span><a href=3D"https://mpv.io/manual/master/#options-v" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Increment verbosity level, one level for each <tt class=3D"=
docutils literal"><span class=3D"pre">-v</span></tt> found on the command
            line.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-version,"><spa=
n class=3D"pre">--version,</span> <span class=3D"pre">-V</span><a href=3D"h=
ttps://mpv.io/manual/master/#options-version," class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Print version string and exit.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-config"><sp=
an class=3D"pre">--no-config</span><a href=3D"https://mpv.io/manual/master/=
#options-no-config" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Do not load default configuration or any=
 user files. This prevents loading of
            both the user-level and system-wide <tt class=3D"docutils liter=
al">mpv.conf</tt> and <tt class=3D"docutils literal">input.conf</tt> files.=
 Other
            user files are blocked as well, such as resume playback files a=
nd cache files.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Files explicitly requested by command line op=
tions, like
            <tt class=3D"docutils literal"><span class=3D"pre">--include</s=
pan></tt> or <tt class=3D"docutils literal"><span class=3D"pre">--use-filed=
ir-conf</span></tt>, will still be loaded.</p>
            </div>
            <p class=3D"last">See also: <tt class=3D"docutils literal"><spa=
n class=3D"pre">--config-dir</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-list-options">=
<span class=3D"pre">--list-options</span><a href=3D"https://mpv.io/manual/m=
aster/#options-list-options" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Prints all available options.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-list-propertie=
s"><span class=3D"pre">--list-properties</span><a href=3D"https://mpv.io/ma=
nual/master/#options-list-properties" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Print a list of the available properties.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-list-protocols=
"><span class=3D"pre">--list-protocols</span><a href=3D"https://mpv.io/manu=
al/master/#options-list-protocols" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Print a list of the supported protocols.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-log-file"><spa=
n class=3D"pre">--log-file=3D&lt;path&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-log-file" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Opens the given path for writing, and pr=
int log messages to it. Existing
            files will be truncated. The log level is at least <tt class=3D=
"docutils literal"><span class=3D"pre">-v</span> <span class=3D"pre">-v</sp=
an></tt>, but
            can be raised via <tt class=3D"docutils literal"><span class=3D=
"pre">--msg-level</span></tt> (the option cannot lower it below the
            forced minimum log level).</p>
            <p class=3D"last">A special case is the macOS bundle, it will c=
reate a log file at
            <tt class=3D"docutils literal">~/Library/Logs/mpv.log</tt> by d=
efault.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-config-dir"><s=
pan class=3D"pre">--config-dir=3D&lt;path&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-config-dir" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Force a different configuration director=
y. If this is set, the given
            directory is used to load configuration files, and all other co=
nfiguration
            directories are ignored. This means the global mpv configuratio=
n directory
            as well as per-user directories are ignored, and overrides thro=
ugh
            environment variables (<tt class=3D"docutils literal">MPV_HOME<=
/tt>) are also ignored.</p>
            <p class=3D"last">Note that the <tt class=3D"docutils literal">=
<span class=3D"pre">--no-config</span></tt> option takes precedence over th=
is option.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dump-stats"><s=
pan class=3D"pre">--dump-stats=3D&lt;filename&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-dump-stats" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first">Write certain statistics to the given fi=
le. The file is truncated on
            opening. The file will contain raw samples, each with a timesta=
mp. To
            make this file into a readable, the script <tt class=3D"docutil=
s literal"><span class=3D"pre">TOOLS/stats-conv.py</span></tt> can be
            used (which currently displays it as a graph).</p>
            <p class=3D"last">This option is useful for debugging only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-idle"><span cl=
ass=3D"pre">--idle=3D&lt;no|yes|once&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-idle" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Makes mpv wait idly instead of quitting =
when there is no file to play.
            Mostly useful in input mode, where mpv can be controlled throug=
h input
            commands. (Default: <tt class=3D"docutils literal">no</tt>)</p>
            <p class=3D"last"><tt class=3D"docutils literal">once</tt> will=
 only idle at start and let the player close once the
            first playlist has finished playing back.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-include"><span=
 class=3D"pre">--include=3D&lt;configuration-file&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-include" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd>Specify configuration file to be parsed after the default o=
nes.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-load-scripts">=
<span class=3D"pre">--load-scripts=3D&lt;yes|no&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-load-scripts" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>If set to <tt class=3D"docutils literal">no</tt>, don't aut=
o-load scripts from the <tt class=3D"docutils literal">scripts</tt>
            configuration subdirectory (usually <tt class=3D"docutils liter=
al"><span class=3D"pre">~/.config/mpv/scripts/</span></tt>).
            (Default: <tt class=3D"docutils literal">yes</tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-script"><span =
class=3D"pre">--script=3D&lt;filename&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-script" class=3D"anchor fa fa-link"></a></tt>, <tt cl=
ass=3D"docutils literal" id=3D"options-scripts"><span class=3D"pre">--scrip=
ts=3Dfile1.lua:file2.lua:...</span><a href=3D"https://mpv.io/manual/master/=
#options-scripts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load a Lua script. The second option all=
ows you to load multiple scripts by
            separating them with the path separator (<tt class=3D"docutils =
literal">:</tt> on Unix, <tt class=3D"docutils literal">;</tt> on Windows).=
</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--scripts</span></tt> is a path list option. See <a class=3D"referenc=
e internal" href=3D"https://mpv.io/manual/master/#list-options">List Option=
s</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-script-opts"><=
span class=3D"pre">--script-opts=3Dkey1=3Dvalue1,key2=3Dvalue2,...</span><a=
 href=3D"https://mpv.io/manual/master/#options-script-opts" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set options for scripts. A script can qu=
ery an option by key. If an
            option is used and what semantics the option value has depends =
entirely on
            the loaded scripts. Values not claimed by any scripts are ignor=
ed.</p>
            <p class=3D"last">This is a key/value list option. See <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#list-options"=
>List Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-merge-files"><=
span class=3D"pre">--merge-files</span><a href=3D"https://mpv.io/manual/mas=
ter/#options-merge-files" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Pretend that all files passed to mpv are concatenated into =
a single, big
            file. This uses timeline/EDL support internally.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-profile"><span=
 class=3D"pre">--profile=3D&lt;profile1,profile2,...&gt;</span><a href=3D"h=
ttps://mpv.io/manual/master/#options-profile" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Use the given profile(s), <tt class=3D"docutils literal"><s=
pan class=3D"pre">--profile=3Dhelp</span></tt> displays a list of the
            defined profiles.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-reset-on-next-=
file"><span class=3D"pre">--reset-on-next-file=3D&lt;all|option1,option2,..=
.&gt;</span><a href=3D"https://mpv.io/manual/master/#options-reset-on-next-=
file" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Normally, mpv will try to keep all setti=
ngs when playing the next file on
            the playlist, even if they were changed by the user during play=
back. (This
            behavior is the opposite of MPlayer's, which tries to reset all=
 settings
            when starting next file.)</p>
            <p>Default: Do not reset anything.</p>
            <p>This can be changed with this option. It accepts a list of o=
ptions, and
            mpv will reset the value of these options on playback start to =
the initial
            value. The initial value is either the default value, or as set=
 by the
            config file or command line.</p>
            <p>In some cases, this might not work as expected. For example,=
 <tt class=3D"docutils literal"><span class=3D"pre">--volume</span></tt>
            will only be reset if it is explicitly set in the config file o=
r the
            command line.</p>
            <p>The special name <tt class=3D"docutils literal">all</tt> res=
ets as many options as possible.</p>
            <p>This is a string list option. See <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-options">List Options</a> =
for details.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--reset-=
on-next-file=3Dpause</span></tt>
            Reset pause mode when switching to the next file.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--reset-=
on-next-file=3Dfullscreen,speed</span></tt>
            Reset fullscreen and playback speed settings if they were chang=
ed
            during playback.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--reset-=
on-next-file=3Dall</span></tt>
            Try to reset all settings that were changed during playback.</l=
i>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-show-profile">=
<span class=3D"pre">--show-profile=3D&lt;profile&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-show-profile" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Show the description and content of a profile. Lists all pr=
ofiles if no
            parameter is provided.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-use-filedir-co=
nf"><span class=3D"pre">--use-filedir-conf</span><a href=3D"https://mpv.io/=
manual/master/#options-use-filedir-conf" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Look for a file-specific configuration f=
ile in the same directory as the
            file that is being played. See <a class=3D"reference internal" =
href=3D"https://mpv.io/manual/master/#file-specific-configuration-files">Fi=
le-specific Configuration Files</a>.</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">May be dangerous if playing from untrusted me=
dia.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ytdl"><span cl=
ass=3D"pre">--ytdl</span><a href=3D"https://mpv.io/manual/master/#options-y=
tdl" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" =
id=3D"options-no-ytdl"><span class=3D"pre">--no-ytdl</span><a href=3D"https=
://mpv.io/manual/master/#options-no-ytdl" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first">Enable the youtube-dl hook-script. It wi=
ll look at the input URL, and will
            play the video located on the website. This works with many str=
eaming sites,
            not just the one that the script is named after. This requires =
a recent
            version of youtube-dl to be installed on the system. (Enabled b=
y default.)</p>
            <p>If the script can't do anything with an URL, it will do noth=
ing.</p>
            <p>This accepts a set of options, which can be passed to it wit=
h the
            <tt class=3D"docutils literal"><span class=3D"pre">--script-opt=
s</span></tt> option (using <tt class=3D"docutils literal">ytdl_hook-</tt> =
as prefix):</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-try-ytdl-first=
"><span class=3D"pre">try_ytdl_first=3D&lt;yes|no&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-try-ytdl-first" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>If 'yes' will try parsing the URL with youtube-dl first, in=
stead of the
            default where it's only after mpv failed to open it. This mostl=
y depends
            on whether most of your URLs need youtube-dl parsing.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-exclude"><span=
 class=3D"pre">exclude=3D&lt;URL1|URL2|...</span><a href=3D"https://mpv.io/=
manual/master/#options-exclude" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">A <tt class=3D"docutils literal">|</tt>-=
separated list of URL patterns which mpv should not use with
            youtube-dl. The patterns are matched after the <tt class=3D"doc=
utils literal"><span class=3D"pre">http(s)://</span></tt> part of
            the URL.</p>
            <p><tt class=3D"docutils literal">^</tt> matches the beginning =
of the URL, <tt class=3D"docutils literal">$</tt> matches its end, and you
            should use <tt class=3D"docutils literal">%</tt> before any of =
the characters <tt class=3D"docutils literal"><span class=3D"pre">^$()%|,.[=
]*+-?</span></tt> to
            match that character.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--script=
-opts=3Dytdl_hook-exclude=3D'^youtube%.com'</span></tt>
            will exclude any URL that starts with <tt class=3D"docutils lit=
eral"><span class=3D"pre">http://youtube.com</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">https://yout=
ube.com</span></tt>.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--script=
-opts=3Dytdl_hook-exclude=3D'%.mkv$|%.mp4$'</span></tt>
            will exclude any URL that ends with <tt class=3D"docutils liter=
al">.mkv</tt> or <tt class=3D"docutils literal">.mp4</tt>.</li>
            </ul>
            </div>
            <p class=3D"last">See more lua patterns here: <a class=3D"refer=
ence external" href=3D"https://www.lua.org/manual/5.1/manual.html#5.4.1">ht=
tps://www.lua.org/manual/5.1/manual.html#5.4.1</a></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-all-formats"><=
span class=3D"pre">all_formats=3D&lt;yes|no&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-all-formats" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">If 'yes' will attempt to add all formats=
 found reported by youtube-dl
            (default: no). Each format is added as a separate track. In add=
ition,
            they are delay-loaded, and actually opened only when a track is=
 selected
            (this should keep load times as low as without this option).</p=
>
            <p>It adds average bitrate metadata, if available, which means =
you can use
            <tt class=3D"docutils literal"><span class=3D"pre">--hls-bitrat=
e</span></tt> to decide which track to select. (HLS used to be the
            only format whose alternative quality streams were exposed in a=
 similar
            way, thus the option name.)</p>
            <p>Tracks which represent formats that were selected by youtube=
-dl as
            default will have the default flag set. This means mpv should g=
enerally
            still select formats chosen with <tt class=3D"docutils literal"=
><span class=3D"pre">--ytdl-format</span></tt> by default.</p>
            <p>Although this mechanism makes it possible to switch streams =
at runtime,
            it's not suitable for this purpose for various technical reason=
s. (It's
            slow, which can't be really fixed.) In general, this option is =
not
            useful, and was only added to show that it's possible.</p>
            <p>There are two cases that must be considered when doing quali=
ty/bandwidth
            selection:</p>
            <blockquote>
            <ol class=3D"arabic">
            <li><p class=3D"first">Completely separate audio and video stre=
ams (DASH-like). Each of
            these streams contain either only audio or video, so you can
            mix and combine audio/video bandwidths without restriction. Thi=
s
            intuitively matches best with the concept of selecting quality
            by track (what <tt class=3D"docutils literal">all_formats</tt> =
is supposed to do).</p>
            </li>
            <li><p class=3D"first">Separate sets of muxed audio and video s=
treams. Each version of
            the media contains both an audio and video stream, and they are
            interleaved. In order not to waste bandwidth, you should only
            select one of these versions (if, for example, you select an
            audio stream, then video will be downloaded, even if you select=
ed
            video from a different stream).</p>
            <p>mpv will still represent them as separate tracks, but will s=
et
            the title of each track to <tt class=3D"docutils literal"><span=
 class=3D"pre">muxed-N</span></tt>, where <tt class=3D"docutils literal">N<=
/tt> is replaced
            with the youtube-dl format ID of the originating stream.</p>
            </li>
            </ol>
            </blockquote>
            <p class=3D"last">Some sites will mix 1. and 2., but we assume =
that they do so for
            compatibility reasons, and there is no reason to use them at al=
l.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-force-all-form=
ats"><span class=3D"pre">force_all_formats=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-force-all-formats" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If set to 'yes', and <tt class=3D"docuti=
ls literal">all_formats</tt> is also set to 'yes', this will
            try to represent all youtube-dl reported formats as tracks, eve=
n if
            mpv would normally use the direct URL reported by it (default: =
yes).</p>
            <p>It appears this normally makes a difference if youtube-dl wo=
rks on a
            master HLS playlist.</p>
            <p class=3D"last">If this is set to 'no', this specific kind of=
 stream is treated like
            <tt class=3D"docutils literal">all_formats</tt> is set to 'no',=
 and the stream selection as done by
            youtube-dl (via <tt class=3D"docutils literal"><span class=3D"p=
re">--ytdl-format</span></tt>) is used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-use-manifests"=
><span class=3D"pre">use_manifests=3D&lt;yes|no&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-use-manifests" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Make mpv use the master manifest URL for formats like HLS a=
nd DASH,
            if available, allowing for video/audio selection in runtime (de=
fault:
            no). It's disabled ("no") by default for performance reasons.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ytdl-path"><sp=
an class=3D"pre">ytdl_path=3Dyoutube-dl</span><a href=3D"https://mpv.io/man=
ual/master/#options-ytdl-path" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Configure paths to youtube-dl's executable or a compatible =
fork's. The
            paths should be separated by : on Unix and ; on Windows. mpv lo=
oks in
            order for the configured paths in PATH and in mpv's config dire=
ctory.
            The defaults are "yt-dlp", "yt-dlp_x86" and "youtube-dl". On Wi=
ndows
            the suffix extension ".exe" is always appended.</dd>
            </dl>
            <div class=3D"admonition admonition-why-do-the-option-names-mix=
-and last">
            <p class=3D"first admonition-title">Why do the option names mix=
 <tt class=3D"docutils literal">_</tt> and <tt class=3D"docutils literal">-=
</tt>?</p>
            <p class=3D"last">I have no idea.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ytdl-format"><=
span class=3D"pre">--ytdl-format=3D&lt;ytdl|best|worst|mp4|webm|...&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-ytdl-format" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Video format/quality that is directly pa=
ssed to youtube-dl. The possible
            values are specific to the website and the video, for a given u=
rl the
            available formats can be found with the command
            <tt class=3D"docutils literal"><span class=3D"pre">youtube-dl</=
span> <span class=3D"pre">--list-formats</span> URL</tt>. See youtube-dl's =
documentation for
            available aliases.
            (Default: <tt class=3D"docutils literal">bestvideo+bestaudio/be=
st</tt>)</p>
            <p class=3D"last">The <tt class=3D"docutils literal">ytdl</tt> =
value does not pass a <tt class=3D"docutils literal"><span class=3D"pre">--=
format</span></tt> option to youtube-dl at all,
            and thus does not override its default. Note that sometimes you=
tube-dl
            returns a format that mpv cannot use, and in these cases the mp=
v default
            may work better.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ytdl-raw-optio=
ns"><span class=3D"pre">--ytdl-raw-options=3D&lt;key&gt;=3D&lt;value&gt;[,&=
lt;key&gt;=3D&lt;value&gt;[,...]]</span><a href=3D"https://mpv.io/manual/ma=
ster/#options-ytdl-raw-options" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Pass arbitrary options to youtube-dl. Pa=
rameter and argument should be
            passed as a key-value pair. Options without argument must inclu=
de <tt class=3D"docutils literal">=3D</tt>.</p>
            <p>There is no sanity checking so it's possible to break things=
 (i.e.
            passing invalid parameters to youtube-dl).</p>
            <p>A proxy URL can be passed for youtube-dl to use it in parsin=
g the website.
            This is useful for geo-restricted URLs. After youtube-dl parsin=
g, some
            URLs also require a proxy for playback, so this can pass that p=
roxy
            information to mpv. Take note that SOCKS proxies aren't support=
ed and
            https URLs also bypass the proxy. This is a limitation in FFmpe=
g.</p>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--ytdl-r=
aw-options=3Dusername=3Duser,password=3Dpass</span></tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--ytdl-r=
aw-options=3Dforce-ipv6=3D</span></tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--ytdl-r=
aw-options=3Dproxy=3D[http://127.0.0.1:3128]</span></tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--ytdl-r=
aw-options-append=3Dproxy=3Dhttp://127.0.0.1:3128</span></tt></li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-load-stats-ove=
rlay"><span class=3D"pre">--load-stats-overlay=3D&lt;yes|no&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-load-stats-overlay" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Enable the builtin script that shows useful playback inform=
ation on a key
            binding (default: yes). By default, the <tt class=3D"docutils l=
iteral">i</tt> key is used (<tt class=3D"docutils literal">I</tt> to make
            the overlay permanent).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-load-osd-conso=
le"><span class=3D"pre">--load-osd-console=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-load-osd-console" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Enable the built-in script that shows a console on a key bi=
nding and lets
            you enter commands (default: yes). The <tt class=3D"docutils li=
teral">`</tt> key is used to show the
            console by default, and <tt class=3D"docutils literal">ESC</tt>=
 to hide it again.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-load-auto-prof=
iles"><span class=3D"pre">--load-auto-profiles=3D&lt;yes|no|auto&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#options-load-auto-profiles" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enable the builtin script that does auto profiles (default:=
 auto). See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#conditional-auto-profiles">Conditional auto profiles</a> for details=
. <tt class=3D"docutils literal">auto</tt> will load the script,
            but immediately unload it if there are no conditional profiles.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-player-operati=
on-mode"><span class=3D"pre">--player-operation-mode=3D&lt;cplayer|pseudo-g=
ui&gt;</span><a href=3D"https://mpv.io/manual/master/#options-player-operat=
ion-mode" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>For enabling "pseudo GUI mode", which means that the defaul=
ts for some
            options are changed. This option should not normally be used di=
rectly, but
            only by mpv internally, or mpv-provided scripts, config files, =
or .desktop
            files. See <a class=3D"reference internal" href=3D"https://mpv.=
io/manual/master/#pseudo-gui-mode">PSEUDO GUI MODE</a> for details.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"watch-later">
            <h2>Watch Later</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-save-position-=
on-quit"><span class=3D"pre">--save-position-on-quit</span><a href=3D"https=
://mpv.io/manual/master/#options-save-position-on-quit" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Always save the current playback positio=
n on quit. When this file is
            played again later, the player will seek to the old playback po=
sition on
            start. This does not happen if playback of a file is stopped in=
 any other
            way than quitting. For example, going to the next file in the p=
laylist
            will not save the position, and start playback at beginning the=
 next time
            the file is played.</p>
            <p>This behavior is disabled by default, but is always availabl=
e when quitting
            the player with Shift+Q.</p>
            <p class=3D"last">See <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#resuming-playback">RESUMING PLAYBACK</a>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-watch-later-di=
rectory"><span class=3D"pre">--watch-later-directory=3D&lt;path&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-watch-later-directory" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The directory in which to store the "wat=
ch later" temporary files.</p>
            <p class=3D"last">If this option is unset, the files will be st=
ored in a subdirectory
            named "watch_later" underneath the local state directory
            (usually <tt class=3D"docutils literal"><span class=3D"pre">~/.=
local/state/mpv/</span></tt>).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-resume-play=
back"><span class=3D"pre">--no-resume-playback</span><a href=3D"https://mpv=
.io/manual/master/#options-no-resume-playback" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Do not restore playback position from the <tt class=3D"docu=
tils literal">watch_later</tt> configuration
            subdirectory (usually <tt class=3D"docutils literal"><span clas=
s=3D"pre">~/.config/mpv/watch_later/</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-resume-playbac=
k-check-mtime"><span class=3D"pre">--resume-playback-check-mtime</span><a h=
ref=3D"https://mpv.io/manual/master/#options-resume-playback-check-mtime" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Only restore the playback position from the <tt class=3D"do=
cutils literal">watch_later</tt> configuration
            subdirectory (usually <tt class=3D"docutils literal"><span clas=
s=3D"pre">~/.config/mpv/watch_later/</span></tt>) if the file's
            modification time is the same as at the time of saving. This ma=
y prevent
            skipping forward in files with the same name which have differe=
nt content.
            (Default: <tt class=3D"docutils literal">no</tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-watch-later-op=
tions"><span class=3D"pre">--watch-later-options=3Doption1,option2,...</spa=
n><a href=3D"https://mpv.io/manual/master/#options-watch-later-options" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The options that are saved in "watch lat=
er" files if they have been changed
            since when mpv started. These values will be restored the next =
time the
            files are played. Note that the playback position is saved via =
the <tt class=3D"docutils literal">start</tt>
            option.</p>
            <p>When removing options, existing watch later data won't be mo=
dified and will
            still be applied fully, but new watch later data won't contain =
these
            options.</p>
            <p>This is a string list option. See <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-options">List Options</a> =
for details.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--watch-=
later-options-remove=3Dfullscreen</span></tt>
            The fullscreen state won't be saved to watch later files.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--watch-=
later-options-remove=3Dvolume</span></tt>
            <tt class=3D"docutils literal"><span class=3D"pre">--watch-late=
r-options-remove=3Dmute</span></tt>
            The volume and mute state won't be saved to watch later files.<=
/li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--watch-=
later-options-clr</span></tt>
            No option will be saved to watch later files.</li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-write-filename=
-in-watch-later-config"><span class=3D"pre">--write-filename-in-watch-later=
-config</span><a href=3D"https://mpv.io/manual/master/#options-write-filena=
me-in-watch-later-config" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Prepend the watch later config files wit=
h the name of the file they refer
            to. This is simply written as comment on the top of the file.</=
p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This option may expose privacy-sensitive info=
rmation and is thus
            disabled by default.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ignore-path-in=
-watch-later-config"><span class=3D"pre">--ignore-path-in-watch-later-confi=
g</span><a href=3D"https://mpv.io/manual/master/#options-ignore-path-in-wat=
ch-later-config" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Ignore path (i.e. use filename only) when using watch later=
 feature.
            (Default: disabled)</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"video">
            <h2>Video</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-vo"><span clas=
s=3D"pre">--vo=3D&lt;driver&gt;</span><a href=3D"https://mpv.io/manual/mast=
er/#options-vo" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the video output backend to be used. See <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#video-output-=
drivers">VIDEO OUTPUT DRIVERS</a> for
            details and descriptions of available drivers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd"><span clas=
s=3D"pre">--vd=3D&lt;...&gt;</span><a href=3D"https://mpv.io/manual/master/=
#options-vd" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify a priority list of video decoder=
s to be used, according to their
            family and name. See <tt class=3D"docutils literal"><span class=
=3D"pre">--ad</span></tt> for further details. Both of these options
            use the same syntax and semantics; the only difference is that =
they
            operate on different codec lists.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--vd=3Dhelp</span></tt> for a full list of available decoders.</p=
>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vf"><span clas=
s=3D"pre">--vf=3D&lt;filter1[=3Dparameter1:parameter2:...],filter2,...&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-vf" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Specify a list of video filters to apply to the video strea=
m. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#video-filters">VIDEO FILTERS</a> for details and descriptions of the=
 available filters.
            The option variants <tt class=3D"docutils literal"><span class=
=3D"pre">--vf-add</span></tt>, <tt class=3D"docutils literal"><span class=
=3D"pre">--vf-pre</span></tt>, <tt class=3D"docutils literal"><span class=
=3D"pre">--vf-del</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">--vf-clr</sp=
an></tt> exist to modify a previously specified list, but you
            should not need these for typical use.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-untimed"><span=
 class=3D"pre">--untimed</span><a href=3D"https://mpv.io/manual/master/#opt=
ions-untimed" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Do not sleep when outputting video frames. Useful for bench=
marks when used
            with <tt class=3D"docutils literal"><span class=3D"pre">--no-au=
dio.</span></tt></dd>
            <dt><tt class=3D"docutils literal" id=3D"options-framedrop"><sp=
an class=3D"pre">--framedrop=3D&lt;mode&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-framedrop" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Skip displaying some frames to maintain =
A/V sync on slow systems, or
            playing high framerate video on video outputs that have an uppe=
r framerate
            limit.</p>
            <p>The argument selects the drop methods, and can be one of the=
 following:</p>
            <dl class=3D"docutils">
            <dt>&lt;no&gt;</dt>
            <dd>Disable any frame dropping. Not recommended, for testing on=
ly.</dd>
            <dt>&lt;vo&gt;</dt>
            <dd><p class=3D"first">Drop late frames on video output (defaul=
t). This still decodes and
            filters all frames, but doesn't render them on the VO. Drops ar=
e
            indicated in the terminal status line as <tt class=3D"docutils =
literal">Dropped:</tt> field.</p>
            <p>In audio sync. mode, this drops frames that are outdated at =
the time of
            display. If the decoder is too slow, in theory all frames would=
 have to
            be dropped (because all frames are too late) - to avoid this, f=
rame
            dropping stops  if the effective framerate is below 10 FPS.</p>
            <p>In display-sync. modes (see <tt class=3D"docutils literal"><=
span class=3D"pre">--video-sync</span></tt>), this affects only how
            A/V drops or repeats frames. If this mode is disabled, A/V desy=
nc will
            in theory not affect video scheduling anymore (much like the
            <tt class=3D"docutils literal"><span class=3D"pre">display-resa=
mple-desync</span></tt> mode). However, even if disabled, frames
            will still be skipped (i.e. dropped) according to the ratio bet=
ween
            video and display frequencies.</p>
            <p class=3D"last">This is the recommended mode, and the default=
.</p>
            </dd>
            <dt>&lt;decoder&gt;</dt>
            <dd><p class=3D"first">Old, decoder-based framedrop mode. (This=
 is the same as <tt class=3D"docutils literal"><span class=3D"pre">--framed=
rop=3Dyes</span></tt>
            in mpv 0.5.x and before.) This tells the decoder to skip frames=
 (unless
            they are needed to decode future frames). May help with slow sy=
stems,
            but can produce unwatchable choppy output, or even freeze the d=
isplay
            completely.</p>
            <p>This uses a heuristic which may not make sense, and in  gene=
ral cannot
            achieve good results, because the decoder's frame dropping cann=
ot be
            controlled in a predictable manner. Not recommended.</p>
            <p>Even if you want to use this, prefer <tt class=3D"docutils l=
iteral">decoder+vo</tt> for better results.</p>
            <p class=3D"last">The <tt class=3D"docutils literal"><span clas=
s=3D"pre">--vd-lavc-framedrop</span></tt> option controls what frames to dr=
op.</p>
            </dd>
            <dt>&lt;decoder+vo&gt;</dt>
            <dd>Enable both modes. Not recommended. Better than just <tt cl=
ass=3D"docutils literal">decoder</tt> mode.</dd>
            </dl>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--vo=3Dvdpau</span></tt> has its own code for the <tt class=3D"docuti=
ls literal">vo</tt> framedrop mode. Slight
            differences to other VOs are possible.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-latency-=
hacks"><span class=3D"pre">--video-latency-hacks=3D&lt;yes|no&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-video-latency-hacks" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enable some things which tend to reduce =
video latency by 1 or 2 frames
            (default: no). Note that this option might be removed without n=
otice once
            the player's timing code does not inherently need to do these t=
hings
            anymore.</p>
            <p>This does:</p>
            <ul class=3D"last simple">
            <li>Use the demuxer reported FPS for frame dropping. This avoid=
s the
            player needing to decode 1 frame in advance, lowering total lat=
ency in
            effect. This also means that if the demuxer reported FPS is wro=
ng, or
            the video filter chain changes FPS (e.g. deinterlacing), then i=
t could
            drop too many or not enough frames.</li>
            <li>Disable waiting for the first video frame. Normally the pla=
yer waits for
            the first video frame to be fully rendered before starting play=
back
            properly. Some VOs will lazily initialize stuff when rendering =
the first
            frame, so if this is not done, there is some likeliness that th=
e VO has
            to drop some frames if rendering the first frame takes longer t=
han needed.</li>
            </ul>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-override-displ=
ay-fps"><span class=3D"pre">--override-display-fps=3D&lt;fps&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-override-display-fps" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the display FPS used with the <tt cl=
ass=3D"docutils literal"><span class=3D"pre">--video-sync=3Ddisplay-*</span=
></tt> modes. By
            default, a detected value is used. Keep in mind that setting an=
 incorrect
            value (even if slightly incorrect) can ruin video playback. On =
multi-monitor
            systems, there is a chance that the detected value is from the =
wrong
            monitor.</p>
            <p class=3D"last">Set this option only if you have reason to be=
lieve the automatically
            determined value is wrong.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-display-fps"><=
span class=3D"pre">--display-fps=3D&lt;fps&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-display-fps" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>Deprecated alias for <tt class=3D"docutils literal"><span c=
lass=3D"pre">--override-display-fps</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hwdec"><span c=
lass=3D"pre">--hwdec=3D&lt;api1,api2,...|no|auto|auto-safe|auto-copy&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-hwdec" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify the hardware video decoding API =
that should be used if possible.
            Whether hardware decoding is actually done depends on the video=
 codec. If
            hardware decoding is not possible, mpv will fall back on softwa=
re decoding.</p>
            <p>Hardware decoding is not enabled by default, to keep the out=
-of-the-box
            configuration as reliable as possible. However, when using mode=
rn hardware,
            hardware video decoding should work correctly, offering reduced=
 CPU usage,
            and possibly lower power consumption. On older systems, it may =
be necessary
            to use hardware decoding due to insufficient CPU resources; and=
 even on
            modern systems, sufficiently complex content (eg: 4K60 AV1) may=
 require it.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p>Use the <tt class=3D"docutils literal">Ctrl+h</tt> shortcut =
to toggle hardware decoding at runtime. It
            toggles this option between <tt class=3D"docutils literal"><spa=
n class=3D"pre">auto-safe</span></tt> and <tt class=3D"docutils literal">no=
</tt>.</p>
            <p>If you decide you want to use hardware decoding by default, =
the general
            recommendation is to try out decoding with the command line opt=
ion, and
            prove to yourself that it works as desired for the content you =
care
            about. After that, you can add it to your config file.</p>
            <p>When testing, you should start by using <tt class=3D"docutil=
s literal"><span class=3D"pre">hwdec=3Dauto-safe</span></tt> as it will
            limit itself to choosing from hwdecs that are actively supporte=
d by the
            development team. If that doesn't result in working hardware de=
coding,
            you can try <tt class=3D"docutils literal">hwdec=3Dauto</tt> to=
 have it attempt to load every possible
            hwdec, but if <tt class=3D"docutils literal"><span class=3D"pre=
">auto-safe</span></tt> didn't work, you will probably need to know
            exactly which hwdec matches your hardware and read up on that e=
ntry
            below.</p>
            <p>If <tt class=3D"docutils literal"><span class=3D"pre">auto-s=
afe</span></tt> or <tt class=3D"docutils literal">auto</tt> produced the de=
sired results, we recommend
            just sticking with that and only setting a specific hwdec in yo=
ur config
            file if it is really necessary.</p>
            <p class=3D"last">If you use the Ubuntu package, keep in mind t=
hat their
            <tt class=3D"docutils literal">/etc/mpv/mpv.conf</tt> contains =
<tt class=3D"docutils literal">hwdec=3Dvaapi</tt>, which is less than
            ideal as it may not be the right choice for your system, and it=
 may end
            up using an inefficient wrapper library under the covers. We re=
commend
            removing this line or deleting the file altogether.</p>
            </div>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Even if enabled, hardware decoding is still o=
nly white-listed for some
            codecs. See <tt class=3D"docutils literal"><span class=3D"pre">=
--hwdec-codecs</span></tt> to enable hardware decoding in more cases.</p>
            </div>
            <div class=3D"admonition admonition-which-method-to-choose">
            <p class=3D"first admonition-title">Which method to choose?</p>
            <ul class=3D"last simple">
            <li>If you only want to enable hardware decoding at runtime, do=
n't set the
            parameter, or put <tt class=3D"docutils literal">hwdec=3Dno</tt=
> into your <tt class=3D"docutils literal">mpv.conf</tt> (relevant on
            distros which force-enable it by default, such as on Ubuntu). U=
se the
            <tt class=3D"docutils literal">Ctrl+h</tt> default binding to e=
nable it at runtime.</li>
            <li>If you're not sure, but want hardware decoding always enabl=
ed by
            default, put <tt class=3D"docutils literal"><span class=3D"pre"=
>hwdec=3Dauto-safe</span></tt> into your <tt class=3D"docutils literal">mpv=
.conf</tt>, and
            acknowledge that this may cause problems.</li>
            <li>If you want to test available hardware decoding methods, pa=
ss
            <tt class=3D"docutils literal"><span class=3D"pre">--hwdec=3Dau=
to</span> <span class=3D"pre">--hwdec-codecs=3Dall</span></tt> and look at =
the terminal output.</li>
            <li>If you're a developer, or want to perform elaborate tests, =
you may
            need any of the other possible option values.</li>
            </ul>
            </div>
            <p>This option accepts a comma delimited list of <tt class=3D"d=
ocutils literal">api</tt> types, along with certain
            special values:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">always use software decoding (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">auto-safe:</th><td=
 class=3D"field-body">enable any whitelisted hw decoder (see below)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">forcibly enable any hw decoder found (see below)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">exactly the same as <tt class=3D"docutils literal"><span cl=
ass=3D"pre">auto-safe</span></tt></td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">auto-copy:</th><td=
 class=3D"field-body">enable best hw decoder with copy-back (see below)</td=
>
            </tr>
            </tbody>
            </table>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Special values can be mixed with api names. e=
g: <tt class=3D"docutils literal">vaapi,auto</tt> will try
            and use the <tt class=3D"docutils literal">vaapi</tt> hwdec, an=
d if that fails, will run through the
            normal <tt class=3D"docutils literal">auto</tt> logic.</p>
            </div>
            <p>Actively supported hwdecs:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">d3d11va:</th><td c=
lass=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"=
pre">--vo=3Dgpu</span></tt> with <tt class=3D"docutils literal"><span class=
=3D"pre">--gpu-context=3Dd3d11</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">--gpu-contex=
t=3Dangle</span></tt> (Windows 8+ only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">d3d11va-copy:</th>=
<td class=3D"field-body">copies video back to system RAM (Windows 8+ only)<=
/td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">videotoolbox:</th>=
<td class=3D"field-body">requires <tt class=3D"docutils literal"><span clas=
s=3D"pre">--vo=3Dgpu</span></tt> (macOS 10.8 and up),
            or <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dli=
bmpv</span></tt> (iOS 9.0 and up)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">vide=
otoolbox-copy:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">cop=
ies video back into system RAM (macOS 10.8 or iOS 9.0 and up)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vaapi:</th><td cla=
ss=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pr=
e">--vo=3Dgpu</span></tt>, <tt class=3D"docutils literal"><span class=3D"pr=
e">--vo=3Dvaapi</span></tt> or <tt class=3D"docutils literal"><span class=
=3D"pre">--vo=3Ddmabuf-wayland</span></tt> (Linux only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vaapi-copy:</th><t=
d class=3D"field-body">copies video back into system RAM (Linux with some G=
PUs only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">nvdec:</th><td cla=
ss=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pr=
e">--vo=3Dgpu</span></tt> (Any platform CUDA is available)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">nvdec-copy:</th><t=
d class=3D"field-body">copies video back to system RAM (Any platform CUDA i=
s available)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">drm:</th><td class=
=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pre"=
>--vo=3Dgpu</span></tt> (Linux only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">drm-copy:</th><td =
class=3D"field-body">copies video back to system RAM (Linux only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vulkan:</th><td cl=
ass=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"p=
re">--vo=3Dgpu-next</span></tt> (Any platform with Vulkan Video Decoding)</=
td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vulkan-copy:</th><=
td class=3D"field-body">copies video back to system RAM (Any platform with =
Vulkan Video Decoding)</td>
            </tr>
            </tbody>
            </table>
            <p>Other hwdecs (only use if you know you have to):</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">dxva2:</th><td cla=
ss=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pr=
e">--vo=3Dgpu</span></tt> with <tt class=3D"docutils literal"><span class=
=3D"pre">--gpu-context=3Dd3d11</span></tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">--gpu-contex=
t=3Dangle</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre"=
>--gpu-context=3Ddxinterop</span></tt>
            (Windows only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">dxva2-copy:</th><t=
d class=3D"field-body">copies video back to system RAM (Windows only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vdpau:</th><td cla=
ss=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pr=
e">--vo=3Dgpu</span></tt> with X11, or <tt class=3D"docutils literal"><span=
 class=3D"pre">--vo=3Dvdpau</span></tt> (Linux only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vdpau-copy:</th><t=
d class=3D"field-body">copies video back into system RAM (Linux with some G=
PUs only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">mediacodec:</th><t=
d class=3D"field-body">requires <tt class=3D"docutils literal"><span class=
=3D"pre">--vo=3Dgpu</span> <span class=3D"pre">--gpu-context=3Dandroid</spa=
n></tt>
            or <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dme=
diacodec_embed</span></tt> (Android only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">medi=
acodec-copy:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">cop=
ies video back to system RAM (Android only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">mmal:</th><td clas=
s=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pre=
">--vo=3Dgpu</span></tt> (Raspberry Pi only - default if available)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">mmal-copy:</th><td=
 class=3D"field-body">copies video back to system RAM (Raspberry Pi only)</=
td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">cuda:</th><td clas=
s=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pre=
">--vo=3Dgpu</span></tt> (Any platform CUDA is available)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">cuda-copy:</th><td=
 class=3D"field-body">copies video back to system RAM (Any platform CUDA is=
 available)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">crystalhd:</th><td=
 class=3D"field-body">copies video back to system RAM (Any platform support=
ed by hardware)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">rkmpp:</th><td cla=
ss=3D"field-body">requires <tt class=3D"docutils literal"><span class=3D"pr=
e">--vo=3Dgpu</span></tt> (some RockChip devices only)</td>
            </tr>
            </tbody>
            </table>
            <p><tt class=3D"docutils literal">auto</tt> tries to automatica=
lly enable hardware decoding using the first
            available method. This still depends what VO you are using. For=
 example,
            if you are not using <tt class=3D"docutils literal"><span class=
=3D"pre">--vo=3Dgpu</span></tt> or <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--vo=3Dvdpau</span></tt>, vdpau decoding will
            never be enabled. Also note that if the first found method does=
n't actually
            work, it will always fall back to software decoding, instead of=
 trying the
            next method (might matter on some Linux systems).</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">auto-safe=
</span></tt> is similar to <tt class=3D"docutils literal">auto</tt>, but al=
lows only whitelisted methods
            that are considered "safe". This is supposed to be a reasonable=
 way to
            enable hardware decdoding by default in a config file (even tho=
ugh you
            shouldn't do that anyway; prefer runtime enabling with <tt clas=
s=3D"docutils literal">Ctrl+h</tt>). Unlike
            <tt class=3D"docutils literal">auto</tt>, this will not try to =
enable unknown or known-to-be-bad methods. In
            addition, this may disable hardware decoding in other situation=
s when it's
            known to cause problems, but currently this mechanism is quite =
primitive.
            (As an example for something that still causes problems: certai=
n
            combinations of HEVC and Intel chips on Windows tend to cause m=
pv to crash,
            most likely due to driver bugs.)</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">auto-copy=
-safe</span></tt> selects the union of methods selected with <tt class=3D"d=
ocutils literal"><span class=3D"pre">auto-safe</span></tt>
            and <tt class=3D"docutils literal"><span class=3D"pre">auto-cop=
y</span></tt>.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">auto-copy=
</span></tt> selects only modes that copy the video data back to system
            memory after decoding. This selects modes like <tt class=3D"doc=
utils literal"><span class=3D"pre">vaapi-copy</span></tt> (and so on).
            If none of these work, hardware decoding is disabled. This mode=
 is usually
            guaranteed to incur no additional quality loss compared to soft=
ware
            decoding (assuming modern codecs and an error free video stream=
), and will
            allow CPU processing with video filters. This mode works with a=
ll video
            filters and VOs.</p>
            <p>Because these copy the decoded video back to system RAM, the=
y're often less
            efficient than the direct modes, and may not help too much over=
 software
            decoding if you are short on CPU resources.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Most non-copy methods only work with the Open=
GL GPU backend. Currently,
            only the <tt class=3D"docutils literal">vaapi</tt>, <tt class=
=3D"docutils literal">nvdec</tt>, <tt class=3D"docutils literal">cuda</tt> =
and <tt class=3D"docutils literal">vulkan</tt> methods work with
            Vulkan.</p>
            </div>
            <p>The <tt class=3D"docutils literal">vaapi</tt> mode, if used =
with <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu</span></=
tt>, requires Mesa 11, and most
            likely works with Intel and AMD GPUs only. It also requires the=
 opengl EGL
            backend.</p>
            <p><tt class=3D"docutils literal">nvdec</tt> and <tt class=3D"d=
ocutils literal"><span class=3D"pre">nvdec-copy</span></tt> are the newest,=
 and recommended method to do
            hardware decoding on Nvidia GPUs.</p>
            <p><tt class=3D"docutils literal">cuda</tt> and <tt class=3D"do=
cutils literal"><span class=3D"pre">cuda-copy</span></tt> are an older impl=
ementation of hardware decoding
            on Nvidia GPUs that uses Nvidia's bitstream parsers rather than=
 FFmpeg's.
            This can lead to feature deficiencies, such as incorrect playba=
ck of HDR
            content, and <tt class=3D"docutils literal">nvdec</tt>/<tt clas=
s=3D"docutils literal"><span class=3D"pre">nvdec-copy</span></tt> should al=
ways be preferred unless you
            specifically need Nvidia's deinterlacing algorithms. To use thi=
s
            deinterlacing you must pass the option:
            <tt class=3D"docutils literal"><span class=3D"pre">vd-lavc-o=3D=
deint=3D[weave|bob|adaptive]</span></tt>.
            Pass <tt class=3D"docutils literal">weave</tt> (or leave the op=
tion unset) to not attempt any
            deinterlacing.</p>
            <div class=3D"admonition admonition-quality-reduction-with-hard=
ware-decoding last">
            <p class=3D"first admonition-title">Quality reduction with hard=
ware decoding</p>
            <p>In theory, hardware decoding does not reduce video quality (=
at least
            for the codecs h264 and HEVC). However, due to restrictions in =
video
            output APIs, as well as bugs in the actual hardware decoders, t=
here can
            be some loss, or even blatantly incorrect results. This has lar=
gely
            ceased to be a problem with modern hardware, but there is a lot=
 of
            hardware out there, so caveat emptor. Known problems are discus=
sed
            below, but the list cannot be considered exhaustive, as even hw=
decs that
            work well on certain hardware generations may be problematic on=
 other
            ones.</p>
            <p>In some cases, RGB conversion is forced, which means the RGB=
 conversion
            is performed by the hardware decoding API, instead of the shade=
rs
            used by <tt class=3D"docutils literal"><span class=3D"pre">--vo=
=3Dgpu</span></tt>. This means certain colorspaces may not display
            correctly, and certain filtering (such as debanding) cannot be =
applied
            in an ideal way. This will also usually force the use of low qu=
ality
            chroma scalers instead of the one specified by <tt class=3D"doc=
utils literal"><span class=3D"pre">--cscale</span></tt>. In other
            cases, hardware decoding can also reduce the bit depth of the d=
ecoded
            image, which can introduce banding or precision loss for 10-bit=
 files.</p>
            <p><tt class=3D"docutils literal">vdpau</tt> always does RGB co=
nversion in hardware, which does not
            support newer colorspaces like BT.2020 correctly. However, <tt =
class=3D"docutils literal">vdpau</tt>
            doesn't support 10 bit or HDR encodings, so these limitations a=
re
            unlikely to be relevant.</p>
            <p><tt class=3D"docutils literal">dxva2</tt> is not safe. It ap=
pears to always use BT.601 for forced RGB
            conversion, but actual behavior depends on the GPU drivers. Som=
e drivers
            appear to convert to limited range RGB, which gives a faded app=
earance.
            In addition to driver-specific behavior, global system settings=
 might
            affect this additionally. This can give incorrect results even =
with
            completely ordinary video sources.</p>
            <p><tt class=3D"docutils literal">rpi</tt> always uses the hard=
ware overlay renderer, even with
            <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu</=
span></tt>.</p>
            <p><tt class=3D"docutils literal">mediacodec</tt> is not safe. =
It forces RGB conversion (not with <tt class=3D"docutils literal"><span cla=
ss=3D"pre">-copy</span></tt>)
            and how well it handles non-standard colorspaces is not known.
            In the rare cases where 10-bit is supported the bit depth of th=
e output
            will be reduced to 8.</p>
            <p><tt class=3D"docutils literal">cuda</tt> should usually be s=
afe, but depending on how a file/stream
            has been mixed, it has been reported to corrupt the timestamps =
causing
            glitched, flashing frames. It can also sometimes cause massive
            framedrops for unknown reasons. Caution is advised, and <tt cla=
ss=3D"docutils literal">nvdec</tt>
            should always be preferred.</p>
            <p><tt class=3D"docutils literal">crystalhd</tt> is not safe. I=
t always converts to 4:2:2 YUV, which
            may be lossy, depending on how chroma sub-sampling is done duri=
ng
            conversion. It also discards the top left pixel of each frame f=
or
            some reason.</p>
            <p class=3D"last">If you run into any weird decoding issues, fr=
ame glitches or
            discoloration, and you have <tt class=3D"docutils literal"><spa=
n class=3D"pre">--hwdec</span></tt> turned on, the first thing you
            should try is disabling it.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-hwdec-inte=
rop"><span class=3D"pre">--gpu-hwdec-interop=3D&lt;auto|all|no|name&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-gpu-hwdec-interop" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This option is for troubleshooting hwdec=
 interop issues. Since it's a
            debugging option, its semantics may change at any time.</p>
            <p>This is useful for the <tt class=3D"docutils literal">gpu</t=
t> and <tt class=3D"docutils literal">libmpv</tt> VOs for selecting which
            hwdec interop context to use exactly. Effectively it also can b=
e used
            to block loading of certain backends.</p>
            <p>If set to <tt class=3D"docutils literal">auto</tt> (default)=
, the behavior depends on the VO: for <tt class=3D"docutils literal">gpu</t=
t>,
            it does nothing, and the interop context is loaded on demand (w=
hen the
            decoder probes for <tt class=3D"docutils literal"><span class=
=3D"pre">--hwdec</span></tt> support). For <tt class=3D"docutils literal">l=
ibmpv</tt>, which has
            has no on-demand loading, this is equivalent to <tt class=3D"do=
cutils literal">all</tt>.</p>
            <p>The empty string is equivalent to <tt class=3D"docutils lite=
ral">auto</tt>.</p>
            <p>If set to <tt class=3D"docutils literal">all</tt>, it attemp=
ts to load all interop contexts at GL context
            creation time.</p>
            <p>Other than that, a specific backend can be set, and the list=
 of them can
            be queried with <tt class=3D"docutils literal">help</tt> (mpv C=
LI only).</p>
            <p>Runtime changes to this are ignored (the current option valu=
e is used
            whenever the renderer is created).</p>
            <p class=3D"last">The old aliases <tt class=3D"docutils literal=
"><span class=3D"pre">--opengl-hwdec-interop</span></tt> and <tt class=3D"d=
ocutils literal"><span class=3D"pre">--hwdec-preload</span></tt> are
            barely related to this anymore, but will be somewhat compatible=
 in some
            cases.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hwdec-extra-fr=
ames"><span class=3D"pre">--hwdec-extra-frames=3D&lt;N&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-hwdec-extra-frames" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Number of GPU frames hardware decoding s=
hould preallocate (default: see
            <tt class=3D"docutils literal"><span class=3D"pre">--list-optio=
ns</span></tt> output). If this is too low, frame allocation may fail
            during decoding, and video frames might get dropped and/or corr=
upted.
            Setting it too high simply wastes GPU memory and has no advanta=
ges.</p>
            <p>This value is used only for hardware decoding APIs which req=
uire
            preallocating surfaces (known examples include <tt class=3D"doc=
utils literal">d3d11va</tt> and <tt class=3D"docutils literal">vaapi</tt>).
            For other APIs, frames are allocated as needed. The details dep=
end on the
            libavcodec implementations of the hardware decoders.</p>
            <p class=3D"last">The required number of surfaces depends on dy=
namic runtime situations. The
            default is a fixed value that is thought to be sufficient for m=
ost uses. But
            in certain situations, it may not be enough.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hwdec-image-fo=
rmat"><span class=3D"pre">--hwdec-image-format=3D&lt;name&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-hwdec-image-format" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the internal pixel format used by ha=
rdware decoding via <tt class=3D"docutils literal"><span class=3D"pre">--hw=
dec</span></tt>
            (default <tt class=3D"docutils literal">no</tt>). The special v=
alue <tt class=3D"docutils literal">no</tt> selects an implementation
            specific standard format. Most decoder implementations support =
only one
            format, and will fail to initialize if the format is not suppor=
ted.</p>
            <p class=3D"last">Some implementations might support multiple f=
ormats. In particular,
            videotoolbox is known to require <tt class=3D"docutils literal"=
>uyvy422</tt> for good performance on some
            older hardware. d3d11va can always use <tt class=3D"docutils li=
teral">yuv420p</tt>, which uses an opaque
            format, with likely no advantages.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cuda-decode-de=
vice"><span class=3D"pre">--cuda-decode-device=3D&lt;auto|0..&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-cuda-decode-device" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Choose the GPU device used for decoding =
when using the <tt class=3D"docutils literal">cuda</tt> or
            <tt class=3D"docutils literal">nvdec</tt> hwdecs with the OpenG=
L GPU backend, and with the <tt class=3D"docutils literal"><span class=3D"p=
re">cuda-copy</span></tt>
            or <tt class=3D"docutils literal"><span class=3D"pre">nvdec-cop=
y</span></tt> hwdecs in all cases.</p>
            <p>For the OpenGL GPU backend, the default device used for deco=
ding is the one
            being used to provide <tt class=3D"docutils literal">gpu</tt> o=
utput (and in the vast majority of cases,
            only one GPU will be present).</p>
            <p>For the <tt class=3D"docutils literal">copy</tt> hwdecs, the=
 default device will be the first device
            enumerated by the CUDA libraries - however that is done.</p>
            <p class=3D"last">For the Vulkan GPU backend, decoding must alw=
ays happen on the display
            device, and this option has no effect.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vaapi-device">=
<span class=3D"pre">--vaapi-device=3D&lt;device</span> file&gt;<a href=3D"h=
ttps://mpv.io/manual/master/#options-vaapi-device" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Choose the DRM device for <tt class=3D"docutils literal"><s=
pan class=3D"pre">vaapi-copy</span></tt>. This should be the path to a
            DRM device file. (Default: <tt class=3D"docutils literal">/dev/=
dri/renderD128</tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-panscan"><span=
 class=3D"pre">--panscan=3D&lt;0.0-1.0&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-panscan" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enables pan-and-scan functionality (crop=
ping the sides of e.g. a 16:9
            video to make it fit a 4:3 display without black bands). The ra=
nge
            controls how much of the image is cropped. May not work with al=
l video
            output drivers.</p>
            <p class=3D"last">This option has no effect if <tt class=3D"doc=
utils literal"><span class=3D"pre">--video-unscaled</span></tt> option is u=
sed.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-aspect-o=
verride"><span class=3D"pre">--video-aspect-override=3D&lt;ratio|no&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-video-aspect-override" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Override video aspect ratio, in case asp=
ect information is incorrect or
            missing in the file being played.</p>
            <p>These values have special meaning:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">0:</th><td class=
=3D"field-body">disable aspect ratio handling, pretend the video has square=
 pixels</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">same as <tt class=3D"docutils literal">0</tt></td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">-1:</th><td class=
=3D"field-body">use the video stream or container aspect (default)</td>
            </tr>
            </tbody>
            </table>
            <p>But note that handling of these special values might change =
in the future.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--video-=
aspect-override=3D4:3</span></tt>  or <tt class=3D"docutils literal"><span =
class=3D"pre">--video-aspect-override=3D1.3333</span></tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--video-=
aspect-override=3D16:9</span></tt> or <tt class=3D"docutils literal"><span =
class=3D"pre">--video-aspect-override=3D1.7777</span></tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--no-vid=
eo-aspect-override</span></tt> or <tt class=3D"docutils literal"><span clas=
s=3D"pre">--video-aspect-override=3Dno</span></tt></li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-aspect-m=
ethod"><span class=3D"pre">--video-aspect-method=3D&lt;bitstream|container&=
gt;</span><a href=3D"https://mpv.io/manual/master/#options-video-aspect-met=
hod" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This sets the default video aspect deter=
mination method (if the aspect is
            _not_ overridden by the user with <tt class=3D"docutils literal=
"><span class=3D"pre">--video-aspect-override</span></tt> or others).</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">container:</th><td=
 class=3D"field-body">Strictly prefer the container aspect ratio. This is a=
pparently
            the default behavior with VLC, at least with Matroska. Note tha=
t
            if the container has no aspect ratio set, the behavior is the
            same as with bitstream.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bitstream:</th><td=
 class=3D"field-body">Strictly prefer the bitstream aspect ratio, unless th=
e bitstream
            aspect ratio is not set. This is apparently the default behavio=
r
            with XBMC/kodi, at least with Matroska.</td>
            </tr>
            </tbody>
            </table>
            <p>The current default for mpv is <tt class=3D"docutils literal=
">container</tt>.</p>
            <p class=3D"last">Normally you should not set this. Try the var=
ious choices if you encounter
            video that has the wrong aspect ratio in mpv, but seems to be c=
orrect in
            other players.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-unscaled=
"><span class=3D"pre">--video-unscaled=3D&lt;no|yes|downscale-big&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-video-unscaled" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Disable scaling of the video. If the win=
dow is larger than the video,
            black bars are added. Otherwise, the video is cropped, unless t=
he option
            is set to <tt class=3D"docutils literal"><span class=3D"pre">do=
wnscale-big</span></tt>, in which case the video is fit to window. The
            video still can be influenced by the other <tt class=3D"docutil=
s literal"><span class=3D"pre">--video-...</span></tt> options. This
            option disables the effect of <tt class=3D"docutils literal"><s=
pan class=3D"pre">--panscan</span></tt>.</p>
            <p>Note that the scaler algorithm may still be used, even if th=
e video isn't
            scaled. For example, this can influence chroma conversion. The =
video will
            also still be scaled in one dimension if the source uses non-sq=
uare pixels
            (e.g. anamorphic widescreen DVDs).</p>
            <p class=3D"last">This option is disabled if the <tt class=3D"d=
ocutils literal"><span class=3D"pre">--no-keepaspect</span></tt> option is =
used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-pan-x"><=
span class=3D"pre">--video-pan-x=3D&lt;value&gt;</span><a href=3D"https://m=
pv.io/manual/master/#options-video-pan-x" class=3D"anchor fa fa-link"></a><=
/tt>, <tt class=3D"docutils literal" id=3D"options-video-pan-y"><span class=
=3D"pre">--video-pan-y=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manu=
al/master/#options-video-pan-y" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Moves the displayed video rectangle by t=
he given value in the X or Y
            direction. The unit is in fractions of the size of the scaled v=
ideo (the
            full size, even if parts of the video are not visible due to pa=
nscan or
            other options).</p>
            <p>For example, displaying a 1280x720 video fullscreen on a 168=
0x1050 screen
            with <tt class=3D"docutils literal"><span class=3D"pre">--video=
-pan-x=3D-0.1</span></tt> would move the video 168 pixels to the left
            (making 128 pixels of the source video invisible).</p>
            <p class=3D"last">This option is disabled if the <tt class=3D"d=
ocutils literal"><span class=3D"pre">--no-keepaspect</span></tt> option is =
used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-rotate">=
<span class=3D"pre">--video-rotate=3D&lt;0-359|no&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-video-rotate" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Rotate the video clockwise, in degrees. =
If <tt class=3D"docutils literal">no</tt> is given, the video is
            never rotated, even if the file has rotation metadata. (The rot=
ation value
            is added to the rotation metadata, which means the value <tt cl=
ass=3D"docutils literal">0</tt> would rotate
            the video according to the rotation metadata.)</p>
            <p class=3D"last">When using hardware decoding without copy-bac=
k, only 90=C2=B0 steps work, while
            software decoding and hardware decoding methods that copy the v=
ideo back to
            system memory support all values between 0 and 359.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-zoom"><s=
pan class=3D"pre">--video-zoom=3D&lt;value&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-video-zoom" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Adjust the video display scale factor by=
 the given value. The parameter is
            given log 2. For example, <tt class=3D"docutils literal"><span =
class=3D"pre">--video-zoom=3D0</span></tt> is unscaled,
            <tt class=3D"docutils literal"><span class=3D"pre">--video-zoom=
=3D1</span></tt> is twice the size, <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--video-zoom=3D-2</span></tt> is one fourth of
            the size, and so on.</p>
            <p class=3D"last">This option is disabled if the <tt class=3D"d=
ocutils literal"><span class=3D"pre">--no-keepaspect</span></tt> option is =
used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-scale-x"=
><span class=3D"pre">--video-scale-x=3D&lt;value&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-video-scale-x" class=3D"anchor fa fa-link"=
></a></tt>, <tt class=3D"docutils literal" id=3D"options-video-scale-y"><sp=
an class=3D"pre">--video-scale-y=3D&lt;value&gt;</span><a href=3D"https://m=
pv.io/manual/master/#options-video-scale-y" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Multiply the video display size with the=
 given value (default: 1.0). If a
            non-default value is used, this will be different from the wind=
ow size, so
            video will be either cut off, or black bars are added.</p>
            <p class=3D"last">This value is multiplied with the value deriv=
ed from <tt class=3D"docutils literal"><span class=3D"pre">--video-zoom</sp=
an></tt> and
            the normal video aspect ratio. This option is disabled if the
            <tt class=3D"docutils literal"><span class=3D"pre">--no-keepasp=
ect</span></tt> option is used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-align-x"=
><span class=3D"pre">--video-align-x=3D&lt;-1-1&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-video-align-x" class=3D"anchor fa fa-link">=
</a></tt>, <tt class=3D"docutils literal" id=3D"options-video-align-y"><spa=
n class=3D"pre">--video-align-y=3D&lt;-1-1&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-video-align-y" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first">Moves the video rectangle within the bla=
ck borders, which are usually added
            to pad the video to screen if video and screen aspect ratios ar=
e different.
            <tt class=3D"docutils literal"><span class=3D"pre">--video-alig=
n-y=3D-1</span></tt> would move the video to the top of the screen
            (leaving a border only on the bottom), a value of <tt class=3D"=
docutils literal">0</tt> centers it
            (default), and a value of <tt class=3D"docutils literal">1</tt>=
 would put the video at the bottom of the
            screen.</p>
            <p>If video and screen aspect match perfectly, these options do=
 nothing.</p>
            <p class=3D"last">This option is disabled if the <tt class=3D"d=
ocutils literal"><span class=3D"pre">--no-keepaspect</span></tt> option is =
used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-margin-r=
atio-left"><span class=3D"pre">--video-margin-ratio-left=3D&lt;val&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-video-margin-ratio-left"=
 class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"options-video-margin-ratio-right"><span class=3D"pre">--video-margin-ra=
tio-right=3D&lt;val&gt;</span><a href=3D"https://mpv.io/manual/master/#opti=
ons-video-margin-ratio-right" class=3D"anchor fa fa-link"></a></tt>, <tt cl=
ass=3D"docutils literal" id=3D"options-video-margin-ratio-top"><span class=
=3D"pre">--video-margin-ratio-top=3D&lt;val&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-video-margin-ratio-top" class=3D"anchor fa fa-l=
ink"></a></tt>, <tt class=3D"docutils literal" id=3D"options-video-margin-r=
atio-bottom"><span class=3D"pre">--video-margin-ratio-bottom=3D&lt;val&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-video-margin-ratio-b=
ottom" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set extra video margins on each border (=
default: 0). Each value is a ratio
            of the window size, using a range 0.0-1.0. For example, setting=
 the option
            <tt class=3D"docutils literal"><span class=3D"pre">--video-marg=
in-ratio-right=3D0.2</span></tt> at a window size of 1000 pixels will add
            a 200 pixels border on the right side of the window.</p>
            <p>The video is "boxed" by these margins. The window size is no=
t changed. In
            particular it does not enlarge the window, and the margins will=
 cause the
            video to be downscaled by default. This may or may not change i=
n the future.</p>
            <p>The margins are applied after 90=C2=B0 video rotation, but b=
efore any other video
            transformations.</p>
            <p>This option is disabled if the <tt class=3D"docutils literal=
"><span class=3D"pre">--no-keepaspect</span></tt> option is used.</p>
            <p>Subtitles still may use the margins, depending on <tt class=
=3D"docutils literal"><span class=3D"pre">--sub-use-margins</span></tt> and
            similar options.</p>
            <p class=3D"last">These options were created for the OSC. Some =
odd decisions, such as making
            the margin values a ratio (instead of pixels), were made for th=
e sake of
            the OSC. It's possible that these options may be replaced by on=
es that are
            more generally useful. The behavior of these options may change=
 to fit
            OSC requirements better, too.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-correct-pts"><=
span class=3D"pre">--correct-pts</span><a href=3D"https://mpv.io/manual/mas=
ter/#options-correct-pts" class=3D"anchor fa fa-link"></a></tt>, <tt class=
=3D"docutils literal" id=3D"options-no-correct-pts"><span class=3D"pre">--n=
o-correct-pts</span><a href=3D"https://mpv.io/manual/master/#options-no-cor=
rect-pts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">--no-cor=
rect-pts</span></tt> switches mpv to a mode where video timing is
            determined using a fixed framerate value (either using the <tt =
class=3D"docutils literal"><span class=3D"pre">--fps</span></tt>
            option, or using file information). Sometimes, files with very =
broken
            timestamps can be played somewhat well in this mode. Note that =
video
            filters, subtitle rendering, seeking (including hr-seeks and ba=
ckstepping),
            and audio synchronization can be completely broken in this mode=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-fps"><span cla=
ss=3D"pre">--fps=3D&lt;float&gt;</span><a href=3D"https://mpv.io/manual/mas=
ter/#options-fps" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Override video framerate. Useful if the =
original value is wrong or missing.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Works in <tt class=3D"docutils literal"><span=
 class=3D"pre">--no-correct-pts</span></tt> mode only.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-deinterlace"><=
span class=3D"pre">--deinterlace=3D&lt;yes|no&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-deinterlace" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd><p class=3D"first">Enable or disable interlacing (default: =
no).
            Interlaced video shows ugly comb-like artifacts, which are visi=
ble on
            fast movement. Enabling this typically inserts the yadif video =
filter in
            order to deinterlace the video, or lets the video output apply =
deinterlacing
            if supported.</p>
            <p>This behaves exactly like the <tt class=3D"docutils literal"=
>deinterlace</tt> input property (usually
            mapped to <tt class=3D"docutils literal">d</tt>).</p>
            <p>Keep in mind that this <strong>will</strong> conflict with m=
anually inserted
            deinterlacing filters, unless you take care. (Since mpv 0.27.0,=
 even the
            hardware deinterlace filters will conflict. Also since that ver=
sion,
            <tt class=3D"docutils literal"><span class=3D"pre">--deinterlac=
e=3Dauto</span></tt> was removed, which used to mean that the default
            interlacing option of possibly inserted video filters was used.=
)</p>
            <p class=3D"last">Note that this will make video look worse if =
it's not actually interlaced.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-frames"><span =
class=3D"pre">--frames=3D&lt;number&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-frames" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Play/convert only first <tt class=3D"doc=
utils literal">&lt;number&gt;</tt> video frames, then quit.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">--frames=
=3D0</span></tt> loads the file, but immediately quits before initializing
            playback. (Might be useful for scripts which just want to deter=
mine some
            file properties.)</p>
            <p class=3D"last">For audio-only playback, any value greater th=
an 0 will quit playback
            immediately after initialization. The value 0 works as with vid=
eo.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-output-l=
evels"><span class=3D"pre">--video-output-levels=3D&lt;outputlevels&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-video-output-levels" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">RGB color levels used with YUV to RGB co=
nversion. Normally, output devices
            such as PC monitors use full range color levels. However, some =
TVs and
            video monitors expect studio RGB levels. Providing full range o=
utput to a
            device expecting studio level input results in crushed blacks a=
nd whites,
            the reverse in dim gray blacks and dim whites.</p>
            <p>Not all VOs support this option. Some will silently ignore i=
t.</p>
            <p>Available color ranges are:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">automatic selection (equals to full range) (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">limited:</th><td c=
lass=3D"field-body">limited range (16-235 per component), studio levels</td=
>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">full:</th><td clas=
s=3D"field-body">full range (0-255 per component), PC levels</td>
            </tr>
            </tbody>
            </table>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">It is advisable to use your graphics driver's=
 color range option
            instead, if available.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hwdec-codecs">=
<span class=3D"pre">--hwdec-codecs=3D&lt;codec1,codec2,...|all&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-hwdec-codecs" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Allow hardware decoding for a given list=
 of codecs only. The special value
            <tt class=3D"docutils literal">all</tt> always allows all codec=
s.</p>
            <p>You can get the list of allowed codecs with <tt class=3D"doc=
utils literal">mpv <span class=3D"pre">--vd=3Dhelp</span></tt>. Remove the
            prefix, e.g. instead of <tt class=3D"docutils literal">lavc:h26=
4</tt> use <tt class=3D"docutils literal">h264</tt>.</p>
            <p>By default, this is set to <tt class=3D"docutils literal">h2=
64,vc1,hevc,vp8,vp9,av1</tt>. Note that
            the hardware acceleration special codecs like <tt class=3D"docu=
tils literal">h264_vdpau</tt> are not
            relevant anymore, and in fact have been removed from Libav in t=
his form.</p>
            <p>This is usually only needed with broken GPUs, where a codec =
is reported
            as supported, but decoding causes more problems than it solves.=
</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-hwdec">mpv <sp=
an class=3D"pre">--hwdec=3Dvdpau</span> <span class=3D"pre">--vo=3Dvdpau</s=
pan> <span class=3D"pre">--hwdec-codecs=3Dh264,mpeg2video</span><a href=3D"=
https://mpv.io/manual/master/#options-hwdec" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Enable vdpau decoding for h264 and mpeg2 only.</dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-check-=
hw-profile"><span class=3D"pre">--vd-lavc-check-hw-profile=3D&lt;yes|no&gt;=
</span><a href=3D"https://mpv.io/manual/master/#options-vd-lavc-check-hw-pr=
ofile" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Check hardware decoder profile (default: yes). If <tt class=
=3D"docutils literal">no</tt> is set, the
            highest profile of the hardware decoder is unconditionally sele=
cted, and
            decoding is forced even if the profile of the video is higher t=
han that.
            The result is most likely broken decoding, but may also help if=
 the
            detected or reported profiles are somehow incorrect.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-softwa=
re-fallback"><span class=3D"pre">--vd-lavc-software-fallback=3D&lt;yes|no|N=
&gt;</span><a href=3D"https://mpv.io/manual/master/#options-vd-lavc-softwar=
e-fallback" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Fallback to software decoding if the har=
dware-accelerated decoder fails
            (default: 3). If this is a number, then fallback will be trigge=
red if
            N frames fail to decode in a row. 1 is equivalent to <tt class=
=3D"docutils literal">yes</tt>.</p>
            <p class=3D"last">Setting this to a higher number might break t=
he playback start fallback: if
            a fallback happens, parts of the file will be skipped, approxim=
ately by to
            the number of packets that could not be decoded. Values below a=
n unspecified
            count will not have this problem, because mpv retains the packe=
ts.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-film-g=
rain"><span class=3D"pre">--vd-lavc-film-grain=3D&lt;auto|cpu|gpu&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-vd-lavc-film-grain" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enables film grain application on the GP=
U. If video decoding is done on
            the CPU, doing film grain application on the GPU can speed up d=
ecoding.
            This option can also help hardware decoding, as it can reduce t=
he number
            of frame copies done.</p>
            <p class=3D"last">By default, it's set to <tt class=3D"docutils=
 literal">auto</tt>, so if the VO supports film grain
            application, then it will be treated as <tt class=3D"docutils l=
iteral">gpu</tt>. If the VO does not
            support this, then it will be treated as <tt class=3D"docutils =
literal">cpu</tt>, regardless of the setting.
            Currently, only <tt class=3D"docutils literal"><span class=3D"p=
re">gpu-next</span></tt> supports film grain application.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-dr"><s=
pan class=3D"pre">--vd-lavc-dr=3D&lt;auto|yes|no&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-vd-lavc-dr" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd><p class=3D"first">Enable direct rendering (default: auto).=
 If this is set to <tt class=3D"docutils literal">yes</tt>, the
            video will be decoded directly to GPU video memory (or staging =
buffers).
            This can speed up video upload, and may help with large resolut=
ions or
            slow hardware. This works only with the following VOs:</p>
            <blockquote>
            <ul class=3D"simple">
            <li><tt class=3D"docutils literal">gpu</tt>: requires at least =
OpenGL 4.4 or Vulkan.</li>
            <li><tt class=3D"docutils literal">libmpv</tt>: The libmpv rend=
er API has optional support.</li>
            </ul>
            </blockquote>
            <p>The <tt class=3D"docutils literal">auto</tt> option will try=
 to guess whether DR can improve performance
            on your particular hardware. Currently this enables it on AMD o=
r NVIDIA
            if using OpenGL or unconditionally if using Vulkan.</p>
            <p class=3D"last">Using video filters of any kind that write to=
 the image data (or output
            newly allocated frames) will silently disable the DR code path.=
</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-bitexa=
ct"><span class=3D"pre">--vd-lavc-bitexact</span><a href=3D"https://mpv.io/=
manual/master/#options-vd-lavc-bitexact" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Only use bit-exact algorithms in all decoding steps (for co=
dec testing).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-fast">=
<span class=3D"pre">--vd-lavc-fast</span><a href=3D"https://mpv.io/manual/m=
aster/#options-vd-lavc-fast" class=3D"anchor fa fa-link"></a></tt> (MPEG-1/=
2 and H.264 only)</dt>
            <dd>Enable optimizations which do not comply with the format sp=
ecification and
            potentially cause problems, like simpler dequantization, simple=
r motion
            compensation, assuming use of the default quantization matrix, =
assuming YUV
            4:2:0 and skipping a few checks to detect damaged bitstreams.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-o"><sp=
an class=3D"pre">--vd-lavc-o=3D&lt;key&gt;=3D&lt;value&gt;[,&lt;key&gt;=3D&=
lt;value&gt;[,...]]</span><a href=3D"https://mpv.io/manual/master/#options-=
vd-lavc-o" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Pass AVOptions to libavcodec decoder. No=
te, a patch to make the <tt class=3D"docutils literal">o=3D</tt>
            unneeded and pass all unknown options through the AVOption syst=
em is
            welcome. A full list of AVOptions can be found in the FFmpeg ma=
nual.</p>
            <p>Some options which used to be direct options can be set with=
 this
            mechanism, like <tt class=3D"docutils literal">bug</tt>, <tt cl=
ass=3D"docutils literal">gray</tt>, <tt class=3D"docutils literal">idct</tt=
>, <tt class=3D"docutils literal">ec</tt>, <tt class=3D"docutils literal">v=
ismv</tt>,
            <tt class=3D"docutils literal">skip_top</tt> (was <tt class=3D"=
docutils literal">st</tt>), <tt class=3D"docutils literal">skip_bottom</tt>=
 (was <tt class=3D"docutils literal">sb</tt>), <tt class=3D"docutils litera=
l">debug</tt>.</p>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--vd-lavc-o=3Ddebug=3Dpict</span></tt></p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-show-a=
ll"><span class=3D"pre">--vd-lavc-show-all=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-vd-lavc-show-all" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Show even broken/corrupt frames (default: no). If this opti=
on is set to
            no, libavcodec won't output frames that were either decoded bef=
ore an
            initial keyframe was decoded, or frames that are recognized as =
corrupted.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-skiplo=
opfilter"><span class=3D"pre">--vd-lavc-skiploopfilter=3D&lt;skipvalue&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-vd-lavc-skiploopfilt=
er" class=3D"anchor fa fa-link"></a></tt> (H.264, HEVC only)</dt>
            <dd><p class=3D"first">Skips the loop filter (AKA deblocking) d=
uring decoding. Since
            the filtered frame is supposed to be used as reference for deco=
ding
            dependent frames, this has a worse effect on quality than not d=
oing
            deblocking on e.g. MPEG-2 video. But at least for high bitrate =
HDTV,
            this provides a big speedup with little visible quality loss.
            Codecs other than H.264 or HEVC may have partial support for th=
is option
            (often only <tt class=3D"docutils literal">all</tt> and <tt cla=
ss=3D"docutils literal">none</tt>).</p>
            <p><tt class=3D"docutils literal">&lt;skipvalue&gt;</tt> can be=
 one of the following:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">none:</th><td clas=
s=3D"field-body">Never skip.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">default:</th><td c=
lass=3D"field-body">Skip useless processing steps (e.g. 0 size packets in A=
VI).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">nonref:</th><td cl=
ass=3D"field-body">Skip frames that are not referenced (i.e. not used for
            decoding other frames, the error cannot "build up").</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bidir:</th><td cla=
ss=3D"field-body">Skip B-Frames.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">nonkey:</th><td cl=
ass=3D"field-body">Skip all frames except keyframes.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">all:</th><td class=
=3D"field-body">Skip all frames.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-skipid=
ct"><span class=3D"pre">--vd-lavc-skipidct=3D&lt;skipvalue&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-vd-lavc-skipidct" class=3D"ancho=
r fa fa-link"></a></tt> (MPEG-1/2/4 only)</dt>
            <dd>Skips the IDCT step. This degrades quality a lot in almost =
all cases
            (see skiploopfilter for available skip values).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-skipfr=
ame"><span class=3D"pre">--vd-lavc-skipframe=3D&lt;skipvalue&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-vd-lavc-skipframe" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Skips decoding of frames completely. Big speedup, but jerky=
 motion and
            sometimes bad artifacts (see skiploopfilter for available skip =
values).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-framed=
rop"><span class=3D"pre">--vd-lavc-framedrop=3D&lt;skipvalue&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-vd-lavc-framedrop" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Set framedropping mode used with <tt class=3D"docutils lite=
ral"><span class=3D"pre">--framedrop</span></tt> (see skiploopfilter for
            available skip values).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-thread=
s"><span class=3D"pre">--vd-lavc-threads=3D&lt;N&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-vd-lavc-threads" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Number of threads to use for decoding. Whether threading is=
 actually
            supported depends on codec (default: 0). 0 means autodetect num=
ber of cores
            on the machine and use that, up to the maximum of 16. You can s=
et more than
            16 threads manually.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-lavc-assume=
-old-x264"><span class=3D"pre">--vd-lavc-assume-old-x264=3D&lt;yes|no&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-vd-lavc-assume-old-x2=
64" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Assume the video was encoded by an old, buggy x264 version =
(default: no).
            Normally, this is autodetected by libavcodec. But if the bitstr=
eam contains
            no x264 version info (or it was somehow skipped), and the strea=
m was in fact
            encoded by an old x264 version (build 150 or earlier), and if t=
he stream
            uses 4:4:4 chroma, then libavcodec will by default show corrupt=
ed video.
            This option sets the libavcodec <tt class=3D"docutils literal">=
x264_build</tt> option to <tt class=3D"docutils literal">150</tt>, which
            means that if the stream contains no version info, or was not e=
ncoded by
            x264 at all, it assumes it was encoded by the old version. Enab=
ling this
            option is pretty safe if you want your broken files to work, bu=
t in theory
            this can break on streams not encoded by x264, or if a stream e=
ncoded by a
            newer x264 version contains no version info.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-swapchain-dept=
h"><span class=3D"pre">--swapchain-depth=3D&lt;N&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-swapchain-depth" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Allow up to N in-flight frames. This essentially controls t=
he frame
            latency. Increasing the swapchain depth can improve pipelining =
and prevent
            missed vsyncs, but increases visible latency. This option only =
mandates an
            upper limit, the implementation can use a lower latency than re=
quested
            internally. A setting of 1 means that the VO will wait for ever=
y frame to
            become visible before starting to render the next frame. (Defau=
lt: 3)</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"audio">
            <h2>Audio</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-audio-pitch-co=
rrection"><span class=3D"pre">--audio-pitch-correction=3D&lt;yes|no&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-audio-pitch-correction"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If this is enabled (default), playing with a speed differen=
t from normal
            automatically inserts the <tt class=3D"docutils literal">scalet=
empo2</tt> audio filter. For details, see
            audio filter section.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-device">=
<span class=3D"pre">--audio-device=3D&lt;name&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-audio-device" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Use the given audio device. This consist=
s of the audio output name, e.g.
            <tt class=3D"docutils literal">alsa</tt>, followed by <tt class=
=3D"docutils literal">/</tt>, followed by the audio output specific device
            name. The default value for this option is <tt class=3D"docutil=
s literal">auto</tt>, which tries every audio
            output in preference order with the default device.</p>
            <p>You can list audio devices with <tt class=3D"docutils litera=
l"><span class=3D"pre">--audio-device=3Dhelp</span></tt>. This outputs the
            device name in quotes, followed by a description. The device na=
me is what
            you have to pass to the <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--audio-device</span></tt> option. The list of audio devices
            can be retrieved by API by using the <tt class=3D"docutils lite=
ral"><span class=3D"pre">audio-device-list</span></tt> property.</p>
            <p>While the option normally takes one of the strings as indica=
ted by the
            methods above, you can also force the device for most AOs by bu=
ilding it
            manually. For example <tt class=3D"docutils literal">name/fooba=
r</tt> forces the AO <tt class=3D"docutils literal">name</tt> to use the
            device <tt class=3D"docutils literal">foobar</tt>. However, the=
 <tt class=3D"docutils literal"><span class=3D"pre">--ao</span></tt> option=
 will strictly force a
            specific AO. To avoid confusion, don't use <tt class=3D"docutil=
s literal"><span class=3D"pre">--ao</span></tt> and <tt class=3D"docutils l=
iteral"><span class=3D"pre">--audio-device</span></tt>
            together.</p>
            <div class=3D"admonition admonition-example-for-alsa last">
            <p class=3D"first admonition-title">Example for ALSA</p>
            <p>MPlayer and mplayer2 required you to replace any ',' with '.=
' and
            any ':' with '=3D' in the ALSA device name. For example, to use=
 the
            device named <tt class=3D"docutils literal">dmix:default</tt>, =
you had to do:</p>
            <blockquote>
            <tt class=3D"docutils literal"><span class=3D"pre">-ao</span> a=
lsa:device=3Ddmix=3Ddefault</tt></blockquote>
            <p>In mpv you could instead use:</p>
            <blockquote class=3D"last">
            <tt class=3D"docutils literal"><span class=3D"pre">--audio-devi=
ce=3Dalsa/dmix:default</span></tt></blockquote>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-exclusiv=
e"><span class=3D"pre">--audio-exclusive=3D&lt;yes|no&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-audio-exclusive" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd><p class=3D"first">Enable exclusive output mode. In this mo=
de, the system is usually locked
            out, and only mpv will be able to output audio.</p>
            <p class=3D"last">This only works for some audio outputs, such =
as <tt class=3D"docutils literal">wasapi</tt>, <tt class=3D"docutils litera=
l">coreaudio</tt>
            and <tt class=3D"docutils literal">pipewire</tt>. Other audio o=
utputs silently ignore this option.
            They either have no concept of exclusive mode, or the mpv side =
of the
            implementation is missing.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-fallback=
-to-null"><span class=3D"pre">--audio-fallback-to-null=3D&lt;yes|no&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-audio-fallback-to-null"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If no audio device can be opened, behave as if <tt class=3D=
"docutils literal"><span class=3D"pre">--ao=3Dnull</span></tt> was given. T=
his
            is useful in combination with <tt class=3D"docutils literal"><s=
pan class=3D"pre">--audio-device</span></tt>: instead of causing an
            error if the selected device does not exist, the client API use=
r (or a
            Lua script) could let playback continue normally, and check the
            <tt class=3D"docutils literal"><span class=3D"pre">current-ao</=
span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">audio-dev=
ice-list</span></tt> properties to make high-level
            decisions about how to continue.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ao"><span clas=
s=3D"pre">--ao=3D&lt;driver&gt;</span><a href=3D"https://mpv.io/manual/mast=
er/#options-ao" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the audio output drivers to be used. See <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#audio-output-=
drivers">AUDIO OUTPUT DRIVERS</a> for
            details and descriptions of available drivers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-af"><span clas=
s=3D"pre">--af=3D&lt;filter1[=3Dparameter1:parameter2:...],filter2,...&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-af" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Specify a list of audio filters to apply to the audio strea=
m. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#audio-filters">AUDIO FILTERS</a> for details and descriptions of the=
 available filters.
            The option variants <tt class=3D"docutils literal"><span class=
=3D"pre">--af-add</span></tt>, <tt class=3D"docutils literal"><span class=
=3D"pre">--af-pre</span></tt>, <tt class=3D"docutils literal"><span class=
=3D"pre">--af-del</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">--af-clr</sp=
an></tt> exist to modify a previously specified list, but you
            should not need these for typical use.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-spdif"><=
span class=3D"pre">--audio-spdif=3D&lt;codecs&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-audio-spdif" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd><p class=3D"first">List of codecs for which compressed audi=
o passthrough should be used. This
            works for both classic S/PDIF and HDMI.</p>
            <p>Possible codecs are <tt class=3D"docutils literal">ac3</tt>,=
 <tt class=3D"docutils literal">dts</tt>, <tt class=3D"docutils literal"><s=
pan class=3D"pre">dts-hd</span></tt>, <tt class=3D"docutils literal">eac3</=
tt>, <tt class=3D"docutils literal">truehd</tt>.
            Multiple codecs can be specified by separating them with <tt cl=
ass=3D"docutils literal">,</tt>. <tt class=3D"docutils literal">dts</tt>
            refers to low bitrate DTS core, while <tt class=3D"docutils lit=
eral"><span class=3D"pre">dts-hd</span></tt> refers to DTS MA (receiver
            and OS support varies). If both <tt class=3D"docutils literal">=
dts</tt> and <tt class=3D"docutils literal"><span class=3D"pre">dts-hd</spa=
n></tt> are specified, it
            behaves equivalent to specifying <tt class=3D"docutils literal"=
><span class=3D"pre">dts-hd</span></tt> only.</p>
            <p>In earlier mpv versions you could use <tt class=3D"docutils =
literal"><span class=3D"pre">--ad</span></tt> to force the spdif wrapper.
            This does not work anymore.</p>
            <div class=3D"admonition admonition-warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">There is not much reason to use this. HDMI su=
pports uncompressed
            multichannel PCM, and mpv supports lossless DTS-HD decoding via
            FFmpeg's new DCA decoder (based on libdcadec).</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ad"><span clas=
s=3D"pre">--ad=3D&lt;decoder1,decoder2,...[-]&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-ad" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Specify a priority list of audio decoder=
s to be used, according to their
            decoder name. When determining which decoder to use, the first =
decoder that
            matches the audio format is selected. If that is unavailable, t=
he next
            decoder is used. Finally, it tries all other decoders that are =
not
            explicitly selected or rejected by the option.</p>
            <p><tt class=3D"docutils literal">-</tt> at the end of the list=
 suppresses fallback on other available
            decoders not on the <tt class=3D"docutils literal"><span class=
=3D"pre">--ad</span></tt> list. <tt class=3D"docutils literal">+</tt> in fr=
ont of an entry forces the
            decoder. Both of these should not normally be used, because the=
y break
            normal decoder auto-selection! Both of these methods are deprec=
ated.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-ad"><span clas=
s=3D"pre">--ad=3Dmp3float</span><a href=3D"https://mpv.io/manual/master/#op=
tions-ad" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Prefer the FFmpeg/Libav <tt class=3D"docutils literal">mp3f=
loat</tt> decoder over all other MP3
            decoders.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ad"><span clas=
s=3D"pre">--ad=3Dhelp</span><a href=3D"https://mpv.io/manual/master/#option=
s-ad" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>List all available decoders.</dd>
            </dl>
            </div>
            <div class=3D"admonition admonition-warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Enabling compressed audio passthrough (AC3 an=
d DTS via SPDIF/HDMI) with
            this option is not possible. Use <tt class=3D"docutils literal"=
><span class=3D"pre">--audio-spdif</span></tt> instead.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-volume"><span =
class=3D"pre">--volume=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manu=
al/master/#options-volume" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the startup volume. 0 means silence,=
 100 means no volume reduction or
            amplification. Negative values can be passed for compatibility,=
 but are
            treated as 0.</p>
            <p class=3D"last">Since mpv 0.18.1, this always controls the in=
ternal mixer (aka "softvol").</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-replaygain"><s=
pan class=3D"pre">--replaygain=3D&lt;no|track|album&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-replaygain" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Adjust volume gain according to replaygain values stored in=
 the file
            metadata. With <tt class=3D"docutils literal"><span class=3D"pr=
e">--replaygain=3Dno</span></tt> (the default), perform no adjustment.
            With <tt class=3D"docutils literal"><span class=3D"pre">--repla=
ygain=3Dtrack</span></tt>, apply track gain. With <tt class=3D"docutils lit=
eral"><span class=3D"pre">--replaygain=3Dalbum</span></tt>,
            apply album gain if present and fall back to track gain otherwi=
se.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-replaygain-pre=
amp"><span class=3D"pre">--replaygain-preamp=3D&lt;db&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-replaygain-preamp" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Pre-amplification gain in dB to apply to the selected repla=
ygain gain
            (default: 0).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-replaygain-cli=
p"><span class=3D"pre">--replaygain-clip=3D&lt;yes|no&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-replaygain-clip" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Prevent clipping caused by replaygain by automatically lowe=
ring the
            gain (default). Use <tt class=3D"docutils literal"><span class=
=3D"pre">--replaygain-clip=3Dno</span></tt> to disable this.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-replaygain-fal=
lback"><span class=3D"pre">--replaygain-fallback=3D&lt;db&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-replaygain-fallback" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Gain in dB to apply if the file has no replay gain tags. Th=
is option
            is always applied if the replaygain logic is somehow inactive. =
If this
            is applied, no other replaygain options are applied.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-delay"><=
span class=3D"pre">--audio-delay=3D&lt;sec&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-audio-delay" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>Audio delay in seconds (positive or negative float value). =
Positive values
            delay the audio, and negative values delay the video.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-mute"><span cl=
ass=3D"pre">--mute=3D&lt;yes|no|auto&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-mute" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set startup audio mute status (default: =
no).</p>
            <p><tt class=3D"docutils literal">auto</tt> is a deprecated pos=
sible value that is equivalent to <tt class=3D"docutils literal">no</tt>.</=
p>
            <p class=3D"last">See also: <tt class=3D"docutils literal"><spa=
n class=3D"pre">--volume</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-softvol"><span=
 class=3D"pre">--softvol=3D&lt;no|yes|auto&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-softvol" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Deprecated/unfunctional. Before mpv 0.18=
.1, this used to control whether
            to use the volume controls of the audio output driver or the in=
ternal mpv
            volume filter.</p>
            <p>The current behavior is that softvol is always enabled, i.e.=
 as if this
            option is set to <tt class=3D"docutils literal">yes</tt>. The o=
ther behaviors are not available anymore,
            although <tt class=3D"docutils literal">auto</tt> almost matche=
s current behavior in most cases.</p>
            <p class=3D"last">The <tt class=3D"docutils literal">no</tt> be=
havior is still partially available through the <tt class=3D"docutils liter=
al"><span class=3D"pre">ao-volume</span></tt>
            and <tt class=3D"docutils literal"><span class=3D"pre">ao-mute<=
/span></tt> properties. But there are no options to reset these.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-demuxer"=
><span class=3D"pre">--audio-demuxer=3D&lt;[+]name&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-audio-demuxer" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Use this audio demuxer type when using <tt class=3D"docutil=
s literal"><span class=3D"pre">--audio-file</span></tt>. Use a '+' before
            the name to force it; this will skip some checks. Give the demu=
xer name as
            printed by <tt class=3D"docutils literal"><span class=3D"pre">-=
-audio-demuxer=3Dhelp</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ad-lavc-ac3drc=
"><span class=3D"pre">--ad-lavc-ac3drc=3D&lt;level&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-ad-lavc-ac3drc" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd><p class=3D"first">Select the Dynamic Range Compression lev=
el for AC-3 audio streams.
            <tt class=3D"docutils literal">&lt;level&gt;</tt> is a float va=
lue ranging from 0 to 1, where 0 means no
            compression (which is the default) and 1 means full compression=
 (make loud
            passages more silent and vice versa). Values up to 6 are also a=
ccepted, but
            are purely experimental. This option only shows an effect if th=
e AC-3 stream
            contains the required range compression information.</p>
            <p class=3D"last">The standard mandates that DRC is enabled by =
default, but mpv (and some
            other players) ignore this for the sake of better audio quality=
.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ad-lavc-downmi=
x"><span class=3D"pre">--ad-lavc-downmix=3D&lt;yes|no&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-ad-lavc-downmix" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Whether to request audio channel downmixing from the decode=
r (default: no).
            Some decoders, like AC-3, AAC and DTS, can remix audio on decod=
ing. The
            requested number of output channels is set with the <tt class=
=3D"docutils literal"><span class=3D"pre">--audio-channels</span></tt> opti=
on.
            Useful for playing surround audio on a stereo system.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ad-lavc-thread=
s"><span class=3D"pre">--ad-lavc-threads=3D&lt;0-16&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-ad-lavc-threads" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Number of threads to use for decoding. Whether threading is=
 actually
            supported depends on codec. As of this writing, it's supported =
for some
            lossless codecs only. 0 means autodetect number of cores on the
            machine and use that, up to the maximum of 16 (default: 1).</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"options-ad-lavc-o"><sp=
an class=3D"pre">--ad-lavc-o=3D&lt;key&gt;=3D&lt;value&gt;[,&lt;key&gt;=3D&=
lt;value&gt;[,...]]</span><a href=3D"https://mpv.io/manual/master/#options-=
ad-lavc-o" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Pass AVOptions to libavcodec decoder. No=
te, a patch to make the o=3D
            unneeded and pass all unknown options through the AVOption syst=
em is
            welcome. A full list of AVOptions can be found in the FFmpeg ma=
nual.</p>
            <p class=3D"last">This is a key/value list option. See <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#list-options"=
>List Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ad-spdif-dtshd=
"><span class=3D"pre">--ad-spdif-dtshd=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-ad-spdif-dtshd" class=3D"anchor fa fa-l=
ink"></a></tt>, <tt class=3D"docutils literal" id=3D"options-dtshd"><span c=
lass=3D"pre">--dtshd</span><a href=3D"https://mpv.io/manual/master/#options=
-dtshd" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils litera=
l" id=3D"options-no-dtshd"><span class=3D"pre">--no-dtshd</span><a href=3D"=
https://mpv.io/manual/master/#options-no-dtshd" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">If DTS is passed through, use DTS-HD.</p=
>
            <div class=3D"admonition admonition-warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This and enabling passthrough via <tt class=
=3D"docutils literal"><span class=3D"pre">--ad</span></tt> are deprecated i=
n favor of
            using <tt class=3D"docutils literal"><span class=3D"pre">--audi=
o-spdif=3Ddts-hd</span></tt>.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-channels=
"><span class=3D"pre">--audio-channels=3D&lt;auto-safe|auto|layouts&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-audio-channels" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Control which audio channels are output =
(e.g. surround vs. stereo). There
            are the following possibilities:</p>
            <ul>
            <li><dl class=3D"first docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-audio-channels=
"><span class=3D"pre">--audio-channels=3Dauto-safe</span><a href=3D"https:/=
/mpv.io/manual/master/#options-audio-channels" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Use the system's preferred channel layou=
t. If there is none (such
            as when accessing a hardware device instead of the system mixer=
),
            force stereo. Some audio outputs might simply accept any layout=
 and
            do downmixing on their own.</p>
            <p class=3D"last">This is the default.</p>
            </dd>
            </dl>
            </li>
            <li><dl class=3D"first docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-audio-channels=
"><span class=3D"pre">--audio-channels=3Dauto</span><a href=3D"https://mpv.=
io/manual/master/#options-audio-channels" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first last">Send the audio device whatever it a=
ccepts, preferring the audio's
            original channel layout. Can cause issues with HDMI (see the wa=
rning
            below).</p>
            </dd>
            </dl>
            </li>
            <li><dl class=3D"first docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-audio-channels=
"><span class=3D"pre">--audio-channels=3Dlayout1,layout2,...</span><a href=
=3D"https://mpv.io/manual/master/#options-audio-channels" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd><p class=3D"first">List of <tt class=3D"docutils literal">,=
</tt>-separated channel layouts which should be allowed.
            Technically, this only adjusts the filter chain output to the b=
est
            matching layout in the list, and passes the result to the audio=
 API.
            It's possible that the audio API will select a different channe=
l
            layout.</p>
            <p class=3D"last">Using this mode is recommended for direct har=
dware output, especially
            over HDMI (see HDMI warning below).</p>
            </dd>
            </dl>
            </li>
            <li><dl class=3D"first docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-audio-channels=
"><span class=3D"pre">--audio-channels=3D&lt;stereo|mono&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-audio-channels" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd><p class=3D"first last">Force a downmix to stereo or mono. =
These are special-cases of the
            previous item. (See paragraphs below for implications.)</p>
            </dd>
            </dl>
            </li>
            </ul>
            <p>If a list of layouts is given, each item can be either an ex=
plicit channel
            layout name (like <tt class=3D"docutils literal">5.1</tt>), or =
a channel number. Channel numbers refer to
            default layouts, e.g. 2 channels refer to stereo, 6 refers to 5=
.1.</p>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">--aud=
io-channels=3Dhelp</span></tt> output for defined default layouts. This als=
o
            lists speaker names, which can be used to express arbitrary cha=
nnel
            layouts (e.g. <tt class=3D"docutils literal"><span class=3D"pre=
">fl-fr-lfe</span></tt> is 2.1).</p>
            <p>If the list of channel layouts has only 1 item, the decoder =
is asked to
            produce according output. This sometimes triggers decoder-downm=
ix, which
            might be different from the normal mpv downmix. (Only some deco=
ders support
            remixing audio, like AC-3, AAC or DTS. You can use <tt class=3D=
"docutils literal"><span class=3D"pre">--ad-lavc-downmix=3Dno</span></tt>
            to make the decoder always output its native layout.) One conse=
quence is
            that <tt class=3D"docutils literal"><span class=3D"pre">--audio=
-channels=3Dstereo</span></tt> triggers decoder downmix, while <tt class=3D=
"docutils literal">auto</tt>
            or <tt class=3D"docutils literal"><span class=3D"pre">auto-safe=
</span></tt> never will, even if they end up selecting stereo. This
            happens because the decision whether to use decoder downmix hap=
pens long
            before the audio device is opened.</p>
            <p>If the channel layout of the media file (i.e. the decoder) a=
nd the AO's
            channel layout don't match, mpv will attempt to insert a conver=
sion filter.
            You may need to change the channel layout of the system mixer t=
o achieve
            your desired output as mpv does not have control over it. Anoth=
er
            work-around for this on some AOs is to use <tt class=3D"docutil=
s literal"><span class=3D"pre">--audio-exclusive=3Dyes</span></tt> to
            circumvent the system mixer entirely.</p>
            <div class=3D"admonition admonition-warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p>Using <tt class=3D"docutils literal">auto</tt> can cause iss=
ues when using audio over HDMI. The OS will
            typically report all channel layouts that _can_ go over HDMI, e=
ven if
            the receiver does not support them. If a receiver gets an unsup=
ported
            channel layout, random things can happen, such as dropping the
            additional channels, or adding noise.</p>
            <p class=3D"last">You are recommended to set an explicit whitel=
ist of the layouts you
            want. For example, most A/V receivers connected via HDMI and th=
at can
            do 7.1 would  be served by: <tt class=3D"docutils literal"><spa=
n class=3D"pre">--audio-channels=3D7.1,5.1,stereo</span></tt></p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-display"=
><span class=3D"pre">--audio-display=3D&lt;no|embedded-first|external-first=
&gt;</span><a href=3D"https://mpv.io/manual/master/#options-audio-display" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Determines whether to display cover art =
when playing audio files and with
            what priority. It will display the first image found, and addit=
ional images
            are available as video tracks.</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Disable display of video entirely when playing audio
            files.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">embedded-first:</t=
h><td class=3D"field-body">Display embedded images and external cover art, =
giving
            priority to embedded images (default).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">external-first:</t=
h><td class=3D"field-body">Display embedded images and external cover art, =
giving
            priority to external files.</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">This option has no influence on files with no=
rmal video tracks.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-files"><=
span class=3D"pre">--audio-files=3D&lt;files&gt;</span><a href=3D"https://m=
pv.io/manual/master/#options-audio-files" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first">Play audio from an external file while v=
iewing a video.</p>
            <p class=3D"last">This is a path list option. See <a class=3D"r=
eference internal" href=3D"https://mpv.io/manual/master/#list-options">List=
 Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-file"><s=
pan class=3D"pre">--audio-file=3D&lt;file&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-audio-file" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>CLI/config file only alias for <tt class=3D"docutils litera=
l"><span class=3D"pre">--audio-files-append</span></tt>. Each use of this
            option will add a new audio track. The details are similar to h=
ow
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-file</=
span></tt> works.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-format">=
<span class=3D"pre">--audio-format=3D&lt;format&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-audio-format" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Select the sample format used for output from the audio fil=
ter layer to
            the sound card. The values that <tt class=3D"docutils literal">=
&lt;format&gt;</tt> can adopt are listed below in
            the description of the <tt class=3D"docutils literal">format</t=
t> audio filter.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-samplera=
te"><span class=3D"pre">--audio-samplerate=3D&lt;Hz&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-audio-samplerate" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Select the output sample rate to be used (of course sound c=
ards have
            limits on this). If the sample frequency selected is different =
from that
            of the current media, the lavrresample audio filter will be ins=
erted into
            the audio filter layer to compensate for the difference.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gapless-audio"=
><span class=3D"pre">--gapless-audio=3D&lt;no|yes|weak&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-gapless-audio" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Try to play consecutive audio files with=
 no silence or disruption at the
            point of file change. Default: <tt class=3D"docutils literal">w=
eak</tt>.</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Disable gapless audio.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">The audio device is opened using parameters chosen for the =
first
            file played and is then kept open for gapless playback. This
            means that if the first file for example has a low sample rate,=
 then
            the following files may get resampled to the same low sample ra=
te,
            resulting in reduced sound quality. If you play files with diff=
erent
            parameters, consider using options such as <tt class=3D"docutil=
s literal"><span class=3D"pre">--audio-samplerate</span></tt>
            and <tt class=3D"docutils literal"><span class=3D"pre">--audio-=
format</span></tt> to explicitly select what the shared output
            format will be.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">weak:</th><td clas=
s=3D"field-body">Normally, the audio device is kept open (using the format =
it was
            first initialized with). If the audio format the decoder output
            changes, the audio device is closed and reopened. This means th=
at
            you will normally get gapless audio with files that were encode=
d
            using the same settings, but might not be gapless in other case=
s.
            The exact conditions under which the audio device is kept open =
is
            an implementation detail, and can change from version to versio=
n.
            Currently, the device is kept even if the sample format changes=
,
            but the sample formats are convertible.
            If video is still going on when there is still audio, trying to=
 use
            gapless is also explicitly given up.</td>
            </tr>
            </tbody>
            </table>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This feature is implemented in a simple manne=
r and relies on audio
            output device buffering to continue playback while moving from =
one file
            to another. If playback of the new file starts slowly, for exam=
ple
            because it is played from a remote network location or because =
you have
            specified cache settings that require time for the initial cach=
e fill,
            then the buffered audio may run out before playback of the new =
file
            can start.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-initial-audio-=
sync"><span class=3D"pre">--initial-audio-sync</span><a href=3D"https://mpv=
.io/manual/master/#options-initial-audio-sync" class=3D"anchor fa fa-link">=
</a></tt>, <tt class=3D"docutils literal" id=3D"options-no-initial-audio-sy=
nc"><span class=3D"pre">--no-initial-audio-sync</span><a href=3D"https://mp=
v.io/manual/master/#options-no-initial-audio-sync" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>When starting a video file or after events such as seeking,=
 mpv will by
            default modify the audio stream to make it start from the same =
timestamp
            as video, by either inserting silence at the start or cutting a=
way the
            first samples. Disabling this option makes the player behave li=
ke older
            mpv versions did: video and audio are both started immediately =
even if
            their start timestamps differ, and then video timing is gradual=
ly adjusted
            if necessary to reach correct synchronization later.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-volume-max"><s=
pan class=3D"pre">--volume-max=3D&lt;100.0-1000.0&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-volume-max" class=3D"anchor fa fa-link"><=
/a></tt>, <tt class=3D"docutils literal" id=3D"options-softvol-max"><span c=
lass=3D"pre">--softvol-max=3D&lt;...&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-softvol-max" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Set the maximum amplification level in p=
ercent (default: 130). A value of
            130 will allow you to adjust the volume up to about double the =
normal level.</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--softvol-max</span></tt> is a deprecated alias and should not be use=
d.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-file-aut=
o"><span class=3D"pre">--audio-file-auto=3D&lt;no|exact|fuzzy|all&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-audio-file-auto" class=3D=
"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options=
-no-audio-file-auto"><span class=3D"pre">--no-audio-file-auto</span><a href=
=3D"https://mpv.io/manual/master/#options-no-audio-file-auto" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load additional audio files matching the=
 video filename. The parameter
            specifies how external audio files are matched.</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Don't automatically load external audio files (default).</t=
d>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">exact:</th><td cla=
ss=3D"field-body">Load the media filename with audio file extension.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">fuzzy:</th><td cla=
ss=3D"field-body">Load all audio files containing the media filename.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">all:</th><td class=
=3D"field-body">Load all audio files in the current and <tt class=3D"docuti=
ls literal"><span class=3D"pre">--audio-file-paths</span></tt>
            directories.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-file-pat=
hs"><span class=3D"pre">--audio-file-paths=3D&lt;path1:path2:...&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#options-audio-file-paths" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Equivalent to <tt class=3D"docutils lite=
ral"><span class=3D"pre">--sub-file-paths</span></tt> option, but for auto-=
loaded audio files.</p>
            <p class=3D"last">This is a path list option. See <a class=3D"r=
eference internal" href=3D"https://mpv.io/manual/master/#list-options">List=
 Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-client-n=
ame"><span class=3D"pre">--audio-client-name=3D&lt;name&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-audio-client-name" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>The application name the player reports to the audio API. C=
an be useful
            if you want to force a different audio profile (e.g. with Pulse=
Audio),
            or to set your own application name when using libmpv.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-buffer">=
<span class=3D"pre">--audio-buffer=3D&lt;seconds&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-audio-buffer" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Set the audio output minimum buffer. The=
 audio device might actually create
            a larger buffer if it pleases. If the device creates a smaller =
buffer,
            additional audio is buffered in an additional software buffer.<=
/p>
            <p>Making this larger will make soft-volume and other filters r=
eact slower,
            introduce additional issues on playback speed change, and block=
 the
            player on audio format changes. A smaller buffer might lead to =
audio
            dropouts.</p>
            <p>This option should be used for testing only. If a non-defaul=
t value helps
            significantly, the mpv developers should be contacted.</p>
            <p class=3D"last">Default: 0.2 (200 ms).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-stream-s=
ilence"><span class=3D"pre">--audio-stream-silence=3D&lt;yes|no&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-audio-stream-silence" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Cash-grab consumer audio hardware (such =
as A/V receivers) often ignore
            initial audio sent over HDMI. This can happen every time audio =
over HDMI
            is stopped and resumed. In order to compensate for this, you ca=
n enable
            this option to not to stop and restart audio on seeks, and fill=
 the gaps
            with silence. Likewise, when pausing playback, audio is not sto=
pped, and
            silence is played while paused. Note that if no audio track is =
selected,
            the audio device will still be closed immediately.</p>
            <p>Not all AOs support this.</p>
            <div class=3D"admonition admonition-warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This modifies certain subtle player behavior,=
 like A/V-sync and underrun
            handling. Enabling this option is strongly discouraged.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-wait-ope=
n"><span class=3D"pre">--audio-wait-open=3D&lt;secs&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-audio-wait-open" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>This makes sense for use with <tt class=3D"docutils literal=
"><span class=3D"pre">--audio-stream-silence=3Dyes</span></tt>. If this opt=
ion
            is given, the player will wait for the given amount of seconds =
after opening
            the audio device before sending actual audio data to it. Useful=
 if your
            expensive hardware discards the first 1 or 2 seconds of audio d=
ata sent to
            it. If <tt class=3D"docutils literal"><span class=3D"pre">--aud=
io-stream-silence=3Dyes</span></tt> is not set, this option will likely
            just waste time.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"subtitles">
            <h2>Subtitles</h2>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p>Changing styling and position does not work with all subtitl=
es. Image-based
            subtitles (DVD, Bluray/PGS, DVB) cannot changed for fundamental=
 reasons.
            Subtitles in ASS format are normally not changed intentionally,=
 but
            overriding them can be controlled with <tt class=3D"docutils li=
teral"><span class=3D"pre">--sub-ass-override</span></tt>.</p>
            <p class=3D"last">Previously some options working on text subti=
tles were called
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-text-*=
</span></tt>, they are now named <tt class=3D"docutils literal"><span class=
=3D"pre">--sub-*</span></tt>, and those specifically
            for ASS have been renamed from <tt class=3D"docutils literal"><=
span class=3D"pre">--ass-*</span></tt> to <tt class=3D"docutils literal"><s=
pan class=3D"pre">--sub-ass-*</span></tt>.
            They are now all in this section.</p>
            </div>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-sub-demuxer"><=
span class=3D"pre">--sub-demuxer=3D&lt;[+]name&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-sub-demuxer" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Force subtitle demuxer type for <tt class=3D"docutils liter=
al"><span class=3D"pre">--sub-file</span></tt>. Give the demuxer name as
            printed by <tt class=3D"docutils literal"><span class=3D"pre">-=
-sub-demuxer=3Dhelp</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-delay"><sp=
an class=3D"pre">--sub-delay=3D&lt;sec&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-sub-delay" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Delays subtitles by <tt class=3D"docutils literal">&lt;sec&=
gt;</tt> seconds. Can be negative.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-files"><sp=
an class=3D"pre">--sub-files=3D&lt;file-list&gt;</span><a href=3D"https://m=
pv.io/manual/master/#options-sub-files" class=3D"anchor fa fa-link"></a></t=
t>, <tt class=3D"docutils literal" id=3D"options-sub-file"><span class=3D"p=
re">--sub-file=3D&lt;filename&gt;</span><a href=3D"https://mpv.io/manual/ma=
ster/#options-sub-file" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Add a subtitle file to the list of exter=
nal subtitles.</p>
            <p>If you use <tt class=3D"docutils literal"><span class=3D"pre=
">--sub-file</span></tt> only once, this subtitle file is displayed by
            default.</p>
            <p>If <tt class=3D"docutils literal"><span class=3D"pre">--sub-=
file</span></tt> is used multiple times, the subtitle to use can be
            switched at runtime by cycling subtitle tracks. It's possible t=
o show
            two subtitles at once: use <tt class=3D"docutils literal"><span=
 class=3D"pre">--sid</span></tt> to select the first subtitle index,
            and <tt class=3D"docutils literal"><span class=3D"pre">--second=
ary-sid</span></tt> to select the second index. (The index is printed
            on the terminal output after the <tt class=3D"docutils literal"=
><span class=3D"pre">--sid=3D</span></tt> in the list of streams.)</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--sub-files</span></tt> is a path list option (see <a class=3D"refere=
nce internal" href=3D"https://mpv.io/manual/master/#list-options">List Opti=
ons</a>  for details), and
            can take multiple file names separated by <tt class=3D"docutils=
 literal">:</tt> (Unix) or <tt class=3D"docutils literal">;</tt> (Windows),
            while  <tt class=3D"docutils literal"><span class=3D"pre">--sub=
-file</span></tt> takes a single filename, but can be used multiple
            times to add multiple files. Technically, <tt class=3D"docutils=
 literal"><span class=3D"pre">--sub-file</span></tt> is a CLI/config
            file only alias for  <tt class=3D"docutils literal"><span class=
=3D"pre">--sub-files-append</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-secondary-sid"=
><span class=3D"pre">--secondary-sid=3D&lt;ID|auto|no&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-secondary-sid" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">Select a secondary subtitle stream. This=
 is similar to <tt class=3D"docutils literal"><span class=3D"pre">--sid</sp=
an></tt>. If a
            secondary subtitle is selected, it will be rendered as toptitle=
 (i.e. on
            the top of the screen) alongside the normal subtitle, and provi=
des a way
            to render two subtitles at once.</p>
            <p>There are some caveats associated with this feature. For exa=
mple, bitmap
            subtitles will always be rendered in their usual position, so s=
electing a
            bitmap subtitle as secondary subtitle will result in overlappin=
g subtitles.
            Secondary subtitles are never shown on the terminal if video is=
 disabled.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Styling and interpretation of any formatting =
tags is disabled for the
            secondary subtitle. Internally, the same mechanism as <tt class=
=3D"docutils literal"><span class=3D"pre">--no-sub-ass</span></tt>
            is used to strip the styling.</p>
            </div>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">If the main subtitle stream contains formatti=
ng tags which display the
            subtitle at the top of the screen, it will overlap with the sec=
ondary
            subtitle. To prevent this, you could use <tt class=3D"docutils =
literal"><span class=3D"pre">--no-sub-ass</span></tt> to disable
            styling in the main subtitle stream.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-scale"><sp=
an class=3D"pre">--sub-scale=3D&lt;0-100&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-sub-scale" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Factor for the text subtitle font size (=
default: 1).</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This affects ASS subtitles as well, and may l=
ead to incorrect subtitle
            rendering. Use with care, or use <tt class=3D"docutils literal"=
><span class=3D"pre">--sub-font-size</span></tt> instead.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-scale-by-w=
indow"><span class=3D"pre">--sub-scale-by-window=3D&lt;yes|no&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-sub-scale-by-window" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether to scale subtitles with the wind=
ow size (default: yes). If this is
            disabled, changing the window size won't change the subtitle fo=
nt size.</p>
            <p class=3D"last">Like <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--sub-scale</span></tt>, this can break ASS subtitles.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-scale-with=
-window"><span class=3D"pre">--sub-scale-with-window=3D&lt;yes|no&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-sub-scale-with-window" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Make the subtitle font size relative to =
the window, instead of the video.
            This is useful if you always want the same font size, even if t=
he video
            doesn't cover the window fully, e.g. because screen aspect and =
window
            aspect mismatch (and the player adds black bars).</p>
            <p>Default: yes.</p>
            <p>This option is misnamed. The difference to the confusingly s=
imilar sounding
            option <tt class=3D"docutils literal"><span class=3D"pre">--sub=
-scale-by-window</span></tt> is that <tt class=3D"docutils literal"><span c=
lass=3D"pre">--sub-scale-with-window</span></tt> still
            scales with the approximate window size, while the other option=
 disables
            this scaling.</p>
            <p class=3D"last">Affects plain text subtitles only (or ASS if =
<tt class=3D"docutils literal"><span class=3D"pre">--sub-ass-override</span=
></tt> is set
            high enough).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-scale-=
with-window"><span class=3D"pre">--sub-ass-scale-with-window=3D&lt;yes|no&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-sub-ass-scale-wit=
h-window" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Like <tt class=3D"docutils literal"><spa=
n class=3D"pre">--sub-scale-with-window</span></tt>, but affects subtitles =
in ASS format only.
            Like <tt class=3D"docutils literal"><span class=3D"pre">--sub-s=
cale</span></tt>, this can break ASS subtitles.</p>
            <p class=3D"last">Default: no.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-embeddedfonts"=
><span class=3D"pre">--embeddedfonts=3D&lt;yes|no&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-embeddedfonts" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd>Use fonts embedded in Matroska container files and ASS scri=
pts (default:
            yes). These fonts can be used for SSA/ASS subtitle rendering.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-pos"><span=
 class=3D"pre">--sub-pos=3D&lt;0-150&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-sub-pos" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify the position of subtitles on the=
 screen. The value is the vertical
            position of the subtitle in % of the screen height. 100 is the =
original
            position, which is often not the absolute bottom of the screen,=
 but with
            some margin between the bottom and the subtitle. Values above 1=
00 move the
            subtitle further down.</p>
            <div class=3D"admonition admonition-warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p>Text subtitles (as opposed to image subtitles) may be cut of=
f if the
            value of the option is above 100. This is a libass restriction.=
</p>
            <p>This affects ASS subtitles as well, and may lead to incorrec=
t subtitle
            rendering in addition to the problem above.</p>
            <p class=3D"last">Using <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--sub-margin-y</span></tt> can achieve this in a better way.</p=
>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-speed"><sp=
an class=3D"pre">--sub-speed=3D&lt;0.1-10.0&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-sub-speed" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Multiply the subtitle event timestamps w=
ith the given value. Can be used
            to fix the playback speed for frame-based subtitle formats. Aff=
ects text
            subtitles only.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--sub-speed=3D25/23.976</span></tt> plays frame based subtitles which=
 have been
            loaded assuming a framerate of 23.976 at 25 FPS.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-force-=
style"><span class=3D"pre">--sub-ass-force-style=3D&lt;[Style.]Param=3DValu=
e[,...]&gt;</span><a href=3D"https://mpv.io/manual/master/#options-sub-ass-=
force-style" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Override some style or script info param=
eters.</p>
            <p>This is a string list option. See <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-options">List Options</a> =
for details.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-as=
s-force-style=3DFontName=3DArial,Default.Bold=3D1</span></tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-as=
s-force-style=3DPlayResY=3D768</span></tt></li>
            </ul>
            </div>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Using this option may lead to incorrect subti=
tle rendering.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-hintin=
g"><span class=3D"pre">--sub-ass-hinting=3D&lt;none|light|normal|native&gt;=
</span><a href=3D"https://mpv.io/manual/master/#options-sub-ass-hinting" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set font hinting type. &lt;type&gt; can =
be:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">none:</th><td clas=
s=3D"field-body">no hinting (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">light:</th><td cla=
ss=3D"field-body">FreeType autohinter, light mode</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">normal:</th><td cl=
ass=3D"field-body">FreeType autohinter, normal mode</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">native:</th><td cl=
ass=3D"field-body">font native hinter</td>
            </tr>
            </tbody>
            </table>
            <div class=3D"admonition admonition-warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Enabling hinting can lead to mispositioned te=
xt (in situations it's
            supposed to match up video background), or reduce the smoothnes=
s
            of animations with some badly authored ASS scripts. It is recom=
mended
            to not use this option, unless really needed.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-line-s=
pacing"><span class=3D"pre">--sub-ass-line-spacing=3D&lt;value&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-sub-ass-line-spacing" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set line spacing value for SSA/ASS renderer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-shaper=
"><span class=3D"pre">--sub-ass-shaper=3D&lt;simple|complex&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-sub-ass-shaper" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the text layout engine used by libas=
s.</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">simple:</th><td cl=
ass=3D"field-body">uses Fribidi only, fast, doesn't render some languages c=
orrectly</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">complex:</th><td c=
lass=3D"field-body">uses HarfBuzz, slower, wider language support</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last"><tt class=3D"docutils literal">complex</tt> i=
s the default. If libass hasn't been compiled against HarfBuzz,
            libass silently reverts to <tt class=3D"docutils literal">simpl=
e</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-styles=
"><span class=3D"pre">--sub-ass-styles=3D&lt;filename&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-sub-ass-styles" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Load all SSA/ASS styles found in the spe=
cified file and use them for
            rendering text subtitles. The syntax of the file is exactly lik=
e the <tt class=3D"docutils literal">[V4
            Styles]</tt> / <tt class=3D"docutils literal">[V4+ Styles]</tt>=
 section of SSA/ASS.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Using this option may lead to incorrect subti=
tle rendering.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-overri=
de"><span class=3D"pre">--sub-ass-override=3D&lt;yes|no|force|scale|strip&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-sub-ass-override"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Control whether user style overrides sho=
uld be applied. Note that all of
            these overrides try to be somewhat smart about figuring out whe=
ther or not
            a subtitle is considered a "sign".</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Render subtitles as specified by the subtitle scripts, with=
out
            overrides.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">Apply all the <tt class=3D"docutils literal"><span class=3D=
"pre">--sub-ass-*</span></tt> style override options. Changing the
            default for any of these options can lead to incorrect subtitle
            rendering (default).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">force:</th><td cla=
ss=3D"field-body">Like <tt class=3D"docutils literal">yes</tt>, but also fo=
rce all <tt class=3D"docutils literal"><span class=3D"pre">--sub-*</span></=
tt> options. Can break
            rendering easily.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">scale:</th><td cla=
ss=3D"field-body">Like <tt class=3D"docutils literal">yes</tt>, but also ap=
ply <tt class=3D"docutils literal"><span class=3D"pre">--sub-scale</span></=
tt>.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">strip:</th><td cla=
ss=3D"field-body">Radically strip all ASS tags and styles from the subtitle=
. This
            is equivalent to the old <tt class=3D"docutils literal"><span c=
lass=3D"pre">--no-ass</span></tt> / <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--no-sub-ass</span></tt> options.</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">This also controls some bitmap subtitle overr=
ides, as well as HTML tags in
            formats like SRT, despite the name of the option.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-force-=
margins"><span class=3D"pre">--sub-ass-force-margins</span><a href=3D"https=
://mpv.io/manual/master/#options-sub-ass-force-margins" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enables placing toptitles and subtitles =
in black borders when they are
            available, if the subtitles are in the ASS format.</p>
            <p class=3D"last">Default: no.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-use-margin=
s"><span class=3D"pre">--sub-use-margins</span><a href=3D"https://mpv.io/ma=
nual/master/#options-sub-use-margins" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Enables placing toptitles and subtitles =
in black borders when they are
            available, if the subtitles are in a plain text format  (or ASS=
 if
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-ass-ov=
erride</span></tt> is set high enough).</p>
            <p>Default: yes.</p>
            <p class=3D"last">Renamed from <tt class=3D"docutils literal"><=
span class=3D"pre">--sub-ass-use-margins</span></tt>. To place ASS subtitle=
s in the borders
            too (like the old option did), also add <tt class=3D"docutils l=
iteral"><span class=3D"pre">--sub-ass-force-margins</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-vsfilt=
er-aspect-compat"><span class=3D"pre">--sub-ass-vsfilter-aspect-compat=3D&l=
t;yes|no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-sub-ass=
-vsfilter-aspect-compat" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Stretch SSA/ASS subtitles when playing a=
namorphic videos for compatibility
            with traditional VSFilter behavior. This switch has no effect w=
hen the
            video is stored with square pixels.</p>
            <p>The renderer historically most commonly used for the SSA/ASS=
 subtitle
            formats, VSFilter, had questionable behavior that resulted in s=
ubtitles
            being stretched too if the video was stored in anamorphic forma=
t that
            required scaling for display.  This behavior is usually undesir=
able and
            newer VSFilter versions may behave differently. However, many e=
xisting
            scripts compensate for the stretching by modifying things in th=
e opposite
            direction.  Thus, if such scripts are displayed "correctly", th=
ey will not
            appear as intended.  This switch enables emulation of the old V=
SFilter
            behavior (undesirable but expected by many existing scripts).</=
p>
            <p class=3D"last">Enabled by default.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-vsfilt=
er-blur-compat"><span class=3D"pre">--sub-ass-vsfilter-blur-compat=3D&lt;ye=
s|no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-sub-ass-vsf=
ilter-blur-compat" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Scale <tt class=3D"docutils literal">\bl=
ur</tt> tags by video resolution instead of script resolution
            (enabled by default). This is bug in VSFilter, which according =
to some,
            can't be fixed anymore in the name of compatibility.</p>
            <p class=3D"last">Note that this uses the actual video resoluti=
on for calculating the
            offset scale factor, not what the video filter chain or the vid=
eo output
            use.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-vsfilt=
er-color-compat"><span class=3D"pre">--sub-ass-vsfilter-color-compat=3D&lt;=
basic|full|force-601|no&gt;</span><a href=3D"https://mpv.io/manual/master/#=
options-sub-ass-vsfilter-color-compat" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Mangle colors like (xy-)vsfilter do (def=
ault: basic). Historically, VSFilter
            was not color space aware. This was no problem as long as the c=
olor space
            used for SD video (BT.601) was used. But when everything switch=
ed to HD
            (BT.709), VSFilter was still converting RGB colors to BT.601, r=
endered
            them into the video frame, and handled the frame to the video o=
utput, which
            would use BT.709 for conversion to RGB. The result were mangled=
 subtitle
            colors. Later on, bad hacks were added on top of the ASS format=
 to control
            how colors are to be mangled.</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">basic:</th><td cla=
ss=3D"field-body">Handle only BT.601-&gt;BT.709 mangling, if the subtitles =
seem to
            indicate that this is required (default).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">full:</th><td clas=
s=3D"field-body">Handle the full <tt class=3D"docutils literal">YCbCr Matri=
x</tt> header with all video color spaces
            supported by libass and mpv. This might lead to bad breakages i=
n
            corner cases and is not strictly needed for compatibility
            (hopefully), which is why this is not default.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">force-601:</th><td=
 class=3D"field-body">Force BT.601-&gt;BT.709 mangling, regardless of subti=
tle headers
            or video color space.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Disable color mangling completely. All colors are RGB.</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">Choosing anything other than <tt class=3D"doc=
utils literal">no</tt> will make the subtitle color depend on
            the video color space, and it's for example in theory not possi=
ble to reuse
            a subtitle script with another video file. The <tt class=3D"doc=
utils literal"><span class=3D"pre">--sub-ass-override</span></tt>
            option doesn't affect how this option is interpreted.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stretch-dvd-su=
bs"><span class=3D"pre">--stretch-dvd-subs=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-stretch-dvd-subs" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Stretch DVD subtitles when playing anamo=
rphic videos for better looking
            fonts on badly mastered DVDs. This switch has no effect when th=
e
            video is stored with square pixels - which for DVD input cannot=
 be the case
            though.</p>
            <p>Many studios tend to use bitmap fonts designed for square pi=
xels when
            authoring DVDs, causing the fonts to look stretched on playback=
 on DVD
            players. This option fixes them, however at the price of possib=
ly
            misaligning some subtitles (e.g. sign translations).</p>
            <p class=3D"last">Disabled by default.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stretch-image-=
subs-to-screen"><span class=3D"pre">--stretch-image-subs-to-screen=3D&lt;ye=
s|no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-stretch-ima=
ge-subs-to-screen" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Stretch DVD and other image subtitles to=
 the screen, ignoring the video
            margins. This has a similar effect as <tt class=3D"docutils lit=
eral"><span class=3D"pre">--sub-use-margins</span></tt> for text
            subtitles, except that the text itself will be stretched, not o=
nly just
            repositioned. (At least in general it is unavoidable, as an ima=
ge bitmap
            can in theory consist of a single bitmap covering the whole scr=
een, and
            the player won't know where exactly the text parts are located.=
)</p>
            <p>This option does not display subtitles correctly. Use with c=
are.</p>
            <p class=3D"last">Disabled by default.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-image-subs-vid=
eo-resolution"><span class=3D"pre">--image-subs-video-resolution=3D&lt;yes|=
no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-image-subs-vi=
deo-resolution" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Override the image subtitle resolution with the video resol=
ution
            (default: no). Normally, the subtitle canvas is fit into the vi=
deo canvas
            (e.g. letterboxed). Setting this option uses the video size as =
subtitle
            canvas size. Can be useful to test broken subtitles, which ofte=
n happen
            when the video was trancoded, while attempting to keep the old =
subtitles.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass"><span=
 class=3D"pre">--sub-ass</span><a href=3D"https://mpv.io/manual/master/#opt=
ions-sub-ass" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils =
literal" id=3D"options-no-sub-ass"><span class=3D"pre">--no-sub-ass</span><=
a href=3D"https://mpv.io/manual/master/#options-no-sub-ass" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Render ASS subtitles natively (enabled b=
y default).</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This has been deprecated by <tt class=3D"docu=
tils literal"><span class=3D"pre">--sub-ass-override=3Dstrip</span></tt>. Y=
ou also
            may need <tt class=3D"docutils literal"><span class=3D"pre">--e=
mbeddedfonts=3Dno</span></tt> to get the same behavior. Also,
            using <tt class=3D"docutils literal"><span class=3D"pre">--sub-=
ass-override=3Dstyle</span></tt> should give better results
            without breaking subtitles too much.</p>
            </div>
            <p>If <tt class=3D"docutils literal"><span class=3D"pre">--no-s=
ub-ass</span></tt> is specified, all tags and style declarations are
            stripped and ignored on display. The subtitle renderer uses the=
 font style
            as specified by the <tt class=3D"docutils literal"><span class=
=3D"pre">--sub-</span></tt> options instead.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Using <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--no-sub-ass</span></tt> may lead to incorrect or completely br=
oken
            rendering of ASS/SSA subtitles. It can sometimes be useful to f=
orcibly
            override the styling of ASS subtitles, but should be avoided in=
 general.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-auto"><spa=
n class=3D"pre">--sub-auto=3D&lt;no|exact|fuzzy|all&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-sub-auto" class=3D"anchor fa fa-link"><=
/a></tt>, <tt class=3D"docutils literal" id=3D"options-no-sub-auto"><span c=
lass=3D"pre">--no-sub-auto</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-no-sub-auto" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load additional subtitle files matching =
the video filename. The parameter
            specifies how external subtitle files are matched. <tt class=3D=
"docutils literal">exact</tt> is enabled by
            default.</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Don't automatically load external subtitle files.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">exact:</th><td cla=
ss=3D"field-body">Load the media filename with subtitle file extension and =
possibly
            language suffixes (default).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">fuzzy:</th><td cla=
ss=3D"field-body">Load all subs containing the media filename.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">all:</th><td class=
=3D"field-body">Load all subs in the current and <tt class=3D"docutils lite=
ral"><span class=3D"pre">--sub-file-paths</span></tt> directories.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-codepage">=
<span class=3D"pre">--sub-codepage=3D&lt;codepage&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-sub-codepage" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">You can use this option to specify the s=
ubtitle codepage. uchardet will be
            used to guess the charset. (If mpv was not compiled with uchard=
et, then
            <tt class=3D"docutils literal"><span class=3D"pre">utf-8</span>=
</tt> is the effective default.)</p>
            <p>The default value for this option is <tt class=3D"docutils l=
iteral">auto</tt>, which enables autodetection.</p>
            <p>The following steps are taken to determine the final codepag=
e, in order:</p>
            <ul class=3D"simple">
            <li>if the specific codepage has a <tt class=3D"docutils litera=
l">+</tt>, use that codepage</li>
            <li>if the data looks like UTF-8, assume it is UTF-8</li>
            <li>if <tt class=3D"docutils literal"><span class=3D"pre">--sub=
-codepage</span></tt> is set to a specific codepage, use that</li>
            <li>run uchardet, and if successful, use that</li>
            <li>otherwise, use <tt class=3D"docutils literal"><span class=
=3D"pre">UTF-8-BROKEN</span></tt></li>
            </ul>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
depage=3Dlatin2</span></tt> Use Latin 2 if input is not UTF-8.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
depage=3D+cp1250</span></tt> Always force recoding to cp1250.</li>
            </ul>
            </div>
            <p>The pseudo codepage <tt class=3D"docutils literal"><span cla=
ss=3D"pre">UTF-8-BROKEN</span></tt> is used internally. If it's set,
            subtitles are interpreted as UTF-8 with "Latin 1" as fallback f=
or bytes
            which are not valid UTF-8 sequences. iconv is never involved in=
 this mode.</p>
            <p>This option changed in mpv 0.23.0. Support for the old synta=
x was fully
            removed in mpv 0.24.0.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This works for text subtitle files only. Othe=
r types of subtitles (in
            particular subtitles in mkv files) are always assumed to be UTF=
-8.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-fix-timing=
"><span class=3D"pre">--sub-fix-timing=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-sub-fix-timing" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd>Adjust subtitle timing is to remove minor gaps or overlaps =
between
            subtitles (if the difference is smaller than 210 ms, the gap or=
 overlap
            is removed).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-forced-onl=
y"><span class=3D"pre">--sub-forced-only=3D&lt;auto|yes|no&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-sub-forced-only" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Display only forced subtitles for the DVD subtitle stream s=
elected by e.g.
            <tt class=3D"docutils literal"><span class=3D"pre">--slang</spa=
n></tt> (default: <tt class=3D"docutils literal">auto</tt>). When set to <t=
t class=3D"docutils literal">auto</tt>, enabled when the
            <tt class=3D"docutils literal"><span class=3D"pre">--subs-with-=
matching-audio</span></tt> option is on and a non-forced stream is selected=
.
            Enabling this will hide all subtitles in streams that don't mak=
e a distinction
            between forced and unforced events within a stream.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-fps"><span=
 class=3D"pre">--sub-fps=3D&lt;rate&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-sub-fps" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify the framerate of the subtitle fi=
le (default: video fps). Affects
            text subtitles only.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last"><tt class=3D"docutils literal">&lt;rate&gt;</=
tt> &gt; video fps speeds the subtitles up for frame-based
            subtitle files and slows them down for time-based ones.</p>
            </div>
            <p class=3D"last">See also: <tt class=3D"docutils literal"><spa=
n class=3D"pre">--sub-speed</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-gauss"><sp=
an class=3D"pre">--sub-gauss=3D&lt;0.0-3.0&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-sub-gauss" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Apply Gaussian blur to image subtitles (=
default: 0). This can help to make
            pixelated DVD/Vobsubs look nicer. A value other than 0 also swi=
tches to
            software subtitle scaling. Might be slow.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Never applied to text subtitles.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-gray"><spa=
n class=3D"pre">--sub-gray</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-sub-gray" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Convert image subtitles to grayscale. Ca=
n help to make yellow DVD/Vobsubs
            look nicer.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Never applied to text subtitles.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-paths"><sp=
an class=3D"pre">--sub-paths=3D&lt;path1:path2:...&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-sub-paths" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Deprecated, use <tt class=3D"docutils literal"><span class=
=3D"pre">--sub-file-paths</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-file-paths=
"><span class=3D"pre">--sub-file-paths=3D&lt;path-list&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-sub-file-paths" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd><p class=3D"first">Specify extra directories to search for =
subtitles matching the video.
            Multiple directories can be separated by ":" (";" on Windows).
            Paths can be relative or absolute. Relative paths are interpret=
ed relative
            to video file directory.
            If the file is a URL, only absolute paths and <tt class=3D"docu=
tils literal">sub</tt> configuration
            subdirectory will be scanned.</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <p>Assuming that <tt class=3D"docutils literal">/path/to/video/=
video.avi</tt> is played and
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-file-p=
aths=3Dsub:subtitles</span></tt> is specified, mpv
            searches for subtitle files in these directories:</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal">/path/to/video/</tt></li>
            <li><tt class=3D"docutils literal">/path/to/video/sub/</tt></li=
>
            <li><tt class=3D"docutils literal">/path/to/video/subtitles/</t=
t></li>
            <li>the <tt class=3D"docutils literal">sub</tt> configuration s=
ubdirectory (usually <tt class=3D"docutils literal"><span class=3D"pre">~/.=
config/mpv/sub/</span></tt>)</li>
            </ul>
            </div>
            <p class=3D"last">This is a path list option. See <a class=3D"r=
eference internal" href=3D"https://mpv.io/manual/master/#list-options">List=
 Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-visibility=
"><span class=3D"pre">--sub-visibility</span><a href=3D"https://mpv.io/manu=
al/master/#options-sub-visibility" class=3D"anchor fa fa-link"></a></tt>, <=
tt class=3D"docutils literal" id=3D"options-no-sub-visibility"><span class=
=3D"pre">--no-sub-visibility</span><a href=3D"https://mpv.io/manual/master/=
#options-no-sub-visibility" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Can be used to disable display of subtitles, but still sele=
ct and decode
            them.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-secondary-sub-=
visibility"><span class=3D"pre">--secondary-sub-visibility</span><a href=3D=
"https://mpv.io/manual/master/#options-secondary-sub-visibility" class=3D"a=
nchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-n=
o-secondary-sub-visibility"><span class=3D"pre">--no-secondary-sub-visibili=
ty</span><a href=3D"https://mpv.io/manual/master/#options-no-secondary-sub-=
visibility" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Can be used to disable display of secondary subtitles, but =
still select and
            decode them.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-clear-on-s=
eek"><span class=3D"pre">--sub-clear-on-seek</span><a href=3D"https://mpv.i=
o/manual/master/#options-sub-clear-on-seek" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>(Obscure, rarely useful.) Can be used to play broken mkv fi=
les with
            duplicate ReadOrder fields. ReadOrder is the first field in a
            Matroska-style ASS subtitle packets. It should be unique, and l=
ibass
            uses it for fast elimination of duplicates. This option disable=
s caching
            of subtitles across seeks, so after a seek libass can't elimina=
te subtitle
            packets with the same ReadOrder as earlier packets.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-teletext-page"=
><span class=3D"pre">--teletext-page=3D&lt;1-999&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-teletext-page" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>This works for <tt class=3D"docutils literal">dvb_teletext<=
/tt> subtitle streams, and if FFmpeg has been
            compiled with support for it.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-past-video=
-end"><span class=3D"pre">--sub-past-video-end</span><a href=3D"https://mpv=
.io/manual/master/#options-sub-past-video-end" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">After the last frame of video, if this o=
ption is enabled, subtitles will
            continue to update based on audio timestamps. Otherwise, the su=
btitles
            for the last video frame will stay onscreen.</p>
            <p class=3D"last">Default: disabled</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-font"><spa=
n class=3D"pre">--sub-font=3D&lt;name&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-sub-font" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify font to use for subtitles that d=
o not themselves
            specify a particular font. The default is <tt class=3D"docutils=
 literal"><span class=3D"pre">sans-serif</span></tt>.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-fo=
nt=3D'Bitstream</span> Vera Sans'</tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-fo=
nt=3D'Comic</span> Sans MS'</tt></li>
            </ul>
            </div>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p>The <tt class=3D"docutils literal"><span class=3D"pre">--sub=
-font</span></tt> option (and many other style related <tt class=3D"docutil=
s literal"><span class=3D"pre">--sub-</span></tt>
            options) are ignored when ASS-subtitles are rendered, unless th=
e
            <tt class=3D"docutils literal"><span class=3D"pre">--no-sub-ass=
</span></tt> option is specified.</p>
            <p class=3D"last">This used to support fontconfig patterns. Sta=
rting with libass 0.13.0,
            this stopped working.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-font-size"=
><span class=3D"pre">--sub-font-size=3D&lt;size&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-sub-font-size" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Specify the sub font size. The unit is t=
he size in scaled pixels at a
            window height of 720. The actual pixel size is scaled with the =
window
            height: if the window height is larger or smaller than 720, the=
 actual size
            of the text increases or decreases as well.</p>
            <p class=3D"last">Default: 55.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-back-color=
"><span class=3D"pre">--sub-back-color=3D&lt;color&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-sub-back-color" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--su=
b-color</span></tt>. Color used for sub text background. You can use
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-shadow=
-offset</span></tt> to change its size relative to the text.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-blur"><spa=
n class=3D"pre">--sub-blur=3D&lt;0..20.0&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-sub-blur" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Gaussian blur factor. 0 means no blur applied (default).</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-bold"><spa=
n class=3D"pre">--sub-bold=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-sub-bold" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Format text on bold.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-italic"><s=
pan class=3D"pre">--sub-italic=3D&lt;yes|no&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-sub-italic" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>Format text on italic.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-border-col=
or"><span class=3D"pre">--sub-border-color=3D&lt;color&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-sub-border-color" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--su=
b-color</span></tt>. Color used for the sub font border.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-border-siz=
e"><span class=3D"pre">--sub-border-size=3D&lt;size&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-sub-border-size" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">Size of the sub font border in scaled pi=
xels (see <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-siz=
e</span></tt>
            for details). A value of 0 disables borders.</p>
            <p class=3D"last">Default: 3.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-color"><sp=
an class=3D"pre">--sub-color=3D&lt;color&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-sub-color" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Specify the color used for unstyled text=
 subtitles.</p>
            <p>The color is specified in the form <tt class=3D"docutils lit=
eral">r/g/b</tt>, where each color component
            is specified as number in the range 0.0 to 1.0. It's also possi=
ble to
            specify the transparency by using <tt class=3D"docutils literal=
">r/g/b/a</tt>, where the alpha value 0
            means fully transparent, and 1.0 means opaque. If the alpha com=
ponent is
            not given, the color is 100% opaque.</p>
            <p>Passing a single number to the option sets the sub to gray, =
and the form
            <tt class=3D"docutils literal">gray/a</tt> lets you specify alp=
ha additionally.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
lor=3D1.0/0.0/0.0</span></tt> set sub to opaque red</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
lor=3D1.0/0.0/0.0/0.75</span></tt> set sub to opaque red with 75% alpha</li=
>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
lor=3D0.5/0.75</span></tt> set sub to 50% gray with 75% alpha</li>
            </ul>
            </div>
            <p>Alternatively, the color can be specified as a RGB hex tripl=
et in the form
            <tt class=3D"docutils literal">#RRGGBB</tt>, where each 2-digit=
 group expresses a color value in the
            range 0 (<tt class=3D"docutils literal">00</tt>) to 255 (<tt cl=
ass=3D"docutils literal">FF</tt>). For example, <tt class=3D"docutils liter=
al">#FF0000</tt> is red.
            This is similar to web colors. Alpha is given with <tt class=3D=
"docutils literal">#AARRGGBB</tt>.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
lor=3D'#FF0000'</span></tt> set sub to opaque red</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
lor=3D'#C0808080'</span></tt> set sub to 50% gray with 75% alpha</li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-margin-x">=
<span class=3D"pre">--sub-margin-x=3D&lt;size&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-sub-margin-x" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Left and right screen margin for the sub=
s in scaled pixels (see
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-s=
ize</span></tt> for details).</p>
            <p>This option specifies the distance of the sub to the left, a=
s well as at
            which distance from the right border long sub text will be brok=
en.</p>
            <p class=3D"last">Default: 25.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-margin-y">=
<span class=3D"pre">--sub-margin-y=3D&lt;size&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-sub-margin-y" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Top and bottom screen margin for the sub=
s in scaled pixels (see
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-s=
ize</span></tt> for details).</p>
            <p>This option specifies the vertical margins of unstyled text =
subtitles.
            If you just want to raise the vertical subtitle position, use <=
tt class=3D"docutils literal"><span class=3D"pre">--sub-pos</span></tt>.</p=
>
            <p class=3D"last">Default: 22.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-align-x"><=
span class=3D"pre">--sub-align-x=3D&lt;left|center|right&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-sub-align-x" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd><p class=3D"first">Control to which corner of the screen te=
xt subtitles should be
            aligned to (default: <tt class=3D"docutils literal">center</tt>=
).</p>
            <p class=3D"last">Never applied to ASS subtitles, except in <tt=
 class=3D"docutils literal"><span class=3D"pre">--no-sub-ass</span></tt> mo=
de. Likewise,
            this does not apply to image subtitles.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-align-y"><=
span class=3D"pre">--sub-align-y=3D&lt;top|center|bottom&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-sub-align-y" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Vertical position (default: <tt class=3D"docutils literal">=
bottom</tt>).
            Details see <tt class=3D"docutils literal"><span class=3D"pre">=
--sub-align-x</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-justify"><=
span class=3D"pre">--sub-justify=3D&lt;auto|left|center|right&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-sub-justify" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Control how multi line subs are justified irrespective of w=
here they
            are aligned (default: <tt class=3D"docutils literal">auto</tt> =
which justifies as defined by
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-align-=
x</span></tt>).
            Left justification is recommended to make the subs easier to re=
ad
            as it is easier for the eyes.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-ass-justif=
y"><span class=3D"pre">--sub-ass-justify=3D&lt;yes|no&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-sub-ass-justify" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Applies justification as defined by <tt class=3D"docutils l=
iteral"><span class=3D"pre">--sub-justify</span></tt> on ASS subtitles
            if <tt class=3D"docutils literal"><span class=3D"pre">--sub-ass=
-override</span></tt> is not set to <tt class=3D"docutils literal">no</tt>.
            Default: <tt class=3D"docutils literal">no</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-shadow-col=
or"><span class=3D"pre">--sub-shadow-color=3D&lt;color&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-sub-shadow-color" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd><p class=3D"first">See <tt class=3D"docutils literal"><span=
 class=3D"pre">--sub-color</span></tt>. Color used for sub text shadow.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">ignored when <tt class=3D"docutils literal"><=
span class=3D"pre">--sub-back-color</span></tt> is
            specified (or more exactly: when that option is not set to comp=
letely
            transparent).</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-shadow-off=
set"><span class=3D"pre">--sub-shadow-offset=3D&lt;size&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-sub-shadow-offset" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Displacement of the sub text shadow in s=
caled pixels (see
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-s=
ize</span></tt> for details). A value of 0 disables shadows.</p>
            <p class=3D"last">Default: 0.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-spacing"><=
span class=3D"pre">--sub-spacing=3D&lt;size&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-sub-spacing" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Horizontal sub font spacing in scaled pi=
xels (see <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-siz=
e</span></tt>
            for details). This value is added to the normal letter spacing.=
 Negative
            values are allowed.</p>
            <p class=3D"last">Default: 0.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-filter-sdh=
"><span class=3D"pre">--sub-filter-sdh=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-sub-filter-sdh" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd><p class=3D"first">Applies filter removing subtitle additio=
ns for the deaf or hard-of-hearing (SDH).
            This is intended for English, but may in part work for other la=
nguages too.
            The intention is that it can be always enabled so may not remov=
e
            all parts added.
            It removes speaker labels (like MAN:), upper case text in paren=
theses and
            any text in brackets.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">no</t=
t>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-filter-sdh=
-harder"><span class=3D"pre">--sub-filter-sdh-harder=3D&lt;yes|no&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-sub-filter-sdh-harder" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Do harder SDH filtering (if enabled by <=
tt class=3D"docutils literal"><span class=3D"pre">--sub-filter-sdh</span></=
tt>).
            Will also remove speaker labels and text within parentheses usi=
ng both
            lower and upper case letters.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">no</t=
t>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-filter-reg=
ex-"><span class=3D"pre">--sub-filter-regex-...=3D...</span><a href=3D"http=
s://mpv.io/manual/master/#options-sub-filter-regex-" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">Set a list of regular expressions to mat=
ch on text subtitles, and remove any
            lines that match (default: empty). This is a string list option=
. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#list-options">List Options</a> for details. Normally, you should use
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-filter=
-regex-append=3D&lt;regex&gt;</span></tt>, where each option use will appen=
d a
            new regular expression, without having to fight escaping proble=
ms.</p>
            <p>List items are matched in order. If a regular expression mat=
ches, the
            process is stopped, and the subtitle line is discarded. The tex=
t matched
            against is, by default, the <tt class=3D"docutils literal">Text=
</tt> field of ASS events (if the
            subtitle format is different, it is always converted). This may=
 include
            formatting tags. Matching is case-insensitive, but how this is =
done depends
            on the libc, and most likely works in ASCII only. It does not w=
ork on
            bitmap/image subtitles. Unavailable on inferior OSes (requires =
POSIX regex
            support).</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--sub-filter-regex-append=3Dopensubtitles\.org</span></tt> filters so=
me ads.</p>
            </div>
            <p>Technically, using a list for matching is redundant, since y=
ou could just
            use a single combined regular expression. But it helps with dia=
gnosis,
            ease of use, and temporarily disabling or enabling individual f=
ilters.</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This is experimental. The semantics most like=
ly will change, and if you
            use this, you should be prepared to update the option later. Id=
eas
            include replacing the regexes with a very primitive and small s=
ubset of
            sed, or some method to control case-sensitivity.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-filter-jsr=
e-"><span class=3D"pre">--sub-filter-jsre-...=3D...</span><a href=3D"https:=
//mpv.io/manual/master/#options-sub-filter-jsre-" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
--sub-filter-regex</span></tt> but with JavaScript regular expressions.
            Shares/affected-by all <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--sub-filter-regex-*</span></tt> control options (see below),
            and also experimental. Requires only JavaScript support.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-filter-reg=
ex-plain"><span class=3D"pre">--sub-filter-regex-plain=3D&lt;yes|no&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-sub-filter-regex-plain"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether to first convert the ASS "Text" field to plain-text=
 (default: no).
            This strips ASS tags and applies ASS directives, like <tt class=
=3D"docutils literal">\N</tt> to new-line.
            If the result is multi-line then the regexp anchors <tt class=
=3D"docutils literal">^</tt> and <tt class=3D"docutils literal">$</tt> matc=
h
            each line, but still any match discards all lines.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-filter-reg=
ex-warn"><span class=3D"pre">--sub-filter-regex-warn=3D&lt;yes|no&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-sub-filter-regex-warn" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Log dropped lines with warning log level, instead of verbos=
e (default: no).
            Helpful for testing.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-filter-reg=
ex-enable"><span class=3D"pre">--sub-filter-regex-enable=3D&lt;yes|no&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-sub-filter-regex-enab=
le" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether to enable regex filtering (default: yes). Note that=
 if no regexes
            are added to the <tt class=3D"docutils literal"><span class=3D"=
pre">--sub-filter-regex</span></tt> list, setting this option to <tt class=
=3D"docutils literal">yes</tt>
            has no effect. It's meant to easily disable or enable filtering
            temporarily.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-create-cc-=
track"><span class=3D"pre">--sub-create-cc-track=3D&lt;yes|no&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-sub-create-cc-track" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">For every video stream, create a closed =
captions track (default: no). The
            only purpose is to make the track available for selection at th=
e start of
            playback, instead of creating it lazily. This applies only to
            <tt class=3D"docutils literal">ATSC A53 Part 4 Closed Captions<=
/tt> (displayed by mpv as subtitle tracks
            using the codec <tt class=3D"docutils literal">eia_608</tt>). T=
he CC track is marked "default" and selected
            according to the normal subtitle track selection rules. You can=
 then use
            <tt class=3D"docutils literal"><span class=3D"pre">--sid</span>=
</tt> to explicitly select the correct track too.</p>
            <p class=3D"last">If the video stream contains no closed captio=
ns, or if no video is being
            decoded, the CC track will remain empty and will not show any t=
ext.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-font-provi=
der"><span class=3D"pre">--sub-font-provider=3D&lt;auto|none|fontconfig&gt;=
</span><a href=3D"https://mpv.io/manual/master/#options-sub-font-provider" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Which libass font provider backend to us=
e (default: auto). <tt class=3D"docutils literal">auto</tt> will
            attempt to use the native font provider: fontconfig on Linux, C=
oreText on
            macOS, DirectWrite on Windows. <tt class=3D"docutils literal">f=
ontconfig</tt> forces fontconfig, if libass
            was built with support (if not, it behaves like <tt class=3D"do=
cutils literal">none</tt>).</p>
            <p class=3D"last">The <tt class=3D"docutils literal">none</tt> =
font provider effectively disables system fonts. It will still
            attempt to use embedded fonts (unless <tt class=3D"docutils lit=
eral"><span class=3D"pre">--embeddedfonts=3Dno</span></tt> is set; this is
            the same behavior as with all other font providers), <tt class=
=3D"docutils literal">subfont.ttf</tt> if
            provided, and fonts in  the <tt class=3D"docutils literal">font=
s</tt> sub-directory if provided. (The
            fallback is more strict than that of other font providers, and =
if a font
            name does not match, it may prefer not to render any text that =
uses the
            missing font.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sub-fonts-dir"=
><span class=3D"pre">--sub-fonts-dir=3D&lt;path&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-sub-fonts-dir" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Font files in this directory are used by=
 mpv/libass for subtitles. Useful
            if you do not want to install fonts to your system. Note that f=
iles in this
            directory are loaded into memory before being used by mpv. If y=
ou have a
            lot of fonts, consider using fonts.conf (see <a class=3D"refere=
nce internal" href=3D"https://mpv.io/manual/master/#files">FILES</a> sectio=
n) to include
            additional mpv user settings.</p>
            <p class=3D"last">If this option is not specified, <tt class=3D=
"docutils literal"><span class=3D"pre">~~/fonts</span></tt> will be used by=
 default.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"window">
            <h2>Window</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-title"><span c=
lass=3D"pre">--title=3D&lt;string&gt;</span><a href=3D"https://mpv.io/manua=
l/master/#options-title" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the window title. This is used for t=
he video window, and if possible,
            also sets the audio stream title.</p>
            <p>Properties are expanded. (See <a class=3D"reference internal=
" href=3D"https://mpv.io/manual/master/#property-expansion">Property Expans=
ion</a>.)</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">There is a danger of this causing significant=
 CPU usage, depending on
            the properties used. Changing the window title is often a slow
            operation, and if the title changes every frame, playback can b=
e ruined.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screen"><span =
class=3D"pre">--screen=3D&lt;default|0-32&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-screen" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">In multi-monitor configurations (i.e. a =
single desktop that spans across
            multiple displays), this option tells mpv which screen to displ=
ay the
            video on.</p>
            <div class=3D"admonition admonition-note-x11">
            <p class=3D"first admonition-title">Note (X11)</p>
            <p class=3D"last">This option does not work properly with all w=
indow managers. In these
            cases, you can try to use <tt class=3D"docutils literal"><span =
class=3D"pre">--geometry</span></tt> to position the window
            explicitly. It's also possible that the window manager provides=
 native
            features to control which screens application windows should us=
e.</p>
            </div>
            <p class=3D"last">See also <tt class=3D"docutils literal"><span=
 class=3D"pre">--fs-screen</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screen-name"><=
span class=3D"pre">--screen-name=3D&lt;string&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-screen-name" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd>In multi-monitor configurations, this option tells mpv whic=
h screen to
            display the video on based on the screen name from the video ba=
ckend. The
            same caveats in the <tt class=3D"docutils literal"><span class=
=3D"pre">--screen</span></tt> option also apply here. This option is
            ignored and does nothing if <tt class=3D"docutils literal"><spa=
n class=3D"pre">--screen</span></tt> is explicitly set.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-fullscreen"><s=
pan class=3D"pre">--fullscreen</span><a href=3D"https://mpv.io/manual/maste=
r/#options-fullscreen" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"=
docutils literal" id=3D"options-fs"><span class=3D"pre">--fs</span><a href=
=3D"https://mpv.io/manual/master/#options-fs" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Fullscreen playback.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-fs-screen"><sp=
an class=3D"pre">--fs-screen=3D&lt;all|current|0-32&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-fs-screen" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">In multi-monitor configurations (i.e. a =
single desktop that spans across
            multiple displays), this option tells mpv which screen to go fu=
llscreen to.
            If <tt class=3D"docutils literal">current</tt> is used mpv will=
 fallback on what the user provided with
            the <tt class=3D"docutils literal">screen</tt> option.</p>
            <div class=3D"admonition admonition-note-x11">
            <p class=3D"first admonition-title">Note (X11)</p>
            <p class=3D"last">This option works properly only with window m=
anagers which
            understand the EWMH <tt class=3D"docutils literal">_NET_WM_FULL=
SCREEN_MONITORS</tt> hint.</p>
            </div>
            <div class=3D"admonition admonition-note-macos">
            <p class=3D"first admonition-title">Note (macOS)</p>
            <p class=3D"last"><tt class=3D"docutils literal">all</tt> does =
not work on macOS and will behave like <tt class=3D"docutils literal">curre=
nt</tt>.</p>
            </div>
            <p class=3D"last">See also <tt class=3D"docutils literal"><span=
 class=3D"pre">--screen</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-fs-screen-name=
"><span class=3D"pre">--fs-screen-name=3D&lt;string&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-fs-screen-name" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd>In multi-monitor configurations, this option tells mpv whic=
h screen to go
            fullscreen to based on the screen name from the video backend. =
The same
            caveats in the <tt class=3D"docutils literal"><span class=3D"pr=
e">--fs-screen</span></tt> option also apply here. This option is
            ignored and does nothing if <tt class=3D"docutils literal"><spa=
n class=3D"pre">--fs-screen</span></tt> is explicitly set.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-keep-open"><sp=
an class=3D"pre">--keep-open=3D&lt;yes|no|always&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-keep-open" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Do not terminate when playing or seeking=
 beyond the end of the file, and
            there is no next file to be played (and <tt class=3D"docutils l=
iteral"><span class=3D"pre">--loop</span></tt> is not used).
            Instead, pause the player. When trying to seek beyond end of th=
e file, the
            player will attempt to seek to the last frame.</p>
            <p>Normally, this will act like <tt class=3D"docutils literal">=
set pause yes</tt> on EOF, unless the
            <tt class=3D"docutils literal"><span class=3D"pre">--keep-open-=
pause=3Dno</span></tt> option is set.</p>
            <p>The following arguments can be given:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">If the current file ends, go to the next file or terminate.
            (Default.)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">Don't terminate if the current file is the last playlist en=
try.
            Equivalent to <tt class=3D"docutils literal"><span class=3D"pre=
">--keep-open</span></tt> without arguments.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">always:</th><td cl=
ass=3D"field-body">Like <tt class=3D"docutils literal">yes</tt>, but also a=
pplies to files before the last playlist
            entry. This means playback will never automatically advance to
            the next file.</td>
            </tr>
            </tbody>
            </table>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p>This option is not respected when using <tt class=3D"docutil=
s literal"><span class=3D"pre">--frames</span></tt>. Explicitly
            skipping to the next file if the binding uses <tt class=3D"docu=
tils literal">force</tt> will terminate
            playback as well.</p>
            <p class=3D"last">Also, if errors or unusual circumstances happ=
en, the player can quit
            anyway.</p>
            </div>
            <p class=3D"last">Since mpv 0.6.0, this doesn't pause if there =
is a next file in the playlist,
            or the playlist is looped. Approximately, this will pause when =
the player
            would normally exit, but in practice there are corner cases in =
which this
            is not the case (e.g. <tt class=3D"docutils literal">mpv <span =
class=3D"pre">--keep-open</span> file.mkv /dev/null</tt> will play
            file.mkv normally, then fail to open <tt class=3D"docutils lite=
ral">/dev/null</tt>, then exit). (In
            mpv 0.8.0, <tt class=3D"docutils literal">always</tt> was intro=
duced, which restores the old behavior.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-keep-open-paus=
e"><span class=3D"pre">--keep-open-pause=3D&lt;yes|no&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-keep-open-pause" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>If set to <tt class=3D"docutils literal">no</tt>, instead o=
f pausing when <tt class=3D"docutils literal"><span class=3D"pre">--keep-op=
en</span></tt> is active, just
            stop at end of file and continue playing forward when you seek =
backwards
            until end where it stops again. Default: <tt class=3D"docutils =
literal">yes</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-image-display-=
duration"><span class=3D"pre">--image-display-duration=3D&lt;seconds|inf&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-image-display-dura=
tion" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If the current file is an image, play th=
e image for the given amount of
            seconds (default: 1). <tt class=3D"docutils literal">inf</tt> m=
eans the file is kept open forever (until
            the user stops playback manually).</p>
            <p>Unlike <tt class=3D"docutils literal"><span class=3D"pre">--=
keep-open</span></tt>, the player is not paused, but simply continues
            playback until the time has elapsed. (It should not use any res=
ources
            during "playback".)</p>
            <p>This affects image files, which are defined as having only 1=
 video frame
            and no audio. The player may recognize certain non-images as im=
ages, for
            example if <tt class=3D"docutils literal"><span class=3D"pre">-=
-length</span></tt> is used to reduce the length to 1 frame, or if
            you seek to the last frame.</p>
            <p>This option does not affect the framerate used for <tt class=
=3D"docutils literal"><span class=3D"pre">mf://</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">--merge-file=
s</span></tt>. For that, use <tt class=3D"docutils literal"><span class=3D"=
pre">--mf-fps</span></tt> instead.</p>
            <p class=3D"last">Setting <tt class=3D"docutils literal"><span =
class=3D"pre">--image-display-duration</span></tt> hides the OSC and does n=
ot track
            playback time on the command-line output, and also does not dup=
licate
            the image frame when encoding. To force the player into "dumb m=
ode"
            and actually count out seconds, or to duplicate the image when
            encoding, you need to use <tt class=3D"docutils literal"><span =
class=3D"pre">--demuxer=3Dlavf</span> <span class=3D"pre">--demuxer-lavf-o=
=3Dloop=3D1</span></tt>,
            and use <tt class=3D"docutils literal"><span class=3D"pre">--le=
ngth</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre">--fr=
ames</span></tt> to stop after a particular time.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-force-window">=
<span class=3D"pre">--force-window=3D&lt;yes|no|immediate&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-force-window" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Create a video output window even if the=
re is no video. This can be useful
            when pretending that mpv is a GUI application. Currently, the w=
indow
            always has the size 640x480, and is subject to <tt class=3D"doc=
utils literal"><span class=3D"pre">--geometry</span></tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">--autofit</s=
pan></tt>, and similar options.</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">The window is created only after initializati=
on (to make sure default
            window placement still works if the video size is different fro=
m the
            <tt class=3D"docutils literal"><span class=3D"pre">--force-wind=
ow</span></tt> default window size). This can be a problem if
            initialization doesn't work perfectly, such as when opening URL=
s with
            bad network connection, or opening broken video files. The <tt =
class=3D"docutils literal">immediate</tt>
            mode can be used to create the window always on program start, =
but this
            may cause other issues.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-taskbar-progre=
ss"><span class=3D"pre">--taskbar-progress</span><a href=3D"https://mpv.io/=
manual/master/#options-taskbar-progress" class=3D"anchor fa fa-link"></a></=
tt>, <tt class=3D"docutils literal" id=3D"options-no-taskbar-progress"><spa=
n class=3D"pre">--no-taskbar-progress</span><a href=3D"https://mpv.io/manua=
l/master/#options-no-taskbar-progress" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">(Windows only)
            Enable/disable playback progress rendering in taskbar (Windows =
7 and above).</p>
            <p class=3D"last">Enabled by default.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-snap-window"><=
span class=3D"pre">--snap-window</span><a href=3D"https://mpv.io/manual/mas=
ter/#options-snap-window" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>(Windows only) Snap the player window to screen edges.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-drag-and-drop"=
><span class=3D"pre">--drag-and-drop=3D&lt;no|auto|replace|append&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-drag-and-drop" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>(X11, Wayland and Windows only)
            Controls the default behavior of drag and drop on platforms tha=
t support this.
            <tt class=3D"docutils literal">auto</tt> will obey what the und=
erlying os/platform gives mpv. Typically, holding
            shift during the drag and drop will append the item to the play=
list. Otherwise,
            it will completely replace it. <tt class=3D"docutils literal">r=
eplace</tt> and <tt class=3D"docutils literal">append</tt> always force rep=
lacing
            and appending to the playlist respectively. <tt class=3D"docuti=
ls literal">no</tt> disables all drag and drop
            behavior.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ontop"><span c=
lass=3D"pre">--ontop</span><a href=3D"https://mpv.io/manual/master/#options=
-ontop" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Makes the player window stay on top of o=
ther windows.</p>
            <p class=3D"last">On Windows, if combined with fullscreen mode,=
 this causes mpv to be
            treated as exclusive fullscreen window that bypasses the Deskto=
p Window
            Manager.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ontop-level"><=
span class=3D"pre">--ontop-level=3D&lt;window|system|desktop|level&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-ontop-level" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">(macOS only)
            Sets the level of an ontop window (default: window).</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">window:</th><td cl=
ass=3D"field-body">On top of all other windows.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">system:</th><td cl=
ass=3D"field-body">On top of system elements like Taskbar, Menubar and Dock=
.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">desktop:</th><td c=
lass=3D"field-body">On top of the Desktop behind windows and Desktop icons.=
</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">level:</th><td cla=
ss=3D"field-body">A level as integer.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-focus-on-open"=
><span class=3D"pre">--focus-on-open</span><a href=3D"https://mpv.io/manual=
/master/#options-focus-on-open" class=3D"anchor fa fa-link"></a></tt>, <tt =
class=3D"docutils literal" id=3D"options-no-focus-on-open"><span class=3D"p=
re">--no-focus-on-open</span><a href=3D"https://mpv.io/manual/master/#optio=
ns-no-focus-on-open" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>(macOS only)
            Focus the video window on creation and makes it the front most =
window. This
            is on by default.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-border"><span =
class=3D"pre">--border</span><a href=3D"https://mpv.io/manual/master/#optio=
ns-border" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils lit=
eral" id=3D"options-no-border"><span class=3D"pre">--no-border</span><a hre=
f=3D"https://mpv.io/manual/master/#options-no-border" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Play video with window border and decorations. Since this i=
s on by
            default, use <tt class=3D"docutils literal"><span class=3D"pre"=
>--no-border</span></tt> to disable the standard window decorations.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-on-all-workspa=
ces"><span class=3D"pre">--on-all-workspaces</span><a href=3D"https://mpv.i=
o/manual/master/#options-on-all-workspaces" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>(X11 and macOS only)
            Show the video window on all virtual desktops.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-geometry"><spa=
n class=3D"pre">--geometry=3D&lt;[W[xH]][+-x+-y][/WS]&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-geometry" class=3D"anchor fa fa-link"=
></a></tt>, <tt class=3D"docutils literal" id=3D"options-geometry"><span cl=
ass=3D"pre">--geometry=3D&lt;x:y&gt;</span><a href=3D"https://mpv.io/manual=
/master/#options-geometry" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Adjust the initial window position or si=
ze. <tt class=3D"docutils literal">W</tt> and <tt class=3D"docutils literal=
">H</tt> set the window
            size in pixels. <tt class=3D"docutils literal">x</tt> and <tt c=
lass=3D"docutils literal">y</tt> set the window position, measured in pixel=
s
            from the top-left corner of the screen to the top-left corner o=
f the image
            being displayed. If a percentage sign (<tt class=3D"docutils li=
teral">%</tt>) is given after the argument,
            it turns the value into a percentage of the screen size in that=
 direction.
            Positions are specified similar to the standard X11 <tt class=
=3D"docutils literal"><span class=3D"pre">--geometry</span></tt> option
            format, in which e.g. +10-50 means "place 10 pixels from the le=
ft border and
            50 pixels from the lower border" and "--20+-10" means "place 20=
 pixels
            beyond the right and 10 pixels beyond the top border". A traili=
ng <tt class=3D"docutils literal">/</tt>
            followed by an integer denotes on which workspace (virtual desk=
top) the
            window should appear (X11 only).</p>
            <p>If an external window is specified using the <tt class=3D"do=
cutils literal"><span class=3D"pre">--wid</span></tt> option, this
            option is ignored.</p>
            <p>The coordinates are relative to the screen given with <tt cl=
ass=3D"docutils literal"><span class=3D"pre">--screen</span></tt> for the
            video output drivers that fully support <tt class=3D"docutils l=
iteral"><span class=3D"pre">--screen</span></tt>.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Generally only supported by GUI VOs. Ignored =
for encoding.</p>
            </div>
            <div class=3D"admonition admonition-note-macos">
            <p class=3D"first admonition-title">Note (macOS)</p>
            <p class=3D"last">On macOS, the origin of the screen coordinate=
 system is located on the
            bottom-left corner. For instance, <tt class=3D"docutils literal=
">0:0</tt> will place the window at the
            bottom-left of the screen.</p>
            </div>
            <div class=3D"admonition admonition-note-x11">
            <p class=3D"first admonition-title">Note (X11)</p>
            <p class=3D"last">This option does not work properly with all w=
indow managers.</p>
            </div>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-50:40">50:40<a=
 href=3D"https://mpv.io/manual/master/#options-50:40" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Places the window at x=3D50, y=3D40.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-50%:50%"><span=
 class=3D"pre">50%:50%</span><a href=3D"https://mpv.io/manual/master/#optio=
ns-50%:50%" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Places the window in the middle of the screen.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-100%:100%"><sp=
an class=3D"pre">100%:100%</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-100%:100%" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Places the window at the bottom right corner of the screen.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-50%">50%<a hre=
f=3D"https://mpv.io/manual/master/#options-50%" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Sets the window width to half the screen width. Window heig=
ht is set
            so that the window has the video aspect ratio.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-50%x50%">50%x5=
0%<a href=3D"https://mpv.io/manual/master/#options-50%x50%" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Forces the window width and height to half the screen width=
 and
            height. Will show black borders to compensate for the video asp=
ect
            ratio (with most VOs and without <tt class=3D"docutils literal"=
><span class=3D"pre">--no-keepaspect</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-50%+10+10/2"><=
span class=3D"pre">50%+10+10/2</span><a href=3D"https://mpv.io/manual/maste=
r/#options-50%+10+10/2" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Sets the window to half the screen widths, and positions it=
 10
            pixels below/left of the top left corner of the screen, on the
            second workspace.</dd>
            </dl>
            </div>
            <p class=3D"last">See also <tt class=3D"docutils literal"><span=
 class=3D"pre">--autofit</span></tt> and <tt class=3D"docutils literal"><sp=
an class=3D"pre">--autofit-larger</span></tt> for fitting the window into
            a given size without changing aspect ratio.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-autofit"><span=
 class=3D"pre">--autofit=3D&lt;[W[xH]]&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-autofit" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the initial window size to a maximum=
 size specified by <tt class=3D"docutils literal">WxH</tt>, without
            changing the window's aspect ratio. The size is measured in pix=
els, or if
            a number is followed by a percentage sign (<tt class=3D"docutil=
s literal">%</tt>), in percents of the
            screen size.</p>
            <p>This option never changes the aspect ratio of the window. If=
 the aspect
            ratio mismatches, the window's size is reduced until it fits in=
to the
            specified size.</p>
            <p>Window position is not taken into account, nor is it modifie=
d by this
            option (the window manager still may place the window different=
ly depending
            on size). Use <tt class=3D"docutils literal"><span class=3D"pre=
">--geometry</span></tt> to change the window position. Its effects
            are applied after this option.</p>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">--geo=
metry</span></tt> for details how this is handled with multi-monitor
            setups.</p>
            <p>Use <tt class=3D"docutils literal"><span class=3D"pre">--aut=
ofit-larger</span></tt> instead if you just want to limit the maximum size
            of the window, rather than always forcing a window size.</p>
            <p>Use <tt class=3D"docutils literal"><span class=3D"pre">--geo=
metry</span></tt> if you want to force both window width and height to a
            specific size.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Generally only supported by GUI VOs. Ignored =
for encoding.</p>
            </div>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-70%">70%<a hre=
f=3D"https://mpv.io/manual/master/#options-70%" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Make the window width 70% of the screen size, keeping aspec=
t ratio.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-1000">1000<a h=
ref=3D"https://mpv.io/manual/master/#options-1000" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Set the window width to 1000 pixels, keeping aspect ratio.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"options-70%x60%">70%x6=
0%<a href=3D"https://mpv.io/manual/master/#options-70%x60%" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Make the window as large as possible, without being wider t=
han 70%
            of the screen width, or higher than 60% of the screen height.</=
dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-autofit-larger=
"><span class=3D"pre">--autofit-larger=3D&lt;[W[xH]]&gt;</span><a href=3D"h=
ttps://mpv.io/manual/master/#options-autofit-larger" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">This option behaves exactly like <tt cla=
ss=3D"docutils literal"><span class=3D"pre">--autofit</span></tt>, except t=
he window size is
            only changed if the window would be larger than the specified s=
ize.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-90%x80%">90%x8=
0%<a href=3D"https://mpv.io/manual/master/#options-90%x80%" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>If the video is larger than 90% of the screen width or 80% =
of the
            screen height, make the window smaller until either its width i=
s 90%
            of the screen, or its height is 80% of the screen.</dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-autofit-smalle=
r"><span class=3D"pre">--autofit-smaller=3D&lt;[W[xH]]&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-autofit-smaller" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">This option behaves exactly like <tt cla=
ss=3D"docutils literal"><span class=3D"pre">--autofit</span></tt>, except t=
hat it sets the
            minimum size of the window (just as <tt class=3D"docutils liter=
al"><span class=3D"pre">--autofit-larger</span></tt> sets the maximum).</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-500x500">500x5=
00<a href=3D"https://mpv.io/manual/master/#options-500x500" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Make the window at least 500 pixels wide and 500 pixels hig=
h
            (depending on the video aspect ratio, the width or height will =
be
            larger than 500 in order to keep the aspect ratio the same).</d=
d>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-window-scale">=
<span class=3D"pre">--window-scale=3D&lt;factor&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-window-scale" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd><p class=3D"first">Resize the video window to a multiple (o=
r fraction) of the video size. This
            option is applied before <tt class=3D"docutils literal"><span c=
lass=3D"pre">--autofit</span></tt> and other options are applied (so
            they override this option).</p>
            <p class=3D"last">For example, <tt class=3D"docutils literal"><=
span class=3D"pre">--window-scale=3D0.5</span></tt> would show the window a=
t half the
            video size.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-window-minimiz=
ed"><span class=3D"pre">--window-minimized=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-window-minimized" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether the video window is minimized or=
 not. Setting this will minimize,
            or unminimize, the video window if the current VO supports it. =
Note that
            some VOs may support minimization while not supporting unminimi=
zation
            (eg: Wayland).</p>
            <p class=3D"last">Whether this option and <tt class=3D"docutils=
 literal"><span class=3D"pre">--window-maximized</span></tt> work on progra=
m start or
            at runtime, and whether they're (at runtime) updated to reflect=
 the actual
            window state, heavily depends on the VO and the windowing syste=
m. Some VOs
            simply do not implement them or parts of them, while other VOs =
may be
            restricted by the windowing systems (especially Wayland).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-window-maximiz=
ed"><span class=3D"pre">--window-maximized=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-window-maximized" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Whether the video window is maximized or not. Setting this =
will maximize,
            or unmaximize, the video window if the current VO supports it. =
See
            <tt class=3D"docutils literal"><span class=3D"pre">--window-min=
imized</span></tt> for further remarks.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cursor-autohid=
e"><span class=3D"pre">--cursor-autohide=3D&lt;number|no|always&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-cursor-autohide" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Make mouse cursor automatically hide after given number of =
milliseconds
            (default: 1000 ms). <tt class=3D"docutils literal">no</tt> will=
 disable cursor autohide. <tt class=3D"docutils literal">always</tt>
            means the cursor will stay hidden.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cursor-autohid=
e-fs-only"><span class=3D"pre">--cursor-autohide-fs-only</span><a href=3D"h=
ttps://mpv.io/manual/master/#options-cursor-autohide-fs-only" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>If this option is given, the cursor is always visible in wi=
ndowed mode. In
            fullscreen mode, the cursor is shown or hidden according to
            <tt class=3D"docutils literal"><span class=3D"pre">--cursor-aut=
ohide</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-fixed-vo"><=
span class=3D"pre">--no-fixed-vo</span><a href=3D"https://mpv.io/manual/mas=
ter/#options-no-fixed-vo" class=3D"anchor fa fa-link"></a></tt>, <tt class=
=3D"docutils literal" id=3D"options-fixed-vo"><span class=3D"pre">--fixed-v=
o</span><a href=3D"https://mpv.io/manual/master/#options-fixed-vo" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">--no-fix=
ed-vo</span></tt> enforces closing and reopening the video window for
            multiple files (one (un)initialization for each file).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-force-rgba-osd=
-rendering"><span class=3D"pre">--force-rgba-osd-rendering</span><a href=3D=
"https://mpv.io/manual/master/#options-force-rgba-osd-rendering" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Change how some video outputs render the OSD and text subti=
tles. This
            does not change appearance of the subtitles and only has perfor=
mance
            implications. For VOs which support native ASS rendering (like =
<tt class=3D"docutils literal">gpu</tt>,
            <tt class=3D"docutils literal">vdpau</tt>, <tt class=3D"docutil=
s literal">direct3d</tt>), this can be slightly faster or slower,
            depending on GPU drivers and hardware. For other VOs, this just=
 makes
            rendering slower.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-force-render">=
<span class=3D"pre">--force-render</span><a href=3D"https://mpv.io/manual/m=
aster/#options-force-render" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Forces mpv to always render frames regardless of the visibi=
lity of the
            window. Currently only affects X11 and Wayland VOs since they a=
re the
            only ones that have this optimization (i.e. everything else alw=
ays renders
            regardless of visibility).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-force-window-p=
osition"><span class=3D"pre">--force-window-position</span><a href=3D"https=
://mpv.io/manual/master/#options-force-window-position" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>Forcefully move mpv's video output window to default locati=
on whenever
            there is a change in video parameters, video stream or file. Th=
is used to
            be the default behavior. Currently only affects X11 VOs.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-auto-window-re=
size"><span class=3D"pre">--auto-window-resize=3D&lt;yes|no&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-auto-window-resize" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>(Wayland, Win32, and X11)
            By default, mpv will automatically resize itself if the video's=
 size changes
            (i.e. advancing forward in a playlist). Setting this to <tt cla=
ss=3D"docutils literal">no</tt> disables this
            behavior so the window size never changes automatically. This o=
ption does
            not have any impact on the <tt class=3D"docutils literal"><span=
 class=3D"pre">--autofit</span></tt> or <tt class=3D"docutils literal"><spa=
n class=3D"pre">--geometry</span></tt> options.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-keepaspect"=
><span class=3D"pre">--no-keepaspect</span><a href=3D"https://mpv.io/manual=
/master/#options-no-keepaspect" class=3D"anchor fa fa-link"></a></tt>, <tt =
class=3D"docutils literal" id=3D"options-keepaspect"><span class=3D"pre">--=
keepaspect</span><a href=3D"https://mpv.io/manual/master/#options-keepaspec=
t" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">--no-kee=
paspect</span></tt> will always stretch the video to window size, and will
            disable the window manager hints that force the window aspect r=
atio.
            (Ignored in fullscreen mode.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-keepaspect-=
window"><span class=3D"pre">--no-keepaspect-window</span><a href=3D"https:/=
/mpv.io/manual/master/#options-no-keepaspect-window" class=3D"anchor fa fa-=
link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-keepaspect-wi=
ndow"><span class=3D"pre">--keepaspect-window</span><a href=3D"https://mpv.=
io/manual/master/#options-keepaspect-window" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">--keepas=
pect-window</span></tt> (the default) will lock the window size to the
            video aspect. <tt class=3D"docutils literal"><span class=3D"pre=
">--no-keepaspect-window</span></tt> disables this behavior, and will
            instead add black bars if window aspect and video aspect mismat=
ch. Whether
            this actually works depends on the VO backend.
            (Ignored in fullscreen mode.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-monitoraspect"=
><span class=3D"pre">--monitoraspect=3D&lt;ratio&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-monitoraspect" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Set the aspect ratio of your monitor or =
TV screen. A value of 0 disables a
            previous setting (e.g. in the config file). Overrides the
            <tt class=3D"docutils literal"><span class=3D"pre">--monitorpix=
elaspect</span></tt> setting if enabled.</p>
            <p>See also <tt class=3D"docutils literal"><span class=3D"pre">=
--monitorpixelaspect</span></tt> and <tt class=3D"docutils literal"><span c=
lass=3D"pre">--video-aspect-override</span></tt>.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--monito=
raspect=3D4:3</span></tt>  or <tt class=3D"docutils literal"><span class=3D=
"pre">--monitoraspect=3D1.3333</span></tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--monito=
raspect=3D16:9</span></tt> or <tt class=3D"docutils literal"><span class=3D=
"pre">--monitoraspect=3D1.7777</span></tt></li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hidpi-window-s=
cale"><span class=3D"pre">--hidpi-window-scale</span><a href=3D"https://mpv=
.io/manual/master/#options-hidpi-window-scale" class=3D"anchor fa fa-link">=
</a></tt>, <tt class=3D"docutils literal" id=3D"options-no-hidpi-window-sca=
le"><span class=3D"pre">--no-hidpi-window-scale</span><a href=3D"https://mp=
v.io/manual/master/#options-no-hidpi-window-scale" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>(macOS, Windows, X11, and Wayland only)
            Scale the window size according to the backing scale factor (de=
fault: yes).
            On regular HiDPI resolutions the window opens with double the s=
ize but appears
            as having the same size as on non-HiDPI resolutions.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-native-fs"><sp=
an class=3D"pre">--native-fs</span><a href=3D"https://mpv.io/manual/master/=
#options-native-fs" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"doc=
utils literal" id=3D"options-no-native-fs"><span class=3D"pre">--no-native-=
fs</span><a href=3D"https://mpv.io/manual/master/#options-no-native-fs" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>(macOS only)
            Uses the native fullscreen mechanism of the OS (default: yes).<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"options-monitorpixelas=
pect"><span class=3D"pre">--monitorpixelaspect=3D&lt;ratio&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-monitorpixelaspect" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Set the aspect of a single pixel of your monitor or TV scre=
en (default:
            1). A value of 1 means square pixels (correct for (almost?) all=
 LCDs). See
            also <tt class=3D"docutils literal"><span class=3D"pre">--monit=
oraspect</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre"=
>--video-aspect-override</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stop-screensav=
er"><span class=3D"pre">--stop-screensaver=3D&lt;yes|no|always&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-stop-screensaver" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Turns off the screensaver (or screen bla=
nker and similar mechanisms) at
            startup and turns it on again on exit (default: yes). When usin=
g <tt class=3D"docutils literal">yes</tt>,
            the screensaver will re-enable when playback is not active. <tt=
 class=3D"docutils literal">always</tt> will
            always disable the screensaver. Note that stopping the screensa=
ver is only
            possible if a video output is available (i.e. there is an open =
mpv window).</p>
            <p class=3D"last">This is not supported on all video outputs or=
 platforms. Sometimes it is
            implemented, but does not work (especially with Linux "desktops=
"). Read the
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#disabling-screensaver">Disabling Screensaver</a> section very carefu=
lly.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-wid"><span cla=
ss=3D"pre">--wid=3D&lt;ID&gt;</span><a href=3D"https://mpv.io/manual/master=
/#options-wid" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This tells mpv to attach to an existing =
window. If a VO is selected that
            supports this option, it will use that window for video output.=
 mpv will
            scale the video to the size of this window, and will add black =
bars to
            compensate if the aspect ratio of the video is different.</p>
            <p>On X11, the ID is interpreted as a <tt class=3D"docutils lit=
eral">Window</tt> on X11. Unlike
            MPlayer/mplayer2, mpv always creates its own window, and sets t=
he wid
            window as parent. The window will always be resized to cover th=
e parent
            window fully. The value <tt class=3D"docutils literal">0</tt> i=
s interpreted specially, and mpv will
            draw directly on the root window.</p>
            <p>On win32, the ID is interpreted as <tt class=3D"docutils lit=
eral">HWND</tt>. Pass it as value cast to
            <tt class=3D"docutils literal">uint32_t</tt> (all Windows handl=
es are 32-bit), this is important as mpv will
            not accept negative values. mpv will create its own window and =
set the
            wid window as parent, like with X11.</p>
            <p>On macOS/Cocoa, the ID is interpreted as <tt class=3D"docuti=
ls literal">NSView*</tt>. Pass it as value cast
            to <tt class=3D"docutils literal">intptr_t</tt>. mpv will creat=
e its own sub-view. Because macOS does not
            support window embedding of foreign processes, this works only =
with libmpv,
            and will crash when used from the command line.</p>
            <p class=3D"last">On Android, the ID is interpreted as <tt clas=
s=3D"docutils literal">android.view.Surface</tt>. Pass it as a
            value cast to <tt class=3D"docutils literal">intptr_t</tt>. Use=
 with <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dmediacodec_=
embed</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">--hwdec=3Dme=
diacodec</span></tt> for direct rendering using MediaCodec, or with
            <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu</=
span> <span class=3D"pre">--gpu-context=3Dandroid</span></tt> (with or with=
out <tt class=3D"docutils literal"><span class=3D"pre">--hwdec=3Dmediacodec=
</span></tt>).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-window-drag=
ging"><span class=3D"pre">--no-window-dragging</span><a href=3D"https://mpv=
.io/manual/master/#options-no-window-dragging" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Don't move the window when clicking on it and moving the mo=
use pointer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-x11-name"><spa=
n class=3D"pre">--x11-name=3D&lt;string&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-x11-name" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Set the window class name for X11-based video output method=
s.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-x11-netwm"><sp=
an class=3D"pre">--x11-netwm=3D&lt;yes|no|auto&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-x11-netwm" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first">(X11 only)
            Control the use of NetWM protocol features.</p>
            <p>This may or may not help with broken window managers. This p=
rovides some
            functionality that was implemented by the now removed <tt class=
=3D"docutils literal"><span class=3D"pre">--fstype</span></tt> option.
            Actually, it is not known to the developers to which degree thi=
s option
            was needed, so feedback is welcome.</p>
            <p>Specifically, <tt class=3D"docutils literal">yes</tt> will f=
orce use of NetWM fullscreen support, even if
            not advertised by the WM. This can be useful for WMs that are b=
roken on
            purpose, like XMonad. (XMonad supposedly doesn't advertise full=
screen
            support, because Flash uses it. Apparently, applications which =
want to
            use fullscreen anyway are supposed to either ignore the NetWM s=
upport hints,
            or provide a workaround. Shame on XMonad for deliberately break=
ing X
            protocols (as if X isn't bad enough already).</p>
            <p>By default, NetWM support is autodetected (<tt class=3D"docu=
tils literal">auto</tt>).</p>
            <p class=3D"last">This option might be removed in the future.</=
p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-x11-bypass-com=
positor"><span class=3D"pre">--x11-bypass-compositor=3D&lt;yes|no|fs-only|n=
ever&gt;</span><a href=3D"https://mpv.io/manual/master/#options-x11-bypass-=
compositor" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If set to <tt class=3D"docutils literal"=
>yes</tt>, then ask the compositor to unredirect the mpv window
            (default: <tt class=3D"docutils literal"><span class=3D"pre">fs=
-only</span></tt>). This uses the <tt class=3D"docutils literal">_NET_WM_BY=
PASS_COMPOSITOR</tt> hint.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">fs-only</=
span></tt> asks the window manager to disable the compositor only in
            fullscreen mode.</p>
            <p><tt class=3D"docutils literal">no</tt> sets <tt class=3D"doc=
utils literal">_NET_WM_BYPASS_COMPOSITOR</tt> to 0, which is the default va=
lue
            as declared by the EWMH specification, i.e. no change is done.<=
/p>
            <p class=3D"last"><tt class=3D"docutils literal">never</tt> ask=
s the window manager to never disable the compositor.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-x11-present"><=
span class=3D"pre">--x11-present=3D&lt;no|auto|yes&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-x11-present" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Whether or not to use presentation stati=
stics from X11's presentation
            extension (default: <tt class=3D"docutils literal">auto</tt>).<=
/p>
            <p>mpv asks X11 for present events which it then may use for mo=
re accurate
            frame presentation. This only has an effect if <tt class=3D"doc=
utils literal"><span class=3D"pre">--video-sync=3Ddisplay-...</span></tt>
            is being used.</p>
            <p>The auto option enumerates XRandr providers for autodetectio=
n. If amd, radeon,
            intel, or nouveau (the standard x86 Mesa drivers) is found and =
nvidia is NOT
            found, presentation feedback is enabled. Other drivers are not =
assumed to
            work, so they are not enabled automatically.</p>
            <p class=3D"last"><tt class=3D"docutils literal">yes</tt> or <t=
t class=3D"docutils literal">no</tt> can still be passed regardless to enab=
le/disable this
            mechanism in case there is good/bad behavior with whatever your=
 combination
            of hardware/drivers/etc. happens to be.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"disc-devices">
            <h2>Disc Devices</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-cdrom-device">=
<span class=3D"pre">--cdrom-device=3D&lt;path&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-cdrom-device" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Specify the CD-ROM device (default: <tt class=3D"docutils l=
iteral">/dev/cdrom</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvd-device"><s=
pan class=3D"pre">--dvd-device=3D&lt;path&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-dvd-device" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Specify the DVD device or .iso filename =
(default: <tt class=3D"docutils literal">/dev/dvd</tt>). You can
            also specify a directory that contains files previously copied =
directly
            from a DVD (with e.g. vobcopy).</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last"><tt class=3D"docutils literal">mpv <span clas=
s=3D"pre">dvd://</span> <span class=3D"pre">--dvd-device=3D/path/to/dvd/</s=
pan></tt></p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-bluray-device"=
><span class=3D"pre">--bluray-device=3D&lt;path&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-bluray-device" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">(Blu-ray only)
            Specify the Blu-ray disc location. Must be a directory with Blu=
-ray
            structure.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last"><tt class=3D"docutils literal">mpv <span clas=
s=3D"pre">bd://</span> <span class=3D"pre">--bluray-device=3D/path/to/bd/</=
span></tt></p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-"><span c=
lass=3D"pre">--cdda-...</span><a href=3D"https://mpv.io/manual/master/#opti=
ons-cdda-" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>These options can be used to tune the CD Audio reading feat=
ure of mpv.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-speed"><s=
pan class=3D"pre">--cdda-speed=3D&lt;value&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-cdda-speed" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>Set CD spin speed.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-paranoia"=
><span class=3D"pre">--cdda-paranoia=3D&lt;0-2&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-cdda-paranoia" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd><p class=3D"first">Set paranoia level. Values other than 0 =
seem to break playback of
            anything but the first track.</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">0:</th><td class=
=3D"field-body">disable checking (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">1:</th><td class=
=3D"field-body">overlap checking only</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2:</th><td class=
=3D"field-body">full data correction and verification</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-sector-si=
ze"><span class=3D"pre">--cdda-sector-size=3D&lt;value&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-cdda-sector-size" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Set atomic read size.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-overlap">=
<span class=3D"pre">--cdda-overlap=3D&lt;value&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-cdda-overlap" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Force minimum overlap search during verification to &lt;val=
ue&gt; sectors.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-toc-bias"=
><span class=3D"pre">--cdda-toc-bias</span><a href=3D"https://mpv.io/manual=
/master/#options-cdda-toc-bias" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Assume that the beginning offset of track 1 as reported in =
the TOC
            will be addressed as LBA 0. Some discs need this for getting tr=
ack
            boundaries correctly.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-toc-offse=
t"><span class=3D"pre">--cdda-toc-offset=3D&lt;value&gt;</span><a href=3D"h=
ttps://mpv.io/manual/master/#options-cdda-toc-offset" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Add <tt class=3D"docutils literal">&lt;value&gt;</tt> secto=
rs to the values reported when addressing tracks.
            May be negative.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-skip"><sp=
an class=3D"pre">--cdda-skip=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-cdda-skip" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>(Never) accept imperfect data reconstruction.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cdda-cdtext"><=
span class=3D"pre">--cdda-cdtext=3D&lt;yes|no&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-cdda-cdtext" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd>Print CD text. This is disabled by default, because it ruin=
s performance
            with CD-ROM drives for unknown reasons.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvd-speed"><sp=
an class=3D"pre">--dvd-speed=3D&lt;speed&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-dvd-speed" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Try to limit DVD speed (default: 0, no c=
hange). DVD base speed is 1385
            kB/s, so an 8x drive can read at speeds up to 11080 kB/s. Slowe=
r speeds
            make the drive more quiet. For watching DVDs, 2700 kB/s should =
be quiet and
            fast enough. mpv resets the speed to the drive default value on=
 close.
            Values of at least 100 mean speed in kB/s. Values less than 100=
 mean
            multiples of 1385 kB/s, i.e. <tt class=3D"docutils literal"><sp=
an class=3D"pre">--dvd-speed=3D8</span></tt> selects 11080 kB/s.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">You need write access to the DVD device to ch=
ange the speed.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvd-angle"><sp=
an class=3D"pre">--dvd-angle=3D&lt;ID&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-dvd-angle" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Some DVDs contain scenes that can be viewed from multiple a=
ngles.
            This option tells mpv which angle to use (default: 1).</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"equalizer">
            <h2>Equalizer</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-brightness"><s=
pan class=3D"pre">--brightness=3D&lt;-100-100&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-brightness" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Adjust the brightness of the video signal (default: 0). Not=
 supported by
            all video output drivers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-contrast"><spa=
n class=3D"pre">--contrast=3D&lt;-100-100&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-contrast" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Adjust the contrast of the video signal (default: 0). Not s=
upported by all
            video output drivers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-saturation"><s=
pan class=3D"pre">--saturation=3D&lt;-100-100&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-saturation" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Adjust the saturation of the video signal (default: 0). You=
 can get
            grayscale output with this option. Not supported by all video o=
utput
            drivers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gamma"><span c=
lass=3D"pre">--gamma=3D&lt;-100-100&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-gamma" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Adjust the gamma of the video signal (default: 0). Not supp=
orted by all
            video output drivers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hue"><span cla=
ss=3D"pre">--hue=3D&lt;-100-100&gt;</span><a href=3D"https://mpv.io/manual/=
master/#options-hue" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Adjust the hue of the video signal (default: 0). You can ge=
t a colored
            negative of the image with this option. Not supported by all vi=
deo output
            drivers.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"demuxer">
            <h2>Demuxer</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer"><span=
 class=3D"pre">--demuxer=3D&lt;[+]name&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-demuxer" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Force demuxer type. Use a '+' before the name to force it; =
this will skip
            some checks. Give the demuxer name as printed by <tt class=3D"d=
ocutils literal"><span class=3D"pre">--demuxer=3Dhelp</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-a=
nalyzeduration"><span class=3D"pre">--demuxer-lavf-analyzeduration=3D&lt;va=
lue&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-lavf=
-analyzeduration" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Maximum length in seconds to analyze the stream properties.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-p=
robe-info"><span class=3D"pre">--demuxer-lavf-probe-info=3D&lt;yes|no|auto|=
nostreams&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxe=
r-lavf-probe-info" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether to probe stream information (def=
ault: auto). Technically, this
            controls whether libavformat's <tt class=3D"docutils literal">a=
vformat_find_stream_info()</tt> function
            is called. Usually it's safer to call it, but it can also make =
startup
            slower.</p>
            <p>The <tt class=3D"docutils literal">auto</tt> choice (the def=
ault) tries to skip this for a few know-safe
            whitelisted formats, while calling it for everything else.</p>
            <p class=3D"last">The <tt class=3D"docutils literal">nostreams<=
/tt> choice only calls it if and only if the file seems to
            contain no streams after opening (helpful in cases when calling=
 the function
            is needed to detect streams at all, such as with FLV files).</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-p=
robescore"><span class=3D"pre">--demuxer-lavf-probescore=3D&lt;1-100&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-demuxer-lavf-probescor=
e" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Minimum required libavformat probe score. Lower values will=
 require
            less data to be loaded (makes streams start faster), but makes =
file
            format detection less reliable. Can be used to force auto-detec=
ted
            libavformat demuxers, even if libavformat considers the detecti=
on not
            reliable enough. (Default: 26.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-a=
llow-mimetype"><span class=3D"pre">--demuxer-lavf-allow-mimetype=3D&lt;yes|=
no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-lavf-=
allow-mimetype" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Allow deriving the format from the HTTP =
MIME type (default: yes). Set
            this to no in case playing things from HTTP mysteriously fails,=
 even
            though the same files work from local disk.</p>
            <p class=3D"last">This is default in order to reduce latency wh=
en opening HTTP streams.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-f=
ormat"><span class=3D"pre">--demuxer-lavf-format=3D&lt;name&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-demuxer-lavf-format" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Force a specific libavformat demuxer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-h=
acks"><span class=3D"pre">--demuxer-lavf-hacks=3D&lt;yes|no&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-demuxer-lavf-hacks" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>By default, some formats will be handled differently from o=
ther formats
            by explicitly checking for them. Most of these compensate for w=
eird or
            imperfect behavior from libavformat demuxers. Passing <tt class=
=3D"docutils literal">no</tt> disables
            these. For debugging and testing only.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-o=
"><span class=3D"pre">--demuxer-lavf-o=3D&lt;key&gt;=3D&lt;value&gt;[,&lt;k=
ey&gt;=3D&lt;value&gt;[,...]]</span><a href=3D"https://mpv.io/manual/master=
/#options-demuxer-lavf-o" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Pass AVOptions to libavformat demuxer.</=
p>
            <p>Note, a patch to make the <em>o=3D</em> unneeded and pass al=
l unknown options
            through the AVOption system is welcome. A full list of AVOption=
s can
            be found in the FFmpeg manual. Note that some options may confl=
ict
            with mpv options.</p>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--demuxer-lavf-o=3Dfflags=3D+ignidx</span></tt></p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-p=
robesize"><span class=3D"pre">--demuxer-lavf-probesize=3D&lt;value&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-demuxer-lavf-probesize" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Maximum amount of data to probe during the detection phase.=
 In the
            case of MPEG-TS this value identifies the maximum number of TS =
packets
            to scan.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-b=
uffersize"><span class=3D"pre">--demuxer-lavf-buffersize=3D&lt;value&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-demuxer-lavf-buffersiz=
e" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Size of the stream read buffer allocated for libavformat in=
 bytes
            (default: 32768). Lowering the size could lower latency. Note t=
hat
            libavformat might reallocate the buffer internally, or not full=
y use all
            of it.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-l=
inearize-timestamps"><span class=3D"pre">--demuxer-lavf-linearize-timestamp=
s=3D&lt;yes|no|auto&gt;</span><a href=3D"https://mpv.io/manual/master/#opti=
ons-demuxer-lavf-linearize-timestamps" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Attempt to linearize timestamp resets in=
 demuxed streams (default: auto).
            This was tested only for single audio streams. It's unknown whe=
ther it
            works correctly for video (but likely won't). Note that the imp=
lementation
            is slightly incorrect either way, and will introduce a disconti=
nuity by
            about 1 codec frame size.</p>
            <p class=3D"last">The <tt class=3D"docutils literal">auto</tt> =
mode enables this for OGG audio stream. This covers the common
            and annoying case of OGG web radio streams. Some of these will =
reset
            timestamps to 0 every time a new song begins. This breaks the m=
pv seekable
            cache, which can't deal with timestamp resets. Note that FFmpeg=
/libavformat's
            seeking API can't deal with this either; it's likely that if th=
is option
            breaks this even more, while if it's disabled, you can at least=
 seek within
            the first song in the stream. Well, you won't get anything usef=
ul either
            way if the seek is outside of mpv's cache.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-lavf-p=
ropagate-opts"><span class=3D"pre">--demuxer-lavf-propagate-opts=3D&lt;yes|=
no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-lavf-=
propagate-opts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Propagate FFmpeg-level options to recurs=
ively opened connections (default:
            yes). This is needed because FFmpeg will apply these settings t=
o nested
            AVIO contexts automatically. On the other hand, this could brea=
k in certain
            situations - it's the FFmpeg API, you just can't win.</p>
            <p>This affects in particular the <tt class=3D"docutils literal=
"><span class=3D"pre">--timeout</span></tt> option and anything passed
            with <tt class=3D"docutils literal"><span class=3D"pre">--demux=
er-lavf-o</span></tt>.</p>
            <p class=3D"last">If this option is deemed unnecessary at some =
point in the future, it will
            be removed without notice.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-mkv-su=
btitle-preroll"><span class=3D"pre">--demuxer-mkv-subtitle-preroll=3D&lt;ye=
s|index|no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demux=
er-mkv-subtitle-preroll" class=3D"anchor fa fa-link"></a></tt>, <tt class=
=3D"docutils literal" id=3D"options-mkv-subtitle-preroll"><span class=3D"pr=
e">--mkv-subtitle-preroll</span><a href=3D"https://mpv.io/manual/master/#op=
tions-mkv-subtitle-preroll" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Try harder to show embedded soft subtitl=
es when seeking somewhere. Normally,
            it can happen that the subtitle at the seek target is not shown=
 due to how
            some container file formats are designed. The subtitles appear =
only if
            seeking before or exactly to the position a subtitle first appe=
ars. To
            make this worse, subtitles are often timed to appear a very sma=
ll amount
            before the associated video frame, so that seeking to the video=
 frame
            typically does not demux the subtitle at that position.</p>
            <p>Enabling this option makes the demuxer start reading data a =
bit before the
            seek target, so that subtitles appear correctly. Note that this=
 makes
            seeking slower, and is not guaranteed to always work. It only w=
orks if the
            subtitle is close enough to the seek target.</p>
            <p>Works with the internal Matroska demuxer only. Always enable=
d for absolute
            and hr-seeks, and this option changes behavior with relative or=
 imprecise
            seeks only.</p>
            <p>You can use the <tt class=3D"docutils literal"><span class=
=3D"pre">--demuxer-mkv-subtitle-preroll-secs</span></tt> option to specify
            how much data the demuxer should pre-read at most in order to f=
ind subtitle
            packets that may overlap. Setting this to 0 will effectively di=
sable this
            preroll mechanism. Setting a very large value can make seeking =
very slow,
            and an extremely large value would completely reread the entire=
 file from
            start to seek target on every seek - seeking can become slower =
towards the
            end of the file. The details are messy, and the value is actual=
ly rounded
            down to the cluster with the previous video keyframe.</p>
            <p>Some files, especially files muxed with newer mkvmerge versi=
ons, have
            information embedded that can be used to determine what subtitl=
e packets
            overlap with a seek target. In these cases, mpv will reduce the=
 amount
            of data read to a minimum. (Although it will still read <em>all=
</em> data between
            the cluster that contains the first wanted subtitle packet, and=
 the seek
            target.) If the <tt class=3D"docutils literal">index</tt> choic=
e (which is the default) is specified, then
            prerolling will be done only if this information is actually av=
ailable. If
            this method is used, the maximum amount of data to skip can be =
additionally
            controlled by <tt class=3D"docutils literal"><span class=3D"pre=
">--demuxer-mkv-subtitle-preroll-secs-index</span></tt> (it still uses
            the value of the option without <tt class=3D"docutils literal">=
<span class=3D"pre">-index</span></tt> if that is higher).</p>
            <p>See also <tt class=3D"docutils literal"><span class=3D"pre">=
--hr-seek-demuxer-offset</span></tt> option. This option can achieve a
            similar effect, but only if hr-seek is active. It works with an=
y demuxer,
            but makes seeking much slower, as it has to decode audio and vi=
deo data
            instead of just skipping over it.</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--mkv-subtitle-preroll</span></tt> is a deprecated alias.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-mkv-su=
btitle-preroll-secs"><span class=3D"pre">--demuxer-mkv-subtitle-preroll-sec=
s=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/#options-de=
muxer-mkv-subtitle-preroll-secs" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--de=
muxer-mkv-subtitle-preroll</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-mkv-su=
btitle-preroll-secs-index"><span class=3D"pre">--demuxer-mkv-subtitle-prero=
ll-secs-index=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master=
/#options-demuxer-mkv-subtitle-preroll-secs-index" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--de=
muxer-mkv-subtitle-preroll</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-mkv-pr=
obe-start-time"><span class=3D"pre">--demuxer-mkv-probe-start-time=3D&lt;ye=
s|no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-mkv=
-probe-start-time" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Check the start time of Matroska files (default: yes). This=
 simply reads the
            first cluster timestamps and assumes it is the start time. Tech=
nically, this
            also reads the first timestamp, which may increase latency by o=
ne frame
            (which may be relevant for live streams).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-mkv-pr=
obe-video-duration"><span class=3D"pre">--demuxer-mkv-probe-video-duration=
=3D&lt;yes|no|full&gt;</span><a href=3D"https://mpv.io/manual/master/#optio=
ns-demuxer-mkv-probe-video-duration" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd><p class=3D"first">When opening the file, seek to the end o=
f it, and check what timestamp the
            last video packet has, and report that as file duration. This i=
s strictly
            for compatibility with Haali only. In this mode, it's possible =
that opening
            will be slower (especially when playing over http), or that beh=
avior with
            broken files is much worse. So don't use this option.</p>
            <p class=3D"last">The <tt class=3D"docutils literal">yes</tt> m=
ode merely uses the index and reads a small number of blocks
            from the end of the file. The <tt class=3D"docutils literal">fu=
ll</tt> mode actually traverses the entire
            file and can make a reliable estimate even without an index pre=
sent (such
            as partial files).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawaud=
io-channels"><span class=3D"pre">--demuxer-rawaudio-channels=3D&lt;value&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-rawaudio-c=
hannels" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of channels (or channel layout) if <tt class=3D"docu=
tils literal"><span class=3D"pre">--demuxer=3Drawaudio</span></tt> is used
            (default: stereo).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawaud=
io-format"><span class=3D"pre">--demuxer-rawaudio-format=3D&lt;value&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-demuxer-rawaudio-forma=
t" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Sample format for <tt class=3D"docutils literal"><span clas=
s=3D"pre">--demuxer=3Drawaudio</span></tt> (default: s16le).
            Use <tt class=3D"docutils literal"><span class=3D"pre">--demuxe=
r-rawaudio-format=3Dhelp</span></tt> to get a list of all formats.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawaud=
io-rate"><span class=3D"pre">--demuxer-rawaudio-rate=3D&lt;value&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#options-demuxer-rawaudio-rate" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Sample rate for <tt class=3D"docutils literal"><span class=
=3D"pre">--demuxer=3Drawaudio</span></tt> (default: 44 kHz).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawvid=
eo-fps"><span class=3D"pre">--demuxer-rawvideo-fps=3D&lt;value&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-demuxer-rawvideo-fps" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Rate in frames per second for <tt class=3D"docutils literal=
"><span class=3D"pre">--demuxer=3Drawvideo</span></tt> (default: 25.0).</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawvid=
eo-w"><span class=3D"pre">--demuxer-rawvideo-w=3D&lt;value&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-demuxer-rawvideo-w" class=3D"anc=
hor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-dem=
uxer-rawvideo-h"><span class=3D"pre">--demuxer-rawvideo-h=3D&lt;value&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-demuxer-rawvideo-h" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Image dimension in pixels for <tt class=
=3D"docutils literal"><span class=3D"pre">--demuxer=3Drawvideo</span></tt>.=
</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p>Play a raw YUV sample:</p>
            <pre class=3D"last literal-block">mpv sample-720x576.yuv --demu=
xer=3Drawvideo \
--demuxer-rawvideo-w=3D720 --demuxer-rawvideo-h=3D576
</pre>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawvid=
eo-format"><span class=3D"pre">--demuxer-rawvideo-format=3D&lt;value&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-demuxer-rawvideo-forma=
t" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Color space (fourcc) in hex or string for <tt class=3D"docu=
tils literal"><span class=3D"pre">--demuxer=3Drawvideo</span></tt>
            (default: <tt class=3D"docutils literal">YV12</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawvid=
eo-mp-format"><span class=3D"pre">--demuxer-rawvideo-mp-format=3D&lt;value&=
gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-rawvideo=
-mp-format" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Color space by internal video format for <tt class=3D"docut=
ils literal"><span class=3D"pre">--demuxer=3Drawvideo</span></tt>. Use
            <tt class=3D"docutils literal"><span class=3D"pre">--demuxer-ra=
wvideo-mp-format=3Dhelp</span></tt> for a list of possible formats.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawvid=
eo-codec"><span class=3D"pre">--demuxer-rawvideo-codec=3D&lt;value&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-demuxer-rawvideo-codec" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the video codec instead of selecting the rawvideo codec=
 when using
            <tt class=3D"docutils literal"><span class=3D"pre">--demuxer=3D=
rawvideo</span></tt>. This uses the same values as codec names in
            <tt class=3D"docutils literal"><span class=3D"pre">--vd</span><=
/tt> (but it does not accept decoder names).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-rawvid=
eo-size"><span class=3D"pre">--demuxer-rawvideo-size=3D&lt;value&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#options-demuxer-rawvideo-size" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Frame size in bytes when using <tt class=3D"docutils litera=
l"><span class=3D"pre">--demuxer=3Drawvideo</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-cue-co=
depage"><span class=3D"pre">--demuxer-cue-codepage=3D&lt;codepage&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-demuxer-cue-codepage" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the CUE sheet codepage. (See <tt class=3D"docutils =
literal"><span class=3D"pre">--sub-codepage</span></tt> for details.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-max-by=
tes"><span class=3D"pre">--demuxer-max-bytes=3D&lt;bytesize&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-demuxer-max-bytes" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This controls how much the demuxer is al=
lowed to buffer ahead. The demuxer
            will normally try to read ahead as much as necessary, or as muc=
h is
            requested with <tt class=3D"docutils literal"><span class=3D"pr=
e">--demuxer-readahead-secs</span></tt>. The option can be used to
            restrict the maximum readahead. This limits excessive readahead=
 in case of
            broken files or desynced playback. The demuxer will stop readin=
g additional
            packets as soon as one of the limits is reached. (The limits st=
ill can be
            slightly overstepped due to technical reasons.)</p>
            <p>Set these limits higher if you get a packet queue overflow w=
arning, and
            you think normal playback would be possible with a larger packe=
t queue.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--list-options</span></tt> for defaults and value range. <tt clas=
s=3D"docutils literal">&lt;bytesize&gt;</tt> options
            accept suffixes such as <tt class=3D"docutils literal">KiB</tt>=
 and <tt class=3D"docutils literal">MiB</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-max-ba=
ck-bytes"><span class=3D"pre">--demuxer-max-back-bytes=3D&lt;bytesize&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-demuxer-max-back-byte=
s" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This controls how much past data the dem=
uxer is allowed to preserve. This
            is useful only if the cache is enabled.</p>
            <p>Unlike the forward cache, there is no control how many secon=
ds are actually
            cached - it will simply use as much memory this option allows. =
Setting this
            option to 0 will strictly disable any back buffer, but this wil=
l lead to
            the situation that the forward seek range starts after the curr=
ent playback
            position (as it removes past packets that are seek points).</p>
            <p>If the end of the file is reached, the remaining unused forw=
ard buffer space
            is "donated" to the backbuffer (unless the backbuffer size is s=
et to 0, or
            <tt class=3D"docutils literal"><span class=3D"pre">--demuxer-do=
nate-buffer</span></tt> is set to <tt class=3D"docutils literal">no</tt>).
            This still limits the total cache usage to the sum of the forwa=
rd and
            backward cache, and effectively makes better use of the total a=
llowed memory
            budget. (The opposite does not happen: free backward buffer is =
never
            "donated" to the forward buffer.)</p>
            <p>Keep in mind that other buffers in the player (like decoders=
) will cause the
            demuxer to cache "future" frames in the back buffer, which can =
skew the
            impression about how much data the backbuffer contains.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--list-options</span></tt> for defaults and value range.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-donate=
-buffer"><span class=3D"pre">--demuxer-donate-buffer=3D&lt;yes|no&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-demuxer-donate-buffer" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether to let the back buffer use part =
of the forward buffer (default: yes).
            If set to <tt class=3D"docutils literal">yes</tt>, the "donatio=
n" behavior described in the option
            description for <tt class=3D"docutils literal"><span class=3D"p=
re">--demuxer-max-back-bytes</span></tt> is enabled. This means the
            back buffer may use up memory up to the sum of the forward and =
back buffer
            options, minus the active size of the forward buffer. If set to=
 <tt class=3D"docutils literal">no</tt>, the
            options strictly limit the forward and back buffer sizes separa=
tely.</p>
            <p class=3D"last">Note that if the end of the file is reached, =
the buffered data stays the
            same, even if you seek back within the cache. This is because t=
he back
            buffer is only reduced when new data is read.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-seekab=
le-cache"><span class=3D"pre">--demuxer-seekable-cache=3D&lt;yes|no|auto&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-seekable-c=
ache" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Debugging option to control whether seek=
ing can use the demuxer cache
            (default: auto). Normally you don't ever need to set this; the =
default
            <tt class=3D"docutils literal">auto</tt> does the right thing a=
nd enables cache seeking it if <tt class=3D"docutils literal"><span class=
=3D"pre">--cache</span></tt>
            is set to <tt class=3D"docutils literal">yes</tt> (or is implie=
d <tt class=3D"docutils literal">yes</tt> if <tt class=3D"docutils literal"=
><span class=3D"pre">--cache=3Dauto</span></tt>).</p>
            <p>If enabled, short seek offsets will not trigger a low level =
demuxer seek
            (which means for example that slow network round trips or FFmpe=
g seek bugs
            can be avoided). If a seek cannot happen within the cached rang=
e, a low
            level seek will be triggered. Seeking outside of the cache will=
 start a new
            cached range, but can discard the old cache range if the demuxe=
r exhibits
            certain unsupported behavior.</p>
            <p class=3D"last">The special value <tt class=3D"docutils liter=
al">auto</tt> means <tt class=3D"docutils literal">yes</tt> in the same sit=
uation as
            <tt class=3D"docutils literal"><span class=3D"pre">--cache-secs=
</span></tt> is used (i.e. when the stream appears to be a network
            stream or the stream cache is enabled).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-force-=
retry-on-eof"><span class=3D"pre">--demuxer-force-retry-on-eof=3D&lt;yes|no=
&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-force-r=
etry-on-eof" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether to keep retrying making the demuxer thread read mor=
e packets each
            time the decoder dequeues a packet, even if the end of the file=
 was reached
            (default: no). This does not really make sense, but was the def=
ault behavior
            in mpv 0.32.0 and earlier. This option will be silently removed=
 after a
            while, and exists only to restore the old behavior for testing,=
 in case this
            was actually needed somewhere. This does _not_ help with files =
that are
            being appended to (in these cases use <tt class=3D"docutils lit=
eral"><span class=3D"pre">appending://</span></tt>, or disable the
            cache).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-thread=
"><span class=3D"pre">--demuxer-thread=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-demuxer-thread" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd><p class=3D"first">Run the demuxer in a separate thread, an=
d let it prefetch a certain amount
            of packets (default: yes). Having this enabled leads to smoothe=
r playback,
            enables features like prefetching, and prevents that stuck netw=
ork freezes
            the player. On the other hand, it can add overhead, or the back=
ground
            prefetching can hog CPU resources.</p>
            <p class=3D"last">Disabling this option is not recommended. Use=
 it for debugging only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-termin=
ation-timeout"><span class=3D"pre">--demuxer-termination-timeout=3D&lt;seco=
nds&gt;</span><a href=3D"https://mpv.io/manual/master/#options-demuxer-term=
ination-timeout" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Number of seconds the player should wait=
 to shutdown the demuxer (default:
            0.1). The player will wait up to this much time before it close=
s the
            stream layer forcefully. Forceful closing usually means the net=
work I/O is
            given no chance to close its connections gracefully (of course =
the OS can
            still close TCP connections properly), and might result in anno=
ying messages
            being logged, and in some cases, confused remote servers.</p>
            <p class=3D"last">This timeout is usually only applied when loa=
ding has finished properly. If
            loading is aborted by the user, or in some corner cases like re=
moving
            external tracks sourced from network during playback, forceful =
closing is
            always used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-readah=
ead-secs"><span class=3D"pre">--demuxer-readahead-secs=3D&lt;seconds&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-demuxer-readahead-secs=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If <tt class=3D"docutils literal"><span =
class=3D"pre">--demuxer-thread</span></tt> is enabled, this controls how mu=
ch the demuxer
            should buffer ahead in seconds (default: 1). As long as no pack=
et has
            a timestamp difference higher than the readahead amount relativ=
e to the
            last packet returned to the decoder, the demuxer keeps reading.=
</p>
            <p>Note that enabling the cache (such as <tt class=3D"docutils =
literal"><span class=3D"pre">--cache=3Dyes</span></tt>, or if the input
            is considered a network stream, and <tt class=3D"docutils liter=
al"><span class=3D"pre">--cache=3Dauto</span></tt> is used), this option
            is mostly ignored. (<tt class=3D"docutils literal"><span class=
=3D"pre">--cache-secs</span></tt> will override this. Technically, the
            maximum of both options is used.)</p>
            <p>The main purpose of this option is to limit the readhead for=
 local playback,
            since a large readahead value is not overly useful in this case=
.</p>
            <p class=3D"last">(This value tends to be fuzzy, because many f=
ile formats don't store linear
            timestamps.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-hyster=
esis-secs"><span class=3D"pre">--demuxer-hysteresis-secs=3D&lt;seconds&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-demuxer-hysteresis-s=
ecs" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Once the <tt class=3D"docutils literal">=
<span class=3D"pre">--demuxer-max-bytes</span></tt> limit is reached, this =
value can be used
            to specify a hysteresis before the demuxer will buffer ahead ag=
ain. This
            specifies the maximum number of seconds from the current playba=
ck position
            that needs to be remaining in the cache before the demuxer will=
 continue
            buffering ahead.</p>
            <p>For example, with a value of 10 seconds specified, the demux=
er will buffer
            ahead up to <tt class=3D"docutils literal"><span class=3D"pre">=
--demuxer-max-bytes</span></tt> and won't start buffering ahead again
            until there is only 10 seconds of content left in the cache. Wh=
en the
            demuxer starts buffering ahead again, it will buffer ahead up t=
o
            <tt class=3D"docutils literal"><span class=3D"pre">--demuxer-ma=
x-bytes</span></tt> and stop until there's only 10 seconds of content
            remaining in the cache, and so on.</p>
            <p>This can provide significant power savings and reduce load b=
y making the
            demuxer only buffer ahead in chunks at a time rather than buffe=
ring ahead
            nonstop to keep the cache filled.</p>
            <p>If you want to save power and reduce load, configure this to=
 a small number
            that's much lower than <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--cache-secs</span></tt> or <tt class=3D"docutils literal"><span=
 class=3D"pre">--demuxer-readahead-secs</span></tt>.
            If it takes a long time to buffer anything at all for a given s=
tream (like
            when reading from a very slow disk is involved), then the hyste=
resis value
            should be larger to compensate.</p>
            <p class=3D"last">The default value is 0 seconds, which disable=
s the caching hysteresis. A
            value of 10 seconds probably works well for most usecases.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-prefetch-playl=
ist"><span class=3D"pre">--prefetch-playlist=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-prefetch-playlist" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Prefetch next playlist entry while playb=
ack of the current entry is ending
            (default: no).</p>
            <p>This does not prefill the cache with the video data of the n=
ext URL.
            Prefetching video data is supported only for the current playli=
st entry,
            and depends on the demuxer cache settings (on by default). This=
 merely
            opens the URL of the next playlist entry as soon the current UR=
L is fully
            read.</p>
            <p>This does <strong>not</strong> work with URLs resolved by th=
e <tt class=3D"docutils literal"><span class=3D"pre">youtube-dl</span></tt>=
 wrapper,
            and it won't.</p>
            <p>This can give subtly wrong results if per-file options are u=
sed, or if
            options are changed in the time window between prefetching star=
t and next
            file played.</p>
            <p>This can occasionally make wrong prefetching decisions. For =
example, it
            can't predict whether you go backwards in the playlist, and ass=
umes you
            won't edit the playlist.</p>
            <p class=3D"last">Highly experimental.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-force-seekable=
"><span class=3D"pre">--force-seekable=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-force-seekable" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd>If the player thinks that the media is not seekable (e.g. p=
laying from a
            pipe, or it's an http stream with a server that doesn't support=
 range
            requests), seeking will be disabled. This option can forcibly e=
nable it.
            For seeks within the cache, there's a good chance of success.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-demuxer-cache-=
wait"><span class=3D"pre">--demuxer-cache-wait=3D&lt;yes|no&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-demuxer-cache-wait" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Before starting playback, read data until either the end of=
 the file was
            reached, or the demuxer cache has reached maximum capacity. Onl=
y once this
            is done, playback starts. This intentionally happens before the=
 initial
            seek triggered with <tt class=3D"docutils literal"><span class=
=3D"pre">--start</span></tt>. This does not change any runtime behavior
            after the initial caching. This option is useless if the file c=
annot be
            cached completely.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-rar-list-all-v=
olumes"><span class=3D"pre">--rar-list-all-volumes=3D&lt;yes|no&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-rar-list-all-volumes" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">When opening multi-volume rar files, ope=
n all volumes to create a full list
            of contained files (default: no). If disabled, only the archive=
 entries
            whose headers are located within the first volume are listed (a=
nd thus
            played when opening a .rar file with mpv). Doing so speeds up o=
pening, and
            the typical idiotic use-case of playing uncompressed multi-volu=
me rar files
            that contain a single media file is made faster.</p>
            <p class=3D"last">Opening is still slow, because for unknown, i=
diotic, and unnecessary reasons
            libarchive opens all volumes anyway when playing the main file,=
 even though
            mpv iterated no archive entries yet.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-directory-mode=
"><span class=3D"pre">--directory-mode=3D&lt;recursive|lazy|ignore&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-directory-mode" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">When opening a directory, open subdirect=
ories recursively, lazily or not at
            all (default: recursive).</p>
            <p class=3D"last">Values other then <tt class=3D"docutils liter=
al">recursive</tt> can lead to problems with resuming playlists
            (<a class=3D"reference internal" href=3D"https://mpv.io/manual/=
master/#resuming-playback">RESUMING PLAYBACK</a>) and possibly other things=
.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"input">
            <h2>Input</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-native-keyrepe=
at"><span class=3D"pre">--native-keyrepeat</span><a href=3D"https://mpv.io/=
manual/master/#options-native-keyrepeat" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Use system settings for keyrepeat delay and rate, instead o=
f
            <tt class=3D"docutils literal"><span class=3D"pre">--input-ar-d=
elay</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--i=
nput-ar-rate</span></tt>. (Whether this applies
            depends on the VO backend and how it handles keyboard input. Do=
es not
            apply to terminal input.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-ar-delay=
"><span class=3D"pre">--input-ar-delay</span><a href=3D"https://mpv.io/manu=
al/master/#options-input-ar-delay" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Delay in milliseconds before we start to autorepeat a key (=
0 to disable).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-ar-rate"=
><span class=3D"pre">--input-ar-rate</span><a href=3D"https://mpv.io/manual=
/master/#options-input-ar-rate" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of key presses to generate per second on autorepeat.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-conf"><s=
pan class=3D"pre">--input-conf=3D&lt;filename&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-input-conf" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Specify input configuration file other than the default loc=
ation in the mpv
            configuration directory (usually <tt class=3D"docutils literal"=
><span class=3D"pre">~/.config/mpv/input.conf</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-input-defau=
lt-bindings"><span class=3D"pre">--no-input-default-bindings</span><a href=
=3D"https://mpv.io/manual/master/#options-no-input-default-bindings" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Disable default-level ("weak") key bindings. These are bind=
ings which config
            files like <tt class=3D"docutils literal">input.conf</tt> can o=
verride. It currently affects the builtin key
            bindings, and keys which scripts bind using <tt class=3D"docuti=
ls literal">mp.add_key_binding</tt> (but not
            <tt class=3D"docutils literal">mp.add_forced_key_binding</tt> b=
ecause this overrides <tt class=3D"docutils literal">input.conf</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-input-built=
in-bindings"><span class=3D"pre">--no-input-builtin-bindings</span><a href=
=3D"https://mpv.io/manual/master/#options-no-input-builtin-bindings" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Disable loading of built-in key bindings during start-up. T=
his option is
            applied only during (lib)mpv initialization, and if used then i=
t will not
            be not possible to enable them later. May be useful to libmpv c=
lients.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-cmdlist"=
><span class=3D"pre">--input-cmdlist</span><a href=3D"https://mpv.io/manual=
/master/#options-input-cmdlist" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Prints all commands that can be bound to keys.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-doublecl=
ick-time"><span class=3D"pre">--input-doubleclick-time=3D&lt;milliseconds&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-input-doubleclick=
-time" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Time in milliseconds to recognize two consecutive button pr=
esses as a
            double-click (default: 300).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-keylist"=
><span class=3D"pre">--input-keylist</span><a href=3D"https://mpv.io/manual=
/master/#options-input-keylist" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Prints all keys that can be bound to commands.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-key-fifo=
-size"><span class=3D"pre">--input-key-fifo-size=3D&lt;2-65000&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-input-key-fifo-size" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the size of the FIFO that buffers key events (defau=
lt: 7). If it
            is too small, some events may be lost. The main disadvantage of=
 setting it
            to a very large value is that if you hold down a key triggering=
 some
            particularly slow command then the player may be unresponsive w=
hile it
            processes all the queued commands.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-test"><s=
pan class=3D"pre">--input-test</span><a href=3D"https://mpv.io/manual/maste=
r/#options-input-test" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Input test mode. Instead of executing commands on key press=
es, mpv
            will show the keys and the bound commands on the OSD. Has to be=
 used
            with a dummy video, and the normal ways to quit the player will=
 not
            work (key bindings that normally quit will be shown on OSD only=
, just
            like any other binding). See <a class=3D"reference internal" hr=
ef=3D"https://mpv.io/manual/master/#input-conf">INPUT.CONF</a>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-terminal=
"><span class=3D"pre">--input-terminal</span><a href=3D"https://mpv.io/manu=
al/master/#options-input-terminal" class=3D"anchor fa fa-link"></a></tt>, <=
tt class=3D"docutils literal" id=3D"options-no-input-terminal"><span class=
=3D"pre">--no-input-terminal</span><a href=3D"https://mpv.io/manual/master/=
#options-no-input-terminal" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">--no-inp=
ut-terminal</span></tt> prevents the player from reading key events from
            standard input. Useful when reading data from standard input. T=
his is
            automatically enabled when <tt class=3D"docutils literal">-</tt=
> is found on the command line. There are
            situations where you have to set it manually, e.g. if you open
            <tt class=3D"docutils literal">/dev/stdin</tt> (or the equivale=
nt on your system), use stdin in a playlist
            or intend to read from stdin later on via the loadfile or loadl=
ist input
            commands.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-ipc-serv=
er"><span class=3D"pre">--input-ipc-server=3D&lt;filename&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-input-ipc-server" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enable the IPC support and create the li=
stening socket at the given path.</p>
            <p>On Linux and Unix, the given path is a regular filesystem pa=
th. On Windows,
            named pipes are used, so the path refers to the pipe namespace
            (<tt class=3D"docutils literal"><span class=3D"pre">\\.\pipe\&l=
t;name&gt;</span></tt>). If the <tt class=3D"docutils literal"><span class=
=3D"pre">\\.\pipe\</span></tt> prefix is missing, mpv will add
            it automatically before creating the pipe, so
            <tt class=3D"docutils literal"><span class=3D"pre">--input-ipc-=
server=3D/tmp/mpv-socket</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">--input-ipc-=
server=3D\\.\pipe\tmp\mpv-socket</span></tt> are equivalent for IPC on
            Windows.</p>
            <p class=3D"last">See <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#json-ipc">JSON IPC</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-ipc-clie=
nt"><span class=3D"pre">--input-ipc-client=3Dfd://&lt;N&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-input-ipc-client" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Connect a single IPC client to the given=
 FD. This is somewhat similar to
            <tt class=3D"docutils literal"><span class=3D"pre">--input-ipc-=
server</span></tt>, except no socket is created, and instead the passed
            FD is treated like a socket connection received from <tt class=
=3D"docutils literal">accept()</tt>. In
            practice, you could pass either a FD created by <tt class=3D"do=
cutils literal">socketpair()</tt>, or a pipe.
            In both cases, you must sure the FD is actually inherited by mp=
v (do not
            set the POSIX <tt class=3D"docutils literal">CLOEXEC</tt> flag)=
.</p>
            <p>The player quits when the connection is closed.</p>
            <p>This is somewhat similar to the removed <tt class=3D"docutil=
s literal"><span class=3D"pre">--input-file</span></tt> option, except it
            supports only integer FDs, and cannot open actual paths.</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--input-ipc-client=3Dfd://123</span></tt></p>
            </div>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Does not and will not work on Windows.</p>
            </div>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Writing to the <tt class=3D"docutils literal"=
><span class=3D"pre">input-ipc-server</span></tt> option at runtime will st=
art another
            instance of an IPC client handler for the <tt class=3D"docutils=
 literal"><span class=3D"pre">input-ipc-client</span></tt> option,
            because initialization is bundled, and this thing is stupid. Th=
is is a
            bug. Writing to <tt class=3D"docutils literal"><span class=3D"p=
re">input-ipc-client</span></tt> at runtime will start another IPC
            client handler for the new value, without stopping the old one,=
 even if
            the FD value is the same (but the string is different e.g. due =
to
            whitespace). This is not a bug.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-gamepad"=
><span class=3D"pre">--input-gamepad=3D&lt;yes|no&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-input-gamepad" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd>Enable/disable SDL2 Gamepad support. Disabled by default.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-cursor">=
<span class=3D"pre">--input-cursor</span><a href=3D"https://mpv.io/manual/m=
aster/#options-input-cursor" class=3D"anchor fa fa-link"></a></tt>, <tt cla=
ss=3D"docutils literal" id=3D"options-no-input-cursor"><span class=3D"pre">=
--no-input-cursor</span><a href=3D"https://mpv.io/manual/master/#options-no=
-input-cursor" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Permit mpv to receive pointer events reported by the video =
output
            driver. Necessary to use the OSC, or to select the buttons in D=
VD menus.
            Support depends on the VO in use.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-cursor-p=
assthrough"><span class=3D"pre">--input-cursor-passthrough</span><a href=3D=
"https://mpv.io/manual/master/#options-input-cursor-passthrough" class=3D"a=
nchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-n=
o-input-cursor-passthrough"><span class=3D"pre">--no-input-cursor-passthrou=
gh</span><a href=3D"https://mpv.io/manual/master/#options-no-input-cursor-p=
assthrough" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>(X11 and Wayland only)
            Tell the backend windowing system to allow pointer events to pa=
ssthrough
            the mpv window. This allows windows under mpv to instead receiv=
e pointer
            events as if the mpv window was never there.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-media-ke=
ys"><span class=3D"pre">--input-media-keys=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-input-media-keys" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">On systems where mpv can choose between =
receiving media keys or letting
            the system handle them - this option controls whether mpv shoul=
d receive
            them.</p>
            <p class=3D"last">Default: yes (except for libmpv). macOS and W=
indows only, because elsewhere
            mpv doesn't have a choice - the system decides whether to send =
media keys
            to mpv. For instance, on X11 or Wayland, system-wide media keys=
 are not
            implemented. Whether media keys work when the mpv window is foc=
used is
            implementation-defined.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-right-al=
t-gr"><span class=3D"pre">--input-right-alt-gr</span><a href=3D"https://mpv=
.io/manual/master/#options-input-right-alt-gr" class=3D"anchor fa fa-link">=
</a></tt>, <tt class=3D"docutils literal" id=3D"options-no-input-right-alt-=
gr"><span class=3D"pre">--no-input-right-alt-gr</span><a href=3D"https://mp=
v.io/manual/master/#options-no-input-right-alt-gr" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>(Cocoa and Windows only)
            Use the right Alt key as Alt Gr to produce special characters. =
If disabled,
            count the right Alt as an Alt modifier key. Enabled by default.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-input-vo-keybo=
ard"><span class=3D"pre">--input-vo-keyboard=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-input-vo-keyboard" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Disable all keyboard input on for VOs wh=
ich can't participate in proper
            keyboard input dispatching. May not affect all VOs. Generally u=
seful for
            embedding only.</p>
            <p>On X11, a sub-window with input enabled grabs all keyboard i=
nput as long
            as it is 1. a child of a focused window, and 2. the mouse is in=
side of
            the sub-window. It can steal away all keyboard input from the
            application embedding the mpv window, and on the other hand, th=
e mpv
            window will receive no input if the mouse is outside of the mpv=
 window,
            even though mpv has focus. Modern toolkits work around this wei=
rd X11
            behavior, but naively embedding foreign windows breaks it.</p>
            <p>The only way to handle this reasonably is using the XEmbed p=
rotocol, which
            was designed to solve these problems. GTK provides <tt class=3D=
"docutils literal">GtkSocket</tt>, which
            supports XEmbed. Qt doesn't seem to provide anything working in=
 newer
            versions.</p>
            <p>If the embedder supports XEmbed, input should work with defa=
ult settings
            and with this option disabled. Note that <tt class=3D"docutils =
literal"><span class=3D"pre">input-default-bindings</span></tt> is
            disabled by default in libmpv as well - it should be enabled if=
 you want
            the mpv default key bindings.</p>
            <p class=3D"last">(This option was renamed from <tt class=3D"do=
cutils literal"><span class=3D"pre">--input-x11-keyboard</span></tt>.)</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"osd">
            <h2>OSD</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-osc"><span cla=
ss=3D"pre">--osc</span><a href=3D"https://mpv.io/manual/master/#options-osc=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"options-no-osc"><span class=3D"pre">--no-osc</span><a href=3D"https://m=
pv.io/manual/master/#options-no-osc" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>Whether to load the on-screen-controller (default: yes).</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"options-no-osd-bar"><s=
pan class=3D"pre">--no-osd-bar</span><a href=3D"https://mpv.io/manual/maste=
r/#options-no-osd-bar" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"=
docutils literal" id=3D"options-osd-bar"><span class=3D"pre">--osd-bar</spa=
n><a href=3D"https://mpv.io/manual/master/#options-osd-bar" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Disable display of the OSD bar.</p>
            <p class=3D"last">You can configure this on a per-command basis=
 in input.conf using <tt class=3D"docutils literal">osd-</tt>
            prefixes, see <tt class=3D"docutils literal">Input Command Pref=
ixes</tt>. If you want to disable the OSD
            completely, use <tt class=3D"docutils literal"><span class=3D"p=
re">--osd-level=3D0</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-on-seek"><=
span class=3D"pre">--osd-on-seek=3D&lt;no,bar,msg,msg-bar&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-osd-on-seek" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd><p class=3D"first">Set what is displayed on the OSD during =
seeks. The default is <tt class=3D"docutils literal">bar</tt>.</p>
            <p class=3D"last">You can configure this on a per-command basis=
 in input.conf using <tt class=3D"docutils literal">osd-</tt>
            prefixes, see <tt class=3D"docutils literal">Input Command Pref=
ixes</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-duration">=
<span class=3D"pre">--osd-duration=3D&lt;time&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-osd-duration" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Set the duration of the OSD messages in ms (default: 1000).=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-font"><spa=
n class=3D"pre">--osd-font=3D&lt;name&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-osd-font" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify font to use for OSD. The default=
 is <tt class=3D"docutils literal"><span class=3D"pre">sans-serif</span></t=
t>.</p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--osd-fo=
nt=3D'Bitstream</span> Vera Sans'</tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--osd-fo=
nt=3D'Comic</span> Sans MS'</tt></li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-font-size"=
><span class=3D"pre">--osd-font-size=3D&lt;size&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-osd-font-size" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Specify the OSD font size. See <tt class=
=3D"docutils literal"><span class=3D"pre">--sub-font-size</span></tt> for d=
etails.</p>
            <p class=3D"last">Default: 55.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-msg1"><spa=
n class=3D"pre">--osd-msg1=3D&lt;string&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-osd-msg1" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Show this string as message on OSD with OSD level 1 (visibl=
e by default).
            The message will be visible by default, and as long as no other=
 message
            covers it, and the OSD level isn't changed (see <tt class=3D"do=
cutils literal"><span class=3D"pre">--osd-level</span></tt>).
            Expands properties; see <a class=3D"reference internal" href=3D=
"https://mpv.io/manual/master/#property-expansion">Property Expansion</a>.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-msg2"><spa=
n class=3D"pre">--osd-msg2=3D&lt;string&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-osd-msg2" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Similar to <tt class=3D"docutils literal"><span class=3D"pr=
e">--osd-msg1</span></tt>, but for OSD level 2. If this is an empty string
            (default), then the playback time is shown.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-msg3"><spa=
n class=3D"pre">--osd-msg3=3D&lt;string&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-osd-msg3" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
"><span class=3D"pre">--osd-msg1</span></tt>, but for OSD level 3. If this =
is an empty string
            (default), then the playback time, duration, and some more info=
rmation is
            shown.</p>
            <p>This is used for the <tt class=3D"docutils literal"><span cl=
ass=3D"pre">show-progress</span></tt> command (by default mapped to <tt cla=
ss=3D"docutils literal">P</tt>),
            and when seeking if enabled with <tt class=3D"docutils literal"=
><span class=3D"pre">--osd-on-seek</span></tt> or by <tt class=3D"docutils =
literal">osd-</tt> prefixes
            in input.conf (see <tt class=3D"docutils literal">Input Command=
 Prefixes</tt>).</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--osd-status-msg</span></tt> is a legacy equivalent (but with a minor=
 difference).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-status-msg=
"><span class=3D"pre">--osd-status-msg=3D&lt;string&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-osd-status-msg" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd><p class=3D"first">Show a custom string during playback ins=
tead of the standard status text.
            This overrides the status text used for <tt class=3D"docutils l=
iteral"><span class=3D"pre">--osd-level=3D3</span></tt>, when using the
            <tt class=3D"docutils literal"><span class=3D"pre">show-progres=
s</span></tt> command (by default mapped to <tt class=3D"docutils literal">=
P</tt>), and when seeking if
            enabled with <tt class=3D"docutils literal"><span class=3D"pre"=
>--osd-on-seek</span></tt> or <tt class=3D"docutils literal">osd-</tt> pref=
ixes in input.conf (see
            <tt class=3D"docutils literal">Input Command Prefixes</tt>). Ex=
pands properties. See <a class=3D"reference internal" href=3D"https://mpv.i=
o/manual/master/#property-expansion">Property Expansion</a>.</p>
            <p class=3D"last">This option has been replaced with <tt class=
=3D"docutils literal"><span class=3D"pre">--osd-msg3</span></tt>. The only =
difference is
            that this option implicitly includes <tt class=3D"docutils lite=
ral"><span class=3D"pre">${osd-sym-cc}</span></tt>. This option is
            ignored if <tt class=3D"docutils literal"><span class=3D"pre">-=
-osd-msg3</span></tt> is not empty.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-playing-ms=
g"><span class=3D"pre">--osd-playing-msg=3D&lt;string&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-osd-playing-msg" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd><p class=3D"first">Show a message on OSD when playback star=
ts. The string is expanded for
            properties, e.g. <tt class=3D"docutils literal"><span class=3D"=
pre">--osd-playing-msg=3D'file:</span> ${filename}'</tt> will show the
            message <tt class=3D"docutils literal">file:</tt> followed by a=
 space and the currently played filename.</p>
            <p class=3D"last">See <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#property-expansion">Property Expansion</a>.</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-playing-ms=
g-duration"><span class=3D"pre">--osd-playing-msg-duration=3D&lt;time&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-osd-playing-msg-durat=
ion" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the duration of <tt class=3D"docutils literal"><span cl=
ass=3D"pre">osd-playing-msg</span></tt> in ms. If this is unset,
            <tt class=3D"docutils literal"><span class=3D"pre">osd-playing-=
msg</span></tt> stays on screen for the duration of <tt class=3D"docutils l=
iteral"><span class=3D"pre">osd-duration</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-bar-align-=
x"><span class=3D"pre">--osd-bar-align-x=3D&lt;-1-1&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-osd-bar-align-x" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Position of the OSD bar. -1 is far left, 0 is centered, 1 i=
s far right.
            Fractional values (like 0.5) are allowed.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-bar-align-=
y"><span class=3D"pre">--osd-bar-align-y=3D&lt;-1-1&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-osd-bar-align-y" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Position of the OSD bar. -1 is top, 0 is centered, 1 is bot=
tom.
            Fractional values (like 0.5) are allowed.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-bar-w"><sp=
an class=3D"pre">--osd-bar-w=3D&lt;1-100&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-osd-bar-w" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Width of the OSD bar, in percentage of the screen width (de=
fault: 75).
            A value of 50 means the bar is half the screen wide.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-bar-h"><sp=
an class=3D"pre">--osd-bar-h=3D&lt;0.1-50&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-osd-bar-h" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>Height of the OSD bar, in percentage of the screen height (=
default: 3.125).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-back-color=
"><span class=3D"pre">--osd-back-color=3D&lt;color&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-osd-back-color" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--su=
b-color</span></tt>. Color used for OSD text background.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-blur"><spa=
n class=3D"pre">--osd-blur=3D&lt;0..20.0&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-osd-blur" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Gaussian blur factor. 0 means no blur applied (default).</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-bold"><spa=
n class=3D"pre">--osd-bold=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-osd-bold" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Format text on bold.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-italic"><s=
pan class=3D"pre">--osd-italic=3D&lt;yes|no&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-osd-italic" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>Format text on italic.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-border-col=
or"><span class=3D"pre">--osd-border-color=3D&lt;color&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-osd-border-color" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd><p class=3D"first">See <tt class=3D"docutils literal"><span=
 class=3D"pre">--sub-color</span></tt>. Color used for the OSD font border.=
</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">ignored when <tt class=3D"docutils literal"><=
span class=3D"pre">--osd-back-color</span></tt> is
            specified (or more exactly: when that option is not set to comp=
letely
            transparent).</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-border-siz=
e"><span class=3D"pre">--osd-border-size=3D&lt;size&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-osd-border-size" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">Size of the OSD font border in scaled pi=
xels (see <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-siz=
e</span></tt>
            for details). A value of 0 disables borders.</p>
            <p class=3D"last">Default: 3.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-color"><sp=
an class=3D"pre">--osd-color=3D&lt;color&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-osd-color" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Specify the color used for OSD.
            See <tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
lor</span></tt> for details.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-fractions"=
><span class=3D"pre">--osd-fractions</span><a href=3D"https://mpv.io/manual=
/master/#options-osd-fractions" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Show OSD times with fractions of seconds (in millisecond pr=
ecision). Useful
            to see the exact timestamp of a video frame.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-level"><sp=
an class=3D"pre">--osd-level=3D&lt;0-3&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-osd-level" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Specifies which mode the OSD should star=
t in.</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">0:</th><td class=
=3D"field-body">OSD completely disabled (subtitles only)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">1:</th><td class=
=3D"field-body">enabled (shows up only on user interaction)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2:</th><td class=
=3D"field-body">enabled + current time visible by default</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">3:</th><td class=
=3D"field-body">enabled + <tt class=3D"docutils literal"><span class=3D"pre=
">--osd-status-msg</span></tt> (current time and status by default)</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-margin-x">=
<span class=3D"pre">--osd-margin-x=3D&lt;size&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-osd-margin-x" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Left and right screen margin for the OSD=
 in scaled pixels (see
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-s=
ize</span></tt> for details).</p>
            <p>This option specifies the distance of the OSD to the left, a=
s well as at
            which distance from the right border long OSD text will be brok=
en.</p>
            <p class=3D"last">Default: 25.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-margin-y">=
<span class=3D"pre">--osd-margin-y=3D&lt;size&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-osd-margin-y" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Top and bottom screen margin for the OSD=
 in scaled pixels (see
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-s=
ize</span></tt> for details).</p>
            <p>This option specifies the vertical margins of the OSD.</p>
            <p class=3D"last">Default: 22.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-align-x"><=
span class=3D"pre">--osd-align-x=3D&lt;left|center|right&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-osd-align-x" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Control to which corner of the screen OSD should be
            aligned to (default: <tt class=3D"docutils literal">left</tt>).=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-align-y"><=
span class=3D"pre">--osd-align-y=3D&lt;top|center|bottom&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-osd-align-y" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Vertical position (default: <tt class=3D"docutils literal">=
top</tt>).
            Details see <tt class=3D"docutils literal"><span class=3D"pre">=
--osd-align-x</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-scale"><sp=
an class=3D"pre">--osd-scale=3D&lt;factor&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-osd-scale" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>OSD font size multiplier, multiplied with <tt class=3D"docu=
tils literal"><span class=3D"pre">--osd-font-size</span></tt> value.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-scale-by-w=
indow"><span class=3D"pre">--osd-scale-by-window=3D&lt;yes|no&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-osd-scale-by-window" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Whether to scale the OSD with the window size (default: yes=
). If this is
            disabled, <tt class=3D"docutils literal"><span class=3D"pre">--=
osd-font-size</span></tt> and other OSD options that use scaled pixels
            are always in actual pixels. The effect is that changing the wi=
ndow size
            won't change the OSD font size.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-shadow-col=
or"><span class=3D"pre">--osd-shadow-color=3D&lt;color&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-osd-shadow-color" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--su=
b-color</span></tt>. Color used for OSD shadow.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-shadow-off=
set"><span class=3D"pre">--osd-shadow-offset=3D&lt;size&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-osd-shadow-offset" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Displacement of the OSD shadow in scaled=
 pixels (see
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-font-s=
ize</span></tt> for details). A value of 0 disables shadows.</p>
            <p class=3D"last">Default: 0.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-spacing"><=
span class=3D"pre">--osd-spacing=3D&lt;size&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-osd-spacing" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Horizontal OSD/sub font spacing in scale=
d pixels (see <tt class=3D"docutils literal"><span class=3D"pre">--sub-font=
-size</span></tt>
            for details). This value is added to the normal letter spacing.=
 Negative
            values are allowed.</p>
            <p class=3D"last">Default: 0.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-osd"><sp=
an class=3D"pre">--video-osd=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-video-osd" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd><p class=3D"first">Enabled OSD rendering on the video windo=
w (default: yes). This can be used
            in situations where terminal OSD is preferred. If you just want=
 to disable
            all OSD rendering, use <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--osd-level=3D0</span></tt>.</p>
            <p>It does not affect subtitles or overlays created by scripts =
(in particular,
            the OSC needs to be disabled with <tt class=3D"docutils literal=
"><span class=3D"pre">--no-osc</span></tt>).</p>
            <p class=3D"last">This option is somewhat experimental and coul=
d be replaced by another
            mechanism in the future.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-font-provi=
der"><span class=3D"pre">--osd-font-provider=3D&lt;...&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-osd-font-provider" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--su=
b-font-provider</span></tt> for details and accepted values. Note that
            unlike subtitles, OSD never uses embedded fonts from media file=
s.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-osd-fonts-dir"=
><span class=3D"pre">--osd-fonts-dir=3D&lt;path&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-osd-fonts-dir" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--su=
b-fonts-dir</span></tt> for details.  Defaults to <tt class=3D"docutils lit=
eral"><span class=3D"pre">~~/fonts</span></tt>.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"screenshot">
            <h2>Screenshot</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-for=
mat"><span class=3D"pre">--screenshot-format=3D&lt;type&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-screenshot-format" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the image file type used for saving =
screenshots.</p>
            <p>Available choices:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">png:</th><td class=
=3D"field-body">PNG</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">jpg:</th><td class=
=3D"field-body">JPEG (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">jpeg:</th><td clas=
s=3D"field-body">JPEG (alias for jpg)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">webp:</th><td clas=
s=3D"field-body">WebP</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">jxl:</th><td class=
=3D"field-body">JPEG XL</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">avif:</th><td clas=
s=3D"field-body">AVIF</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-tag=
-colorspace"><span class=3D"pre">--screenshot-tag-colorspace=3D&lt;yes|no&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-screenshot-tag-co=
lorspace" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Tag screenshots with the appropriate col=
orspace (default: yes).</p>
            <p class=3D"last">Note that not all formats support this. When =
it is unsupported, or when
            this option is disabled, screenshots will be converted to sRGB =
before
            being written.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-hig=
h-bit-depth"><span class=3D"pre">--screenshot-high-bit-depth=3D&lt;yes|no&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-screenshot-high-b=
it-depth" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If possible, write screenshots with a bit depth similar to =
the source
            video (default: yes). This is interesting in particular for PNG=
, as this
            sometimes triggers writing 16 bit PNGs with huge file sizes. Th=
is will also
            include an unused alpha channel in the resulting files if 16 bi=
t is used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-tem=
plate"><span class=3D"pre">--screenshot-template=3D&lt;template&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-screenshot-template" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify the filename template used to sa=
ve screenshots. The template
            specifies the filename without file extension, and can contain =
format
            specifiers, which will be substituted when taking a screenshot.
            By default, the template is <tt class=3D"docutils literal"><spa=
n class=3D"pre">mpv-shot%n</span></tt>, which results in filenames like
            <tt class=3D"docutils literal"><span class=3D"pre">mpv-shot0012=
.png</span></tt> for example.</p>
            <p>The template can start with a relative or absolute path, in =
order to
            specify a directory location where screenshots should be saved.=
</p>
            <p>If the final screenshot filename points to an already existi=
ng file, the
            file will not be overwritten. The screenshot will either not be=
 saved, or if
            the template contains <tt class=3D"docutils literal">%n</tt>, s=
aved using different, newly generated
            filename.</p>
            <p>Allowed format specifiers:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-%[#][0x]n"><sp=
an class=3D"pre">%[#][0X]n</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-%[#][0x]n" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>A sequence number, padded with zeros to length X (default: =
04). E.g.
            passing the format <tt class=3D"docutils literal">%04n</tt> wil=
l yield <tt class=3D"docutils literal">0012</tt> on the 12th screenshot.
            The number is incremented every time a screenshot is taken or i=
f the
            file already exists. The length <tt class=3D"docutils literal">=
X</tt> must be in the range 0-9. With
            the optional # sign, mpv will use the lowest available number. =
For
            example, if you take three screenshots--0001, 0002, 0003--and d=
elete
            the first two, the next two screenshots will not be 0004 and 00=
05, but
            0001 and 0002 again.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%f">%f<a href=
=3D"https://mpv.io/manual/master/#options-%f" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Filename of the currently played video.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%f">%F<a href=
=3D"https://mpv.io/manual/master/#options-%f" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal">%f</tt>, but strip t=
he file extension, including the dot.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%x">%x<a href=
=3D"https://mpv.io/manual/master/#options-%x" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Directory path of the currently played video. If the video =
is not on
            the filesystem (but e.g. <tt class=3D"docutils literal"><span c=
lass=3D"pre">http://</span></tt>), this expand to an empty string.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%x{fallback}">=
%X{fallback}<a href=3D"https://mpv.io/manual/master/#options-%x{fallback}" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal">%x</tt>, but if the =
video file is not on the filesystem, return
            the fallback string inside the <tt class=3D"docutils literal"><=
span class=3D"pre">{...}</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%p">%p<a href=
=3D"https://mpv.io/manual/master/#options-%p" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Current playback time, in the same format as used in the OS=
D. The
            result is a string of the form "HH:MM:SS". For example, if the =
video is
            at the time position 5 minutes and 34 seconds, <tt class=3D"doc=
utils literal">%p</tt> will be replaced
            with "00:05:34".</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%p">%P<a href=
=3D"https://mpv.io/manual/master/#options-%p" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">%p</tt>, but extended with the playback time in milliseconds.
            It is formatted as "HH:MM:SS.mmm", with "mmm" being the millise=
cond
            part of the playback time.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This is a simple way for getting unique per-f=
rame timestamps. (Frame
            numbers would be more intuitive, but are not easily implementab=
le
            because container formats usually use time stamps for identifyi=
ng
            frames.)</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%wx">%wX<a hre=
f=3D"https://mpv.io/manual/master/#options-%wx" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Specify the current playback time using =
the format string <tt class=3D"docutils literal">X</tt>.
            <tt class=3D"docutils literal">%p</tt> is like <tt class=3D"doc=
utils literal"><span class=3D"pre">%wH:%wM:%wS</span></tt>, and <tt class=
=3D"docutils literal">%P</tt> is like <tt class=3D"docutils literal"><span =
class=3D"pre">%wH:%wM:%wS.%wT</span></tt>.</p>
            <dl class=3D"last docutils">
            <dt>Valid format specifiers:</dt>
            <dd><dl class=3D"first last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-%wh">%wH<a hre=
f=3D"https://mpv.io/manual/master/#options-%wh" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>hour (padded with 0 to two digits)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%wh">%wh<a hre=
f=3D"https://mpv.io/manual/master/#options-%wh" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>hour (not padded)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%wm">%wM<a hre=
f=3D"https://mpv.io/manual/master/#options-%wm" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>minutes (00-59)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%wm">%wm<a hre=
f=3D"https://mpv.io/manual/master/#options-%wm" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>total minutes (includes hours, unlike <tt class=3D"docutils=
 literal">%wM</tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%ws">%wS<a hre=
f=3D"https://mpv.io/manual/master/#options-%ws" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>seconds (00-59)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%ws">%ws<a hre=
f=3D"https://mpv.io/manual/master/#options-%ws" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>total seconds (includes hours and minutes)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%wf">%wf<a hre=
f=3D"https://mpv.io/manual/master/#options-%wf" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>like <tt class=3D"docutils literal">%ws</tt>, but as float<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%wt">%wT<a hre=
f=3D"https://mpv.io/manual/master/#options-%wt" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>milliseconds (000-999)</dd>
            </dl>
            </dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%tx">%tX<a hre=
f=3D"https://mpv.io/manual/master/#options-%tx" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Specify the current local date/time using the format <tt cl=
ass=3D"docutils literal">X</tt>. This format
            specifier uses the UNIX <tt class=3D"docutils literal">strftime=
()</tt> function internally, and inserts
            the result of passing "%X" to <tt class=3D"docutils literal">st=
rftime</tt>. For example, <tt class=3D"docutils literal">%tm</tt> will
            insert the number of the current month as number. You have to u=
se
            multiple <tt class=3D"docutils literal">%tX</tt> specifiers to =
build a full date/time string.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%{prop[:fallba=
ck"><span class=3D"pre">%{prop[:fallback</span> text]}<a href=3D"https://mp=
v.io/manual/master/#options-%{prop[:fallback" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Insert the value of the input property 'prop'. E.g. <tt cla=
ss=3D"docutils literal">%{filename}</tt> is
            the same as <tt class=3D"docutils literal">%f</tt>. If the prop=
erty does not exist or is not available,
            an error text is inserted, unless a fallback is specified.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-%%">%%<a href=
=3D"https://mpv.io/manual/master/#options-%%" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Replaced with the <tt class=3D"docutils literal">%</tt> cha=
racter itself.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-dir=
ectory"><span class=3D"pre">--screenshot-directory=3D&lt;path&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-screenshot-directory" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Store screenshots in this directory. Thi=
s path is joined with the filename
            generated by <tt class=3D"docutils literal"><span class=3D"pre"=
>--screenshot-template</span></tt>. If the template filename is already
            absolute, the directory is ignored.</p>
            <p>If the directory does not exist, it is created on the first =
screenshot. If
            it is not a directory, an error is generated when trying to wri=
te a
            screenshot.</p>
            <p class=3D"last">This option is not set by default, and thus w=
ill write screenshots to the
            directory from which mpv was started. In pseudo-gui mode
            (see <a class=3D"reference internal" href=3D"https://mpv.io/man=
ual/master/#pseudo-gui-mode">PSEUDO GUI MODE</a>), this is set to the deskt=
op.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-jpe=
g-quality"><span class=3D"pre">--screenshot-jpeg-quality=3D&lt;0-100&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-screenshot-jpeg-qualit=
y" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the JPEG quality level. Higher means better quality. Th=
e default is 90.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-jpe=
g-source-chroma"><span class=3D"pre">--screenshot-jpeg-source-chroma=3D&lt;=
yes|no&gt;</span><a href=3D"https://mpv.io/manual/master/#options-screensho=
t-jpeg-source-chroma" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Write JPEG files with the same chroma subsampling as the vi=
deo
            (default: yes). If disabled, the libjpeg default is used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-png=
-compression"><span class=3D"pre">--screenshot-png-compression=3D&lt;0-9&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-screenshot-png-com=
pression" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the PNG compression level. Higher means better compress=
ion. This will
            affect the file size of the written screenshot file and the tim=
e it takes
            to write a screenshot. Too high compression might occupy enough=
 CPU time to
            interrupt playback. The default is 7.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-png=
-filter"><span class=3D"pre">--screenshot-png-filter=3D&lt;0-5&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-screenshot-png-filter" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the filter applied prior to PNG compression. 0 is none,=
 1 is "sub", 2 is
            "up", 3 is "average", 4 is "Paeth", and 5 is "mixed". This affe=
cts the level
            of compression that can be achieved. For most images, "mixed" a=
chieves the
            best compression ratio, hence it is the default.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-web=
p-lossless"><span class=3D"pre">--screenshot-webp-lossless=3D&lt;yes|no&gt;=
</span><a href=3D"https://mpv.io/manual/master/#options-screenshot-webp-los=
sless" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Write lossless WebP files. <tt class=3D"docutils literal"><=
span class=3D"pre">--screenshot-webp-quality</span></tt> is ignored if this
            is set. The default is no.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-web=
p-quality"><span class=3D"pre">--screenshot-webp-quality=3D&lt;0-100&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-screenshot-webp-qualit=
y" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the WebP quality level. Higher means better quality. Th=
e default is 75.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-web=
p-compression"><span class=3D"pre">--screenshot-webp-compression=3D&lt;0-6&=
gt;</span><a href=3D"https://mpv.io/manual/master/#options-screenshot-webp-=
compression" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the WebP compression level. Higher means better compres=
sion, but takes
            more CPU time. Note that this also affects the screenshot quali=
ty when used
            with lossy WebP files. The default is 4.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-jxl=
-distance"><span class=3D"pre">--screenshot-jxl-distance=3D&lt;0-15&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-screenshot-jxl-distance=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the JPEG XL Butteraugli distance. Lower means better qu=
ality. Lossless
            is 0.0, and 1.0 is approximately equivalent to JPEG quality 90 =
for
            photographic content. Use 0.1 for "visually lossless" screensho=
ts. The
            default is 1.0.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-jxl=
-effort"><span class=3D"pre">--screenshot-jxl-effort=3D&lt;1-9&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-screenshot-jxl-effort" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the JPEG XL compression effort. Higher effort (usually)=
 means better
            compression, but takes more CPU time. The default is 4.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-avi=
f-encoder"><span class=3D"pre">--screenshot-avif-encoder=3D&lt;encoder&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-screenshot-avif-enco=
der" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify the AV1 encoder to be used by li=
bavcodec for encoding avif
            screenshots.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal"><span=
 class=3D"pre">libaom-av1</span></tt></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-avi=
f-pixfmt"><span class=3D"pre">--screenshot-avif-pixfmt=3D&lt;format&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-screenshot-avif-pixfmt"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify the pixel format to the libavcod=
ec encoder.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">yuv42=
0p</tt></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-avi=
f-opts"><span class=3D"pre">--screenshot-avif-opts=3Dkey1=3Dvalue1,key2=3Dv=
alue2,...</span><a href=3D"https://mpv.io/manual/master/#options-screenshot=
-avif-opts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specifies libavcodec options for selecte=
d encoder. For more information,
            consult the FFmpeg documentation.</p>
            <p>Default: <tt class=3D"docutils literal"><span class=3D"pre">=
usage=3Dallintra,crf=3D32,cpu-used=3D8,tune=3Dssim</span></tt></p>
            <p>Note: the default is only guaranteed to work with the libaom=
-av1 encoder.
            Above options may not be valid and or optimal for other encoder=
s.</p>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt>"<tt class=3D"docutils literal" id=3D"options-screenshot-av=
if-opts"><span class=3D"pre">--screenshot-avif-opts=3Dcrf=3D32,aq-mode=3Dco=
mplexity</span><a href=3D"https://mpv.io/manual/master/#options-screenshot-=
avif-opts" class=3D"anchor fa fa-link"></a></tt>"</dt>
            <dd>sets the crf to 32 and quantization (aq-mode) to complexity=
 based.</dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-screenshot-sw"=
><span class=3D"pre">--screenshot-sw=3D&lt;yes|no&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-screenshot-sw" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd><p class=3D"first">Whether to use software rendering for sc=
reenshots (default: no).</p>
            <p>If set to no, the screenshot will be rendered by the current=
 VO if possible
            (only vo_gpu currently). The advantage is that this will (proba=
bly) always
            show up as in the video window, because the same code is used f=
or rendering.
            But since the renderer needs to be reinitialized, this can be s=
low and
            interrupt playback. (Unless the <tt class=3D"docutils literal">=
window</tt> mode is used with the
            <tt class=3D"docutils literal">screenshot</tt> command.)</p>
            <p class=3D"last">If set to yes, the software scaler is used to=
 convert the video to RGB (or
            whatever the target screenshot requires). In this case, convers=
ion will
            run in a separate thread and will probably not interrupt playba=
ck. The
            software renderer may lack some capabilities, such as HDR rende=
ring.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"software-scaler">
            <h2>Software Scaler</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-sws-scaler"><s=
pan class=3D"pre">--sws-scaler=3D&lt;name&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-sws-scaler" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Specify the software scaler algorithm to=
 be used with <tt class=3D"docutils literal"><span class=3D"pre">--vf=3Dsca=
le</span></tt>. This
            also affects video output drivers which lack hardware accelerat=
ion,
            e.g. <tt class=3D"docutils literal">x11</tt>. See also <tt clas=
s=3D"docutils literal"><span class=3D"pre">--vf=3Dscale</span></tt>.</p>
            <p>To get a list of available scalers, run <tt class=3D"docutil=
s literal"><span class=3D"pre">--sws-scaler=3Dhelp</span></tt>.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">bicub=
ic</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-lgb"><span=
 class=3D"pre">--sws-lgb=3D&lt;0-100&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-sws-lgb" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Software scaler Gaussian blur filter (luma). See <tt class=
=3D"docutils literal"><span class=3D"pre">--sws-scaler</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-cgb"><span=
 class=3D"pre">--sws-cgb=3D&lt;0-100&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-sws-cgb" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Software scaler Gaussian blur filter (chroma). See <tt clas=
s=3D"docutils literal"><span class=3D"pre">--sws-scaler</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-ls"><span =
class=3D"pre">--sws-ls=3D&lt;-100-100&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-sws-ls" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Software scaler sharpen filter (luma). See <tt class=3D"doc=
utils literal"><span class=3D"pre">--sws-scaler</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-cs"><span =
class=3D"pre">--sws-cs=3D&lt;-100-100&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-sws-cs" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Software scaler sharpen filter (chroma). See <tt class=3D"d=
ocutils literal"><span class=3D"pre">--sws-scaler</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-chs"><span=
 class=3D"pre">--sws-chs=3D&lt;h&gt;</span><a href=3D"https://mpv.io/manual=
/master/#options-sws-chs" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Software scaler chroma horizontal shifting. See <tt class=
=3D"docutils literal"><span class=3D"pre">--sws-scaler</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-cvs"><span=
 class=3D"pre">--sws-cvs=3D&lt;v&gt;</span><a href=3D"https://mpv.io/manual=
/master/#options-sws-cvs" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Software scaler chroma vertical shifting. See <tt class=3D"=
docutils literal"><span class=3D"pre">--sws-scaler</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-bitexact">=
<span class=3D"pre">--sws-bitexact=3D&lt;yes|no&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-sws-bitexact" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Unknown functionality (default: no). Consult libswscale sou=
rce code. The
            primary purpose of this, as far as libswscale API goes), is to =
produce
            exactly the same output for the same input on all platforms (ou=
tput has the
            same "bits" everywhere, thus "bitexact"). Typically disables op=
timizations.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-fast"><spa=
n class=3D"pre">--sws-fast=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-sws-fast" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Allow optimizations that help with perfo=
rmance, but reduce quality (default:
            no).</p>
            <p class=3D"last">VOs like <tt class=3D"docutils literal">drm</=
tt> and <tt class=3D"docutils literal">x11</tt> will benefit a lot from usi=
ng <tt class=3D"docutils literal"><span class=3D"pre">--sws-fast</span></tt=
>.
            You may need to set other options, like <tt class=3D"docutils l=
iteral"><span class=3D"pre">--sws-scaler</span></tt>. The builtin
            <tt class=3D"docutils literal"><span class=3D"pre">sws-fast</sp=
an></tt> profile sets this option and some others to gain performance
            for reduced quality. Also see <tt class=3D"docutils literal"><s=
pan class=3D"pre">--sws-allow-zimg</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sws-allow-zimg=
"><span class=3D"pre">--sws-allow-zimg=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-sws-allow-zimg" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd><p class=3D"first">Allow using zimg (if the component using=
 the internal swscale wrapper
            explicitly allows so) (default: yes). In this case, zimg <em>ma=
y</em> be used, if
            the internal zimg wrapper supports the input and output formats=
. It will
            silently or noisily fall back to libswscale if one of these con=
ditions does
            not apply.</p>
            <p>If zimg is used, the other <tt class=3D"docutils literal"><s=
pan class=3D"pre">--sws-</span></tt> options are ignored, and the
            <tt class=3D"docutils literal"><span class=3D"pre">--zimg-</spa=
n></tt> options are used instead.</p>
            <p>If the internal component using the swscale wrapper hooks up=
 logging
            correctly, a verbose priority log message will indicate whether=
 zimg is
            being used.</p>
            <p>Most things which need software conversion can make use of t=
his.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Do note that zimg <em>may</em> be slower than=
 libswscale. Usually,
            it's faster on x86 platforms, but slower on ARM (due to lack of=
 ARM
            specific optimizations). The mpv zimg wrapper uses unoptimized =
repacking
            for some formats, for which zimg cannot be blamed.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-zimg-scaler"><=
span class=3D"pre">--zimg-scaler=3D&lt;point|bilinear|bicubic|spline16|spli=
ne36|lanczos&gt;</span><a href=3D"https://mpv.io/manual/master/#options-zim=
g-scaler" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Zimg luma scaler to use (default: lanczos).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-zimg-scaler-pa=
ram-a"><span class=3D"pre">--zimg-scaler-param-a=3D&lt;default|float&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-zimg-scaler-param-a" c=
lass=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"=
options-zimg-scaler-param-b"><span class=3D"pre">--zimg-scaler-param-b=3D&l=
t;default|float&gt;</span><a href=3D"https://mpv.io/manual/master/#options-=
zimg-scaler-param-b" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set scaler parameters. By default, these=
 are set to the special string
            <tt class=3D"docutils literal">default</tt>, which maps to a sc=
aler-specific default value. Ignored if the
            scaler is not tunable.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-lanczos">lancz=
os<a href=3D"https://mpv.io/manual/master/#options-lanczos" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">--zimg-s=
caler-param-a</span></tt> is the number of taps.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-bicubic">bicub=
ic<a href=3D"https://mpv.io/manual/master/#options-bicubic" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>a and b are the bicubic b and c parameters.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-zimg-scaler-ch=
roma"><span class=3D"pre">--zimg-scaler-chroma=3D...</span><a href=3D"https=
://mpv.io/manual/master/#options-zimg-scaler-chroma" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
--zimg-scaler</span></tt>, for for chroma interpolation (default: bilinear)=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-zimg-scaler-ch=
roma-param-a"><span class=3D"pre">--zimg-scaler-chroma-param-a</span><a hre=
f=3D"https://mpv.io/manual/master/#options-zimg-scaler-chroma-param-a" clas=
s=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"opt=
ions-zimg-scaler-chroma-param-b"><span class=3D"pre">--zimg-scaler-chroma-p=
aram-b</span><a href=3D"https://mpv.io/manual/master/#options-zimg-scaler-c=
hroma-param-b" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
--zimg-scaler-param-a</span></tt> / <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--zimg-scaler-param-b</span></tt>, for chroma.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-zimg-dither"><=
span class=3D"pre">--zimg-dither=3D&lt;no|ordered|random|error-diffusion&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-zimg-dither" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Dithering (default: random).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-zimg-threads">=
<span class=3D"pre">--zimg-threads=3D&lt;auto|integer&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-zimg-threads" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd><p class=3D"first">Set the maximum number of threads to use=
 for scaling (default: auto).
            <tt class=3D"docutils literal">auto</tt> uses the number of log=
ical cores on the current machine. Note that
            the scaler may use less threads (or even just 1 thread) dependi=
ng on stuff.
            Passing a value of 1 disables threading and always scales the i=
mage in a
            single operation. Higher thread counts waste resources, but mak=
e it
            typically faster.</p>
            <p class=3D"last">Note that some zimg git versions had bugs tha=
t will corrupt the output if
            threads are used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-zimg-fast"><sp=
an class=3D"pre">--zimg-fast=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-zimg-fast" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>Allow optimizations that help with performance, but reduce =
quality (default:
            yes). Currently, this may simplify gamma conversion operations.=
</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"audio-resampler">
            <h2>Audio Resampler</h2>
            <p>This controls the default options of any resampling done by =
mpv (but not within
            libavfilter, within the system audio API resampler, or any othe=
r places).</p>
            <p>It also sets the defaults for the <tt class=3D"docutils lite=
ral">lavrresample</tt> audio filter.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-audio-resample=
-filter-size"><span class=3D"pre">--audio-resample-filter-size=3D&lt;length=
&gt;</span><a href=3D"https://mpv.io/manual/master/#options-audio-resample-=
filter-size" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Length of the filter with respect to the lower sampling rat=
e. (default:
            16)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-resample=
-phase-shift"><span class=3D"pre">--audio-resample-phase-shift=3D&lt;count&=
gt;</span><a href=3D"https://mpv.io/manual/master/#options-audio-resample-p=
hase-shift" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Log2 of the number of polyphase entries. (..., 10-&gt;1024,=
 11-&gt;2048,
            12-&gt;4096, ...) (default: 10-&gt;1024)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-resample=
-cutoff"><span class=3D"pre">--audio-resample-cutoff=3D&lt;cutoff&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-audio-resample-cutoff" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Cutoff frequency (0.0-1.0), default set depending upon filt=
er length.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-resample=
-linear"><span class=3D"pre">--audio-resample-linear=3D&lt;yes|no&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-audio-resample-linear" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If set then filters will be linearly interpolated between p=
olyphase
            entries. (default: no)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-normaliz=
e-downmix"><span class=3D"pre">--audio-normalize-downmix=3D&lt;yes|no&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-audio-normalize-downm=
ix" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enable/disable normalization if surround=
 audio is downmixed to stereo
            (default: no). If this is disabled, downmix can cause clipping.=
 If it's
            enabled, the output might be too quiet. It depends on the sourc=
e audio.</p>
            <p>Technically, this changes the <tt class=3D"docutils literal"=
>normalize</tt> suboption of the
            <tt class=3D"docutils literal">lavrresample</tt> audio filter, =
which performs the downmixing.</p>
            <p class=3D"last">If downmix happens outside of mpv for some re=
ason, or in the decoder
            (decoder downmixing), or in the audio output (system mixer), th=
is has no
            effect.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-resample=
-max-output-size"><span class=3D"pre">--audio-resample-max-output-size=3D&l=
t;length&gt;</span><a href=3D"https://mpv.io/manual/master/#options-audio-r=
esample-max-output-size" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Limit maximum size of audio frames filte=
red at once, in ms (default: 40).
            The output size size is limited in order to make resample speed=
 changes
            react faster. This is necessary especially if decoders or filte=
rs output
            very large frame sizes (like some lossless codecs or some DRC f=
ilters).
            This option does not affect the resampling algorithm in any way=
.</p>
            <p class=3D"last">For testing/debugging only. Can be removed or=
 changed any time.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-audio-swresamp=
le-o"><span class=3D"pre">--audio-swresample-o=3D&lt;string&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-audio-swresample-o" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set AVOptions on the SwrContext or AVAud=
ioResampleContext. These should
            be documented by FFmpeg or Libav.</p>
            <p class=3D"last">This is a key/value list option. See <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#list-options"=
>List Options</a> for details.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"terminal">
            <h2>Terminal</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-quiet"><span c=
lass=3D"pre">--quiet</span><a href=3D"https://mpv.io/manual/master/#options=
-quiet" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Make console output less verbose; in par=
ticular, prevents the status line
            (i.e. AV: 3.4 (00:00:03.37) / 5320.6 ...) from being displayed.
            Particularly useful on slow terminals or broken ones which do n=
ot properly
            handle carriage return (i.e. <tt class=3D"docutils literal">\r<=
/tt>).</p>
            <p class=3D"last">See also: <tt class=3D"docutils literal"><spa=
n class=3D"pre">--really-quiet</span></tt> and <tt class=3D"docutils litera=
l"><span class=3D"pre">--msg-level</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-really-quiet">=
<span class=3D"pre">--really-quiet</span><a href=3D"https://mpv.io/manual/m=
aster/#options-really-quiet" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Display even less output and status messages than with <tt =
class=3D"docutils literal"><span class=3D"pre">--quiet</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-terminal"><=
span class=3D"pre">--no-terminal</span><a href=3D"https://mpv.io/manual/mas=
ter/#options-no-terminal" class=3D"anchor fa fa-link"></a></tt>, <tt class=
=3D"docutils literal" id=3D"options-terminal"><span class=3D"pre">--termina=
l</span><a href=3D"https://mpv.io/manual/master/#options-terminal" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Disable any use of the terminal and stdi=
n/stdout/stderr. This completely
            silences any message output.</p>
            <p class=3D"last">Unlike <tt class=3D"docutils literal"><span c=
lass=3D"pre">--really-quiet</span></tt>, this disables input and terminal i=
nitialization
            as well.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-msg-color">=
<span class=3D"pre">--no-msg-color</span><a href=3D"https://mpv.io/manual/m=
aster/#options-no-msg-color" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Disable colorful console output on terminals.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-msg-level"><sp=
an class=3D"pre">--msg-level=3D&lt;module1=3Dlevel1,module2=3Dlevel2,...&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-msg-level" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Control verbosity directly for each modu=
le. The <tt class=3D"docutils literal">all</tt> module changes the
            verbosity of all the modules. The verbosity changes from this o=
ption are
            applied in order from left to right, and each item can override=
 a previous
            one.</p>
            <p>Run mpv with <tt class=3D"docutils literal"><span class=3D"p=
re">--msg-level=3Dall=3Dtrace</span></tt> to see all messages mpv outputs. =
You
            can use the module names printed in the output (prefixed to eac=
h line in
            <tt class=3D"docutils literal"><span class=3D"pre">[...]</span>=
</tt>) to limit the output to interesting modules.</p>
            <p>This also affects <tt class=3D"docutils literal"><span class=
=3D"pre">--log-file</span></tt>, and in certain cases libmpv API logging.</=
p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Some messages are printed before the command =
line is parsed and are
            therefore not affected by <tt class=3D"docutils literal"><span =
class=3D"pre">--msg-level</span></tt>. To control these messages,
            you have to use the <tt class=3D"docutils literal">MPV_VERBOSE<=
/tt> environment variable; see
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#environment-variables">ENVIRONMENT VARIABLES</a> for details.</p>
            </div>
            <p>Available levels:</p>
            <blockquote>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">complete silence</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">fatal:</th><td cla=
ss=3D"field-body">fatal messages only</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">error:</th><td cla=
ss=3D"field-body">error messages</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">warn:</th><td clas=
s=3D"field-body">warning messages</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">info:</th><td clas=
s=3D"field-body">informational messages</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">status:</th><td cl=
ass=3D"field-body">status messages (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">v:</th><td class=
=3D"field-body">verbose messages</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">debug:</th><td cla=
ss=3D"field-body">debug messages</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">trace:</th><td cla=
ss=3D"field-body">very noisy debug messages</td>
            </tr>
            </tbody>
            </table>
            </blockquote>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <pre class=3D"literal-block">mpv --msg-level=3Dao/sndio=3Dno
</pre>
            <p>Completely silences the output of ao_sndio, which uses the l=
og
            prefix <tt class=3D"docutils literal">[ao/sndio]</tt>.</p>
            <pre class=3D"literal-block">mpv --msg-level=3Dall=3Dwarn,ao/al=
sa=3Derror
</pre>
            <p class=3D"last">Only show warnings or worse, and let the ao_a=
lsa output show errors
            only.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-term-osd"><spa=
n class=3D"pre">--term-osd=3D&lt;auto|no|force&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-term-osd" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Control whether OSD messages are shown o=
n the console when no video output
            is available (default: auto).</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">use terminal OSD if no video output active</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">disable terminal OSD</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">force:</th><td cla=
ss=3D"field-body">use terminal OSD even if video output active</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">The <tt class=3D"docutils literal">auto</tt> =
mode also enables terminal OSD if <tt class=3D"docutils literal"><span clas=
s=3D"pre">--video-osd=3Dno</span></tt> was set.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-term-osd-bar">=
<span class=3D"pre">--term-osd-bar</span><a href=3D"https://mpv.io/manual/m=
aster/#options-term-osd-bar" class=3D"anchor fa fa-link"></a></tt>, <tt cla=
ss=3D"docutils literal" id=3D"options-no-term-osd-bar"><span class=3D"pre">=
--no-term-osd-bar</span><a href=3D"https://mpv.io/manual/master/#options-no=
-term-osd-bar" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enable printing a progress bar under the status line on the=
 terminal.
            (Disabled by default.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-term-osd-bar-c=
hars"><span class=3D"pre">--term-osd-bar-chars=3D&lt;string&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-term-osd-bar-chars" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Customize the <tt class=3D"docutils lite=
ral"><span class=3D"pre">--term-osd-bar</span></tt> feature. The string is =
expected to
            consist of 5 characters (start, left space, position indicator,
            right space, end). You can use Unicode characters, but note tha=
t double-
            width characters will not be treated correctly.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal"><span=
 class=3D"pre">[-+-]</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-term-playing-m=
sg"><span class=3D"pre">--term-playing-msg=3D&lt;string&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-term-playing-msg" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Print out a string after starting playba=
ck. The string is expanded for
            properties, e.g. <tt class=3D"docutils literal"><span class=3D"=
pre">--term-playing-msg=3D'file:</span> ${filename}'</tt> will print the st=
ring
            <tt class=3D"docutils literal">file:</tt> followed by a space a=
nd the currently played filename.</p>
            <p class=3D"last">See <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#property-expansion">Property Expansion</a>.</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-term-status-ms=
g"><span class=3D"pre">--term-status-msg=3D&lt;string&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-term-status-msg" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd>Print out a custom string during playback instead of the st=
andard status
            line. Expands properties. See <a class=3D"reference internal" h=
ref=3D"https://mpv.io/manual/master/#property-expansion">Property Expansion=
</a>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-term-title"><s=
pan class=3D"pre">--term-title=3D&lt;string&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-term-title" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd><p class=3D"first">Set the terminal title. Currently, this =
simply concatenates the escape
            sequence setting the window title with the provided (property e=
xpanded)
            string. This will mess up if the expanded string contain bytes =
that end the
            escape sequence, or if the terminal does not understand the seq=
uence. The
            latter probably includes the regrettable win32.</p>
            <p class=3D"last">Expands properties. See <a class=3D"reference=
 internal" href=3D"https://mpv.io/manual/master/#property-expansion">Proper=
ty Expansion</a>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-msg-module"><s=
pan class=3D"pre">--msg-module</span><a href=3D"https://mpv.io/manual/maste=
r/#options-msg-module" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Prepend module name to each console message.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-msg-time"><spa=
n class=3D"pre">--msg-time</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-msg-time" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Prepend timing information to each console message. The tim=
e is in
            seconds since the player process was started (technically, slig=
htly
            later actually), using a monotonic time source depending on the=
 OS. This
            is <tt class=3D"docutils literal">CLOCK_MONOTONIC</tt> on sane =
UNIX variants.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"cache">
            <h2>Cache</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-cache"><span c=
lass=3D"pre">--cache=3D&lt;yes|no|auto&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-cache" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Decide whether to use network cache sett=
ings (default: auto).</p>
            <p>If enabled, use up to <tt class=3D"docutils literal"><span c=
lass=3D"pre">--cache-secs</span></tt> for the cache size (but still limited
            to <tt class=3D"docutils literal"><span class=3D"pre">--demuxer=
-max-bytes</span></tt>), and make the cached data seekable (if possible).
            If disabled, <tt class=3D"docutils literal"><span class=3D"pre"=
>--cache-pause</span></tt> and related are implicitly disabled.</p>
            <p>The <tt class=3D"docutils literal">auto</tt> choice enables =
this depending on whether the stream is thought
            to involve network accesses or other slow media (this is an imp=
erfect
            heuristic).</p>
            <p class=3D"last">Before mpv 0.30.0, this used to accept a numb=
er, which specified the size
            of the cache in kilobytes. Use e.g. <tt class=3D"docutils liter=
al"><span class=3D"pre">--cache</span> <span class=3D"pre">--demuxer-max-by=
tes=3D123k</span></tt>
            instead.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no-cache"><spa=
n class=3D"pre">--no-cache</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-no-cache" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Turn off input stream caching. See <tt class=3D"docutils li=
teral"><span class=3D"pre">--cache</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cache-secs"><s=
pan class=3D"pre">--cache-secs=3D&lt;seconds&gt;</span><a href=3D"https://m=
pv.io/manual/master/#options-cache-secs" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>How many seconds of audio/video to prefetch if the cache is=
 active. This
            overrides the <tt class=3D"docutils literal"><span class=3D"pre=
">--demuxer-readahead-secs</span></tt> option if and only if the cache
            is enabled and the value is larger. The default value is set to=
 something
            very high, so the actually achieved readahead will usually be l=
imited by
            the value of the <tt class=3D"docutils literal"><span class=3D"=
pre">--demuxer-max-bytes</span></tt> option. Setting this option is
            usually only useful for limiting readahead.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cache-on-disk"=
><span class=3D"pre">--cache-on-disk=3D&lt;yes|no&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-cache-on-disk" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd><p class=3D"first">Write packet data to a temporary file, i=
nstead of keeping them in memory.
            This makes sense only with <tt class=3D"docutils literal"><span=
 class=3D"pre">--cache</span></tt>. If the normal cache is disabled,
            this option is ignored.</p>
            <p>The cache file is append-only. Even if the player appears to=
 prune data, the
            file space freed by it is not reused. The cache file is deleted=
 when
            playback is closed.</p>
            <p>Note that packet metadata is still kept in memory. <tt class=
=3D"docutils literal"><span class=3D"pre">--demuxer-max-bytes</span></tt>
            and related options are applied to metadata <em>only</em>. The =
size of this
            metadata  varies, but 50 MB per hour of media is typical. The c=
ache
            statistics will report this metadats size, instead of the size =
of the cache
            file. If the metadata hits the size limits, the metadata is pru=
ned (but not
            the cache file).</p>
            <p>When the media is closed, the cache file is deleted. A cache=
 file is
            generally worthless after the media is closed, and it's hard to=
 retrieve
            any media data from it (it's not supported by design).</p>
            <p class=3D"last">If the option is enabled at runtime, the cach=
e file is created, but old data
            will remain in the memory cache. If the option is disabled at r=
untime, old
            data remains in the disk cache, and the cache file is not close=
d until the
            media is closed. If the option is disabled and enabled again, i=
t will
            continue to use the cache file that was opened first.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cache-dir"><sp=
an class=3D"pre">--cache-dir=3D&lt;path&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-cache-dir" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Directory where to create temporary file=
s. Cache is stored in the system's
            cache directory (usually <tt class=3D"docutils literal"><span c=
lass=3D"pre">~/.cache/mpv</span></tt>) if this is unset.</p>
            <p class=3D"last">Currently, this is used for <tt class=3D"docu=
tils literal"><span class=3D"pre">--cache-on-disk</span></tt> only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cache-pause"><=
span class=3D"pre">--cache-pause=3D&lt;yes|no&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-cache-pause" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd>Whether the player should automatically pause when the cach=
e runs out of
            data and stalls decoding/playback (default: yes). If enabled, i=
t will
            pause and unpause once more data is available, aka "buffering".=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cache-pause-wa=
it"><span class=3D"pre">--cache-pause-wait=3D&lt;seconds&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-cache-pause-wait" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Number of seconds the packet cache should have buffered bef=
ore starting
            playback again if "buffering" was entered (default: 1). This ca=
n be used
            to control how long the player rebuffers if <tt class=3D"docuti=
ls literal"><span class=3D"pre">--cache-pause</span></tt> is enabled,
            and the demuxer underruns. If the given time is higher than the=
 maximum
            set with <tt class=3D"docutils literal"><span class=3D"pre">--c=
ache-secs</span></tt> or  <tt class=3D"docutils literal"><span class=3D"pre=
">--demuxer-readahead-secs</span></tt>, or prefetching
            ends before that for some other reason (like file end or maximu=
m configured
            cache size reached), playback resumes earlier.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cache-pause-in=
itial"><span class=3D"pre">--cache-pause-initial=3D&lt;yes|no&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-cache-pause-initial" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enter "buffering" mode before starting p=
layback (default: no). This can be
            used to ensure playback starts smoothly, in exchange for waitin=
g some time
            to prefetch network data (as controlled by <tt class=3D"docutil=
s literal"><span class=3D"pre">--cache-pause-wait</span></tt>). For
            example, some common behavior is that playback starts, but netw=
ork caches
            immediately underrun when trying to decode more data as playbac=
k progresses.</p>
            <p>Another thing that can happen is that the network prefetchin=
g is so CPU
            demanding (due to demuxing in the background) that playback dro=
ps frames
            at first. In these cases, it helps enabling this option, and se=
tting
            <tt class=3D"docutils literal"><span class=3D"pre">--cache-secs=
</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--cache=
-pause-wait</span></tt> to roughly the same value.</p>
            <p class=3D"last">This option also triggers when playback is re=
started after seeking.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cache-unlink-f=
iles"><span class=3D"pre">--cache-unlink-files=3D&lt;immediate|whendone|no&=
gt;</span><a href=3D"https://mpv.io/manual/master/#options-cache-unlink-fil=
es" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether or when to unlink cache files (d=
efault: immediate). This affects
            cache files which are inherently temporary, and which make no s=
ense to
            remain on disk after the player terminates. This is a debugging=
 option.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-immediate">imm=
ediate<a href=3D"https://mpv.io/manual/master/#options-immediate" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>Unlink cache file after they were created. The cache files =
won't be
            visible anymore, even though they're in use. This ensures they =
are
            guaranteed to be removed from disk when the player terminates, =
even if
            it crashes.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-whendone">when=
done<a href=3D"https://mpv.io/manual/master/#options-whendone" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Delete cache files after they are closed.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-no">no<a href=
=3D"https://mpv.io/manual/master/#options-no" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Don't delete cache files. They will consume disk space with=
out having a
            use.</dd>
            </dl>
            <p class=3D"last">Currently, this is used for <tt class=3D"docu=
tils literal"><span class=3D"pre">--cache-on-disk</span></tt> only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stream-buffer-=
size"><span class=3D"pre">--stream-buffer-size=3D&lt;bytesize&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-stream-buffer-size" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Size of the low level stream byte buffer=
 (default: 128KB). This is used as
            buffer between demuxer and low level I/O (e.g. sockets). Genera=
lly, this
            can be very small, and the main purpose is similar to the inter=
nal buffer
            FILE in the C standard library will have.</p>
            <p>Half of the buffer is always used for guaranteed seek back, =
which is
            important for unseekable input.</p>
            <p>There are known cases where this can help performance to set=
 a large buffer:</p>
            <blockquote>
            <ol class=3D"arabic simple">
            <li>mp4 files. libavformat may trigger many small seeks in both
            directions, depending on how the file was muxed.</li>
            <li>Certain network filesystems, which do not have a cache, and=
 where
            small reads can be inefficient.</li>
            </ol>
            </blockquote>
            <p>In other cases, setting this to a large value can reduce per=
formance.</p>
            <p>Usually, read accesses are at half the buffer size, but it m=
ay happen that
            accesses are done alternating with smaller and larger sizes (th=
is is due to
            the internal ring buffer wrap-around).</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--list-options</span></tt> for defaults and value range. <tt clas=
s=3D"docutils literal">&lt;bytesize&gt;</tt> options
            accept suffixes such as <tt class=3D"docutils literal">KiB</tt>=
 and <tt class=3D"docutils literal">MiB</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-queue-enabl=
e"><span class=3D"pre">--vd-queue-enable=3D&lt;yes|no&gt;,</span> <span cla=
ss=3D"pre">--ad-queue-enable</span><a href=3D"https://mpv.io/manual/master/=
#options-vd-queue-enable" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enable running the video/audio decoder o=
n a separate thread (default: no).
            If enabled, the decoder is run on a separate thread, and a fram=
e queue is
            put between decoder and higher level playback logic. The size o=
f the frame
            queue is defined by the other options below.</p>
            <p>This is probably quite pointless. libavcodec already has mul=
tithreaded
            decoding (enabled by default), which makes this largely unneces=
sary. It
            might help in some corner cases with high bandwidth video that =
is slow to
            decode (in these cases libavcodec would block the playback logi=
c, while
            using a decoding thread would distribute the decoding time even=
ly without
            affecting the playback logic). In other situations, it will sim=
ply make
            seeking slower and use significantly more memory.</p>
            <p>The queue size is restricted by the other <tt class=3D"docut=
ils literal"><span class=3D"pre">--vd-queue-...</span></tt> options. The
            final queue size is the minimum as indicated by the option with=
 the lowest
            limit. Each decoder/track has its own queue that may use the fu=
ll configured
            queue size.</p>
            <p>Most queue options can be changed at runtime. <tt class=3D"d=
ocutils literal"><span class=3D"pre">--vd-queue-enable</span></tt> itself
            (and the audio equivalent) update only if decoding is completel=
y
            reinitialized. However, setting <tt class=3D"docutils literal">=
<span class=3D"pre">--vd-queue-max-samples=3D1</span></tt> should almost
            lead to the same behavior as <tt class=3D"docutils literal"><sp=
an class=3D"pre">--vd-queue-enable=3Dno</span></tt>, so that value can
            be used for effectively runtime enabling/disabling the queue.</=
p>
            <p class=3D"last">This should not be used with hardware decodin=
g. It is possible to enable
            this for audio, but it makes even less sense.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-queue-max-b=
ytes"><span class=3D"pre">--vd-queue-max-bytes=3D&lt;bytesize&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-vd-queue-max-bytes" class=3D"=
anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-=
ad-queue-max-bytes"><span class=3D"pre">--ad-queue-max-bytes</span><a href=
=3D"https://mpv.io/manual/master/#options-ad-queue-max-bytes" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Maximum approximate allowed size of the =
queue. If exceeded, decoding will
            be stopped. The maximum size can be exceeded by about 1 frame.<=
/p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--list-options</span></tt> for defaults and value range. <tt clas=
s=3D"docutils literal">&lt;bytesize&gt;</tt> options
            accept suffixes such as <tt class=3D"docutils literal">KiB</tt>=
 and <tt class=3D"docutils literal">MiB</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-queue-max-s=
amples"><span class=3D"pre">--vd-queue-max-samples=3D&lt;int&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-vd-queue-max-samples" class=3D=
"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options=
-ad-queue-max-samples"><span class=3D"pre">--ad-queue-max-samples</span><a =
href=3D"https://mpv.io/manual/master/#options-ad-queue-max-samples" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Maximum number of frames (video) or samp=
les (audio) of the queue. The audio
            size may be exceeded by about 1 frame.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--list-options</span></tt> for defaults and value range.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vd-queue-max-s=
ecs"><span class=3D"pre">--vd-queue-max-secs=3D&lt;seconds&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-vd-queue-max-secs" class=3D"anch=
or fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-ad-q=
ueue-max-secs"><span class=3D"pre">--ad-queue-max-secs</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-ad-queue-max-secs" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Maximum number of seconds of media in th=
e queue. The special value 0 means
            no limit is set. The queue size may be exceeded by about 2 fram=
es. Timestamp
            resets may lead to random queue size usage.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--list-options</span></tt> for defaults and value range.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"network">
            <h2>Network</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-user-agent"><s=
pan class=3D"pre">--user-agent=3D&lt;string&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-user-agent" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>Use <tt class=3D"docutils literal">&lt;string&gt;</tt> as u=
ser agent for HTTP streaming.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cookies"><span=
 class=3D"pre">--cookies</span><a href=3D"https://mpv.io/manual/master/#opt=
ions-cookies" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils =
literal" id=3D"options-no-cookies"><span class=3D"pre">--no-cookies</span><=
a href=3D"https://mpv.io/manual/master/#options-no-cookies" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Support cookies when making HTTP requests. Disabled by defa=
ult.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cookies-file">=
<span class=3D"pre">--cookies-file=3D&lt;filename&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-cookies-file" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Read HTTP cookies from &lt;filename&gt;. The file is assume=
d to be in Netscape
            format.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-http-header-fi=
elds"><span class=3D"pre">--http-header-fields=3D&lt;field1,field2&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-http-header-fields" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set custom HTTP fields when accessing HT=
TP stream.</p>
            <p>This is a string list option. See <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-options">List Options</a> =
for details.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <pre class=3D"literal-block">mpv --http-header-fields=3D'Field1=
: value1','Field2: value2' \
http://localhost:1234
</pre>
            <p>Will generate HTTP request:</p>
            <pre class=3D"last literal-block">GET / HTTP/1.0
Host: localhost:1234
User-Agent: MPlayer
Icy-MetaData: 1
Field1: value1
Field2: value2
Connection: close
</pre>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-http-proxy"><s=
pan class=3D"pre">--http-proxy=3D&lt;proxy&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-http-proxy" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>URL of the HTTP/HTTPS proxy. If this is set, the <tt class=
=3D"docutils literal">http_proxy</tt> environment
            is ignored. The <tt class=3D"docutils literal">no_proxy</tt> en=
vironment variable is still respected. This
            option is silently ignored if it does not start with <tt class=
=3D"docutils literal"><span class=3D"pre">http://</span></tt>. Proxies
            are not used for https URLs. Setting this option does not try t=
o make the
            ytdl script use the proxy.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tls-ca-file"><=
span class=3D"pre">--tls-ca-file=3D&lt;filename&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-tls-ca-file" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Certificate authority database file for use with TLS. (Sile=
ntly fails with
            older FFmpeg or Libav versions.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tls-verify"><s=
pan class=3D"pre">--tls-verify</span><a href=3D"https://mpv.io/manual/maste=
r/#options-tls-verify" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Verify peer certificates when using TLS (e.g. with <tt clas=
s=3D"docutils literal"><span class=3D"pre">https://...</span></tt>).
            (Silently fails with older FFmpeg or Libav versions.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tls-cert-file"=
><span class=3D"pre">--tls-cert-file</span><a href=3D"https://mpv.io/manual=
/master/#options-tls-cert-file" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>A file containing a certificate to use in the handshake wit=
h the
            peer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tls-key-file">=
<span class=3D"pre">--tls-key-file</span><a href=3D"https://mpv.io/manual/m=
aster/#options-tls-key-file" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>A file containing the private key for the certificate.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-referrer"><spa=
n class=3D"pre">--referrer=3D&lt;string&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-referrer" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Specify a referrer path or URL for HTTP requests.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-network-timeou=
t"><span class=3D"pre">--network-timeout=3D&lt;seconds&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-network-timeout" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specify the network timeout in seconds (=
default: 60 seconds). This affects
            at least HTTP. The special value 0 uses the FFmpeg/Libav defaul=
ts. If a
            protocol is used which does not support timeouts, this option i=
s silently
            ignored.</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This breaks the RTSP protocol, because of inc=
onsistent FFmpeg API
            regarding its internal timeout option. Not only does the RTSP t=
imeout
            option accept different units (seconds instead of microseconds,=
 causing
            mpv to pass it huge values), it will also overflow FFmpeg inter=
nal
            calculations. The worst is that merely setting the option will =
put RTSP
            into listening mode, which breaks any client uses. At time of t=
his
            writing, the fix was not made effective yet. For this reason, t=
his
            option is ignored (or should be ignored) on RTSP URLs. You can =
still
            set the timeout option directly with <tt class=3D"docutils lite=
ral"><span class=3D"pre">--demuxer-lavf-o</span></tt>.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-rtsp-transport=
"><span class=3D"pre">--rtsp-transport=3D&lt;lavf|udp|udp_multicast|tcp|htt=
p&gt;</span><a href=3D"https://mpv.io/manual/master/#options-rtsp-transport=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Select RTSP transport method (default: tcp). This selects t=
he underlying
            network transport when playing <tt class=3D"docutils literal"><=
span class=3D"pre">rtsp://...</span></tt> URLs. The value <tt class=3D"docu=
tils literal">lavf</tt>
            leaves the decision to libavformat.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hls-bitrate"><=
span class=3D"pre">--hls-bitrate=3D&lt;no|min|max|&lt;rate&gt;&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-hls-bitrate" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If HLS streams are played, this option c=
ontrols what streams are selected
            by default. The option allows the following parameters:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Don't do anything special. Typically, this will simply pick=
 the
            first audio/video streams it can find.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">min:</th><td class=
=3D"field-body">Pick the streams with the lowest bitrate.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">max:</th><td class=
=3D"field-body">Same, but highest bitrate. (Default.)</td>
            </tr>
            </tbody>
            </table>
            <p>Additionally, if the option is a number, the stream with the=
 highest rate
            equal or below the option value is selected.</p>
            <p class=3D"last">The bitrate as used is sent by the server, an=
d there's no guarantee it's
            actually meaningful.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"dvb">
            <h2>DVB</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-dvbin-prog"><s=
pan class=3D"pre">--dvbin-prog=3D&lt;string&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-dvbin-prog" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>This defines the program to tune to. Usually, you may speci=
fy this
            by using a stream URI like <tt class=3D"docutils literal"><span=
 class=3D"pre">"dvb://ZDF</span> HD"</tt>, but you can tune to a
            different channel by writing to this property at runtime.
            Also see <tt class=3D"docutils literal"><span class=3D"pre">dvb=
in-channel-switch-offset</span></tt> for more useful channel
            switching functionality.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvbin-card"><s=
pan class=3D"pre">--dvbin-card=3D&lt;0-15&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-dvbin-card" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Specifies using card number 0-15 (default: 0).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvbin-file"><s=
pan class=3D"pre">--dvbin-file=3D&lt;filename&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-dvbin-file" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Instructs mpv to read the channels list from <tt class=3D"d=
ocutils literal">&lt;filename&gt;</tt>. The default is
            in the mpv configuration directory (usually <tt class=3D"docuti=
ls literal"><span class=3D"pre">~/.config/mpv</span></tt>) with the
            filename <tt class=3D"docutils literal"><span class=3D"pre">cha=
nnels.conf.{sat,ter,cbl,atsc}</span></tt> (based on your card type) or
            <tt class=3D"docutils literal">channels.conf</tt> as a last res=
ort.
            For DVB-S/2 cards, a VDR 1.7.x format channel list is recommend=
ed
            as it allows tuning to DVB-S2 channels, enabling subtitles and
            decoding the PMT (which largely improves the demuxing).
            Classic mplayer format channel lists are still supported (witho=
ut
            these improvements), and for other card types, only limited VDR
            format channel list support is implemented (patches welcome).
            For channels with dynamic PID switching or incomplete
            <tt class=3D"docutils literal">channels.conf</tt>, <tt class=3D=
"docutils literal"><span class=3D"pre">--dvbin-full-transponder</span></tt>=
 or the magic PID
            <tt class=3D"docutils literal">8192</tt> are recommended.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvbin-timeout"=
><span class=3D"pre">--dvbin-timeout=3D&lt;1-30&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-dvbin-timeout" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Maximum number of seconds to wait when trying to tune a fre=
quency before
            giving up (default: 30).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvbin-full-tra=
nsponder"><span class=3D"pre">--dvbin-full-transponder=3D&lt;yes|no&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-dvbin-full-transponder"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Apply no filters on program PIDs, only t=
une to frequency and pass full
            transponder to demuxer.
            The player frontend selects the streams from the full TS in thi=
s case,
            so the program which is shown initially may not match the chose=
n channel.
            Switching between the programs is possible by cycling the <tt c=
lass=3D"docutils literal">program</tt>
            property.
            This is useful to record multiple programs on a single transpon=
der,
            or to work around issues in the <tt class=3D"docutils literal">=
channels.conf</tt>.
            It is also recommended to use this for channels which switch PI=
Ds
            on-the-fly, e.g. for regional news.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">no</t=
t></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dvbin-channel-=
switch-offset"><span class=3D"pre">--dvbin-channel-switch-offset=3D&lt;inte=
ger&gt;</span><a href=3D"https://mpv.io/manual/master/#options-dvbin-channe=
l-switch-offset" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This value is not meant for setting via =
configuration, but used in channel
            switching. An <tt class=3D"docutils literal">input.conf</tt> ca=
n <tt class=3D"docutils literal">cycle</tt> this value <tt class=3D"docutil=
s literal">up</tt> and <tt class=3D"docutils literal">down</tt>
            to perform channel switching. This number effectively gives the=
 offset
            to the initially tuned to channel in the channel list.</p>
            <p class=3D"last">An example <tt class=3D"docutils literal">inp=
ut.conf</tt> could contain:
            <tt class=3D"docutils literal">H cycle <span class=3D"pre">dvbi=
n-channel-switch-offset</span> up</tt>, <tt class=3D"docutils literal">K cy=
cle <span class=3D"pre">dvbin-channel-switch-offset</span> down</tt></p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"alsa-audio-output-options">
            <h2>ALSA audio output options</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-device"><=
span class=3D"pre">--alsa-device=3D&lt;device&gt;</span><a href=3D"https://=
mpv.io/manual/master/#options-alsa-device" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd>Deprecated, use <tt class=3D"docutils literal"><span class=
=3D"pre">--audio-device</span></tt> (requires <tt class=3D"docutils literal=
">alsa/</tt> prefix).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-resample"=
><span class=3D"pre">--alsa-resample=3Dyes</span><a href=3D"https://mpv.io/=
manual/master/#options-alsa-resample" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Enable ALSA resampling plugin. (This is disabled by default=
, because
            some drivers report incorrect audio delay in some cases.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-mixer-dev=
ice"><span class=3D"pre">--alsa-mixer-device=3D&lt;device&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-alsa-mixer-device" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>Set the mixer device used with <tt class=3D"docutils litera=
l"><span class=3D"pre">ao-volume</span></tt> (default: <tt class=3D"docutil=
s literal">default</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-mixer-nam=
e"><span class=3D"pre">--alsa-mixer-name=3D&lt;name&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-alsa-mixer-name" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Set the name of the mixer element (default: <tt class=3D"do=
cutils literal">Master</tt>). This is for
            example <tt class=3D"docutils literal">PCM</tt> or <tt class=3D=
"docutils literal">Master</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-mixer-ind=
ex"><span class=3D"pre">--alsa-mixer-index=3D&lt;number&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-alsa-mixer-index" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Set the index of the mixer channel (default: 0). Consider t=
he output of
            "<tt class=3D"docutils literal">amixer scontrols</tt>", then th=
e index is the number that follows the
            name of the element.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-non-inter=
leaved"><span class=3D"pre">--alsa-non-interleaved</span><a href=3D"https:/=
/mpv.io/manual/master/#options-alsa-non-interleaved" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Allow output of non-interleaved formats (if the audio decod=
er uses
            this format). Currently disabled by default, because some popul=
ar
            ALSA plugins are utterly broken with non-interleaved formats.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-ignore-ch=
map"><span class=3D"pre">--alsa-ignore-chmap</span><a href=3D"https://mpv.i=
o/manual/master/#options-alsa-ignore-chmap" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Don't read or set the channel map of the ALSA device - only=
 request the
            required number of channels, and then pass the audio as-is to i=
t. This
            option most likely should not be used. It can be useful for deb=
ugging,
            or for static setups with a specially engineered ALSA configura=
tion (in
            this case you should always force the same layout with <tt clas=
s=3D"docutils literal"><span class=3D"pre">--audio-channels</span></tt>,
            or it will work only for files which use the layout implicit to=
 your
            ALSA device).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-buffer-ti=
me"><span class=3D"pre">--alsa-buffer-time=3D&lt;microseconds&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-alsa-buffer-time" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the requested buffer time in microse=
conds. A value of 0 skips requesting
            anything from the ALSA API. This and the <tt class=3D"docutils =
literal"><span class=3D"pre">--alsa-periods</span></tt> option uses the
            ALSA <tt class=3D"docutils literal">near</tt> functions to set =
the requested parameters. If doing so results
            in an empty configuration set, setting these parameters is skip=
ped.</p>
            <p class=3D"last">Both options control the buffer size. A low b=
uffer size can lead to higher
            CPU usage and audio dropouts, while a high buffer size can lead=
 to higher
            latency in volume changes and other filtering.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alsa-periods">=
<span class=3D"pre">--alsa-periods=3D&lt;number&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-alsa-periods" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Number of periods requested from the ALSA API. See <tt clas=
s=3D"docutils literal"><span class=3D"pre">--alsa-buffer-time</span></tt>
            for further remarks.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"gpu-renderer-options">
            <h2>GPU renderer options</h2>
            <p>The following video options are currently all specific to <t=
t class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu</span></tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dlibmp=
v</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--vo=
=3Dgpu-next</span></tt>, which are the only VOs that implement
            them.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-scale"><span c=
lass=3D"pre">--scale=3D&lt;filter&gt;</span><a href=3D"https://mpv.io/manua=
l/master/#options-scale" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The filter function to use when upscalin=
g video.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-bilinear">bili=
near<a href=3D"https://mpv.io/manual/master/#options-bilinear" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Bilinear hardware texture filtering (fastest, very low qual=
ity). This
            is the default for compatibility reasons.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-spline36">spli=
ne36<a href=3D"https://mpv.io/manual/master/#options-spline36" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Mid quality and speed. This is the default when using <tt c=
lass=3D"docutils literal"><span class=3D"pre">gpu-hq</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-lanczos">lancz=
os<a href=3D"https://mpv.io/manual/master/#options-lanczos" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Lanczos scaling. Provides mid quality an=
d speed. Generally worse than
            <tt class=3D"docutils literal">spline36</tt>, but it results in=
 a slightly sharper image which is good
            for some content types. The number of taps can be controlled wi=
th
            <tt class=3D"docutils literal"><span class=3D"pre">scale-radius=
</span></tt>, but is best left unchanged.</p>
            <p class=3D"last">(This filter is an alias for <tt class=3D"doc=
utils literal">sinc</tt>-windowed <tt class=3D"docutils literal">sinc</tt>)=
</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ewa-lanczos">e=
wa_lanczos<a href=3D"https://mpv.io/manual/master/#options-ewa-lanczos" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Elliptic weighted average Lanczos scalin=
g. Also known as Jinc.
            Relatively slow, but very good quality. The radius can be contr=
olled
            with <tt class=3D"docutils literal"><span class=3D"pre">scale-r=
adius</span></tt>. Increasing the radius makes the filter sharper
            but adds more ringing.</p>
            <p class=3D"last">(This filter is an alias for <tt class=3D"doc=
utils literal">jinc</tt>-windowed <tt class=3D"docutils literal">jinc</tt>)=
</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-ewa-lanczossha=
rp">ewa_lanczossharp<a href=3D"https://mpv.io/manual/master/#options-ewa-la=
nczossharp" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>A slightly sharpened version of ewa_lanczos, preconfigured =
to use an
            ideal radius and parameter. If your hardware can run it, this i=
s
            probably what you should use by default.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-mitchell">mitc=
hell<a href=3D"https://mpv.io/manual/master/#options-mitchell" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Mitchell-Netravali. The <tt class=3D"docutils literal">B</t=
t> and <tt class=3D"docutils literal">C</tt> parameters can be set with
            <tt class=3D"docutils literal"><span class=3D"pre">--scale-para=
m1</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--sca=
le-param2</span></tt>. This filter is very good at
            downscaling (see <tt class=3D"docutils literal"><span class=3D"=
pre">--dscale</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-oversample">ov=
ersample<a href=3D"https://mpv.io/manual/master/#options-oversample" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>A version of nearest neighbour that (naively) oversamples p=
ixels, so
            that pixels overlapping edges get linearly interpolated instead=
 of
            rounded. This essentially removes the small imperfections and j=
udder
            artifacts caused by nearest-neighbour interpolation, in exchang=
e for
            adding some blur. This filter is good at temporal interpolation=
, and
            also known as "smoothmotion" (see <tt class=3D"docutils literal=
"><span class=3D"pre">--tscale</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-linear">linear=
<a href=3D"https://mpv.io/manual/master/#options-linear" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>A <tt class=3D"docutils literal"><span class=3D"pre">--tsca=
le</span></tt> filter.</dd>
            </dl>
            <p>There are some more filters, but most are not as useful. For=
 a complete
            list, pass <tt class=3D"docutils literal">help</tt> as value, e=
.g.:</p>
            <pre class=3D"last literal-block">mpv --scale=3Dhelp
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cscale"><span =
class=3D"pre">--cscale=3D&lt;filter&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-cscale" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>As <tt class=3D"docutils literal"><span class=3D"pre">--sca=
le</span></tt>, but for interpolating chroma information. If the image is
            not subsampled, this option is ignored entirely.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dscale"><span =
class=3D"pre">--dscale=3D&lt;filter&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-dscale" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Like <tt class=3D"docutils literal"><span class=3D"pre">--s=
cale</span></tt>, but apply these filters on downscaling instead. If this
            option is unset, the filter implied by <tt class=3D"docutils li=
teral"><span class=3D"pre">--scale</span></tt> will be applied.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tscale"><span =
class=3D"pre">--tscale=3D&lt;filter&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-tscale" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The filter used for interpolating the te=
mporal axis (frames). This is only
            used if <tt class=3D"docutils literal"><span class=3D"pre">--in=
terpolation</span></tt> is enabled. The only valid choices for
            <tt class=3D"docutils literal"><span class=3D"pre">--tscale</sp=
an></tt> are separable convolution filters (use <tt class=3D"docutils liter=
al"><span class=3D"pre">--tscale=3Dhelp</span></tt> to
            get a list). The default is <tt class=3D"docutils literal">mitc=
hell</tt>.</p>
            <p class=3D"last">Common <tt class=3D"docutils literal"><span c=
lass=3D"pre">--tscale</span></tt> choices include <tt class=3D"docutils lit=
eral">oversample</tt>, <tt class=3D"docutils literal">linear</tt>,
            <tt class=3D"docutils literal">catmull_rom</tt>, <tt class=3D"d=
ocutils literal">mitchell</tt>, <tt class=3D"docutils literal">gaussian</tt=
>, or <tt class=3D"docutils literal">bicubic</tt>. These are
            listed in increasing order of smoothness/blurriness, with <tt c=
lass=3D"docutils literal">bicubic</tt>
            being the smoothest/blurriest and <tt class=3D"docutils literal=
">oversample</tt> being the sharpest/least
            smooth.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-param1">=
<span class=3D"pre">--scale-param1=3D&lt;value&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-scale-param1" class=3D"anchor fa fa-link"></=
a></tt>, <tt class=3D"docutils literal" id=3D"options-scale-param2"><span c=
lass=3D"pre">--scale-param2=3D&lt;value&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-scale-param2" class=3D"anchor fa fa-link"></a></tt>=
, <tt class=3D"docutils literal" id=3D"options-cscale-param1"><span class=
=3D"pre">--cscale-param1=3D&lt;value&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-cscale-param1" class=3D"anchor fa fa-link"></a></tt>, =
<tt class=3D"docutils literal" id=3D"options-cscale-param2"><span class=3D"=
pre">--cscale-param2=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual=
/master/#options-cscale-param2" class=3D"anchor fa fa-link"></a></tt>, <tt =
class=3D"docutils literal" id=3D"options-dscale-param1"><span class=3D"pre"=
>--dscale-param1=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/mas=
ter/#options-dscale-param1" class=3D"anchor fa fa-link"></a></tt>, <tt clas=
s=3D"docutils literal" id=3D"options-dscale-param2"><span class=3D"pre">--d=
scale-param2=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/=
#options-dscale-param2" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D=
"docutils literal" id=3D"options-tscale-param1"><span class=3D"pre">--tscal=
e-param1=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/#opt=
ions-tscale-param1" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"doc=
utils literal" id=3D"options-tscale-param2"><span class=3D"pre">--tscale-pa=
ram2=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/#options=
-tscale-param2" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set filter parameters. By default, these=
 are set to the special string
            <tt class=3D"docutils literal">default</tt>, which maps to a sc=
aler-specific default value. Ignored if the
            filter is not tunable. Currently, this affects the following fi=
lter
            parameters:</p>
            <dl class=3D"last docutils">
            <dt>bcspline</dt>
            <dd>Spline parameters (<tt class=3D"docutils literal">B</tt> an=
d <tt class=3D"docutils literal">C</tt>). Defaults to 0.5 for both.</dd>
            <dt>gaussian</dt>
            <dd>Scale parameter (<tt class=3D"docutils literal">t</tt>). In=
creasing this makes the result blurrier.
            Defaults to 1.</dd>
            <dt>oversample</dt>
            <dd>Minimum distance to an edge before interpolation is used. S=
etting this
            to 0 will always interpolate edges, whereas setting it to 0.5 w=
ill
            never interpolate, thus behaving as if the regular nearest neig=
hbour
            algorithm was used. Defaults to 0.0.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-blur"><s=
pan class=3D"pre">--scale-blur=3D&lt;value&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-scale-blur" class=3D"anchor fa fa-link"></a></tt=
>, <tt class=3D"docutils literal" id=3D"options-scale-wblur"><span class=3D=
"pre">--scale-wblur=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/=
master/#options-scale-wblur" class=3D"anchor fa fa-link"></a></tt>, <tt cla=
ss=3D"docutils literal" id=3D"options-cscale-blur"><span class=3D"pre">--cs=
cale-blur=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/#op=
tions-cscale-blur" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docu=
tils literal" id=3D"options-cscale-wblur"><span class=3D"pre">--cscale-wblu=
r=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/#options-cs=
cale-wblur" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils li=
teral" id=3D"options-dscale-blur"><span class=3D"pre">--dscale-blur=3D&lt;v=
alue&gt;</span><a href=3D"https://mpv.io/manual/master/#options-dscale-blur=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"options-dscale-wblur"><span class=3D"pre">--dscale-wblur=3D&lt;value&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-dscale-wblur" clas=
s=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"opt=
ions-tscale-blur"><span class=3D"pre">--tscale-blur=3D&lt;value&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-tscale-blur" class=3D"ancho=
r fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-tscal=
e-wblur"><span class=3D"pre">--tscale-wblur=3D&lt;value&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-tscale-wblur" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>Kernel/window scaling factor (also known as a blur factor).=
 Decreasing this
            makes the result sharper, increasing it makes it blurrier (defa=
ult 0). If
            set to 0, the kernel's preferred blur factor is used. Note that=
 setting
            this too low (eg. 0.5) leads to bad results. It's generally rec=
ommended to
            stick to values between 0.8 and 1.2.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-clamp"><=
span class=3D"pre">--scale-clamp=3D&lt;0.0-1.0&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-scale-clamp" class=3D"anchor fa fa-link"></a=
></tt>, <tt class=3D"docutils literal" id=3D"options-cscale-clamp"><span cl=
ass=3D"pre">--cscale-clamp</span><a href=3D"https://mpv.io/manual/master/#o=
ptions-cscale-clamp" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"do=
cutils literal" id=3D"options-dscale-clamp"><span class=3D"pre">--dscale-cl=
amp</span><a href=3D"https://mpv.io/manual/master/#options-dscale-clamp" cl=
ass=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"o=
ptions-tscale-clamp"><span class=3D"pre">--tscale-clamp</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-tscale-clamp" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Specifies a weight bias to multiply into negative coefficie=
nts. Specifying
            <tt class=3D"docutils literal"><span class=3D"pre">--scale-clam=
p=3D1</span></tt> has the effect of removing negative weights completely,
            thus effectively clamping the value range to [0-1]. Values betw=
een 0.0 and
            1.0 can be specified to apply only a moderate diminishment of n=
egative
            weights. This is especially useful for <tt class=3D"docutils li=
teral"><span class=3D"pre">--tscale</span></tt>, where it reduces
            excessive ringing artifacts in the temporal domain (which typic=
ally
            manifest themselves as short flashes or fringes of black, mostl=
y around
            moving edges) in exchange for potentially adding more blur. The=
 default for
            <tt class=3D"docutils literal"><span class=3D"pre">--tscale-cla=
mp</span></tt> is 1.0, the others default to 0.0.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-cutoff">=
<span class=3D"pre">--scale-cutoff=3D&lt;value&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-scale-cutoff" class=3D"anchor fa fa-link"></=
a></tt>, <tt class=3D"docutils literal" id=3D"options-cscale-cutoff"><span =
class=3D"pre">--cscale-cutoff=3D&lt;value&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-cscale-cutoff" class=3D"anchor fa fa-link"></a></=
tt>, <tt class=3D"docutils literal" id=3D"options-dscale-cutoff"><span clas=
s=3D"pre">--dscale-cutoff=3D&lt;value&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-dscale-cutoff" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>Cut off the filter kernel prematurely once the value range =
drops below
            this threshold. Doing so allows more aggressive pruning of skip=
pable
            coefficients by disregarding parts of the LUT which are effecti=
vely zeroed
            out by the window function. Only affects polar (EWA) filters. T=
he default
            is 0.001 for each, which is perceptually transparent but provid=
es a 10%-20%
            speedup, depending on the exact radius and filter kernel chosen=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-taper"><=
span class=3D"pre">--scale-taper=3D&lt;value&gt;</span><a href=3D"https://m=
pv.io/manual/master/#options-scale-taper" class=3D"anchor fa fa-link"></a><=
/tt>, <tt class=3D"docutils literal" id=3D"options-scale-wtaper"><span clas=
s=3D"pre">--scale-wtaper=3D&lt;value&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-scale-wtaper" class=3D"anchor fa fa-link"></a></tt>, <=
tt class=3D"docutils literal" id=3D"options-dscale-taper"><span class=3D"pr=
e">--dscale-taper=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/ma=
ster/#options-dscale-taper" class=3D"anchor fa fa-link"></a></tt>, <tt clas=
s=3D"docutils literal" id=3D"options-dscale-wtaper"><span class=3D"pre">--d=
scale-wtaper=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/=
#options-dscale-wtaper" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D=
"docutils literal" id=3D"options-cscale-taper"><span class=3D"pre">--cscale=
-taper=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/#optio=
ns-cscale-taper" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docuti=
ls literal" id=3D"options-cscale-wtaper"><span class=3D"pre">--cscale-wtape=
r=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manual/master/#options-cs=
cale-wtaper" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils l=
iteral" id=3D"options-tscale-taper"><span class=3D"pre">--tscale-taper=3D&l=
t;value&gt;</span><a href=3D"https://mpv.io/manual/master/#options-tscale-t=
aper" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal"=
 id=3D"options-tscale-wtaper"><span class=3D"pre">--tscale-wtaper=3D&lt;val=
ue&gt;</span><a href=3D"https://mpv.io/manual/master/#options-tscale-wtaper=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Kernel/window taper factor. Increasing this flattens the fi=
lter function.
            Value range is 0 to 1. A value of 0 (the default) means no flat=
tening, a
            value of 1 makes the filter completely flat (equivalent to a bo=
x function).
            Values in between mean that some portion will be flat and the a=
ctual filter
            function will be squeezed into the space in between.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-radius">=
<span class=3D"pre">--scale-radius=3D&lt;value&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-scale-radius" class=3D"anchor fa fa-link"></=
a></tt>, <tt class=3D"docutils literal" id=3D"options-cscale-radius"><span =
class=3D"pre">--cscale-radius=3D&lt;value&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-cscale-radius" class=3D"anchor fa fa-link"></a></=
tt>, <tt class=3D"docutils literal" id=3D"options-dscale-radius"><span clas=
s=3D"pre">--dscale-radius=3D&lt;value&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-dscale-radius" class=3D"anchor fa fa-link"></a></tt>,=
 <tt class=3D"docutils literal" id=3D"options-tscale-radius"><span class=3D=
"pre">--tscale-radius=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manua=
l/master/#options-tscale-radius" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set radius for tunable filters, must be =
a float number between 0.5 and
            16.0. Defaults to the filter's preferred radius if not specifie=
d. Doesn't
            work for every scaler and VO combination.</p>
            <p class=3D"last">Note that depending on filter implementation =
details and video scaling
            ratio, the radius that actually being used might be different (=
most likely
            being increased a bit).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-antiring=
"><span class=3D"pre">--scale-antiring=3D&lt;value&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-scale-antiring" class=3D"anchor fa fa-li=
nk"></a></tt>, <tt class=3D"docutils literal" id=3D"options-cscale-antiring=
"><span class=3D"pre">--cscale-antiring=3D&lt;value&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-cscale-antiring" class=3D"anchor fa fa-=
link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-dscale-antiri=
ng"><span class=3D"pre">--dscale-antiring=3D&lt;value&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-dscale-antiring" class=3D"anchor fa f=
a-link"></a></tt>, <tt class=3D"docutils literal" id=3D"options-tscale-anti=
ring"><span class=3D"pre">--tscale-antiring=3D&lt;value&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-tscale-antiring" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the antiringing strength. This tries=
 to eliminate ringing, but can
            introduce other artifacts in the process. Must be a float numbe=
r between
            0.0 and 1.0. The default value of 0.0 disables antiringing enti=
rely.</p>
            <p class=3D"last">Note that this doesn't affect the special fil=
ters <tt class=3D"docutils literal">bilinear</tt> and
            <tt class=3D"docutils literal">bicubic_fast</tt>, nor does it a=
ffect any polar (EWA) scalers.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-window">=
<span class=3D"pre">--scale-window=3D&lt;window&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-scale-window" class=3D"anchor fa fa-link"><=
/a></tt>, <tt class=3D"docutils literal" id=3D"options-cscale-window"><span=
 class=3D"pre">--cscale-window=3D&lt;window&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-cscale-window" class=3D"anchor fa fa-link"></a>=
</tt>, <tt class=3D"docutils literal" id=3D"options-dscale-window"><span cl=
ass=3D"pre">--dscale-window=3D&lt;window&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-dscale-window" class=3D"anchor fa fa-link"></a></t=
t>, <tt class=3D"docutils literal" id=3D"options-tscale-window"><span class=
=3D"pre">--tscale-window=3D&lt;window&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-tscale-window" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>(Advanced users only) Choose a custom windowing function fo=
r the kernel.
            Defaults to the filter's preferred window if unset. Use
            <tt class=3D"docutils literal"><span class=3D"pre">--scale-wind=
ow=3Dhelp</span></tt> to get a list of supported windowing functions.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scale-wparam">=
<span class=3D"pre">--scale-wparam=3D&lt;window&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-scale-wparam" class=3D"anchor fa fa-link"><=
/a></tt>, <tt class=3D"docutils literal" id=3D"options-cscale-wparam"><span=
 class=3D"pre">--cscale-wparam=3D&lt;window&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-cscale-wparam" class=3D"anchor fa fa-link"></a>=
</tt>, <tt class=3D"docutils literal" id=3D"options-cscale-wparam"><span cl=
ass=3D"pre">--cscale-wparam=3D&lt;window&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-cscale-wparam" class=3D"anchor fa fa-link"></a></t=
t>, <tt class=3D"docutils literal" id=3D"options-tscale-wparam"><span class=
=3D"pre">--tscale-wparam=3D&lt;window&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-tscale-wparam" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd><p class=3D"first">(Advanced users only) Configure the para=
meter for the window function given
            by <tt class=3D"docutils literal"><span class=3D"pre">--scale-w=
indow</span></tt> etc. By default, these are set to the special string
            <tt class=3D"docutils literal">default</tt>, which maps to a wi=
ndow-specific default value. Ignored if the
            window is not tunable. Currently, this affects the following wi=
ndow
            parameters:</p>
            <dl class=3D"last docutils">
            <dt>kaiser</dt>
            <dd>Window parameter (alpha). Defaults to 6.33.</dd>
            <dt>blackman</dt>
            <dd>Window parameter (alpha). Defaults to 0.16.</dd>
            <dt>gaussian</dt>
            <dd>Scale parameter (t). Increasing this makes the window wider=
. Defaults
            to 1.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scaler-lut-siz=
e"><span class=3D"pre">--scaler-lut-size=3D&lt;4..10&gt;</span><a href=3D"h=
ttps://mpv.io/manual/master/#options-scaler-lut-size" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Set the size of the lookup texture for s=
caler kernels (default: 6). The
            actual size of the texture is <tt class=3D"docutils literal">2^=
N</tt> for an option value of <tt class=3D"docutils literal">N</tt>. So the
            lookup texture with the default setting uses 64 samples.</p>
            <p class=3D"last">All weights are linearly interpolated from th=
ose samples, so increasing
            the size of lookup table might improve the accuracy of scaler.<=
/p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-scaler-resizes=
-only"><span class=3D"pre">--scaler-resizes-only</span><a href=3D"https://m=
pv.io/manual/master/#options-scaler-resizes-only" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Disable the scaler if the video image is not resized. In th=
at case,
            <tt class=3D"docutils literal">bilinear</tt> is used instead of=
 whatever is set with <tt class=3D"docutils literal"><span class=3D"pre">--=
scale</span></tt>. Bilinear
            will reproduce the source image perfectly if no scaling is perf=
ormed.
            Enabled by default. Note that this option never affects <tt cla=
ss=3D"docutils literal"><span class=3D"pre">--cscale</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-correct-downsc=
aling"><span class=3D"pre">--correct-downscaling</span><a href=3D"https://m=
pv.io/manual/master/#options-correct-downscaling" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd><p class=3D"first">When using convolution based filters, ex=
tend the filter size when
            downscaling. Increases quality, but reduces performance while d=
ownscaling.</p>
            <p>This will perform slightly sub-optimally for anamorphic vide=
o (but still
            better than without it) since it will extend the size to match =
only the
            milder of the scale factors between the axes.</p>
            <p class=3D"last">Note: this option is ignored when using bilin=
ear downscaling (the default).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-linear-downsca=
ling"><span class=3D"pre">--linear-downscaling</span><a href=3D"https://mpv=
.io/manual/master/#options-linear-downscaling" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Scale in linear light when downscaling. It should only be u=
sed with a
            <tt class=3D"docutils literal"><span class=3D"pre">--fbo-format=
</span></tt> that has at least 16 bit precision. This option
            has no effect on HDR content.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-linear-upscali=
ng"><span class=3D"pre">--linear-upscaling</span><a href=3D"https://mpv.io/=
manual/master/#options-linear-upscaling" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Scale in linear light when upscaling. Like <tt class=3D"doc=
utils literal"><span class=3D"pre">--linear-downscaling</span></tt>, it
            should only be used with a <tt class=3D"docutils literal"><span=
 class=3D"pre">--fbo-format</span></tt> that has at least 16 bits
            precisions. This is not usually recommended except for testing/=
specific
            purposes. Users are advised to either enable <tt class=3D"docut=
ils literal"><span class=3D"pre">--sigmoid-upscaling</span></tt> or
            keep both options disabled (i.e. scaling in gamma light).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sigmoid-upscal=
ing"><span class=3D"pre">--sigmoid-upscaling</span><a href=3D"https://mpv.i=
o/manual/master/#options-sigmoid-upscaling" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>When upscaling, use a sigmoidal color transform to avoid em=
phasizing
            ringing artifacts. This is incompatible with and replaces
            <tt class=3D"docutils literal"><span class=3D"pre">--linear-ups=
caling</span></tt>. (Note that sigmoidization also requires
            linearization, so the <tt class=3D"docutils literal">LINEAR</tt=
> rendering step fires in both cases)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sigmoid-center=
"><span class=3D"pre">--sigmoid-center</span><a href=3D"https://mpv.io/manu=
al/master/#options-sigmoid-center" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>The center of the sigmoid curve used for <tt class=3D"docut=
ils literal"><span class=3D"pre">--sigmoid-upscaling</span></tt>, must be a
            float between 0.0 and 1.0. Defaults to 0.75 if not specified.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sigmoid-slope"=
><span class=3D"pre">--sigmoid-slope</span><a href=3D"https://mpv.io/manual=
/master/#options-sigmoid-slope" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The slope of the sigmoid curve used for <tt class=3D"docuti=
ls literal"><span class=3D"pre">--sigmoid-upscaling</span></tt>, must be a
            float between 1.0 and 20.0. Defaults to 6.5 if not specified.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-interpolation"=
><span class=3D"pre">--interpolation</span><a href=3D"https://mpv.io/manual=
/master/#options-interpolation" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Reduce stuttering caused by mismatches i=
n the video fps and display refresh
            rate (also known as judder).</p>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This requires setting the <tt class=3D"docuti=
ls literal"><span class=3D"pre">--video-sync</span></tt> option to one
            of the <tt class=3D"docutils literal">display-</tt> modes, or i=
t will be silently disabled.
            This was not required before mpv 0.14.0.</p>
            </div>
            <p class=3D"last">This essentially attempts to interpolate the =
missing frames by convoluting
            the video along the temporal axis. The filter used can be contr=
olled using
            the <tt class=3D"docutils literal"><span class=3D"pre">--tscale=
</span></tt> setting.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-interpolation-=
threshold"><span class=3D"pre">--interpolation-threshold=3D&lt;0..1,-1&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-interpolation-thresh=
old" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Threshold below which frame ratio interp=
olation gets disabled (default:
            <tt class=3D"docutils literal">0.01</tt>). This is calculated a=
s <tt class=3D"docutils literal">abs(disphz/vfps - 1) &lt; threshold</tt>,
            where <tt class=3D"docutils literal">vfps</tt> is the speed-adj=
usted video FPS, and <tt class=3D"docutils literal">disphz</tt> the
            display refresh rate. (The speed-adjusted video FPS is roughly =
equal to
            the normal video FPS, but with slowdown and speedup applied. Th=
is matters
            if you use <tt class=3D"docutils literal"><span class=3D"pre">-=
-video-sync=3Ddisplay-resample</span></tt> to make video run synchronously
            to the display FPS, or if you change the <tt class=3D"docutils =
literal">speed</tt> property.)</p>
            <p>The default is intended to enable interpolation in scenarios=
 where
            retiming with the <tt class=3D"docutils literal"><span class=3D=
"pre">--video-sync=3Ddisplay-*</span></tt> cannot adjust the speed of
            the video sufficiently for smooth playback. For example if a vi=
deo is
            60.00 FPS and your display refresh rate is 59.94 Hz, interpolat=
ion will
            never be activated, since the mismatch is within 1% of the refr=
esh
            rate. The default also handles the scenario when mpv cannot det=
ermine the
            container FPS, such as during certain live streams, and may dyn=
amically
            toggle interpolation on and off. In this scenario, the default =
would be to
            not use interpolation but rather to allow <tt class=3D"docutils=
 literal"><span class=3D"pre">--video-sync=3Ddisplay-*</span></tt> to
            retime the video to match display refresh rate. See
            <tt class=3D"docutils literal"><span class=3D"pre">--video-sync=
-max-video-change</span></tt> for more information about how mpv
            will retime video.</p>
            <p>Also note that if you use e.g. <tt class=3D"docutils literal=
"><span class=3D"pre">--video-sync=3Ddisplay-vdrop</span></tt>, small
            deviations in the rate can disable interpolation and introduce =
a
            discontinuity every other minute.</p>
            <p class=3D"last">Set this to <tt class=3D"docutils literal"><s=
pan class=3D"pre">-1</span></tt> to disable this logic.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-interpolation-=
preserve"><span class=3D"pre">--interpolation-preserve</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-interpolation-preserve" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Preserve the previous frames' interpolated results even whe=
n renderer
            parameters are changed - with the exception of options related =
to
            cropping and video placement, which always invalidate the cache=
. Enabling
            this option makes dynamic updates of renderer settings slightly=
 smoother at
            the cost of slightly higher latency in response to such changes=
. Defaults
            to on. (Only affects <tt class=3D"docutils literal"><span class=
=3D"pre">--vo=3Dgpu-next</span></tt>, note that <tt class=3D"docutils liter=
al"><span class=3D"pre">--vo=3Dgpu</span></tt> always
            invalidates interpolated frames)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-pbo"><s=
pan class=3D"pre">--opengl-pbo</span><a href=3D"https://mpv.io/manual/maste=
r/#options-opengl-pbo" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enable use of PBOs. On some drivers this can be faster, esp=
ecially if the
            source video size is huge (e.g. so called "4K" video). On other=
 drivers it
            might be slower or cause latency issues.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dither-depth">=
<span class=3D"pre">--dither-depth=3D&lt;N|no|auto&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-dither-depth" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd><p class=3D"first">Set dither target depth to N. Default: n=
o.</p>
            <dl class=3D"docutils">
            <dt>no</dt>
            <dd>Disable any dithering done by mpv.</dd>
            <dt>auto</dt>
            <dd>Automatic selection. If output bit depth cannot be detected=
, 8 bits per
            component are assumed.</dd>
            <dt>8</dt>
            <dd>Dither to 8 bit output.</dd>
            </dl>
            <p class=3D"last">Note that the depth of the connected video di=
splay device cannot be
            detected. Often, LCD panels will do dithering on their own, whi=
ch conflicts
            with this option and leads to ugly output.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dither-size-fr=
uit"><span class=3D"pre">--dither-size-fruit=3D&lt;2-8&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-dither-size-fruit" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the size of the dither matrix (defau=
lt: 6). The actual size of the
            matrix is <tt class=3D"docutils literal">(2^N) x (2^N)</tt> for=
 an option value of <tt class=3D"docutils literal">N</tt>, so a value of 6
            gives a size of 64x64. The matrix is generated at startup time,=
 and a large
            matrix can take rather long to compute (seconds).</p>
            <p class=3D"last">Used in <tt class=3D"docutils literal"><span =
class=3D"pre">--dither=3Dfruit</span></tt> mode only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-dither"><span =
class=3D"pre">--dither=3D&lt;fruit|ordered|error-diffusion|no&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-dither" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Select dithering algorithm (default: fru=
it). (Normally, the
            <tt class=3D"docutils literal"><span class=3D"pre">--dither-dep=
th</span></tt> option controls whether dithering is enabled.)</p>
            <p class=3D"last">The <tt class=3D"docutils literal"><span clas=
s=3D"pre">error-diffusion</span></tt> option requires compute shader suppor=
t. It also
            requires large amount of shared memory to run, the size of whic=
h depends on
            both the kernel (see <tt class=3D"docutils literal"><span class=
=3D"pre">--error-diffusion</span></tt> option below) and the height of
            video window. It will fallback to <tt class=3D"docutils literal=
">fruit</tt> dithering if there is no enough
            shared memory to run the shader.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-temporal-dithe=
r"><span class=3D"pre">--temporal-dither</span><a href=3D"https://mpv.io/ma=
nual/master/#options-temporal-dither" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Enable temporal dithering. (Only active if dithering is ena=
bled in
            general.) This changes between 8 different dithering patterns o=
n each frame
            by changing the orientation of the tiled dithering matrix. Unfo=
rtunately,
            this can lead to flicker on LCD displays, since these have a hi=
gh reaction
            time.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-temporal-dithe=
r-period"><span class=3D"pre">--temporal-dither-period=3D&lt;1-128&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-temporal-dither-period" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Determines how often the dithering pattern is updated when
            <tt class=3D"docutils literal"><span class=3D"pre">--temporal-d=
ither</span></tt> is in use. 1 (the default) will update on every video
            frame, 2 on every other frame, etc.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-error-diffusio=
n"><span class=3D"pre">--error-diffusion=3D&lt;kernel&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-error-diffusion" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd><p class=3D"first">The error diffusion kernel to use when <=
tt class=3D"docutils literal"><span class=3D"pre">--dither=3Derror-diffusio=
n</span></tt> is set.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-simple">simple=
<a href=3D"https://mpv.io/manual/master/#options-simple" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Propagate error to only two adjacent pixels. Fastest but lo=
w quality.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sierra-lite"><=
span class=3D"pre">sierra-lite</span><a href=3D"https://mpv.io/manual/maste=
r/#options-sierra-lite" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Fast with reasonable quality. This is the default.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-floyd-steinber=
g"><span class=3D"pre">floyd-steinberg</span><a href=3D"https://mpv.io/manu=
al/master/#options-floyd-steinberg" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Most notable error diffusion kernel.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-atkinson">atki=
nson<a href=3D"https://mpv.io/manual/master/#options-atkinson" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Looks different from other kernels because only fraction of=
 errors will
            be propagated during dithering. A typical use case of this kern=
el is
            saving dithered screenshot (in window mode). This kernel produc=
es
            slightly smaller file, with still reasonable dithering quality.=
</dd>
            </dl>
            <p class=3D"last">There are other kernels (use <tt class=3D"doc=
utils literal"><span class=3D"pre">--error-diffusion=3Dhelp</span></tt> to =
list) but most of
            them are much slower and demanding even larger amount of shared=
 memory.
            Among these kernels, <tt class=3D"docutils literal">burkes</tt>=
 achieves a good balance between performance
            and quality, and probably is the one you want to try first.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-debug"><sp=
an class=3D"pre">--gpu-debug</span><a href=3D"https://mpv.io/manual/master/=
#options-gpu-debug" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enables GPU debugging. What this means depends on the API t=
ype. For OpenGL,
            it calls <tt class=3D"docutils literal">glGetError()</tt>, and =
requests a debug context. For Vulkan, it
            enables validation layers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-swapint=
erval"><span class=3D"pre">--opengl-swapinterval=3D&lt;n&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-opengl-swapinterval" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Interval in displayed frames between two=
 buffer swaps. 1 is equivalent to
            enable VSYNC, 0 to disable VSYNC. Defaults to 1 if not specifie=
d.</p>
            <p class=3D"last">Note that this depends on proper OpenGL vsync=
 support. On some platforms
            and drivers, this only works reliably when in fullscreen mode. =
It may also
            require driver-specific hacks if using multiple monitors, to en=
sure mpv
            syncs to the right one. Compositing window managers can also le=
ad to bad
            results, as can missing or incorrect display FPS information (s=
ee
            <tt class=3D"docutils literal"><span class=3D"pre">--override-d=
isplay-fps</span></tt>).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-device"=
><span class=3D"pre">--vulkan-device=3D&lt;device</span> name&gt;<a href=3D=
"https://mpv.io/manual/master/#options-vulkan-device" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>The name of the Vulkan device to use for rendering and pres=
entation. Use
            <tt class=3D"docutils literal"><span class=3D"pre">--vulkan-dev=
ice=3Dhelp</span></tt> to see the list of available devices and their
            names. If left unspecified, the first enumerated hardware Vulka=
n device will
            be used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-swap-mo=
de"><span class=3D"pre">--vulkan-swap-mode=3D&lt;mode&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-vulkan-swap-mode" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Controls the presentation mode of the vu=
lkan swapchain. This is similar
            to the <tt class=3D"docutils literal"><span class=3D"pre">--ope=
ngl-swapinterval</span></tt> option.</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Use the preferred swapchain mode for the vulkan context. (D=
efault)</dd>
            <dt>fifo</dt>
            <dd>Non-tearing, vsync blocked. Similar to "VSync on".</dd>
            <dt>fifo-relaxed</dt>
            <dd>Tearing, vsync blocked. Late frames will tear instead of st=
uttering.</dd>
            <dt>mailbox</dt>
            <dd>Non-tearing, not vsync blocked. Similar to "triple bufferin=
g".</dd>
            <dt>immediate</dt>
            <dd>Tearing, not vsync blocked. Similar to "VSync off".</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-queue-c=
ount"><span class=3D"pre">--vulkan-queue-count=3D&lt;1..8&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-vulkan-queue-count" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>Controls the number of VkQueues used for rendering (limited=
 by how many
            your device supports). In theory, using more queues could enabl=
e some
            parallelism between frames (when using a <tt class=3D"docutils =
literal"><span class=3D"pre">--swapchain-depth</span></tt> higher than
            1), but it can also slow things down on hardware where there's =
no true
            parallelism between queues. (Default: 1)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-async-t=
ransfer"><span class=3D"pre">--vulkan-async-transfer</span><a href=3D"https=
://mpv.io/manual/master/#options-vulkan-async-transfer" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>Enables the use of async transfer queues on supported vulka=
n devices. Using
            them allows transfer operations like texture uploads and blits =
to happen
            concurrently with the actual rendering, thus improving overall =
throughput
            and power consumption. Enabled by default, and should be relati=
vely safe.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-async-c=
ompute"><span class=3D"pre">--vulkan-async-compute</span><a href=3D"https:/=
/mpv.io/manual/master/#options-vulkan-async-compute" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Enables the use of async compute queues on supported vulkan=
 devices. Using
            this, in theory, allows out-of-order scheduling of compute shad=
ers with
            graphics shaders, thus enabling the hardware to do more effecti=
ve work while
            waiting for pipeline bubbles and memory operations. Not benefic=
ial on all
            GPUs. It's worth noting that if async compute is enabled, and t=
he device
            supports more compute queues than graphics queues (bound by the=
 restrictions
            set by <tt class=3D"docutils literal"><span class=3D"pre">--vul=
kan-queue-count</span></tt>), mpv will internally try and prefer the
            use of compute shaders over fragment shaders wherever possible.=
 Enabled by
            default, although Nvidia users may want to disable it.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-display=
-display"><span class=3D"pre">--vulkan-display-display=3D&lt;n&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-vulkan-display-display" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The index of the display, on the selected Vulkan device, to=
 present on when
            using the <tt class=3D"docutils literal">displayvk</tt> GPU con=
text. Use <tt class=3D"docutils literal"><span class=3D"pre">--vulkan-displ=
ay-display=3Dhelp</span></tt>
            to see the list of available displays. If left unspecified, the=
 first
            enumerated display will be used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-display=
-mode"><span class=3D"pre">--vulkan-display-mode=3D&lt;n&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-vulkan-display-mode" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>The index of the display mode, of the selected Vulkan displ=
ay, to use when
            using the <tt class=3D"docutils literal">displayvk</tt> GPU con=
text. Use <tt class=3D"docutils literal"><span class=3D"pre">--vulkan-displ=
ay-mode=3Dhelp</span></tt>
            to see the list of available modes. If left unspecified, the fi=
rst
            enumerated mode will be used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vulkan-display=
-plane"><span class=3D"pre">--vulkan-display-plane=3D&lt;n&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-vulkan-display-plane" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>The index of the plane, on the selected Vulkan device, to p=
resent on when
            using the <tt class=3D"docutils literal">displayvk</tt> GPU con=
text. Use <tt class=3D"docutils literal"><span class=3D"pre">--vulkan-displ=
ay-plane=3Dhelp</span></tt>
            to see the list of available planes. If left unspecified, the f=
irst
            enumerated plane will be used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-exclusiv=
e-fs"><span class=3D"pre">--d3d11-exclusive-fs=3D&lt;yes|no&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-d3d11-exclusive-fs" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Switches the D3D11 swap chain fullscreen state to 'fullscre=
en' when
            fullscreen video is requested. Also known as "exclusive fullscr=
een" or
            "D3D fullscreen" in other applications. Gives mpv full control =
of
            rendering on the swap chain's screen. Off by default.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-warp"><s=
pan class=3D"pre">--d3d11-warp=3D&lt;yes|no|auto&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-d3d11-warp" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Use WARP (Windows Advanced Rasterization Platform) with the=
 D3D11 GPU
            backend (default: auto). This is a high performance software re=
nderer. By
            default, it is only used when the system has no hardware adapte=
rs that
            support D3D11. While the extended GPU features will work with W=
ARP, they
            can be very slow.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-feature-=
level"><span class=3D"pre">--d3d11-feature-level=3D&lt;12_1|12_0|11_1|11_0|=
10_1|10_0|9_3|9_2|9_1&gt;</span><a href=3D"https://mpv.io/manual/master/#op=
tions-d3d11-feature-level" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Select a specific feature level when using the D3D11 GPU ba=
ckend. By
            default, the highest available feature level is used. This opti=
on can be
            used to select a lower feature level, which is mainly useful fo=
r debugging.
            Most extended GPU features will not work at 9_x feature levels.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-flip"><s=
pan class=3D"pre">--d3d11-flip=3D&lt;yes|no&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-d3d11-flip" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>Enable flip-model presentation, which avoids unnecessarily =
copying the
            backbuffer by sharing surfaces with the DWM (default: yes). Thi=
s may cause
            performance issues with older drivers. If flip-model presentati=
on is not
            supported (for example, on Windows 7 without the platform updat=
e), mpv will
            automatically fall back to the older bitblt presentation model.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-sync-int=
erval"><span class=3D"pre">--d3d11-sync-interval=3D&lt;0..4&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-d3d11-sync-interval" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Schedule each frame to be presented for this number of VBla=
nk intervals.
            (default: 1) Setting to 1 will enable VSync, setting to 0 will =
disable it.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-adapter"=
><span class=3D"pre">--d3d11-adapter=3D&lt;adapter</span> name|help&gt;<a h=
ref=3D"https://mpv.io/manual/master/#options-d3d11-adapter" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select a specific D3D11 adapter to utili=
ze for D3D11 rendering.
            Will pick the default adapter if unset. Alternatives are listed
            when the name "help" is given.</p>
            <p>Checks for matches based on the start of the string, case
            insensitive. Thus, if the description of the adapter starts wit=
h
            the vendor name, that can be utilized as the selection paramete=
r.</p>
            <p class=3D"last">Hardware decoders utilizing the D3D11 renderi=
ng abstraction's helper
            functionality to receive a device, such as D3D11VA or DXVA2's D=
XGI
            mode, will be affected by this choice.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-output-f=
ormat"><span class=3D"pre">--d3d11-output-format=3D&lt;auto|rgba8|bgra8|rgb=
10_a2|rgba16f&gt;</span><a href=3D"https://mpv.io/manual/master/#options-d3=
d11-output-format" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select a specific D3D11 output format to=
 utilize for D3D11 rendering.
            "auto" is the default, which will pick either rgba8 or rgb10_a2=
 depending
            on the configured desktop bit depth. rgba16f and bgra8 are left=
 out of
            the autodetection logic, and are available for manual testing.<=
/p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Desktop bit depth querying is only available =
from an API available
            from Windows 10. Thus on older systems it will only automatical=
ly
            utilize the rgba8 output format.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11-output-c=
sp"><span class=3D"pre">--d3d11-output-csp=3D&lt;auto|srgb|linear|pq|bt.202=
0&gt;</span><a href=3D"https://mpv.io/manual/master/#options-d3d11-output-c=
sp" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select a specific D3D11 output color spa=
ce to utilize for D3D11 rendering.
            "auto" is the default, which will select the color space of the=
 desktop
            on which the swap chain is located.</p>
            <p>Values other than "srgb" and "pq" have had issues in testing=
, so they
            are mostly available for manual testing.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Swap chain color space configuration is only =
available from an API
            available from Windows 10. Thus on older systems it will not wo=
rk.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-d3d11va-zero-c=
opy"><span class=3D"pre">--d3d11va-zero-copy=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-d3d11va-zero-copy" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">By default, when using hardware decoding=
 with <tt class=3D"docutils literal"><span class=3D"pre">--gpu-api=3Dd3d11<=
/span></tt>, the
            video image will be copied (GPU-to-GPU) from the decoder surfac=
e to a
            shader resource. Set this option to avoid that copy by sampling=
 directly
            from the decoder image. This may increase performance and reduc=
e power
            usage, but can cause the image to be sampled incorrectly on the=
 bottom and
            right edges due to padding, and may invoke driver bugs, since D=
irect3D 11
            technically does not allow sampling from a decoder surface (tho=
ugh most
            drivers support it.)</p>
            <p class=3D"last">Currently only relevant for <tt class=3D"docu=
tils literal"><span class=3D"pre">--gpu-api=3Dd3d11</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-wayland-app-id=
"><span class=3D"pre">--wayland-app-id=3D&lt;string&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-wayland-app-id" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd>Set the client app id for Wayland-based video output method=
s (default: <tt class=3D"docutils literal">mpv</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-wayland-config=
ure-bounds"><span class=3D"pre">--wayland-configure-bounds=3D&lt;auto|yes|n=
o&gt;</span><a href=3D"https://mpv.io/manual/master/#options-wayland-config=
ure-bounds" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Controls whether or not mpv opts into the configure bounds =
event if sent by the
            compositor (default: auto). This restricts the initial size of =
the mpv window to
            a certain maximum size intended by the compositor. In most case=
s, this simply
            just prevents the mpv window from being larger than the size of=
 the monitor when
            it first renders. With the default value of <tt class=3D"docuti=
ls literal">auto</tt>, configure-bounds will
            silently be ignored if any <tt class=3D"docutils literal">autof=
it</tt> or <tt class=3D"docutils literal">geometry</tt> type option is also=
 set.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-wayland-conten=
t-type"><span class=3D"pre">--wayland-content-type=3D&lt;auto|none|photo|vi=
deo|game&gt;</span><a href=3D"https://mpv.io/manual/master/#options-wayland=
-content-type" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If supported by the compositor, mpv will send a hint using =
the content-type
            protocol telling the compositor what type of content is being d=
isplayed. <tt class=3D"docutils literal">auto</tt>
            (default) will automatically switch between telling the composi=
tor the content
            is a photo, video or possibly none depending on internal heuris=
tics.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-wayland-disabl=
e-vsync"><span class=3D"pre">--wayland-disable-vsync=3D&lt;yes|no&gt;</span=
><a href=3D"https://mpv.io/manual/master/#options-wayland-disable-vsync" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Disable mpv's internal vsync for Wayland-based video output=
 (default: no).
            This is mainly useful for benchmarking wayland VOs when combine=
d with
            <tt class=3D"docutils literal"><span class=3D"pre">video-sync=
=3Ddisplay-desync</span></tt>, <tt class=3D"docutils literal"><span class=
=3D"pre">--no-audio</span></tt>, and <tt class=3D"docutils literal"><span c=
lass=3D"pre">--untimed=3Dyes</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-wayland-edge-p=
ixels-pointer"><span class=3D"pre">--wayland-edge-pixels-pointer=3D&lt;valu=
e&gt;</span><a href=3D"https://mpv.io/manual/master/#options-wayland-edge-p=
ixels-pointer" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Defines the size of an edge border (default: 16) to initiat=
e client side
            resize events in the wayland contexts with the mouse. This is o=
nly active if
            there are no server side decorations from the compositor.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-wayland-edge-p=
ixels-touch"><span class=3D"pre">--wayland-edge-pixels-touch=3D&lt;value&gt=
;</span><a href=3D"https://mpv.io/manual/master/#options-wayland-edge-pixel=
s-touch" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Defines the size of an edge border (default: 32) to initiat=
e client side
            resizes events in the wayland contexts with touch events.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-spirv-compiler=
"><span class=3D"pre">--spirv-compiler=3D&lt;compiler&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-spirv-compiler" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Controls which compiler is used to trans=
late GLSL to SPIR-V. This is
            (currently) only relevant for <tt class=3D"docutils literal"><s=
pan class=3D"pre">--gpu-api=3Dvulkan</span></tt> and <cite>--gpu-api=3Dd3d1=
1</cite>.
            The possible choices are currently only:</p>
            <dl class=3D"docutils">
            <dt>auto</dt>
            <dd>Use the first available compiler. (Default)</dd>
            <dt>shaderc</dt>
            <dd>Use libshaderc, which is an API wrapper around glslang. Thi=
s is
            generally the most preferred, if available.</dd>
            </dl>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This option is deprecated, since there is onl=
y one reasonable value.
            It may be removed in the future.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-glsl-shader"><=
span class=3D"pre">--glsl-shader=3D&lt;file&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-glsl-shader" class=3D"anchor fa fa-link"></a></=
tt>, <tt class=3D"docutils literal" id=3D"options-glsl-shaders"><span class=
=3D"pre">--glsl-shaders=3D&lt;file-list&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-glsl-shaders" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Custom GLSL hooks. These are a flexible =
way to add custom fragment shaders,
            which can be injected at almost arbitrary points in the renderi=
ng pipeline,
            and access all previous intermediate textures.</p>
            <p>Each use of the <tt class=3D"docutils literal"><span class=
=3D"pre">--glsl-shader</span></tt> option will add another file to the
            internal list of shaders, while <tt class=3D"docutils literal">=
<span class=3D"pre">--glsl-shaders</span></tt> takes a list of files,
            and overwrites the internal list with it. The latter is a path =
list option
            (see <a class=3D"reference internal" href=3D"https://mpv.io/man=
ual/master/#list-options">List Options</a> for details).</p>
            <div class=3D"admonition admonition-warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">The syntax is not stable yet and may change a=
ny time.</p>
            </div>
            <p>The general syntax of a user shader looks like this:</p>
            <pre class=3D"literal-block">//!METADATA ARGS...
//!METADATA ARGS...

vec4 hook() {
   ...
   return something;
}

//!METADATA ARGS...
//!METADATA ARGS...

...
</pre>
            <p>Each section of metadata, along with the non-metadata lines =
after it,
            defines a single block. There are currently two types of blocks=
, HOOKs and
            TEXTUREs.</p>
            <p>A <tt class=3D"docutils literal">TEXTURE</tt> block can set =
the following options:</p>
            <dl class=3D"docutils">
            <dt>TEXTURE &lt;name&gt; (required)</dt>
            <dd>The name of this texture. Hooks can then bind the texture u=
nder this
            name using BIND. This must be the first option of the texture b=
lock.</dd>
            <dt>SIZE &lt;width&gt; [&lt;height&gt;] [&lt;depth&gt;] (requir=
ed)</dt>
            <dd>The dimensions of the texture. The height and depth are opt=
ional. The
            type of texture (1D, 2D or 3D) depends on the number of compone=
nts
            specified.</dd>
            <dt>FORMAT &lt;name&gt; (required)</dt>
            <dd><p class=3D"first">The texture format for the samples. Supp=
orted texture formats are listed
            in debug logging when the <tt class=3D"docutils literal">gpu</t=
t> VO is initialized (look for
            <tt class=3D"docutils literal">Texture formats:</tt>). Usually,=
 this follows OpenGL naming conventions.
            For example, <tt class=3D"docutils literal">rgb16</tt> provides=
 3 channels with normalized 16 bit
            components. One oddity are float formats: for example, <tt clas=
s=3D"docutils literal">rgba16f</tt> has
            16 bit internal precision, but the texture data is provided as =
32 bit
            floats, and the driver converts the data on texture upload.</p>
            <p class=3D"last">Although format names follow a common naming =
convention, not all of them
            are available on all hardware, drivers, GL versions, and so on.=
</p>
            </dd>
            <dt>FILTER &lt;LINEAR|NEAREST&gt;</dt>
            <dd>The min/magnification filter used when sampling from this t=
exture.</dd>
            <dt>BORDER &lt;CLAMP|REPEAT|MIRROR&gt;</dt>
            <dd>The border wrapping mode used when sampling from this textu=
re.</dd>
            </dl>
            <p>Following the metadata is a string of bytes in hexadecimal n=
otation that
            define the raw texture data, corresponding to the format specif=
ied by
            <cite>FORMAT</cite>, on a single line with no extra whitespace.=
</p>
            <p>A <tt class=3D"docutils literal">HOOK</tt> block can set the=
 following options:</p>
            <dl class=3D"docutils">
            <dt>HOOK &lt;name&gt; (required)</dt>
            <dd>The texture which to hook into. May occur multiple times wi=
thin a
            metadata block, up to a predetermined limit. See below for a li=
st of
            hookable textures.</dd>
            <dt>DESC &lt;title&gt;</dt>
            <dd>User-friendly description of the pass. This is the name use=
d when
            representing this shader in the list of passes for property
            <cite>vo-passes</cite>.</dd>
            <dt>BIND &lt;name&gt;</dt>
            <dd>Loads a texture (either coming from mpv or from a <tt class=
=3D"docutils literal">TEXTURE</tt> block)
            and makes it available to the pass. When binding textures from =
mpv,
            this will also set up macros to facilitate accessing it properl=
y. See
            below for a list. By default, no textures are bound. The specia=
l name
            HOOKED can be used to refer to the texture that triggered this =
pass.</dd>
            <dt>SAVE &lt;name&gt;</dt>
            <dd>Gives the name of the texture to save the result of this pa=
ss into. By
            default, this is set to the special name HOOKED which has the e=
ffect of
            overwriting the hooked texture.</dd>
            <dt>WIDTH &lt;szexpr&gt;, HEIGHT &lt;szexpr&gt;</dt>
            <dd>Specifies the size of the resulting texture for this pass. =
<tt class=3D"docutils literal">szexpr</tt>
            refers to an expression in RPN (reverse polish notation), using=
 the
            operators + - * / &gt; &lt; !, floating point literals, and ref=
erences to
            sizes of existing texture (such as MAIN.width or CHROMA.height)=
,
            OUTPUT, or NATIVE_CROPPED (size of an input texture cropped aft=
er
            pan-and-scan, video-align-x/y, video-pan-x/y, etc. and possibly
            prescaled). By default, these are set to HOOKED.w and HOOKED.h,
            espectively.</dd>
            <dt>WHEN &lt;szexpr&gt;</dt>
            <dd>Specifies a condition that needs to be true (non-zero) for =
the shader
            stage to be evaluated. If it fails, it will silently be omitted=
. (Note
            that a shader stage like this which has a dependency on an opti=
onal
            hook point can still cause that hook point to be saved, which h=
as some
            minor overhead)</dd>
            <dt>OFFSET &lt;ox oy | ALIGN&gt;</dt>
            <dd><p class=3D"first">Indicates a pixel shift (offset) introdu=
ced by this pass. These pixel
            offsets will be accumulated and corrected during the next scali=
ng pass
            (<tt class=3D"docutils literal">cscale</tt> or <tt class=3D"doc=
utils literal">scale</tt>). The default values are 0 0 which correspond
            to no shift. Note that offsets are ignored when not overwriting=
 the
            hooked texture.</p>
            <p class=3D"last">A special value of <tt class=3D"docutils lite=
ral">ALIGN</tt> will attempt to fix existing offset of
            HOOKED by align it with reference. It requires HOOKED to be res=
izable
            (see below). It works transparently with fragment shader. For c=
ompute
            shader, the predefined <tt class=3D"docutils literal">texmap</t=
t> macro is required to handle coordinate
            mapping.</p>
            </dd>
            <dt>COMPONENTS &lt;n&gt;</dt>
            <dd>Specifies how many components of this pass's output are rel=
evant and
            should be stored in the texture, up to 4 (rgba). By default, th=
is value
            is equal to the number of components in HOOKED.</dd>
            <dt>COMPUTE &lt;bw&gt; &lt;bh&gt; [&lt;tw&gt; &lt;th&gt;]</dt>
            <dd><p class=3D"first">Specifies that this shader should be tre=
ated as a compute shader, with
            the block size bw and bh. The compute shader will be dispatched=
 with
            however many blocks are necessary to completely tile over the o=
utput.
            Within each block, there will be tw*th threads, forming a singl=
e work
            group. In other words: tw and th specify the work group size, w=
hich can
            be different from the block size. So for example, a compute sha=
der with
            bw, bh =3D 32 and tw, th =3D 8 running on a 500x500 texture wou=
ld dispatch
            16x16 blocks (rounded up), each with 8x8 threads.</p>
            <p class=3D"last">Compute shaders in mpv are treated a bit diff=
erent from fragment
            shaders. Instead of defining a <tt class=3D"docutils literal">v=
ec4 hook</tt> that produces an output
            sample, you directly define <tt class=3D"docutils literal">void=
 hook</tt> which writes to a fixed
            writeonly image unit named <tt class=3D"docutils literal">out_i=
mage</tt> (this is bound by mpv) using
            <cite>imageStore</cite>. To help translate texture coordinates =
in the absence of
            vertices, mpv provides a special function <tt class=3D"docutils=
 literal">NAME_map(id)</tt> to map from
            the texel space of the output image to the texture coordinates =
for all
            bound textures. In particular, <tt class=3D"docutils literal">N=
AME_pos</tt> is equivalent to
            <tt class=3D"docutils literal">NAME_map(gl_GlobalInvocationID)<=
/tt>, although using this only really
            makes sense if (tw,th) =3D=3D (bw,bh).</p>
            </dd>
            </dl>
            <p>Each bound mpv texture (via <tt class=3D"docutils literal">B=
IND</tt>) will make available the following
            definitions to that shader pass, where NAME is the name of the =
bound
            texture:</p>
            <dl class=3D"docutils">
            <dt>vec4 NAME_tex(vec2 pos)</dt>
            <dd>The sampling function to use to access the texture at a cer=
tain spot
            (in texture coordinate space, range [0,1]). This takes care of =
any
            necessary normalization conversions.</dd>
            <dt>vec4 NAME_texOff(vec2 offset)</dt>
            <dd>Sample the texture at a certain offset in pixels. This work=
s like
            NAME_tex but additionally takes care of necessary rotations, so=
 that
            sampling at e.g. vec2(-1,0) is always one pixel to the left.</d=
d>
            <dt>vec2 NAME_pos</dt>
            <dd>The local texture coordinate of that texture, range [0,1].<=
/dd>
            <dt>vec2 NAME_size</dt>
            <dd>The (rotated) size in pixels of the texture.</dd>
            <dt>mat2 NAME_rot</dt>
            <dd>The rotation matrix associated with this texture. (Rotates =
pixel space
            to texture coordinates)</dd>
            <dt>vec2 NAME_pt</dt>
            <dd>The (unrotated) size of a single pixel, range [0,1].</dd>
            <dt>float NAME_mul</dt>
            <dd>The coefficient that needs to be multiplied into the textur=
e contents
            in order to normalize it to the range [0,1].</dd>
            <dt>sampler NAME_raw</dt>
            <dd>The raw bound texture itself. The use of this should be avo=
ided unless
            absolutely necessary.</dd>
            </dl>
            <p>Normally, users should use either NAME_tex or NAME_texOff to=
 read from the
            texture. For some shaders however , it can be better for perfor=
mance to do
            custom sampling from NAME_raw, in which case care needs to be t=
aken to
            respect NAME_mul and NAME_rot.</p>
            <p>In addition to these parameters, the following uniforms are =
also globally
            available:</p>
            <dl class=3D"docutils">
            <dt>float random</dt>
            <dd>A random number in the range [0-1], different per frame.</d=
d>
            <dt>int frame</dt>
            <dd>A simple count of frames rendered, increases by one per fra=
me and never
            resets (regardless of seeks).</dd>
            <dt>vec2 input_size</dt>
            <dd>The size in pixels of the input image (possibly cropped and=
 prescaled).</dd>
            <dt>vec2 target_size</dt>
            <dd>The size in pixels of the visible part of the scaled (and p=
ossibly
            cropped) image.</dd>
            <dt>vec2 tex_offset</dt>
            <dd>Texture offset introduced by user shaders or options like p=
anscan, video-align-x/y, video-pan-x/y.</dd>
            </dl>
            <p>Internally, vo_gpu may generate any number of the following =
textures.
            Whenever a texture is rendered and saved by vo_gpu, all of the =
passes
            that have hooked into it will run, in the order they were added=
 by the
            user. This is a list of the legal hook points:</p>
            <dl class=3D"docutils">
            <dt>RGB, LUMA, CHROMA, ALPHA, XYZ (resizable)</dt>
            <dd>Source planes (raw). Which of these fire depends on the ima=
ge format of
            the source.</dd>
            <dt>CHROMA_SCALED, ALPHA_SCALED (fixed)</dt>
            <dd>Source planes (upscaled). These only fire on subsampled con=
tent.</dd>
            <dt>NATIVE (resizable)</dt>
            <dd>The combined image, in the source colorspace, before conver=
sion to RGB.</dd>
            <dt>MAINPRESUB (resizable)</dt>
            <dd>The image, after conversion to RGB, but before
            <tt class=3D"docutils literal"><span class=3D"pre">--blend-subt=
itles=3Dvideo</span></tt> is applied.</dd>
            <dt>MAIN (resizable)</dt>
            <dd>The main image, after conversion to RGB but before upscalin=
g.</dd>
            <dt>LINEAR (fixed)</dt>
            <dd>Linear light image, before scaling. This only fires when
            <tt class=3D"docutils literal"><span class=3D"pre">--linear-ups=
caling</span></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--li=
near-downscaling</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">--sigmoid-up=
scaling</span></tt> is in effect.</dd>
            <dt>SIGMOID (fixed)</dt>
            <dd>Sigmoidized light, before scaling. This only fires when
            <tt class=3D"docutils literal"><span class=3D"pre">--sigmoid-up=
scaling</span></tt> is in effect.</dd>
            <dt>PREKERNEL (fixed)</dt>
            <dd>The image immediately before the scaler kernel runs.</dd>
            <dt>POSTKERNEL (fixed)</dt>
            <dd>The image immediately after the scaler kernel runs.</dd>
            <dt>SCALED (fixed)</dt>
            <dd>The final upscaled image, before color management.</dd>
            <dt>OUTPUT (fixed)</dt>
            <dd>The final output image, after color management but before d=
ithering and
            drawing to screen.</dd>
            </dl>
            <p class=3D"last">Only the textures labelled with <tt class=3D"=
docutils literal">resizable</tt> may be transformed by the
            pass. When overwriting a texture marked <tt class=3D"docutils l=
iteral">fixed</tt>, the WIDTH, HEIGHT and
            OFFSET must be left at their default values.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-glsl-shader"><=
span class=3D"pre">--glsl-shader=3D&lt;file&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-glsl-shader" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>CLI/config file only alias for <tt class=3D"docutils litera=
l"><span class=3D"pre">--glsl-shaders-append</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-glsl-shader-op=
ts"><span class=3D"pre">--glsl-shader-opts=3Dparam1=3Dvalue1,param2=3Dvalue=
2,...</span><a href=3D"https://mpv.io/manual/master/#options-glsl-shader-op=
ts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specifies the options to use for tunable shader parameters.=
 You can target
            specific named shaders by prefixing the shader name with a <tt =
class=3D"docutils literal">/</tt>, e.g.
            <tt class=3D"docutils literal">shader/param=3Dvalue</tt>. Witho=
ut a prefix, parameters affect all shaders.
            The shader name is the base part of the shader filename, withou=
t the
            extension. (<tt class=3D"docutils literal"><span class=3D"pre">=
--vo=3Dgpu-next</span></tt> only)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-deband"><span =
class=3D"pre">--deband</span><a href=3D"https://mpv.io/manual/master/#optio=
ns-deband" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enable the debanding algorithm. This greatly reduces the am=
ount of visible
            banding, blocking and other quantization artifacts, at the expe=
nse of
            very slightly blurring some of the finest details. In practice,=
 it's
            virtually always an improvement - the only reason to disable it=
 would be
            for performance.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-deband-iterati=
ons"><span class=3D"pre">--deband-iterations=3D&lt;1..16&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-deband-iterations" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>The number of debanding steps to perform per sample. Each s=
tep reduces a
            bit more banding, but takes time to compute. Note that the stre=
ngth of each
            step falls off very quickly, so high numbers (&gt;4) are practi=
cally useless.
            (Default 1)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-deband-thresho=
ld"><span class=3D"pre">--deband-threshold=3D&lt;0..4096&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-deband-threshold" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>The debanding filter's cut-off threshold. Higher numbers in=
crease the
            debanding strength dramatically but progressively diminish imag=
e details.
            (Default 32)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-deband-range">=
<span class=3D"pre">--deband-range=3D&lt;1..64&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-deband-range" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd><p class=3D"first">The debanding filter's initial radius. T=
he radius increases linearly for
            each iteration. A higher radius will find more gradients, but a=
 lower
            radius will smooth more aggressively. (Default 16)</p>
            <p class=3D"last">If you increase the <tt class=3D"docutils lit=
eral"><span class=3D"pre">--deband-iterations</span></tt>, you should proba=
bly decrease
            this to compensate.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-deband-grain">=
<span class=3D"pre">--deband-grain=3D&lt;0..4096&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-deband-grain" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Add some extra noise to the image. This significantly helps=
 cover up
            remaining quantization artifacts. Higher numbers add more noise=
. (Default
            48)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-corner-roundin=
g"><span class=3D"pre">--corner-rounding=3D&lt;0..1&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-corner-rounding" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>If set to a value above 0.0, the output will be rendered wi=
th rounded
            corners, as if an alpha transparency mask had been applied. The=
 value
            indicates the relative fraction of the side length to round - a=
 value of
            1.0 rounds the corners as much as possible. (<tt class=3D"docut=
ils literal"><span class=3D"pre">--vo=3Dgpu-next</span></tt> only)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-sharpen"><span=
 class=3D"pre">--sharpen=3D&lt;value&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-sharpen" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If set to a value other than 0, enable an unsharp masking f=
ilter. Positive
            values will sharpen the image (but add more ringing and aliasin=
g). Negative
            values will blur the image. If your GPU is powerful enough, con=
sider
            alternatives like the <tt class=3D"docutils literal">ewa_lanczo=
ssharp</tt> scale filter, or the
            <tt class=3D"docutils literal"><span class=3D"pre">--scale-blur=
</span></tt> option. (Only for <tt class=3D"docutils literal"><span class=
=3D"pre">--vo=3Dgpu</span></tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-glfinis=
h"><span class=3D"pre">--opengl-glfinish</span><a href=3D"https://mpv.io/ma=
nual/master/#options-opengl-glfinish" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Call <tt class=3D"docutils literal">glFinish()</tt> before =
swapping buffers (default: disabled). Slower,
            but might improve results when doing framedropping. Can complet=
ely ruin
            performance. The details depend entirely on the OpenGL driver.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-waitvsy=
nc"><span class=3D"pre">--opengl-waitvsync</span><a href=3D"https://mpv.io/=
manual/master/#options-opengl-waitvsync" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Call <tt class=3D"docutils literal">glXW=
aitVideoSyncSGI</tt> after each buffer swap (default: disabled).
            This may or may not help with video timing accuracy and frame d=
rop. It's
            possible that this makes video output slower, or has no effect =
at all.</p>
            <p class=3D"last">X11/GLX only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-dwmflus=
h"><span class=3D"pre">--opengl-dwmflush=3D&lt;no|windowed|yes|auto&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-opengl-dwmflush" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Calls <tt class=3D"docutils literal">Dwm=
Flush</tt> after swapping buffers on Windows (default: auto). It
            also sets <tt class=3D"docutils literal">SwapInterval(0)</tt> t=
o ignore the OpenGL timing. Values are: no
            (disabled), windowed (only in windowed mode), yes (also in full=
 screen).</p>
            <p>The value <tt class=3D"docutils literal">auto</tt> will try =
to determine whether the compositor is active,
            and calls <tt class=3D"docutils literal">DwmFlush</tt> only if =
it seems to be.</p>
            <p>This may help to get more consistent frame intervals, especi=
ally with
            high-fps clips - which might also reduce dropped frames. Typica=
lly, a value
            of <tt class=3D"docutils literal">windowed</tt> should be enoug=
h, since full screen may bypass the DWM.</p>
            <p class=3D"last">Windows only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-angle-d3d11-fe=
ature-level"><span class=3D"pre">--angle-d3d11-feature-level=3D&lt;11_0|10_=
1|10_0|9_3&gt;</span><a href=3D"https://mpv.io/manual/master/#options-angle=
-d3d11-feature-level" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Selects a specific feature level when us=
ing the ANGLE backend with D3D11.
            By default, the highest available feature level is used. This o=
ption can be
            used to select a lower feature level, which is mainly useful fo=
r debugging.
            Note that OpenGL ES 3.0 is only supported at feature level 10_1=
 or higher.
            Most extended OpenGL features will not work at lower feature le=
vels
            (similar to <tt class=3D"docutils literal"><span class=3D"pre">=
--gpu-dumb-mode</span></tt>).</p>
            <p class=3D"last">Windows with ANGLE only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-angle-d3d11-wa=
rp"><span class=3D"pre">--angle-d3d11-warp=3D&lt;yes|no|auto&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-angle-d3d11-warp" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Use WARP (Windows Advanced Rasterization=
 Platform) when using the ANGLE
            backend with D3D11 (default: auto). This is a high performance =
software
            renderer. By default, it is used when the Direct3D hardware doe=
s not
            support Direct3D 11 feature level 9_3. While the extended OpenG=
L features
            will work with WARP, they can be very slow.</p>
            <p class=3D"last">Windows with ANGLE only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-angle-egl-wind=
owing"><span class=3D"pre">--angle-egl-windowing=3D&lt;yes|no|auto&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-angle-egl-windowing" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Use ANGLE's built in EGL windowing funct=
ions to create a swap chain
            (default: auto). If this is set to <tt class=3D"docutils litera=
l">no</tt> and the D3D11 renderer is in use,
            ANGLE's built in swap chain will not be used and a custom swap =
chain that
            is optimized for video rendering will be created instead. If se=
t to
            <tt class=3D"docutils literal">auto</tt>, a custom swap chain w=
ill be used for D3D11 and the built in swap
            chain will be used for D3D9. This option is mainly for debuggin=
g purposes,
            in case the custom swap chain has poor performance or does not =
work.</p>
            <p>If set to <tt class=3D"docutils literal">yes</tt>, the <tt c=
lass=3D"docutils literal"><span class=3D"pre">--angle-max-frame-latency</sp=
an></tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">--angle-swap=
chain-length</span></tt> and <tt class=3D"docutils literal"><span class=3D"=
pre">--angle-flip</span></tt> options will have no
            effect.</p>
            <p class=3D"last">Windows with ANGLE only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-angle-flip"><s=
pan class=3D"pre">--angle-flip=3D&lt;yes|no&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-angle-flip" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd><p class=3D"first">Enable flip-model presentation, which av=
oids unnecessarily copying the
            backbuffer by sharing surfaces with the DWM (default: yes). Thi=
s may cause
            performance issues with older drivers. If flip-model presentati=
on is not
            supported (for example, on Windows 7 without the platform updat=
e), mpv will
            automatically fall back to the older bitblt presentation model.=
</p>
            <p>If set to <tt class=3D"docutils literal">no</tt>, the <tt cl=
ass=3D"docutils literal"><span class=3D"pre">--angle-swapchain-length</span=
></tt> option will have no
            effect.</p>
            <p class=3D"last">Windows with ANGLE only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-angle-renderer=
"><span class=3D"pre">--angle-renderer=3D&lt;d3d9|d3d11|auto&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-angle-renderer" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Forces a specific renderer when using th=
e ANGLE backend (default: auto). In
            auto mode this will pick D3D11 for systems that support Direct3=
D 11 feature
            level 9_3 or higher, and D3D9 otherwise. This option is mainly =
for
            debugging purposes. Normally there is no reason to force a spec=
ific
            renderer, though <tt class=3D"docutils literal"><span class=3D"=
pre">--angle-renderer=3Dd3d9</span></tt> may give slightly better
            performance on old hardware. Note that the D3D9 renderer only s=
upports
            OpenGL ES 2.0, so most extended OpenGL features will not work i=
f this
            renderer is selected (similar to <tt class=3D"docutils literal"=
><span class=3D"pre">--gpu-dumb-mode</span></tt>).</p>
            <p class=3D"last">Windows with ANGLE only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-macos-force-de=
dicated-gpu"><span class=3D"pre">--macos-force-dedicated-gpu=3D&lt;yes|no&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-macos-force-dedic=
ated-gpu" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Deactivates the automatic graphics switc=
hing and forces the dedicated GPU.
            (default: no)</p>
            <p class=3D"last">macOS only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cocoa-cb-sw-re=
nderer"><span class=3D"pre">--cocoa-cb-sw-renderer=3D&lt;yes|no|auto&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#options-cocoa-cb-sw-renderer" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Use the Apple Software Renderer when usi=
ng cocoa-cb (default: auto). If set
            to <tt class=3D"docutils literal">no</tt> the software renderer=
 is never used and instead fails when a the
            usual pixel format could not be created, <tt class=3D"docutils =
literal">yes</tt> will always only use the
            software renderer, and <tt class=3D"docutils literal">auto</tt>=
 only falls back to the software renderer
            when the usual pixel format couldn't be created.</p>
            <p class=3D"last">macOS only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cocoa-cb-10bit=
-context"><span class=3D"pre">--cocoa-cb-10bit-context=3D&lt;yes|no&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-cocoa-cb-10bit-context"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Creates a 10bit capable pixel format for=
 the context creation (default: yes).
            Instead of 8bit integer framebuffer a 16bit half-float framebuf=
fer is
            requested.</p>
            <p class=3D"last">macOS only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-macos-title-ba=
r-appearance"><span class=3D"pre">--macos-title-bar-appearance=3D&lt;appear=
ance&gt;</span><a href=3D"https://mpv.io/manual/master/#options-macos-title=
-bar-appearance" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Sets the appearance of the title bar (de=
fault: auto). Not all combinations
            of appearances and <tt class=3D"docutils literal"><span class=
=3D"pre">--macos-title-bar-material</span></tt> materials make sense or
            are unique. Appearances that are not supported by you current m=
acOS version
            fall back to the default value.
            macOS and cocoa-cb only</p>
            <p><tt class=3D"docutils literal">&lt;appearance&gt;</tt> can b=
e one of the following:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">Detects the system settings and sets the title
            bar appearance appropriately. On macOS 10.14 it
            also detects run time changes.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">aqua:</th><td clas=
s=3D"field-body">The standard macOS Light appearance.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">darkAqua:</th><td =
class=3D"field-body">The standard macOS Dark appearance. (macOS 10.14+)</td=
>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vibrantLight:</th>=
<td class=3D"field-body">Light vibrancy appearance with.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">vibrantDark:</th><=
td class=3D"field-body">Dark vibrancy appearance with.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">aqua=
HighContrast:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">Lig=
ht Accessibility appearance. (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">dark=
AquaHighContrast:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">Dar=
k Accessibility appearance. (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">vibr=
antLightHighContrast:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">Lig=
ht vibrancy Accessibility appearance.
            (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">vibr=
antDarkHighContrast:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">Dar=
k vibrancy Accessibility appearance.
            (macOS 10.14+)</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-macos-title-ba=
r-material"><span class=3D"pre">--macos-title-bar-material=3D&lt;material&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-macos-title-bar-m=
aterial" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Sets the material of the title bar (defa=
ult: titlebar). All deprecated
            materials should not be used on macOS 10.14+ because their func=
tionality
            is not guaranteed. Not all combinations of materials and
            <tt class=3D"docutils literal"><span class=3D"pre">--macos-titl=
e-bar-appearance</span></tt> appearances make sense or are unique.
            Materials that are not supported by you current macOS version f=
all back to
            the default value.
            macOS and cocoa-cb only</p>
            <p><tt class=3D"docutils literal">&lt;material&gt;</tt> can be =
one of the following:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">titlebar:</th><td =
class=3D"field-body">The standard macOS title bar material.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">selection:</th><td=
 class=3D"field-body">The standard macOS selection material.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">menu:</th><td clas=
s=3D"field-body">The standard macOS menu material. (macOS 10.11+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">popover:</th><td c=
lass=3D"field-body">The standard macOS popover material. (macOS 10.11+)</td=
>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">sidebar:</th><td c=
lass=3D"field-body">The standard macOS sidebar material. (macOS 10.11+)</td=
>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">headerView:</th><t=
d class=3D"field-body">The standard macOS header view material.
            (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">sheet:</th><td cla=
ss=3D"field-body">The standard macOS sheet material. (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">wind=
owBackground:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">The=
 standard macOS window background material.
            (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">hudWindow:</th><td=
 class=3D"field-body">The standard macOS hudWindow material. (macOS 10.14+)=
</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">fullScreen:</th><t=
d class=3D"field-body">The standard macOS full screen material.
            (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">toolTip:</th><td c=
lass=3D"field-body">The standard macOS tool tip material. (macOS 10.14+)</t=
d>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">cont=
entBackground:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">The=
 standard macOS content background material.
            (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">unde=
rWindowBackground:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">The=
 standard macOS under window background material.
            (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">unde=
rPageBackground:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">The=
 standard macOS under page background material.
            (deprecated in macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">dark:</th><td clas=
s=3D"field-body">The standard macOS dark material.
            (deprecated in macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">light:</th><td cla=
ss=3D"field-body">The standard macOS light material.
            (macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">mediumLight:</th><=
td class=3D"field-body">The standard macOS mediumLight material.
            (macOS 10.11+, deprecated in macOS 10.14+)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">ultraDark:</th><td=
 class=3D"field-body">The standard macOS ultraDark material.
            (macOS 10.11+ deprecated in macOS 10.14+)</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-macos-title-ba=
r-color"><span class=3D"pre">--macos-title-bar-color=3D&lt;color&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#options-macos-title-bar-color" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Sets the color of the title bar (default: completely transp=
arent). Is
            influenced by <tt class=3D"docutils literal"><span class=3D"pre=
">--macos-title-bar-appearance</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">--macos-titl=
e-bar-material</span></tt>.
            See <tt class=3D"docutils literal"><span class=3D"pre">--sub-co=
lor</span></tt> for color syntax.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-macos-fs-anima=
tion-duration"><span class=3D"pre">--macos-fs-animation-duration=3D&lt;defa=
ult|0-1000&gt;</span><a href=3D"https://mpv.io/manual/master/#options-macos=
-fs-animation-duration" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Sets the fullscreen resize animation duration in ms (defaul=
t: default).
            The default value is slightly less than the system's animation =
duration
            (500ms) to prevent some problems when the end of an async anima=
tion happens
            at the same time as the end of the system wide fullscreen anima=
tion. Setting
            anything higher than 500ms will only prematurely cancel the res=
ize animation
            after the system wide animation ended. The upper limit is still=
 set at
            1000ms since it's possible that Apple or the user changes the s=
ystem
            defaults. Anything higher than 1000ms though seems too long and=
 shouldn't be
            set anyway.
            (macOS and cocoa-cb only)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-macos-app-acti=
vation-policy"><span class=3D"pre">--macos-app-activation-policy=3D&lt;regu=
lar|accessory|prohibited&gt;</span><a href=3D"https://mpv.io/manual/master/=
#options-macos-app-activation-policy" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Changes the App activation policy. With =
accessory the mpv icon in the Dock
            can be hidden. (default: regular)</p>
            <p class=3D"last">macOS only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-macos-geometry=
-calculation"><span class=3D"pre">--macos-geometry-calculation=3D&lt;visibl=
e|whole&gt;</span><a href=3D"https://mpv.io/manual/master/#options-macos-ge=
ometry-calculation" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This changes the rectangle which is used=
 to calculate the screen position
            and size of the window (default: visible). <tt class=3D"docutil=
s literal">visible</tt> takes the the menu
            bar and Dock into account and the window is only positioned/siz=
ed within the
            visible screen frame rectangle, <tt class=3D"docutils literal">=
whole</tt> takes the whole screen frame
            rectangle and ignores the menu bar and Dock. Other previous res=
trictions
            still apply, like the window can't be placed on top of the menu=
 bar etc.</p>
            <p class=3D"last">macOS only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-android-surfac=
e-size"><span class=3D"pre">--android-surface-size=3D&lt;WxH&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-android-surface-size" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set dimensions of the rendering surface =
used by the Android gpu context.
            Needs to be set by the embedding application if the dimensions =
change during
            runtime (i.e. if the device is rotated), via the surfaceChanged=
 callback.</p>
            <p class=3D"last">Android with <tt class=3D"docutils literal"><=
span class=3D"pre">--gpu-context=3Dandroid</span></tt> only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-sw"><span =
class=3D"pre">--gpu-sw</span><a href=3D"https://mpv.io/manual/master/#optio=
ns-gpu-sw" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Continue even if a software renderer is detected.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-context"><=
span class=3D"pre">--gpu-context=3D&lt;sys&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-gpu-context" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd><p class=3D"first">The value <tt class=3D"docutils literal"=
>auto</tt> (the default) selects the GPU context. You can also pass
            <tt class=3D"docutils literal">help</tt> to get a complete list=
 of compiled in backends (sorted by
            autoprobe order).</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>auto-select (default)</dd>
            <dt>cocoa</dt>
            <dd>Cocoa/macOS (deprecated, use --vo=3Dlibmpv instead)</dd>
            <dt>win</dt>
            <dd>Win32/WGL</dd>
            <dt>winvk</dt>
            <dd>VK_KHR_win32_surface</dd>
            <dt>angle</dt>
            <dd>Direct3D11 through the OpenGL ES translation layer ANGLE. T=
his supports
            almost everything the <tt class=3D"docutils literal">win</tt> b=
ackend does (if the ANGLE build is new
            enough).</dd>
            <dt>dxinterop (experimental)</dt>
            <dd>Win32, using WGL for rendering and Direct3D 9Ex for present=
ation. Works
            on Nvidia and AMD. Newer Intel chips with the latest drivers ma=
y also
            work.</dd>
            <dt>d3d11</dt>
            <dd>Win32, with native Direct3D 11 rendering.</dd>
            <dt>x11</dt>
            <dd>X11/GLX (deprecated/legacy, EGL is preferred these days)</d=
d>
            <dt>x11vk</dt>
            <dd>VK_KHR_xlib_surface</dd>
            <dt>wayland</dt>
            <dd>Wayland/EGL</dd>
            <dt>waylandvk</dt>
            <dd>VK_KHR_wayland_surface</dd>
            <dt>drm</dt>
            <dd>DRM/EGL</dd>
            <dt>displayvk</dt>
            <dd>VK_KHR_display. This backend is roughly the Vukan equivalen=
t of
            DRM/EGL, allowing for direct rendering via Vulkan without a dis=
play
            manager.</dd>
            <dt>x11egl</dt>
            <dd>X11/EGL</dd>
            <dt>android</dt>
            <dd>Android/EGL. Requires <tt class=3D"docutils literal"><span =
class=3D"pre">--wid</span></tt> be set to an <tt class=3D"docutils literal"=
>android.view.Surface</tt>.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-api"><span=
 class=3D"pre">--gpu-api=3D&lt;type&gt;</span><a href=3D"https://mpv.io/man=
ual/master/#options-gpu-api" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Controls which type of graphics APIs wil=
l be accepted:</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Use any available API (default)</dd>
            <dt>opengl</dt>
            <dd>Allow only OpenGL (requires OpenGL 2.1+ or GLES 2.0+)</dd>
            <dt>vulkan</dt>
            <dd>Allow only Vulkan (requires a valid/working <tt class=3D"do=
cutils literal"><span class=3D"pre">--spirv-compiler</span></tt>)</dd>
            <dt>d3d11</dt>
            <dd>Allow only <tt class=3D"docutils literal"><span class=3D"pr=
e">--gpu-context=3Dd3d11</span></tt></dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-es"><sp=
an class=3D"pre">--opengl-es=3D&lt;mode&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-opengl-es" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Controls which type of OpenGL context wi=
ll be accepted:</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Allow all types of OpenGL (default)</dd>
            <dt>yes</dt>
            <dd>Only allow GLES</dd>
            <dt>no</dt>
            <dd>Only allow desktop/core GL</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-fbo-format"><s=
pan class=3D"pre">--fbo-format=3D&lt;fmt&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#options-fbo-format" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd><p class=3D"first">Selects the internal format of textures =
used for FBOs. The format can
            influence performance and quality of the video output. <tt clas=
s=3D"docutils literal">fmt</tt> can be one
            of: rgb8, rgb10, rgb10_a2, rgb16, rgb16f, rgb32f, rgba12, rgba1=
6, rgba16f,
            rgba16hf, rgba32f.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">auto<=
/tt>, which first attempts to utilize 16bit float
            (rgba16f, rgba16hf), and falls back to rgba16 if those are not =
available.
            Finally, attempts to utilize rgb10_a2 or rgba8 if all of the pr=
evious formats
            are not available.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gamma-factor">=
<span class=3D"pre">--gamma-factor=3D&lt;0.1..2.0&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-gamma-factor" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Set an additional raw gamma factor (defa=
ult: 1.0). If gamma is adjusted in
            other ways (like with the <tt class=3D"docutils literal"><span =
class=3D"pre">--gamma</span></tt> option or key bindings and the
            <tt class=3D"docutils literal">gamma</tt> property), the value =
is multiplied with the other gamma value.</p>
            <p class=3D"last">This option is deprecated and may be removed =
in the future.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gamma-auto"><s=
pan class=3D"pre">--gamma-auto</span><a href=3D"https://mpv.io/manual/maste=
r/#options-gamma-auto" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Automatically corrects the gamma value d=
epending on ambient lighting
            conditions (adding a gamma boost for bright rooms).</p>
            <p>This option is deprecated and may be removed in the future.<=
/p>
            <p class=3D"last">NOTE: Only implemented on macOS.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-image-lut"><sp=
an class=3D"pre">--image-lut=3D&lt;file&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-image-lut" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Specifies a custom LUT file (in Adobe .cube format) to appl=
y to the colors
            during image decoding. The exact interpretation of the LUT depe=
nds on
            the value of <tt class=3D"docutils literal"><span class=3D"pre"=
>--image-lut-type</span></tt>. (Only for <tt class=3D"docutils literal"><sp=
an class=3D"pre">--vo=3Dgpu-next</span></tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-image-lut-type=
"><span class=3D"pre">--image-lut-type=3D&lt;value&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-image-lut-type" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd><p class=3D"first">Controls the interpretation of color val=
ues fed to and from the LUT
            specified as <tt class=3D"docutils literal"><span class=3D"pre"=
>--image-lut</span></tt>. Valid values are:</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Chooses the interpretation of the LUT automatically from ta=
gged
            metadata, and otherwise falls back to <tt class=3D"docutils lit=
eral">native</tt>. (Default)</dd>
            <dt>native</dt>
            <dd>Applied to the raw image contents in its native colorspace,=
 before
            decoding to RGB. For example, for a HDR10 image, this would be =
fed
            PQ-encoded YCbCr values in the range 0.0 - 1.0.</dd>
            <dt>normalized</dt>
            <dd>Applied to the normalized RGB image contents, after decodin=
g from
            its native color encoding, but before linearization.</dd>
            <dt>conversion</dt>
            <dd>Fully replaces the color decoding. A LUT of this type shoul=
d ingest the
            image's native colorspace and output normalized non-linear RGB.=
</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-target-colorsp=
ace-hint"><span class=3D"pre">--target-colorspace-hint</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-target-colorspace-hint" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Automatically configure the output colorspace of the displa=
y to pass
            through the input values of the stream (e.g. for HDR passthroug=
h), if
            possible. Requires a supporting driver and <tt class=3D"docutil=
s literal"><span class=3D"pre">--vo=3Dgpu-next</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-target-prim"><=
span class=3D"pre">--target-prim=3D&lt;value&gt;</span><a href=3D"https://m=
pv.io/manual/master/#options-target-prim" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first">Specifies the primaries of the display. =
Video colors will be adapted to
            this colorspace when ICC color management is not being used. Va=
lid values
            are:</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Disable any adaptation, except for atypical color spaces. S=
pecifically,
            wide/unusual gamuts get automatically adapted to BT.709, while =
standard
            gamut (i.e. BT.601 and BT.709) content is not touched. (default=
)</dd>
            <dt>bt.470m</dt>
            <dd>ITU-R BT.470 M</dd>
            <dt>bt.601-525</dt>
            <dd>ITU-R BT.601 (525-line SD systems, eg. NTSC), SMPTE 170M/24=
0M</dd>
            <dt>bt.601-625</dt>
            <dd>ITU-R BT.601 (625-line SD systems, eg. PAL/SECAM), ITU-R BT=
.470 B/G</dd>
            <dt>bt.709</dt>
            <dd>ITU-R BT.709 (HD), IEC 61966-2-4 (sRGB), SMPTE RP177 Annex =
B</dd>
            <dt>bt.2020</dt>
            <dd>ITU-R BT.2020 (UHD)</dd>
            <dt>apple</dt>
            <dd>Apple RGB</dd>
            <dt>adobe</dt>
            <dd>Adobe RGB (1998)</dd>
            <dt>prophoto</dt>
            <dd>ProPhoto RGB (ROMM)</dd>
            <dt>cie1931</dt>
            <dd>CIE 1931 RGB (not to be confused with CIE XYZ)</dd>
            <dt>dci-p3</dt>
            <dd>DCI-P3 (Digital Cinema Colorspace), SMPTE RP431-2</dd>
            <dt>v-gamut</dt>
            <dd>Panasonic V-Gamut (VARICAM) primaries</dd>
            <dt>s-gamut</dt>
            <dd>Sony S-Gamut (S-Log) primaries</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-target-trc"><s=
pan class=3D"pre">--target-trc=3D&lt;value&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-target-trc" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Specifies the transfer characteristics (=
gamma) of the display. Video colors
            will be adjusted to this curve when ICC color management is not=
 being used.
            Valid values are:</p>
            <dl class=3D"docutils">
            <dt>auto</dt>
            <dd>Disable any adaptation, except for atypical transfers. Spec=
ifically,
            HDR or linear light source material gets automatically converte=
d to
            gamma 2.2, while SDR content is not touched. (default)</dd>
            <dt>bt.1886</dt>
            <dd>ITU-R BT.1886 curve (assuming infinite contrast)</dd>
            <dt>srgb</dt>
            <dd>IEC 61966-2-4 (sRGB)</dd>
            <dt>linear</dt>
            <dd>Linear light output</dd>
            <dt>gamma1.8</dt>
            <dd>Pure power curve (gamma 1.8), also used for Apple RGB</dd>
            <dt>gamma2.0</dt>
            <dd>Pure power curve (gamma 2.0)</dd>
            <dt>gamma2.2</dt>
            <dd>Pure power curve (gamma 2.2)</dd>
            <dt>gamma2.4</dt>
            <dd>Pure power curve (gamma 2.4)</dd>
            <dt>gamma2.6</dt>
            <dd>Pure power curve (gamma 2.6)</dd>
            <dt>gamma2.8</dt>
            <dd>Pure power curve (gamma 2.8), also used for BT.470-BG</dd>
            <dt>prophoto</dt>
            <dd>ProPhoto RGB (ROMM)</dd>
            <dt>pq</dt>
            <dd>ITU-R BT.2100 PQ (Perceptual quantizer) curve, aka SMPTE ST=
2084</dd>
            <dt>hlg</dt>
            <dd>ITU-R BT.2100 HLG (Hybrid Log-gamma) curve, aka ARIB STD-B6=
7</dd>
            <dt>v-log</dt>
            <dd>Panasonic V-Log (VARICAM) curve</dd>
            <dt>s-log1</dt>
            <dd>Sony S-Log1 curve</dd>
            <dt>s-log2</dt>
            <dd>Sony S-Log2 curve</dd>
            </dl>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">When using HDR output formats, mpv will encod=
e to the specified
            curve but it will not set any HDMI flags or other signalling th=
at might
            be required for the target device to correctly display the HDR =
signal.
            The user should independently guarantee this before using these=
 signal
            formats for display.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-target-peak"><=
span class=3D"pre">--target-peak=3D&lt;auto|nits&gt;</span><a href=3D"https=
://mpv.io/manual/master/#options-target-peak" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd><p class=3D"first">Specifies the measured peak brightness o=
f the output display, in cd/m^2
            (AKA nits). The interpretation of this brightness depends on th=
e configured
            <tt class=3D"docutils literal"><span class=3D"pre">--target-trc=
</span></tt>. In all cases, it imposes a limit on the signal values
            that will be sent to the display. If the source exceeds this br=
ightness
            level, a tone mapping filter will be inserted. For HLG, it has =
the
            additional effect of parametrizing the inverse OOTF, in order t=
o get
            colorimetrically consistent results with the mastering display.=
 For SDR, or
            when using an ICC (profile (<tt class=3D"docutils literal"><spa=
n class=3D"pre">--icc-profile</span></tt>), setting this to a value
            above 203 essentially causes the display to be treated as if it=
 were an HDR
            display in disguise. (See the note below)</p>
            <p>In <tt class=3D"docutils literal">auto</tt> mode (the defaul=
t), the chosen peak is an appropriate value
            based on the TRC in use. For SDR curves, it uses 203. For HDR c=
urves, it
            uses 203 * the transfer function's nominal peak.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p>When using an SDR transfer function, this is normally not ne=
eded, and
            setting it may lead to very unexpected results. The one time it=
 <em>is</em>
            useful is if you want to calibrate a HDR display using traditio=
nal
            transfer functions and calibration equipment. In such cases, yo=
u can
            set your HDR display to a high brightness such as 800 cd/m^2, a=
nd then
            calibrate it to a standard curve like gamma2.8. Setting this va=
lue to
            800 would then instruct mpv to essentially treat it as an HDR d=
isplay
            with the given peak. This may be a good alternative in environm=
ents
            where PQ or HLG input to the display is not possible, and makes=
 it
            possible to use HDR displays with mpv regardless of operating s=
ystem
            support for HDMI HDR metadata.</p>
            <p class=3D"last">In such a configuration, we highly recommend =
setting <tt class=3D"docutils literal"><span class=3D"pre">--tone-mapping</=
span></tt>
            to <tt class=3D"docutils literal">mobius</tt> or even <tt class=
=3D"docutils literal">clip</tt>.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-target-contras=
t"><span class=3D"pre">--target-contrast=3D&lt;auto|10-1000000|inf&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-target-contrast" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specifies the measured contrast of the output display. <tt =
class=3D"docutils literal"><span class=3D"pre">--target-contrast</span></tt=
>
            in conjunction with <tt class=3D"docutils literal"><span class=
=3D"pre">--target-peak</span></tt> value is used to calculate display
            black point. Used in black point compensation during HDR tone-m=
apping.
            <tt class=3D"docutils literal">auto</tt> is the default and ass=
umes 1000:1 contrast as a typical SDR display
            would have or an infinite contrast when HDR <tt class=3D"docuti=
ls literal"><span class=3D"pre">--target-trc</span></tt> is used.
            <tt class=3D"docutils literal">inf</tt> contrast specifies disp=
lay with perfect black level, in practice OLED.
            (Only for <tt class=3D"docutils literal"><span class=3D"pre">--=
vo=3Dgpu-next</span></tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-target-lut"><s=
pan class=3D"pre">--target-lut=3D&lt;file&gt;</span><a href=3D"https://mpv.=
io/manual/master/#options-target-lut" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Specifies a custom LUT file (in Adobe .cube format) to appl=
y to the colors
            before display on-screen. This LUT is fed values in normalized =
RGB, after
            encoding into the target colorspace, so after the application o=
f
            <tt class=3D"docutils literal"><span class=3D"pre">--target-trc=
</span></tt>. (Only for <tt class=3D"docutils literal"><span class=3D"pre">=
--vo=3Dgpu-next</span></tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tone-mapping">=
<span class=3D"pre">--tone-mapping=3D&lt;value&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-tone-mapping" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd><p class=3D"first">Specifies the algorithm used for tone-ma=
pping images onto the target
            display. This is relevant for both HDR-&gt;SDR conversion as we=
ll as gamut
            reduction (e.g. playing back BT.2020 content on a standard gamu=
t display).
            Valid values are:</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Choose the best curve according to internal heuristics. (De=
fault)</dd>
            <dt>clip</dt>
            <dd>Hard-clip any out-of-range values. Use this when you care a=
bout
            perfect color accuracy for in-range values at the cost of compl=
etely
            distorting out-of-range values. Not generally recommended.</dd>
            <dt>mobius</dt>
            <dd>Generalization of Reinhard to a M=C3=B6bius transform with =
linear section.
            Smoothly maps out-of-range values while retaining contrast and =
colors
            for in-range material as much as possible. Use this when you ca=
re about
            color accuracy more than detail preservation. This is somewhere=
 in
            between <tt class=3D"docutils literal">clip</tt> and <tt class=
=3D"docutils literal">reinhard</tt>, depending on the value of
            <tt class=3D"docutils literal"><span class=3D"pre">--tone-mappi=
ng-param</span></tt>.</dd>
            <dt>reinhard</dt>
            <dd>Reinhard tone mapping algorithm. Very simple continuous cur=
ve.
            Preserves overall image brightness but uses nonlinear contrast,=
 which
            results in flattening of details and degradation in color accur=
acy.</dd>
            <dt>hable</dt>
            <dd>Similar to <tt class=3D"docutils literal">reinhard</tt> but=
 preserves both dark and bright details
            better (slightly sigmoidal), at the cost of slightly darkening =
/
            desaturating everything. Developed by John Hable for use in vid=
eo
            games. Use this when you care about detail preservation more th=
an
            color/brightness accuracy. This is roughly equivalent to
            <tt class=3D"docutils literal"><span class=3D"pre">--tone-mappi=
ng=3Dreinhard</span> <span class=3D"pre">--tone-mapping-param=3D0.24</span>=
</tt>. If possible,
            you should also enable <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--hdr-compute-peak</span></tt> for the best results.</dd>
            <dt>bt.2390</dt>
            <dd>Perceptual tone mapping curve (EETF) specified in ITU-R Rep=
ort BT.2390.</dd>
            <dt>gamma</dt>
            <dd>Fits a logarithmic transfer between the tone curves.</dd>
            <dt>linear</dt>
            <dd>Linearly stretches the entire reference gamut to (a linear =
multiple of)
            the display.</dd>
            <dt>spline</dt>
            <dd>Perceptually linear single-pivot polynomial. (<tt class=3D"=
docutils literal"><span class=3D"pre">--vo=3Dgpu-next</span></tt> only)</dd=
>
            <dt>bt.2446a</dt>
            <dd>HDR&lt;-&gt;SDR mapping specified in ITU-R Report BT.2446, =
method A. This is
            the recommended curve for well-mastered content. (<tt class=3D"=
docutils literal"><span class=3D"pre">--vo=3Dgpu-next</span></tt>
            only)</dd>
            <dt>st2094-40</dt>
            <dd>Dynamic HDR10+ tone-mapping method specified in SMPTE ST209=
4-40 Annex
            B. In the absence of metadata, falls back to a fixed spline mat=
ched to
            the input/output average brightness characteristics. (<tt class=
=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu-next</span></tt>
            only)</dd>
            <dt>st2094-10</dt>
            <dd>Dynamic tone-mapping method specified in SMPTE ST2094-10 An=
nex B.2.
            Conceptually simpler than ST2094-40, and generally produces wor=
se
            results.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tone-mapping-p=
aram"><span class=3D"pre">--tone-mapping-param=3D&lt;value&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#options-tone-mapping-param" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set tone mapping parameters. By default,=
 this is set to the special string
            <tt class=3D"docutils literal">default</tt>, which maps to an a=
lgorithm-specific default value. Ignored if
            the tone mapping algorithm is not tunable. This affects the fol=
lowing tone
            mapping algorithms:</p>
            <dl class=3D"last docutils">
            <dt>clip</dt>
            <dd>Specifies an extra linear coefficient to multiply into the =
signal
            before clipping. Defaults to 1.0.</dd>
            <dt>mobius</dt>
            <dd>Specifies the transition point from linear to mobius transf=
orm. Every
            value below this point is guaranteed to be mapped 1:1. The high=
er the
            value, the more accurate the result will be, at the cost of los=
ing
            bright details. Defaults to 0.3, which due to the steep initial=
 slope
            still preserves in-range colors fairly accurately.</dd>
            <dt>reinhard</dt>
            <dd>Specifies the local contrast coefficient at the display pea=
k. Defaults
            to 0.5, which means that in-gamut values will be about half as =
bright
            as when clipping.</dd>
            <dt>bt.2390</dt>
            <dd>Specifies the offset for the knee point. Defaults to 1.0, w=
hich is
            higher than the value from the original ITU-R specification (0.=
5).
            (<tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu-=
next</span></tt> only)</dd>
            <dt>gamma</dt>
            <dd>Specifies the exponent of the function. Defaults to 1.8.</d=
d>
            <dt>linear</dt>
            <dd>Specifies the scale factor to use while stretching. Default=
s to 1.0.</dd>
            <dt>spline</dt>
            <dd>Specifies the knee point (in PQ space). Defaults to 0.30.</=
dd>
            <dt>st2094-10</dt>
            <dd>Specifies the contrast (slope) at the knee point. Defaults =
to 1.0.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-inverse-tone-m=
apping"><span class=3D"pre">--inverse-tone-mapping</span><a href=3D"https:/=
/mpv.io/manual/master/#options-inverse-tone-mapping" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>If set, allows inverse tone mapping (expanding SDR to HDR).=
 Not supported
            by all tone mapping curves. Use with caution. (<tt class=3D"doc=
utils literal"><span class=3D"pre">--vo=3Dgpu-next</span></tt> only)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tone-mapping-m=
ax-boost"><span class=3D"pre">--tone-mapping-max-boost=3D&lt;1.0..10.0&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#options-tone-mapping-max-boo=
st" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Upper limit for how much the tone mapping algorithm is allo=
wed to boost
            the average brightness by over-exposing the image. The default =
value of 1.0
            allows no additional brightness boost. A value of 2.0 would all=
ow
            over-exposing by a factor of 2, and so on. Raising this setting=
 can help
            reveal details that would otherwise be hidden in dark scenes, b=
ut raising
            it too high will make dark scenes appear unnaturally bright. (<=
tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu</span></tt>
            only)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tone-mapping-m=
ode"><span class=3D"pre">--tone-mapping-mode</span><a href=3D"https://mpv.i=
o/manual/master/#options-tone-mapping-mode" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Controls how the tone mapping function i=
s applied to colors.</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Choose the best mode automatically. (Default)</dd>
            <dt>rgb</dt>
            <dd>Tone-map per-channel (RGB). Has a tendency to severely dist=
ort colors,
            desaturate highlights, and is generally not very recommended. H=
owever,
            this is the mode used in many displays and TVs (especially earl=
y ones),
            and so sometimes it's needed to reproduce the artistic intent a=
 film
            was mastered with.</dd>
            <dt>max</dt>
            <dd>Tone-map on the brightest component in the video. Has a ten=
dency to
            lead to weirdly oversaturated colors, and loss of dark details.=
</dd>
            <dt>hybrid</dt>
            <dd>A hybrid approach that uses linear tone-mapping for midtone=
s and
            per-channel tone mapping for highlights.</dd>
            <dt>luma</dt>
            <dd>Luminance-based method from ITU-R BT.2446a, including fixed=
 gamut
            reductions to account for brightness-related perceptual nonunif=
ormity.
            (<tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu-=
next</span></tt> only)</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-tone-mapping-v=
isualize"><span class=3D"pre">--tone-mapping-visualize</span><a href=3D"htt=
ps://mpv.io/manual/master/#options-tone-mapping-visualize" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Display a (PQ-PQ) graph of the active tone-mapping LUT. Int=
ended only for
            debugging purposes. The X axis shows PQ input values, the Y axi=
s shows PQ
            output values. The tone-mapping curve is shown in green/yellow.=
 Yellow
            means the brightness has been boosted from the source, dark blu=
e regions
            show where the brightness has been reduced. The extra colored r=
egions and
            lines indicate various monitor limits, as well a reference diag=
onal
            (neutral tone-mapping) and source scene average brightness info=
rmation (if
            available). (<tt class=3D"docutils literal"><span class=3D"pre"=
>--vo=3Dgpu-next</span></tt> only)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gamut-mapping-=
mode"><span class=3D"pre">--gamut-mapping-mode</span><a href=3D"https://mpv=
.io/manual/master/#options-gamut-mapping-mode" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Specifies the algorithm used for reducin=
g the gamut of images for the
            target display, after any tone mapping is done.</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Choose the best mode automatically. (Default)</dd>
            <dt>clip</dt>
            <dd>Hard-clip to the gamut (per-channel). Very low quality, but=
 free.</dd>
            <dt>perceptual</dt>
            <dd>Performs a perceptually balanced gamut mapping using a soft=
 knee
            function to roll-off clipped regions, and a hue shifting functi=
on to
            preserve saturation. (<tt class=3D"docutils literal"><span clas=
s=3D"pre">--vo=3Dgpu-next</span></tt> only)</dd>
            <dt>relative</dt>
            <dd>Performs relative colorimetric clipping, while maintaining =
an
            exponential relationship between brightness and chromaticity.
            (<tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu-=
next</span></tt> only)</dd>
            <dt>saturation</dt>
            <dd>Performs simple RGB-&gt;RGB saturation mapping. The input R=
/G/B channels
            are mapped directly onto the output R/G/B channels. Will never =
clip,
            but will distort all hues and/or result in a faded look.
            (<tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu-=
next</span></tt> only)</dd>
            <dt>absolute</dt>
            <dd>Performs absolute colorimetric clipping. Like <tt class=3D"=
docutils literal">relative</tt>, but does
            not adapt the white point. (<tt class=3D"docutils literal"><spa=
n class=3D"pre">--vo=3Dgpu-next</span></tt> only)</dd>
            <dt>desaturate</dt>
            <dd>Performs constant-luminance colorimetric clipping, desaturi=
ng colors
            towards white until they're in-range.</dd>
            <dt>darken</dt>
            <dd>Uniformly darkens the input slightly to prevent clipping on=
 blown-out
            highlights, then clamps colorimetrically to the input gamut bou=
ndary,
            biased slightly to preserve chromaticity over luminance.
            (<tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu-=
next</span></tt> only)</dd>
            <dt>warn</dt>
            <dd>Performs no gamut mapping, but simply highlights out-of-gam=
ut pixels.</dd>
            <dt>linear</dt>
            <dd>Linearly/uniformly desaturates the image in order to bring =
the entire
            image into the target gamut. (<tt class=3D"docutils literal"><s=
pan class=3D"pre">--vo=3Dgpu-next</span></tt> only)</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hdr-compute-pe=
ak"><span class=3D"pre">--hdr-compute-peak=3D&lt;auto|yes|no&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#options-hdr-compute-peak" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Compute the HDR peak and frame average brightness per-frame=
 instead of
            relying on tagged metadata. These values are averaged over loca=
l regions as
            well as over several frames to prevent the value from jittering=
 around too
            much. This option basically gives you dynamic, per-scene tone m=
apping.
            Requires compute shaders, which is a fairly recent OpenGL featu=
re, and will
            probably also perform horribly on some drivers, so enable at yo=
ur own risk.
            The special value <tt class=3D"docutils literal">auto</tt> (def=
ault) will enable HDR peak computation
            automatically if compute shaders and SSBOs are supported.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-allow-delayed-=
peak-detect"><span class=3D"pre">--allow-delayed-peak-detect</span><a href=
=3D"https://mpv.io/manual/master/#options-allow-delayed-peak-detect" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>When using <tt class=3D"docutils literal"><span class=3D"pr=
e">--hdr-compute-peak</span></tt>, allow delaying the detected peak by a
            frame when beneficial for performance. In particular, this is r=
equired to
            avoid an unnecessary FBO indirection when no advanced rendering=
 is required
            otherwise. Has no effect if there already is an indirect pass, =
such as when
            advanced scaling is enabled. Defaults to on. (Only affects
            <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu-n=
ext</span></tt>, note that <tt class=3D"docutils literal"><span class=3D"pr=
e">--vo=3Dgpu</span></tt> always delays the peak.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hdr-peak-decay=
-rate"><span class=3D"pre">--hdr-peak-decay-rate=3D&lt;1.0..1000.0&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-hdr-peak-decay-rate" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The decay rate used for the HDR peak detection algorithm (d=
efault: 100.0).
            This is only relevant when <tt class=3D"docutils literal"><span=
 class=3D"pre">--hdr-compute-peak</span></tt> is enabled. Higher values
            make the peak decay more slowly, leading to more stable values =
at the cost
            of more "eye adaptation"-like effects (although this is mitigat=
ed somewhat
            by <tt class=3D"docutils literal"><span class=3D"pre">--hdr-sce=
ne-threshold</span></tt>). A value of 1.0 (the lowest possible) disables
            all averaging, meaning each frame's value is used directly as m=
easured,
            but doing this is not recommended for "noisy" sources since it =
may lead
            to excessive flicker. (In signal theory terms, this controls th=
e time
            constant "tau" of an IIR low pass filter)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hdr-scene-thre=
shold-low"><span class=3D"pre">--hdr-scene-threshold-low=3D&lt;0.0..100.0&g=
t;</span><a href=3D"https://mpv.io/manual/master/#options-hdr-scene-thresho=
ld-low" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils litera=
l" id=3D"options-hdr-scene-threshold-high"><span class=3D"pre">--hdr-scene-=
threshold-high=3D&lt;0.0..100.0&gt;</span><a href=3D"https://mpv.io/manual/=
master/#options-hdr-scene-threshold-high" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>The lower and upper thresholds (in dB) for a brightness dif=
ference
            to be considered a scene change (default: 5.5 low, 10.0 high). =
This is only
            relevant when <tt class=3D"docutils literal"><span class=3D"pre=
">--hdr-compute-peak</span></tt> is enabled. Normally, small
            fluctuations in the frame brightness are compensated for by the=
 peak
            averaging mechanism, but for large jumps in the brightness this=
 can result
            in the frame remaining too bright or too dark for up to several=
 seconds,
            depending on the value of <tt class=3D"docutils literal"><span =
class=3D"pre">--hdr-peak-decay-rate</span></tt>. To counteract this,
            when the brightness between the running average and the current=
 frame
            exceeds the low threshold, mpv will make the averaging filter m=
ore
            aggressive, up to the limit of the high threshold (at which poi=
nt the
            filter becomes instant).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-hdr-contrast-r=
ecovery"><span class=3D"pre">--hdr-contrast-recovery=3D&lt;0.0..2.0&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#options-hdr-contrast-recovery" =
class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D=
"options-hdr-contrast-smoothness"><span class=3D"pre">--hdr-contrast-smooth=
ness=3D&lt;1.0..100.0&gt;</span><a href=3D"https://mpv.io/manual/master/#op=
tions-hdr-contrast-smoothness" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enables the HDR contrast recovery algorithm, which is to de=
signed to
            enhance contrast of HDR video after tone mapping. The strength =
(default:
            0.0) indicates the degree of contrast recovery, with 0.0 being =
completely
            disabled and 1.0 being 100% strength. Values higher than 1.0 ar=
e allowed,
            but may result in excessive sharpening. The smoothness (default=
: 3.5)
            indicates the degree to which the HDR source is low-passed in o=
rder to
            obtain contrast information - a value of 2.0 corresponds to 2x =
downscaling.
            Users on low DPI displays (&lt;=3D 100) may want to lower this =
value, while
            users on very high DPI displays ("retina") may want to increase=
 it. (Only
            for <tt class=3D"docutils literal"><span class=3D"pre">vo=3Dgpu=
-next</span></tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-use-embedded-i=
cc-profile"><span class=3D"pre">--use-embedded-icc-profile</span><a href=3D=
"https://mpv.io/manual/master/#options-use-embedded-icc-profile" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Load the embedded ICC profile contained in media files such=
 as PNG images.
            (Default: yes). Note that this option only works when also usin=
g a display
            ICC profile (<tt class=3D"docutils literal"><span class=3D"pre"=
>--icc-profile</span></tt> or <tt class=3D"docutils literal"><span class=3D=
"pre">--icc-profile-auto</span></tt>), and also
            requires LittleCMS 2 support.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-profile"><=
span class=3D"pre">--icc-profile=3D&lt;file&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-icc-profile" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Load an ICC profile and use it to transform video RGB to sc=
reen output.
            Needs LittleCMS 2 support compiled in. This option overrides th=
e
            <tt class=3D"docutils literal"><span class=3D"pre">--target-pri=
m</span></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--target-=
trc</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--ic=
c-profile-auto</span></tt> options.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-profile-au=
to"><span class=3D"pre">--icc-profile-auto</span><a href=3D"https://mpv.io/=
manual/master/#options-icc-profile-auto" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Automatically select the ICC display pro=
file currently specified by the
            display settings of the operating system.</p>
            <p>NOTE: On Windows, the default profile must be an ICC profile=
. WCS profiles
            are not supported.</p>
            <p class=3D"last">Applications using libmpv with the render API=
 need to provide the ICC
            profile via <tt class=3D"docutils literal">MPV_RENDER_PARAM_ICC=
_PROFILE</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-cache"><sp=
an class=3D"pre">--icc-cache</span><a href=3D"https://mpv.io/manual/master/=
#options-icc-cache" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Store and load 3D LUTs created from the =
ICC profile on disk in the
            cache directory (Default: <tt class=3D"docutils literal">yes</t=
t>). This can be used to speed up loading,
            since LittleCMS 2 can take a while to create a 3D LUT. Note tha=
t these
            files contain uncompressed LUTs. Their size depends on the
            <tt class=3D"docutils literal"><span class=3D"pre">--icc-3dlut-=
size</span></tt>, and can be very big.</p>
            <p class=3D"last">NOTE: This is not cleaned automatically, so o=
ld, unused cache files may
            stick around indefinitely.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-cache-dir"=
><span class=3D"pre">--icc-cache-dir</span><a href=3D"https://mpv.io/manual=
/master/#options-icc-cache-dir" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The directory where icc cache is stored. Cache is stored in=
 the system's
            cache directory (usually <tt class=3D"docutils literal"><span c=
lass=3D"pre">~/.cache/mpv</span></tt>) if this is unset.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-intent"><s=
pan class=3D"pre">--icc-intent=3D&lt;value&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-icc-intent" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Specifies the ICC intent used for the co=
lor transformation (when using
            <tt class=3D"docutils literal"><span class=3D"pre">--icc-profil=
e</span></tt>).</p>
            <dl class=3D"last docutils">
            <dt>0</dt>
            <dd>perceptual</dd>
            <dt>1</dt>
            <dd>relative colorimetric (default)</dd>
            <dt>2</dt>
            <dd>saturation</dd>
            <dt>3</dt>
            <dd>absolute colorimetric</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-3dlut-size=
"><span class=3D"pre">--icc-3dlut-size=3D&lt;r&gt;x&lt;g&gt;x&lt;b&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#options-icc-3dlut-size" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Size of the 3D LUT generated from the ICC profile in each d=
imension.
            Default is 64x64x64. Sizes may range from 2 to 512.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-force-cont=
rast"><span class=3D"pre">--icc-force-contrast=3D&lt;no|0-1000000|inf&gt;</=
span><a href=3D"https://mpv.io/manual/master/#options-icc-force-contrast" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Override the target device's detected contrast ratio by a s=
pecific value.
            This is detected automatically from the profile if possible, bu=
t for some
            profiles it might be missing, causing the contrast to be assume=
d as
            infinite. As a result, video may appear darker than intended. I=
f this is
            the case, setting this option might help. This only affects BT.=
1886
            content. The default of <tt class=3D"docutils literal">no</tt> =
means to use the profile values. The special
            value <tt class=3D"docutils literal">inf</tt> causes the BT.188=
6 curve to be treated as a pure power gamma
            2.4 function.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-icc-use-luma">=
<span class=3D"pre">--icc-use-luma</span><a href=3D"https://mpv.io/manual/m=
aster/#options-icc-use-luma" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Use ICC profile luminance value. (Only for <tt class=3D"doc=
utils literal"><span class=3D"pre">--vo=3Dgpu-next</span></tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-lut"><span cla=
ss=3D"pre">--lut=3D&lt;file&gt;</span><a href=3D"https://mpv.io/manual/mast=
er/#options-lut" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specifies a custom LUT (in Adobe .cube format) to apply to =
the colors
            as part of color conversion. The exact interpretation depends o=
n the value
            of <tt class=3D"docutils literal"><span class=3D"pre">--lut-typ=
e</span></tt>. (Only for <tt class=3D"docutils literal"><span class=3D"pre"=
>--vo=3Dgpu-next</span></tt>)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-lut-type"><spa=
n class=3D"pre">--lut-type=3D&lt;value&gt;</span><a href=3D"https://mpv.io/=
manual/master/#options-lut-type" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Controls the interpretation of color val=
ues fed to and from the LUT
            specified as <tt class=3D"docutils literal"><span class=3D"pre"=
>--lut</span></tt>. Valid values are:</p>
            <dl class=3D"last docutils">
            <dt>auto</dt>
            <dd>Chooses the interpretation of the LUT automatically from ta=
gged
            metadata, and otherwise falls back to <tt class=3D"docutils lit=
eral">native</tt>. (Default)</dd>
            <dt>native</dt>
            <dd>Applied to raw image contents in its native RGB colorspace =
(non-linear
            light), before conversion to the output color space.</dd>
            <dt>normalized</dt>
            <dd>Applied to the normalized RGB image contents, in linear lig=
ht, before
            conversion to the output color space.</dd>
            <dt>conversion</dt>
            <dd>Fully replaces the conversion from the image color space to=
 the output
            color space. If such a LUT is present, it has the highest prior=
ity, and
            overrides any ICC profiles, as well as options related to tone =
mapping
            and output colorimetry (<tt class=3D"docutils literal"><span cl=
ass=3D"pre">--target-prim</span></tt>, <tt class=3D"docutils literal"><span=
 class=3D"pre">--target-trc</span></tt> etc.).</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-blend-subtitle=
s"><span class=3D"pre">--blend-subtitles=3D&lt;yes|video|no&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-blend-subtitles" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Blend subtitles directly onto upscaled v=
ideo frames, before interpolation
            and/or color management (default: no). Enabling this causes sub=
titles to be
            affected by <tt class=3D"docutils literal"><span class=3D"pre">=
--icc-profile</span></tt>, <tt class=3D"docutils literal"><span class=3D"pr=
e">--target-prim</span></tt>, <tt class=3D"docutils literal"><span class=3D=
"pre">--target-trc</span></tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">--interpolat=
ion</span></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--gamma=
-factor</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">=
--glsl-shaders</span></tt>. It also
            increases subtitle performance when using <tt class=3D"docutils=
 literal"><span class=3D"pre">--interpolation</span></tt>.</p>
            <p>The downside of enabling this is that it restricts subtitles=
 to the visible
            portion of the video, so you can't have subtitles exist in the =
black
            margins below a video (for example).</p>
            <p>If <tt class=3D"docutils literal">video</tt> is selected, th=
e behavior is similar to <tt class=3D"docutils literal">yes</tt>, but subs =
are
            drawn at the video's native resolution, and scaled along with t=
he video.</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This changes the way subtitle colors are hand=
led. Normally,
            subtitle colors are assumed to be in sRGB and color managed as
            such. Enabling this makes them treated as being in the video's
            color space instead. This is good if you want things like
            softsubbed ASS signs to match the video colors, but may cause
            SRT subtitles or similar to look slightly off.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-alpha"><span c=
lass=3D"pre">--alpha=3D&lt;blend-tiles|blend|yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-alpha" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd><p class=3D"first">Decides what to do if the input has an a=
lpha component.</p>
            <dl class=3D"last docutils">
            <dt>blend-tiles</dt>
            <dd>Blend the frame against a 16x16 gray/white tiles background=
 (default).</dd>
            <dt>blend</dt>
            <dd>Blend the frame against the background color (<tt class=3D"=
docutils literal"><span class=3D"pre">--background</span></tt>, normally
            black).</dd>
            <dt>yes</dt>
            <dd>Try to create a framebuffer with alpha component. This only=
 makes sense
            if the video contains alpha information (which is extremely rar=
e) or if
            you make the background color transparent. May not be supported=
 on all
            platforms. If alpha framebuffers are unavailable, it silently f=
alls
            back on a normal framebuffer. Note that if you set the <tt clas=
s=3D"docutils literal"><span class=3D"pre">--fbo-format</span></tt>
            option to a non-default value, a format with alpha must be spec=
ified,
            or this won't work. Whether this really works depends on the wi=
ndowing
            system and desktop environment.</dd>
            <dt>no</dt>
            <dd>Ignore alpha component.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-rectang=
le-textures"><span class=3D"pre">--opengl-rectangle-textures</span><a href=
=3D"https://mpv.io/manual/master/#options-opengl-rectangle-textures" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Force use of rectangle textures (default: no). Normally thi=
s shouldn't have
            any advantages over normal textures. Note that hardware decodin=
g overrides
            this flag. Could be removed any time.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-background"><s=
pan class=3D"pre">--background=3D&lt;color&gt;</span><a href=3D"https://mpv=
.io/manual/master/#options-background" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>Color used to draw parts of the mpv window not covered by v=
ideo. See the
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-color<=
/span></tt> option for how colors are defined.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-tex-pad-x"=
><span class=3D"pre">--gpu-tex-pad-x</span><a href=3D"https://mpv.io/manual=
/master/#options-gpu-tex-pad-x" class=3D"anchor fa fa-link"></a></tt>, <tt =
class=3D"docutils literal" id=3D"options-gpu-tex-pad-y"><span class=3D"pre"=
>--gpu-tex-pad-y</span><a href=3D"https://mpv.io/manual/master/#options-gpu=
-tex-pad-y" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enlarge the video source textures by this many pixels. For =
debugging only
            (normally textures are sized exactly, but due to hardware decod=
ing interop
            we may have to deal with additional padding, which can be teste=
d with these
            options). Could be removed any time.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-opengl-early-f=
lush"><span class=3D"pre">--opengl-early-flush=3D&lt;yes|no|auto&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#options-opengl-early-flush" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Call <tt class=3D"docutils literal">glFl=
ush()</tt> after rendering a frame and before attempting to display
            it (default: auto). Can fix stuttering in some cases, in other =
cases
            probably causes it. The <tt class=3D"docutils literal">auto</tt=
> mode will call <tt class=3D"docutils literal">glFlush()</tt> only if
            the renderer is going to wait for a while after rendering, inst=
ead of
            flipping GL front and backbuffers immediately (i.e. it doesn't =
call it
            in display-sync mode).</p>
            <p class=3D"last">On macOS this is always deactivated because i=
t only causes performance
            problems and other regressions.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-dumb-mode"=
><span class=3D"pre">--gpu-dumb-mode=3D&lt;yes|no|auto&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-gpu-dumb-mode" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">This mode is extremely restricted, and w=
ill disable most extended
            features. That includes high quality scalers and custom shaders=
!</p>
            <p>It is intended for hardware that does not support FBOs (incl=
uding GLES,
            which supports it insufficiently), or to get some more performa=
nce out of
            bad or old hardware.</p>
            <p>This mode is forced automatically if needed, and this option=
 is mostly
            useful for debugging. The default of <tt class=3D"docutils lite=
ral">auto</tt> will enable it automatically
            if nothing uses features which require FBOs.</p>
            <p class=3D"last">This option might be silently removed in the =
future.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-shader-cac=
he"><span class=3D"pre">--gpu-shader-cache</span><a href=3D"https://mpv.io/=
manual/master/#options-gpu-shader-cache" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Store and load compiled GLSL shaders in =
the cache directory (Default: <tt class=3D"docutils literal">yes</tt>).
            Normally, shader compilation is very fast, so this is not usual=
ly needed.
            It mostly matters for GPU APIs that require internally recompil=
ing shaders to
            other languages, for example anything based on ANGLE or Vulkan.=
 Enabling this
            can improve startup performance on these platforms.</p>
            <p class=3D"last">NOTE: This is not cleaned automatically, so o=
ld, unused cache files may
            stick around indefinitely.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-gpu-shader-cac=
he-dir"><span class=3D"pre">--gpu-shader-cache-dir</span><a href=3D"https:/=
/mpv.io/manual/master/#options-gpu-shader-cache-dir" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>The directory where gpu shader cache is stored. Cache is st=
ored in the system's
            cache directory (usually <tt class=3D"docutils literal"><span c=
lass=3D"pre">~/.cache/mpv</span></tt>) if this is unset.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"miscellaneous">
            <h2>Miscellaneous</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"options-display-tags">=
<span class=3D"pre">--display-tags=3Dtag1,tags2,...</span><a href=3D"https:=
//mpv.io/manual/master/#options-display-tags" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd><p class=3D"first">Set the list of tags that should be disp=
layed on the terminal. Tags that
            are in the list, but are not present in the played file, will n=
ot be shown.
            If a value ends with <tt class=3D"docutils literal">*</tt>, all=
 tags are matched by prefix (though there
            is no general globbing). Just passing <tt class=3D"docutils lit=
eral">*</tt> essentially filtering.</p>
            <p>The default includes a common list of tags, call mpv with <t=
t class=3D"docutils literal"><span class=3D"pre">--list-options</span></tt>
            to see it.</p>
            <p class=3D"last">This is a string list option. See <a class=3D=
"reference internal" href=3D"https://mpv.io/manual/master/#list-options">Li=
st Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-mc"><span clas=
s=3D"pre">--mc=3D&lt;seconds/frame&gt;</span><a href=3D"https://mpv.io/manu=
al/master/#options-mc" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Maximum A-V sync correction per frame (in seconds)</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-autosync"><spa=
n class=3D"pre">--autosync=3D&lt;factor&gt;</span><a href=3D"https://mpv.io=
/manual/master/#options-autosync" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Gradually adjusts the A/V sync based on audio delay measure=
ments.
            Specifying <tt class=3D"docutils literal"><span class=3D"pre">-=
-autosync=3D0</span></tt>, the default, will cause frame timing to be
            based entirely on audio delay measurements. Specifying <tt clas=
s=3D"docutils literal"><span class=3D"pre">--autosync=3D1</span></tt>
            will do the same, but will subtly change the A/V correction alg=
orithm. An
            uneven video framerate in a video which plays fine with <tt cla=
ss=3D"docutils literal"><span class=3D"pre">--no-audio</span></tt> can
            often be helped by setting this to an integer value greater tha=
n 1. The
            higher the value, the closer the timing will be to <tt class=3D=
"docutils literal"><span class=3D"pre">--no-audio</span></tt>. Try
            <tt class=3D"docutils literal"><span class=3D"pre">--autosync=
=3D30</span></tt> to smooth out problems with sound drivers which do not
            implement a perfect audio delay measurement. With this value, i=
f large A/V
            sync offsets occur, they will only take about 1 or 2 seconds to=
 settle
            out. This delay in reaction time to sudden A/V offsets should b=
e the only
            side effect of turning this option on, for all sound drivers.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-timing-o=
ffset"><span class=3D"pre">--video-timing-offset=3D&lt;seconds&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#options-video-timing-offset" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Control how long before video display ta=
rget time the frame should be
            rendered (default: 0.050). If a video frame should be displayed=
 at a
            certain time, the VO will start rendering the frame earlier, an=
d then will
            perform a blocking wait until the display time, and only then "=
swap" the
            frame to display. The rendering cannot start before the previou=
s frame is
            displayed, so this value is implicitly limited by the video fra=
merate. With
            normal video frame rates, the default value will ensure that re=
ndering is
            always immediately started after the previous frame was display=
ed. On the
            other hand, setting a too high value can reduce responsiveness =
with low
            FPS value.</p>
            <p>This option is interesting for client API users using the re=
nder API
            because you can stop it from limiting your FPS
            (see <tt class=3D"docutils literal">mpv_render_context_render()=
</tt> documentation).</p>
            <p class=3D"last">This applies only to audio timing modes (e.g.=
 <tt class=3D"docutils literal"><span class=3D"pre">--video-sync=3Daudio</s=
pan></tt>). In
            other modes (<tt class=3D"docutils literal"><span class=3D"pre"=
>--video-sync=3Ddisplay-...</span></tt>), video timing relies on vsync
            blocking, and this option is not used.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-sync"><s=
pan class=3D"pre">--video-sync=3D&lt;audio|...&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#options-video-sync" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd><p class=3D"first">How the player synchronizes audio and vi=
deo.</p>
            <p>If you use this option, you usually want to set it to <tt cl=
ass=3D"docutils literal"><span class=3D"pre">display-resample</span></tt>
            to enable a timing mode that tries to not skip or repeat frames=
 when for
            example playing 24fps video on a 24Hz screen.</p>
            <p>The modes starting with <tt class=3D"docutils literal">displ=
ay-</tt> try to output video frames completely
            synchronously to the display, using the detected display vertic=
al refresh
            rate as a hint how fast frames will be displayed on average. Th=
ese modes
            change video speed slightly to match the display. See <tt class=
=3D"docutils literal"><span class=3D"pre">--video-sync-...</span></tt>
            options for fine tuning. The robustness of this mode is further=
 reduced by
            making a some idealized assumptions, which may not always apply=
 in reality.
            Behavior can depend on the VO and the system's video and audio =
drivers.
            Media files must use constant framerate. Section-wise VFR might=
 work as well
            with some container formats (but not e.g. mkv).</p>
            <p>Under some circumstances, the player automatically reverts t=
o <tt class=3D"docutils literal">audio</tt> mode
            for some time or permanently. This can happen on very low frame=
rate video,
            or if the framerate cannot be detected.</p>
            <p>Also in display-sync modes it can happen that interruptions =
to video
            playback (such as toggling fullscreen mode, or simply resizing =
the window)
            will skip the video frames that should have been displayed, whi=
le <tt class=3D"docutils literal">audio</tt>
            mode will display them after the renderer has resumed (typicall=
y resulting
            in a short A/V desync and the video "catching up").</p>
            <p>Before mpv 0.30.0, there was a fallback to <tt class=3D"docu=
tils literal">audio</tt> mode on severe A/V
            desync. This was changed for the sake of not sporadically stopp=
ing. Now,
            <tt class=3D"docutils literal"><span class=3D"pre">display-desy=
nc</span></tt> does what it promises and may desync with audio by an
            arbitrary amount, until it is manually fixed with a seek.</p>
            <p>These modes also require a vsync blocked presentation mode. =
For OpenGL, this
            translates to <tt class=3D"docutils literal"><span class=3D"pre=
">--opengl-swapinterval=3D1</span></tt>. For Vulkan, it translates to
            <tt class=3D"docutils literal"><span class=3D"pre">--vulkan-swa=
p-mode=3Dfifo</span></tt> (or <tt class=3D"docutils literal"><span class=3D=
"pre">fifo-relaxed</span></tt>).</p>
            <p>The modes with <tt class=3D"docutils literal">desync</tt> in=
 their names do not attempt to keep audio/video
            in sync. They will slowly (or quickly) desync, until e.g. the n=
ext seek
            happens. These modes are meant for testing, not serious use.</p=
>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">audio:</th><td cla=
ss=3D"field-body">Time video frames to audio. This is the most robust
            mode, because the player doesn't have to assume anything
            about how the display behaves. The disadvantage is that
            it can lead to occasional frame drops or repeats. If
            audio is disabled, this uses the system clock. This is
            the default mode.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">disp=
lay-resample:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">Res=
ample audio to match the video. This mode will also
            try to adjust audio speed to compensate for other drift.
            (This means it will play the audio at a different speed
            every once in a while to reduce the A/V difference.)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">disp=
lay-resample-vdrop:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">Res=
ample audio to match the video. Drop video
            frames to compensate for drift.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name" colspan=3D"2">disp=
lay-resample-desync:</th></tr>
            <tr class=3D"field"><td>&nbsp;</td><td class=3D"field-body">Lik=
e the previous mode, but no A/V compensation.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">display-tempo:</th=
><td class=3D"field-body">Same as <tt class=3D"docutils literal"><span clas=
s=3D"pre">display-resample</span></tt>, but apply audio speed
            changes to audio filters instead of resampling to avoid
            the change in pitch. Beware that some audio filters
            don't do well with a speed close to 1. It is recommend
            to use a conditional profile to automatically switch to
            <tt class=3D"docutils literal"><span class=3D"pre">display-resa=
mple</span></tt> when speed gets too close to 1 for
            your filter setup. Use (speed * video_speed_correction)
            to get the actual playback speed in the condition.
            See <a class=3D"reference internal" href=3D"https://mpv.io/manu=
al/master/#conditional-auto-profiles">Conditional auto profiles</a> for det=
ails.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">display-vdrop:</th=
><td class=3D"field-body">Drop or repeat video frames to compensate desynci=
ng
            video. (Although it should have the same effects as
            <tt class=3D"docutils literal">audio</tt>, the implementation i=
s very different.)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">display-adrop:</th=
><td class=3D"field-body">Drop or repeat audio data to compensate desyncing
            video. This mode will cause severe audio artifacts if
            the real monitor refresh rate is too different from
            the reported or forced rate. Since mpv 0.33.0, this
            acts on entire audio frames, instead of single samples.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">display-desync:</t=
h><td class=3D"field-body">Sync video to display, and let audio play on its=
 own.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">desync:</th><td cl=
ass=3D"field-body">Sync video according to system clock, and let audio play
            on its own.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-sync-max=
-factor"><span class=3D"pre">--video-sync-max-factor=3D&lt;value&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#options-video-sync-max-factor" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Maximum multiple for which to try to fit=
 the video's FPS to the display's
            FPS (default: 5).</p>
            <p>For example, if this is set to 1, the video FPS is forced to=
 an integer
            multiple of the display FPS, as long as the speed change does n=
ot exceed
            the value set by <tt class=3D"docutils literal"><span class=3D"=
pre">--video-sync-max-video-change</span></tt>.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--interpolation-threshold</span></tt> for how this option affects
            interpolation.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-sync-max=
-video-change"><span class=3D"pre">--video-sync-max-video-change=3D&lt;valu=
e&gt;</span><a href=3D"https://mpv.io/manual/master/#options-video-sync-max=
-video-change" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Maximum speed difference in percent that=
 is applied to video with
            <tt class=3D"docutils literal"><span class=3D"pre">--video-sync=
=3Ddisplay-...</span></tt> (default: 1). Display sync mode will be
            disabled if the monitor and video refresh way do not match with=
in the
            given range. It tries multiples as well: playing 30 fps video o=
n a 60 Hz
            screen will duplicate every second frame. Playing 24 fps video =
on a 60 Hz
            screen will play video in a 2-3-2-3-... pattern.</p>
            <p>The default settings are not loose enough to speed up 23.976=
 fps video to
            25 fps. We consider the pitch change too extreme to allow this =
behavior
            by default. Set this option to a value of <tt class=3D"docutils=
 literal">5</tt> to enable it.</p>
            <p>Note that <tt class=3D"docutils literal"><span class=3D"pre"=
>--video-sync=3Ddisplay-tempo</span></tt> avoids this pitch change.</p>
            <p class=3D"last">Also note that in the <tt class=3D"docutils l=
iteral"><span class=3D"pre">--video-sync=3Ddisplay-resample</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">--video-sync=
=3Ddisplay-tempo</span></tt> mode, audio speed will additionally be
            changed by a small amount if necessary for A/V sync. See
            <tt class=3D"docutils literal"><span class=3D"pre">--video-sync=
-max-audio-change</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-video-sync-max=
-audio-change"><span class=3D"pre">--video-sync-max-audio-change=3D&lt;valu=
e&gt;</span><a href=3D"https://mpv.io/manual/master/#options-video-sync-max=
-audio-change" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Maximum <em>additional</em> speed difference in percent tha=
t is applied to audio
            with <tt class=3D"docutils literal"><span class=3D"pre">--video=
-sync=3Ddisplay-...</span></tt> (default: 0.125). Normally, the player
            plays the audio at the speed of the video. But if the differenc=
e between
            audio and video position is too high, e.g. due to drift or othe=
r timing
            errors, it will attempt to speed up or slow down audio by this =
additional
            factor. Too low values could lead to video frame dropping or re=
peating if
            the A/V desync cannot be compensated, too high values could lea=
d to chaotic
            frame dropping due to the audio "overshooting" and skipping mul=
tiple video
            frames before the sync logic can react.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-mf-fps"><span =
class=3D"pre">--mf-fps=3D&lt;value&gt;</span><a href=3D"https://mpv.io/manu=
al/master/#options-mf-fps" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Framerate used when decoding from multiple PNG or JPEG file=
s with <tt class=3D"docutils literal"><span class=3D"pre">mf://</span></tt>
            (default: 1).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-mf-type"><span=
 class=3D"pre">--mf-type=3D&lt;value&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#options-mf-type" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Input file type for <tt class=3D"docutils literal"><span cl=
ass=3D"pre">mf://</span></tt> (available: jpeg, png, tga, sgi). By default,
            this is guessed from the file extension.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stream-dump"><=
span class=3D"pre">--stream-dump=3D&lt;destination-filename&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-stream-dump" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Instead of playing a file, read its byte stream and write i=
t to the given
            destination file. The destination is overwritten. Can be useful=
 to test
            network-related behavior.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stream-lavf-o"=
><span class=3D"pre">--stream-lavf-o=3Dopt1=3Dvalue1,opt2=3Dvalue2,...</spa=
n><a href=3D"https://mpv.io/manual/master/#options-stream-lavf-o" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set AVOptions on streams opened with lib=
avformat. Unknown or misspelled
            options are silently ignored. (They are mentioned in the termin=
al output
            in verbose mode, i.e. <tt class=3D"docutils literal"><span clas=
s=3D"pre">--v</span></tt>. In general we can't print errors, because
            other options such as e.g. user agent are not available with al=
l protocols,
            and printing errors for unknown options would end up being too =
noisy.)</p>
            <p class=3D"last">This is a key/value list option. See <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#list-options"=
>List Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-vo-mmcss-profi=
le"><span class=3D"pre">--vo-mmcss-profile=3D&lt;name&gt;</span><a href=3D"=
https://mpv.io/manual/master/#options-vo-mmcss-profile" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>(Windows only.)
            Set the MMCSS profile for the video renderer thread (default: <=
tt class=3D"docutils literal">Playback</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-priority"><spa=
n class=3D"pre">--priority=3D&lt;prio&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#options-priority" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">(Windows only.)
            Set process priority for mpv according to the predefined priori=
ties
            available under Windows.</p>
            <p>Possible values of <tt class=3D"docutils literal">&lt;prio&g=
t;</tt>:
            idle|belownormal|normal|abovenormal|high|realtime</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Using realtime priority can cause system lock=
up.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-force-media-ti=
tle"><span class=3D"pre">--force-media-title=3D&lt;string&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-force-media-title" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>Force the contents of the <tt class=3D"docutils literal"><s=
pan class=3D"pre">media-title</span></tt> property to this value. Useful
            for scripts which want to set a title, without overriding the u=
ser's
            setting in <tt class=3D"docutils literal"><span class=3D"pre">-=
-title</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-external-files=
"><span class=3D"pre">--external-files=3D&lt;file-list&gt;</span><a href=3D=
"https://mpv.io/manual/master/#options-external-files" class=3D"anchor fa f=
a-link"></a></tt></dt>
            <dd><p class=3D"first">Load a file and add all of its tracks. T=
his is useful to play different
            files together (for example audio from one file, video from ano=
ther), or
            for advanced <tt class=3D"docutils literal"><span class=3D"pre"=
>--lavfi-complex</span></tt> used (like playing two video files at
            the same time).</p>
            <p>Unlike <tt class=3D"docutils literal"><span class=3D"pre">--=
sub-files</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre=
">--audio-files</span></tt>, this includes all tracks, and
            does not cause default stream selection over the "proper" file.=
 This makes
            it slightly less intrusive. (In mpv 0.28.0 and before, this was=
 not quite
            strictly enforced.)</p>
            <p class=3D"last">This is a path list option. See <a class=3D"r=
eference internal" href=3D"https://mpv.io/manual/master/#list-options">List=
 Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-external-file"=
><span class=3D"pre">--external-file=3D&lt;file&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-external-file" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>CLI/config file only alias for <tt class=3D"docutils litera=
l"><span class=3D"pre">--external-files-append</span></tt>. Each use of thi=
s
            option will add a new external file.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cover-art-file=
s"><span class=3D"pre">--cover-art-files=3D&lt;file-list&gt;</span><a href=
=3D"https://mpv.io/manual/master/#options-cover-art-files" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Use an external file as cover art while =
playing audio. This makes it appear
            on the track list and subject to automatic track selection. Opt=
ions like
            <tt class=3D"docutils literal"><span class=3D"pre">--audio-disp=
lay</span></tt> control whether such tracks are supposed to be selected.</p=
>
            <p>(The difference to loading a file with <tt class=3D"docutils=
 literal"><span class=3D"pre">--external-files</span></tt> is that video
            tracks will be marked as being pictures, which affects the auto=
-selection
            method. If the passed file is a video, only the first frame wil=
l be decoded
            and displayed. Enabling the cover art track during playback may=
 show a
            random frame if the source file is a video. Normally you're not=
 supposed to
            pass videos to this option, so this paragraph describes the beh=
avior
            coincidentally resulting from implementation details.)</p>
            <p class=3D"last">This is a path list option. See <a class=3D"r=
eference internal" href=3D"https://mpv.io/manual/master/#list-options">List=
 Options</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cover-art-file=
"><span class=3D"pre">--cover-art-file=3D&lt;file&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-cover-art-file" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>CLI/config file only alias for <tt class=3D"docutils litera=
l"><span class=3D"pre">--cover-art-files-append</span></tt>. Each use of th=
is
            option will add a new external file.</dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cover-art-auto=
"><span class=3D"pre">--cover-art-auto=3D&lt;no|exact|fuzzy|all&gt;</span><=
a href=3D"https://mpv.io/manual/master/#options-cover-art-auto" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether to load _external_ cover art aut=
omatically. Similar to
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-auto</=
span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--audio-f=
ile-auto</span></tt>. If a video already has tracks
            (which are not marked as cover art), external cover art will no=
t be loaded.</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Don't automatically load cover art.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">exact:</th><td cla=
ss=3D"field-body">Load the media filename with an image file extension (def=
ault).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">fuzzy:</th><td cla=
ss=3D"field-body">Load all cover art containing the media filename.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">all:</th><td class=
=3D"field-body">Load all images in the current directory.</td>
            </tr>
            </tbody>
            </table>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">--cov=
er-art-files</span></tt> for details about what constitutes cover art.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--audio-display</span></tt> how to control display of cover art (=
this can be
            used to disable cover art that is part of the file).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-cover-art-whit=
elist"><span class=3D"pre">--cover-art-whitelist=3D&lt;no|yes&gt;</span><a =
href=3D"https://mpv.io/manual/master/#options-cover-art-whitelist" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether to load filenames in an internal=
 whitelist, such as <tt class=3D"docutils literal">cover.jpg</tt>,
            as cover art. If <tt class=3D"docutils literal"><span class=3D"=
pre">cover-art-auto</span></tt> is set to <tt class=3D"docutils literal">no=
</tt>, the whitelisted
            filenames are never loaded even if this option is set to <tt cl=
ass=3D"docutils literal">yes</tt>.</p>
            <p class=3D"last">Default: <tt class=3D"docutils literal">yes</=
tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-autoload-files=
"><span class=3D"pre">--autoload-files=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#options-autoload-files" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd><p class=3D"first">Automatically load/select external files=
 (default: yes).</p>
            <p>If set to <tt class=3D"docutils literal">no</tt>, then do no=
t automatically load external files as specified
            by <tt class=3D"docutils literal"><span class=3D"pre">--sub-aut=
o</span></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--audio-f=
ile-auto</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre"=
>--cover-art-auto</span></tt>. If
            external files are forcibly added (like with <tt class=3D"docut=
ils literal"><span class=3D"pre">--sub-files</span></tt>), they will
            not be auto-selected.</p>
            <p class=3D"last">This does not affect playlist expansion, redi=
rection, or other loading of
            referenced files like with ordered chapters.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-record-file"><=
span class=3D"pre">--record-file=3D&lt;file&gt;</span><a href=3D"https://mp=
v.io/manual/master/#options-record-file" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Deprecated, use <tt class=3D"docutils li=
teral"><span class=3D"pre">--stream-record</span></tt>, or the <tt class=3D=
"docutils literal"><span class=3D"pre">dump-cache</span></tt> command.</p>
            <p>Record the current stream to the given target file. The targ=
et file will
            always be overwritten without asking.</p>
            <p class=3D"last">This was deprecated because it isn't very nic=
e to use. For one, seeking
            while this is enabled will be directly reflected in the output,=
 which was
            not useful and annoying.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-stream-record"=
><span class=3D"pre">--stream-record=3D&lt;file&gt;</span><a href=3D"https:=
//mpv.io/manual/master/#options-stream-record" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Write received/read data from the demuxe=
r to the given output file. The
            output file will always be overwritten without asking. The outp=
ut format
            is determined by the extension of the output file.</p>
            <p>Switching streams or seeking during recording might result i=
n recording
            being stopped and/or broken files. Use with care.</p>
            <p>Seeking outside of the demuxer cache will result in "skips" =
in the output
            file, but seeking within  the demuxer cache should not affect r=
ecording. One
            exception is when you seek back far enough to exceed the forwar=
d buffering
            size, in which case the cache stops actively reading. This will=
 return in
            dropped data if it's a live stream.</p>
            <p>If this is set at runtime, the old file is closed, and the n=
ew file is
            opened. Note that this will write only data that is appended at=
 the end of
            the cache, and the already cached data cannot be written. You c=
an try the
            <tt class=3D"docutils literal"><span class=3D"pre">dump-cache</=
span></tt> command as an alternative.</p>
            <p>External files (<tt class=3D"docutils literal"><span class=
=3D"pre">--audio-file</span></tt> etc.) are ignored by this, it works on th=
e
            "main" file only. Using this with files using ordered chapters =
or EDL files
            will also not work correctly in general.</p>
            <p>There are some glitches with this because it uses FFmpeg's l=
ibavformat for
            writing the output file. For example, it's typical that it will=
 only work if
            the output format is the same as the input format. This is the =
case even if
            it works with the <tt class=3D"docutils literal">ffmpeg</tt> to=
ol. One reason for this is that <tt class=3D"docutils literal">ffmpeg</tt>
            and its libraries contain certain hacks and workarounds for the=
se issues,
            that are unavailable to outside users.</p>
            <p class=3D"last">This replaces <tt class=3D"docutils literal">=
<span class=3D"pre">--record-file</span></tt>. It is similar to the ancient=
/removed
            <tt class=3D"docutils literal"><span class=3D"pre">--stream-cap=
ture</span></tt>/<tt class=3D"docutils literal"><span class=3D"pre">--captu=
re</span></tt> options, and provides better behavior in
            most cases (i.e. actually works).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-lavfi-complex"=
><span class=3D"pre">--lavfi-complex=3D&lt;string&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#options-lavfi-complex" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd><p class=3D"first">Set a "complex" libavfilter filter, whic=
h means a single filter graph can
            take input from multiple source audio and video tracks. The gra=
ph can result
            in a single audio or video output (or both).</p>
            <p>Currently, the filter graph labels are used to select the pa=
rticipating
            input tracks and audio/video output. The following rules apply:=
</p>
            <ul class=3D"simple">
            <li>A label of the form <tt class=3D"docutils literal">aidN</tt=
> selects audio track N as input (e.g.
            <tt class=3D"docutils literal">aid1</tt>).</li>
            <li>A label of the form <tt class=3D"docutils literal">vidN</tt=
> selects video track N as input.</li>
            <li>A label named <tt class=3D"docutils literal">ao</tt> will b=
e connected to the audio output.</li>
            <li>A label named <tt class=3D"docutils literal">vo</tt> will b=
e connected to the video output.</li>
            </ul>
            <p>Each label can be used only once. If you want to use e.g. an=
 audio stream
            for multiple filters, you need to use the <tt class=3D"docutils=
 literal">asplit</tt> filter. Multiple
            video or audio outputs are not possible, but you can use filter=
s to merge
            them into one.</p>
            <p>It's not possible to change the tracks connected to the filt=
er at runtime,
            unless you explicitly change the <tt class=3D"docutils literal"=
><span class=3D"pre">lavfi-complex</span></tt> property and set new
            track assignments. When the graph is changed, the track selecti=
on is changed
            according to the used labels as well.</p>
            <p>Other tracks, as long as they're not connected to the filter=
, and the
            corresponding output is not connected to the filter, can still =
be freely
            changed with the normal methods.</p>
            <p>Note that the normal filter chains (<tt class=3D"docutils li=
teral"><span class=3D"pre">--af</span></tt>, <tt class=3D"docutils literal"=
><span class=3D"pre">--vf</span></tt>) are applied between
            the complex graphs (e.g. <tt class=3D"docutils literal">ao</tt>=
 label) and the actual output.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--lavfi-=
complex=3D'[aid1]</span> [aid2] amix [ao]'</tt>
            Play audio track 1 and 2 at the same time.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--lavfi-=
complex=3D'[vid1]</span> [vid2] vstack [vo]'</tt>
            Stack video track 1 and 2 and play them at the same time. Note =
that
            both tracks need to have the same width, or filter initializati=
on
            will fail (you can add <tt class=3D"docutils literal">scale</tt=
> filters before the <tt class=3D"docutils literal">vstack</tt> filter
            to fix the size).
            To load a video track from another file, you can use
            <tt class=3D"docutils literal"><span class=3D"pre">--external-f=
ile=3Dother.mkv</span></tt>.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">--lavfi-=
complex=3D'[aid1]</span> asplit [t1] [ao] ; [t1] showvolume [t2] ; [vid1] [=
t2] overlay [vo]'</tt>
            Play audio track 1, and overlay the measured volume for each sp=
eaker
            over video track 1.</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">null://<=
/span> <span class=3D"pre">--lavfi-complex=3D'life</span> [vo]'</tt>
            A libavfilter source-only filter (Conways' Life Game).</li>
            </ul>
            </div>
            <p class=3D"last">See the FFmpeg libavfilter documentation for =
details on the available
            filters.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"options-metadata-codep=
age"><span class=3D"pre">--metadata-codepage=3D&lt;codepage&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#options-metadata-codepage" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Codepage for various input metadata (def=
ault: <tt class=3D"docutils literal"><span class=3D"pre">utf-8</span></tt>)=
. This affects how
            file tags, chapter titles, etc. are interpreted. You can for ex=
ample set
            this to <tt class=3D"docutils literal">auto</tt> to enable auto=
detection of the codepage. (This is not the
            default because non-UTF-8 codepages are an obscure fringe use-c=
ase.)</p>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">--sub=
-codepage</span></tt> option on how codepages are specified and further
            details regarding autodetection and codepage conversion. (The u=
nderlying
            code is the same.)</p>
            <p class=3D"last">Conversion is not applied to metadata that is=
 updated at runtime.</p>
            </dd>
            </dl>
            </div>
            </div>
            <div class=3D"section" id=3D"audio-output-drivers">
            <h1>AUDIO OUTPUT DRIVERS</h1>
            <p>Audio output drivers are interfaces to different audio outpu=
t facilities. The
            syntax is:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o"><span class=3D"pre">--ao=3D&lt;driver1,driver2,...[,]&gt;</span><a href=
=3D"https://mpv.io/manual/master/#audio-output-drivers-ao" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Specify a priority list of audio output drivers to be used.=
</dd>
            </dl>
            <p>If the list has a trailing ',', mpv will fall back on driver=
s not contained
            in the list.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">--ao=3Dhelp</span></tt> for a list of compiled-in audio output dr=
ivers. The
            driver <tt class=3D"docutils literal"><span class=3D"pre">--ao=
=3Dalsa</span></tt> is preferred. <tt class=3D"docutils literal"><span clas=
s=3D"pre">--ao=3Dpulse</span></tt> is preferred on systems
            where PulseAudio is used. On BSD systems, <tt class=3D"docutils=
 literal"><span class=3D"pre">--ao=3Doss</span></tt> is preferred.</p>
            </div>
            <p>Available audio output drivers are:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
lsa">alsa<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-alsa=
" class=3D"anchor fa fa-link"></a></tt> (Linux only)</dt>
            <dd><p class=3D"first">ALSA audio output driver</p>
            <p>See <a class=3D"reference internal" href=3D"https://mpv.io/m=
anual/master/#alsa-audio-output-options">ALSA audio output options</a> for =
options specific to this AO.</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p>To get multichannel/surround audio, use <tt class=3D"docutil=
s literal"><span class=3D"pre">--audio-channels=3Dauto</span></tt>. The
            default for this option is <tt class=3D"docutils literal"><span=
 class=3D"pre">auto-safe</span></tt>, which makes this audio output
            explicitly reject multichannel output, as there is no way to de=
tect
            whether a certain channel layout is actually supported.</p>
            <p class=3D"last">You can also try <a class=3D"reference extern=
al" href=3D"https://github.com/mpv-player/mpv/wiki/ALSA-Surround-Sound-and-=
Upmixing">using the upmix plugin</a>.
            This setup enables multichannel audio on the <tt class=3D"docut=
ils literal">default</tt> device
            with automatic upmixing with shared access, so playing stereo
            and multichannel audio at the same time will work as expected.<=
/p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-o=
ss">oss<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-oss" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>OSS audio output driver</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-j=
ack">jack<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-jack=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">JACK (Jack Audio Connection Kit) audio o=
utput driver.</p>
            <p>The following global options are supported by this audio out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-j=
ack-port"><span class=3D"pre">--jack-port=3D&lt;name&gt;</span><a href=3D"h=
ttps://mpv.io/manual/master/#audio-output-drivers-jack-port" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>Connects to the ports with the given name (default: physica=
l ports).</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-j=
ack-name"><span class=3D"pre">--jack-name=3D&lt;client&gt;</span><a href=3D=
"https://mpv.io/manual/master/#audio-output-drivers-jack-name" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Client name that is passed to JACK (default: <tt class=3D"d=
ocutils literal">mpv</tt>). Useful
            if you want to have certain connections established automatical=
ly.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-j=
ack-autostart"><span class=3D"pre">--jack-autostart=3D&lt;yes|no&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-jack-autostar=
t" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Automatically start jackd if necessary (default: disabled).=
 Note that
            this tends to be unreliable and will flood stdout with server m=
essages.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-j=
ack-connect"><span class=3D"pre">--jack-connect=3D&lt;yes|no&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#audio-output-drivers-jack-connect" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Automatically create connections to output ports (default: =
enabled).
            When enabled, the maximum number of output channels will be lim=
ited to
            the number of available output ports.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-j=
ack-std-channel-layout"><span class=3D"pre">--jack-std-channel-layout=3D&lt=
;waveext|any&gt;</span><a href=3D"https://mpv.io/manual/master/#audio-outpu=
t-drivers-jack-std-channel-layout" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Select the standard channel layout (default: waveext). JACK=
 itself has no
            notion of channel layouts (i.e. assigning which speaker a given
            channel is supposed to map to) - it just takes whatever the app=
lication
            outputs, and reroutes it to whatever the user defines. This mea=
ns the
            user and the application are in charge of dealing with the chan=
nel
            layout. <tt class=3D"docutils literal">waveext</tt> uses WAVE_F=
ORMAT_EXTENSIBLE order, which, even
            though it was defined by Microsoft, is the standard on many sys=
tems.
            The value <tt class=3D"docutils literal">any</tt> makes JACK ac=
cept whatever comes from the audio
            filter chain, regardless of channel layout and without reorderi=
ng. This
            mode is probably not very useful, other than for debugging or w=
hen used
            with fixed setups.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-c=
oreaudio">coreaudio<a href=3D"https://mpv.io/manual/master/#audio-output-dr=
ivers-coreaudio" class=3D"anchor fa fa-link"></a></tt> (macOS only)</dt>
            <dd><p class=3D"first">Native macOS audio output driver using A=
udioUnits and the CoreAudio
            sound server.</p>
            <p>Automatically redirects to <tt class=3D"docutils literal">co=
reaudio_exclusive</tt> when playing compressed
            formats.</p>
            <p>The following global options are supported by this audio out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-c=
oreaudio-change-physical-format"><span class=3D"pre">--coreaudio-change-phy=
sical-format=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.io/manual/master=
/#audio-output-drivers-coreaudio-change-physical-format" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Change the physical format to one similar to the requested =
audio format
            (default: no). This has the advantage that multichannel audio o=
utput
            will actually work. The disadvantage is that it will change the
            system-wide audio settings. This is equivalent to changing the =
<tt class=3D"docutils literal">Format</tt>
            setting in the <tt class=3D"docutils literal">Audio Devices</tt=
> dialog in the <tt class=3D"docutils literal">Audio MIDI Setup</tt>
            utility. Note that this does not affect the selected speaker se=
tup.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-c=
oreaudio-spdif-hack"><span class=3D"pre">--coreaudio-spdif-hack=3D&lt;yes|n=
o&gt;</span><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-c=
oreaudio-spdif-hack" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Try to pass through AC3/DTS data as PCM. This is useful for=
 drivers
            which do not report AC3 support. It converts the AC3 data to fl=
oat,
            and assumes the driver will do the inverse conversion, which me=
ans
            a typical A/V receiver will pick it up as compressed IEC framed=
 AC3
            stream, ignoring that it's marked as PCM. This disables normal =
AC3
            passthrough (even if the device reports it as supported). Use w=
ith
            extreme care.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-c=
oreaudio-exclusive">coreaudio_exclusive<a href=3D"https://mpv.io/manual/mas=
ter/#audio-output-drivers-coreaudio-exclusive" class=3D"anchor fa fa-link">=
</a></tt> (macOS only)</dt>
            <dd>Native macOS audio output driver using direct device access=
 and
            exclusive mode (bypasses the sound server).</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-o=
penal">openal<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-=
openal" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">OpenAL audio output driver.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-o=
penal-num-buffers"><span class=3D"pre">--openal-num-buffers=3D&lt;2-128&gt;=
</span><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-openal=
-num-buffers" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the number of audio buffers to use. Lower values ar=
e better for
            lower CPU usage. Default: 4.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-o=
penal-num-samples"><span class=3D"pre">--openal-num-samples=3D&lt;256-32768=
&gt;</span><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-op=
enal-num-samples" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the number of complete samples to use for each buff=
er. Higher
            values are better for lower CPU usage. Default: 8192.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-o=
penal-direct-channels"><span class=3D"pre">--openal-direct-channels=3D&lt;y=
es|no&gt;</span><a href=3D"https://mpv.io/manual/master/#audio-output-drive=
rs-openal-direct-channels" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enable OpenAL Soft's direct channel extension when availabl=
e to avoid
            tinting the sound with ambisonics or HRTF. Default: yes.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ulse">pulse<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-pu=
lse" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">PulseAudio audio output driver</p>
            <p>The following global options are supported by this audio out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ulse-host"><span class=3D"pre">--pulse-host=3D&lt;host&gt;</span><a href=3D=
"https://mpv.io/manual/master/#audio-output-drivers-pulse-host" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Specify the host to use. An empty &lt;host&gt; string uses =
a local connection,
            "localhost" uses network transfer (most likely not what you wan=
t).</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ulse-buffer"><span class=3D"pre">--pulse-buffer=3D&lt;1-2000|native&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-pulse-buff=
er" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the audio buffer size in milliseconds. A higher value b=
uffers
            more data, and has a lower probability of buffer underruns. A s=
maller
            value makes the audio stream react faster, e.g. to playback spe=
ed
            changes. "native" lets the sound server determine buffers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ulse-latency-hacks"><span class=3D"pre">--pulse-latency-hacks=3D&lt;yes|no&=
gt;</span><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-pul=
se-latency-hacks" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enable hacks to workaround PulseAudio ti=
ming bugs (default: no). If
            enabled, mpv will do elaborate latency calculations on its own.=
 If
            disabled, it will use PulseAudio automatically updated timing
            information. Disabling this might help with e.g. networked audi=
o or
            some plugins, while enabling it might help in some unknown situ=
ations
            (it used to be required to get good behavior on old PulseAudio =
versions).</p>
            <p class=3D"last">If you have stuttering video when using pulse=
, try to enable this
            option. (Or try to update PulseAudio.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ulse-allow-suspended"><span class=3D"pre">--pulse-allow-suspended=3D&lt;yes=
|no&gt;</span><a href=3D"https://mpv.io/manual/master/#audio-output-drivers=
-pulse-allow-suspended" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Allow mpv to use PulseAudio even if the sink is suspended (=
default: no).
            Can be useful if PulseAudio is running as a bridge to jack and =
mpv has its sink-input set to the one jack is using.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ipewire">pipewire<a href=3D"https://mpv.io/manual/master/#audio-output-driv=
ers-pipewire" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">PipeWire audio output driver</p>
            <p>The following global options are supported by this audio out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ipewire-buffer"><span class=3D"pre">--pipewire-buffer=3D&lt;1-2000|native&g=
t;</span><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-pipe=
wire-buffer" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the audio buffer size in milliseconds. A higher value b=
uffers
            more data, and has a lower probability of buffer underruns. A s=
maller
            value makes the audio stream react faster, e.g. to playback spe=
ed
            changes. "native" lets the sound server determine buffers.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ipewire-remote"><span class=3D"pre">--pipewire-remote=3D&lt;remote&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-pipewire-re=
mote" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the PipeWire remote daemon name to connect to via l=
ocal UNIX
            sockets.
            An empty &lt;remote&gt; string uses the default remote named <t=
t class=3D"docutils literal"><span class=3D"pre">pipewire-0</span></tt>.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
ipewire-volume-mode"><span class=3D"pre">--pipewire-volume-mode=3D&lt;chann=
el|global&gt;</span><a href=3D"https://mpv.io/manual/master/#audio-output-d=
rivers-pipewire-volume-mode" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify if the <tt class=3D"docutils literal"><span class=
=3D"pre">ao-volume</span></tt> property should apply to the channel
            volumes or the global volume.
            By default the channel volumes are used.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-s=
dl">sdl<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-sdl" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">SDL 1.2+ audio output driver. Should wor=
k on any platform supported by SDL
            1.2, but may require the <tt class=3D"docutils literal">SDL_AUD=
IODRIVER</tt> environment variable to be set
            appropriately for your system.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This driver is for compatibility with extreme=
ly foreign
            environments, such as systems where none of the other drivers
            are available.</p>
            </div>
            <p>The following global options are supported by this audio out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-s=
dl-buflen"><span class=3D"pre">--sdl-buflen=3D&lt;length&gt;</span><a href=
=3D"https://mpv.io/manual/master/#audio-output-drivers-sdl-buflen" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Sets the audio buffer length in seconds. Is used only as a =
hint by the
            sound system. Playing a file with <tt class=3D"docutils literal=
"><span class=3D"pre">-v</span></tt> will show the requested and
            obtained exact buffer size. A value of 0 selects the sound syst=
em
            default.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-n=
ull">null<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-null=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Produces no audio output but maintains v=
ideo playback speed. You can use
            <tt class=3D"docutils literal"><span class=3D"pre">--ao=3Dnull<=
/span> <span class=3D"pre">--ao-null-untimed</span></tt> for benchmarking.<=
/p>
            <p>The following global options are supported by this audio out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-untimed"><span class=3D"pre">--ao-null-untimed</span><a href=3D"http=
s://mpv.io/manual/master/#audio-output-drivers-ao-null-untimed" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Do not simulate timing of a perfect audio device. This mean=
s audio
            decoding will go as fast as possible, instead of timing it to t=
he
            system clock.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-buffer"><span class=3D"pre">--ao-null-buffer</span><a href=3D"https:=
//mpv.io/manual/master/#audio-output-drivers-ao-null-buffer" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>Simulated buffer length in seconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-outburst"><span class=3D"pre">--ao-null-outburst</span><a href=3D"ht=
tps://mpv.io/manual/master/#audio-output-drivers-ao-null-outburst" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Simulated chunk size in samples.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-speed"><span class=3D"pre">--ao-null-speed</span><a href=3D"https://=
mpv.io/manual/master/#audio-output-drivers-ao-null-speed" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd>Simulated audio playback speed as a multiplier. Usually, a =
real audio
            device will not go exactly as fast as the system clock. It will=
 deviate
            just a little, and this option helps to simulate this.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-latency"><span class=3D"pre">--ao-null-latency</span><a href=3D"http=
s://mpv.io/manual/master/#audio-output-drivers-ao-null-latency" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Simulated device latency. This is additional to EOF.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-broken-eof"><span class=3D"pre">--ao-null-broken-eof</span><a href=
=3D"https://mpv.io/manual/master/#audio-output-drivers-ao-null-broken-eof" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Simulate broken audio drivers, which always add the fixed d=
evice
            latency to the reported audio playback position.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-broken-delay"><span class=3D"pre">--ao-null-broken-delay</span><a hr=
ef=3D"https://mpv.io/manual/master/#audio-output-drivers-ao-null-broken-del=
ay" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Simulate broken audio drivers, which don't report latency c=
orrectly.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-channel-layouts"><span class=3D"pre">--ao-null-channel-layouts</span=
><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-ao-null-chan=
nel-layouts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If not empty, this is a <tt class=3D"docutils literal">,</t=
t> separated list of channel layouts the
            AO allows. This can be used to test channel layout selection.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-null-format"><span class=3D"pre">--ao-null-format</span><a href=3D"https:=
//mpv.io/manual/master/#audio-output-drivers-ao-null-format" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd>Force the audio output format the AO will accept. If unset =
accepts any.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-p=
cm">pcm<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-pcm" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Raw PCM/WAVE file writer audio output</p=
>
            <p>The following global options are supported by this audio out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-pcm-waveheader"><span class=3D"pre">--ao-pcm-waveheader=3D&lt;yes|no&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#audio-output-drivers-ao-pcm-=
waveheader" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Include or do not include the WAVE header (default: include=
d). When
            not included, raw PCM will be generated.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-pcm-file"><span class=3D"pre">--ao-pcm-file=3D&lt;filename&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#audio-output-drivers-ao-pcm-file" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Write the sound to <tt class=3D"docutils literal">&lt;filen=
ame&gt;</tt> instead of the default
            <tt class=3D"docutils literal">audiodump.wav</tt>. If <tt class=
=3D"docutils literal"><span class=3D"pre">no-waveheader</span></tt> is spec=
ified, the default is
            <tt class=3D"docutils literal">audiodump.pcm</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-a=
o-pcm-append"><span class=3D"pre">--ao-pcm-append=3D&lt;yes|no&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#audio-output-drivers-ao-pcm-append" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Append to the file, instead of overwriting it. Always use t=
his with the
            <tt class=3D"docutils literal"><span class=3D"pre">no-waveheade=
r</span></tt> option - with <tt class=3D"docutils literal">waveheader</tt> =
it's broken, because
            it will write a WAVE header every time the file is opened.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-s=
ndio">sndio<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-sn=
dio" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Audio output to the OpenBSD sndio sound =
system</p>
            <p class=3D"last">(Note: only supports mono, stereo, 4.0, 5.1 a=
nd 7.1 channel
            layouts.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-output-drivers-w=
asapi">wasapi<a href=3D"https://mpv.io/manual/master/#audio-output-drivers-=
wasapi" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Audio output to the Windows Audio Session API.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"video-output-drivers">
            <h1>VIDEO OUTPUT DRIVERS</h1>
            <p>Video output drivers are interfaces to different video outpu=
t facilities. The
            syntax is:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o"><span class=3D"pre">--vo=3D&lt;driver1,driver2,...[,]&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-vo" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Specify a priority list of video output drivers to be used.=
</dd>
            </dl>
            <p>If the list has a trailing <tt class=3D"docutils literal">,<=
/tt>, mpv will fall back on drivers not contained
            in the list.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">--vo=
=3Dhelp</span></tt> for a list of compiled-in video output drivers.</p>
            <p class=3D"last">The recommended output driver is <tt class=3D=
"docutils literal"><span class=3D"pre">--vo=3Dgpu</span></tt>, which is the=
 default. All
            other drivers are for compatibility or special purposes. If the=
 default
            does not work, it will fallback to other drivers (in the same o=
rder as
            listed by <tt class=3D"docutils literal"><span class=3D"pre">--=
vo=3Dhelp</span></tt>).</p>
            </div>
            <p>Available video output drivers are:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-g=
pu">gpu<a href=3D"https://mpv.io/manual/master/#video-output-drivers-gpu" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">General purpose, customizable, GPU-accel=
erated video output driver. It
            supports extended scaling methods, dithering, color management,=
 custom
            shaders, HDR, and more.</p>
            <p>See <a class=3D"reference internal" href=3D"https://mpv.io/m=
anual/master/#gpu-renderer-options">GPU renderer options</a> for options sp=
ecific to this VO.</p>
            <p>By default, it tries to use fast and fail-safe settings. Use=
 the
            <tt class=3D"docutils literal"><span class=3D"pre">gpu-hq</span=
></tt> profile to use this driver with defaults set to high quality
            rendering. The profile can be applied with <tt class=3D"docutil=
s literal"><span class=3D"pre">--profile=3Dgpu-hq</span></tt> and its
            contents can be viewed with <tt class=3D"docutils literal"><spa=
n class=3D"pre">--show-profile=3Dgpu-hq</span></tt>.</p>
            <p>This VO abstracts over several possible graphics APIs and wi=
ndowing
            contexts, which can be influenced using the <tt class=3D"docuti=
ls literal"><span class=3D"pre">--gpu-api</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">--gpu-contex=
t</span></tt> options.</p>
            <p>Hardware decoding over OpenGL-interop is supported to some d=
egree. Note
            that in this mode, some corner case might not be gracefully han=
dled, and
            color space conversion and chroma upsampling is generally in th=
e hand of
            the hardware decoder APIs.</p>
            <p class=3D"last"><tt class=3D"docutils literal">gpu</tt> makes=
 use of FBOs by default. Sometimes you can achieve better
            quality or performance by changing the <tt class=3D"docutils li=
teral"><span class=3D"pre">--fbo-format</span></tt> option to
            <tt class=3D"docutils literal">rgb16f</tt>, <tt class=3D"docuti=
ls literal">rgb32f</tt> or <tt class=3D"docutils literal">rgb</tt>. Known p=
roblems include Mesa/Intel not
            accepting <tt class=3D"docutils literal">rgb16</tt>, Mesa somet=
imes not being compiled with float texture
            support, and some macOS setups being very slow with <tt class=
=3D"docutils literal">rgb16</tt> but fast
            with <tt class=3D"docutils literal">rgb32f</tt>. If you have pr=
oblems, you can also try enabling the
            <tt class=3D"docutils literal"><span class=3D"pre">--gpu-dumb-m=
ode=3Dyes</span></tt> option.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-g=
pu-next"><span class=3D"pre">gpu-next</span><a href=3D"https://mpv.io/manua=
l/master/#video-output-drivers-gpu-next" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Experimental video renderer based on <tt=
 class=3D"docutils literal">libplacebo</tt>. This supports almost
            the same set of features as <tt class=3D"docutils literal"><spa=
n class=3D"pre">--vo=3Dgpu</span></tt>. See <a class=3D"reference internal"=
 href=3D"https://mpv.io/manual/master/#gpu-renderer-options">GPU renderer o=
ptions</a> for a
            list.</p>
            <p>Should generally be faster and higher quality, but some feat=
ures may still
            be missing or misbehave. Expect (and report!) bugs. See here fo=
r a list of
            known differences and bugs:</p>
            <p class=3D"last"><a class=3D"reference external" href=3D"https=
://github.com/mpv-player/mpv/wiki/GPU-Next-vs-GPU">https://github.com/mpv-p=
layer/mpv/wiki/GPU-Next-vs-GPU</a></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
v">xv<a href=3D"https://mpv.io/manual/master/#video-output-drivers-xv" clas=
s=3D"anchor fa fa-link"></a></tt> (X11 only)</dt>
            <dd><p class=3D"first">Uses the XVideo extension to enable hard=
ware-accelerated display. This is
            the most compatible VO on X, but may be low-quality, and has is=
sues with
            OSD and subtitle display.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This driver is for compatibility with old sys=
tems.</p>
            </div>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
v-adaptor"><span class=3D"pre">--xv-adaptor=3D&lt;number&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-xv-adaptor" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Select a specific XVideo adapter (check xvinfo results).</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
v-port"><span class=3D"pre">--xv-port=3D&lt;number&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#video-output-drivers-xv-port" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Select a specific XVideo port.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
v-ck"><span class=3D"pre">--xv-ck=3D&lt;cur|use|set&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#video-output-drivers-xv-ck" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select the source from which the color k=
ey is taken (default: cur).</p>
            <dl class=3D"last docutils">
            <dt>cur</dt>
            <dd>The default takes the color key currently set in Xv.</dd>
            <dt>use</dt>
            <dd>Use but do not set the color key from mpv (use the <tt clas=
s=3D"docutils literal"><span class=3D"pre">--colorkey</span></tt>
            option to change it).</dd>
            <dt>set</dt>
            <dd>Same as use but also sets the supplied color key.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
v-ck-method"><span class=3D"pre">--xv-ck-method=3D&lt;none|man|bg|auto&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-xv-ck-m=
ethod" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Sets the color key drawing method (defau=
lt: man).</p>
            <dl class=3D"last docutils">
            <dt>none</dt>
            <dd>Disables color-keying.</dd>
            <dt>man</dt>
            <dd>Draw the color key manually (reduces flicker in some cases)=
.</dd>
            <dt>bg</dt>
            <dd>Set the color key as window background.</dd>
            <dt>auto</dt>
            <dd>Let Xv draw the color key.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
v-colorkey"><span class=3D"pre">--xv-colorkey=3D&lt;number&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#video-output-drivers-xv-colorkey" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Changes the color key to an RGB value of your choice. <tt c=
lass=3D"docutils literal">0x000000</tt> is
            black and <tt class=3D"docutils literal">0xffffff</tt> is white=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
v-buffers"><span class=3D"pre">--xv-buffers=3D&lt;number&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-xv-buffers" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Number of image buffers to use for the internal ringbuffer =
(default: 2).
            Increasing this will use more memory, but might help with the X=
 server
            not responding quickly enough if video FPS is close to or highe=
r than
            the display refresh rate.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-x=
11">x11<a href=3D"https://mpv.io/manual/master/#video-output-drivers-x11" c=
lass=3D"anchor fa fa-link"></a></tt> (X11 only)</dt>
            <dd><p class=3D"first">Shared memory video output driver withou=
t hardware acceleration that works
            whenever X11 is present.</p>
            <p>Since mpv 0.30.0, you may need to use <tt class=3D"docutils =
literal"><span class=3D"pre">--profile=3Dsw-fast</span></tt> to get decent
            performance.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This is a fallback only, and should not be no=
rmally used.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
dpau">vdpau<a href=3D"https://mpv.io/manual/master/#video-output-drivers-vd=
pau" class=3D"anchor fa fa-link"></a></tt> (X11 only)</dt>
            <dd><p class=3D"first">Uses the VDPAU interface to display and =
optionally also decode video.
            Hardware decoding is used with <tt class=3D"docutils literal"><=
span class=3D"pre">--hwdec=3Dvdpau</span></tt>. Note that there is
            absolutely no reason to use this, other than compatibility. We =
strongly
            recommend that you use <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--vo=3Dgpu</span></tt> with <tt class=3D"docutils literal"><span=
 class=3D"pre">--hwdec=3Dnvdec</span></tt> instead.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Earlier versions of mpv (and MPlayer, mplayer=
2) provided sub-options
            to tune vdpau post-processing, like <tt class=3D"docutils liter=
al">deint</tt>, <tt class=3D"docutils literal">sharpen</tt>, <tt class=3D"d=
ocutils literal">denoise</tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">chroma-deint=
</span></tt>, <tt class=3D"docutils literal">pullup</tt>, <tt class=3D"docu=
tils literal">hqscaling</tt>. These sub-options are
            deprecated, and you should use the <tt class=3D"docutils litera=
l">vdpaupp</tt> video filter instead.</p>
            </div>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-sharpen"><span class=3D"pre">--vo-vdpau-sharpen=3D&lt;-1-1&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vdpau-sh=
arpen" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">(Deprecated. See note about <tt class=3D=
"docutils literal">vdpaupp</tt>.)</p>
            <p class=3D"last">For positive values, apply a sharpening algor=
ithm to the video, for
            negative values a blurring algorithm (default: 0).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-denoise"><span class=3D"pre">--vo-vdpau-denoise=3D&lt;0-1&gt;</span=
><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vdpau-den=
oise" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">(Deprecated. See note about <tt class=3D=
"docutils literal">vdpaupp</tt>.)</p>
            <p class=3D"last">Apply a noise reduction algorithm to the vide=
o (default: 0; no noise
            reduction).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-chroma-deint"><span class=3D"pre">--vo-vdpau-chroma-deint</span><a =
href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vdpau-chroma-=
deint" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">(Deprecated. See note about <tt class=3D=
"docutils literal">vdpaupp</tt>.)</p>
            <p class=3D"last">Makes temporal deinterlacers operate both on =
luma and chroma (default).
            Use no-chroma-deint to solely use luma and speed up advanced
            deinterlacing. Useful with slow video memory.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-pullup"><span class=3D"pre">--vo-vdpau-pullup</span><a href=3D"http=
s://mpv.io/manual/master/#video-output-drivers-vo-vdpau-pullup" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">(Deprecated. See note about <tt class=3D=
"docutils literal">vdpaupp</tt>.)</p>
            <p class=3D"last">Try to apply inverse telecine, needs motion a=
daptive temporal
            deinterlacing.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-hqscaling"><span class=3D"pre">--vo-vdpau-hqscaling=3D&lt;0-9&gt;</=
span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vdpau=
-hqscaling" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">(Deprecated. See note about <tt class=3D=
"docutils literal">vdpaupp</tt>.)</p>
            <dl class=3D"last docutils">
            <dt>0</dt>
            <dd>Use default VDPAU scaling (default).</dd>
            <dt>1-9</dt>
            <dd>Apply high quality VDPAU scaling (needs capable hardware).<=
/dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-fps"><span class=3D"pre">--vo-vdpau-fps=3D&lt;number&gt;</span><a h=
ref=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vdpau-fps" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Override autodetected display refresh rate value (the value=
 is needed
            for framedrop to allow video playback rates higher than display
            refresh rate, and for vsync-aware frame timing adjustments). De=
fault 0
            means use autodetected value. A positive value is interpreted a=
s a
            refresh rate in Hz and overrides the autodetected value. A nega=
tive
            value disables all timing adjustment and framedrop logic.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-composite-detect"><span class=3D"pre">--vo-vdpau-composite-detect</=
span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vdpau=
-composite-detect" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>NVIDIA's current VDPAU implementation behaves somewhat diff=
erently
            under a compositing window manager and does not give accurate f=
rame
            timing information. With this option enabled, the player tries =
to
            detect whether a compositing window manager is active. If one i=
s
            detected, the player disables timing adjustments as if the user=
 had
            specified <tt class=3D"docutils literal"><span class=3D"pre">fp=
s=3D-1</span></tt> (as they would be based on incorrect input). This
            means timing is somewhat less accurate than without compositing=
, but
            with the composited mode behavior of the NVIDIA driver, there i=
s no
            hard playback speed limit even without the disabled logic. Enab=
led by
            default, use <tt class=3D"docutils literal"><span class=3D"pre"=
>--vo-vdpau-composite-detect=3Dno</span></tt> to disable.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-queuetime-windowed"><span class=3D"pre">--vo-vdpau-queuetime-window=
ed=3D&lt;number&gt;</span><a href=3D"https://mpv.io/manual/master/#video-ou=
tput-drivers-vo-vdpau-queuetime-windowed" class=3D"anchor fa fa-link"></a><=
/tt> and <tt class=3D"docutils literal" id=3D"video-output-drivers-queuetim=
e-fs"><span class=3D"pre">queuetime-fs=3D&lt;number&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#video-output-drivers-queuetime-fs" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Use VDPAU's presentation queue functionality to queue futur=
e video
            frame changes at most this many milliseconds in advance (defaul=
t: 50).
            See below for additional information.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-output-surfaces"><span class=3D"pre">--vo-vdpau-output-surfaces=3D&=
lt;2-15&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-dri=
vers-vo-vdpau-output-surfaces" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Allocate this many output surfaces to display video frames =
(default:
            3). See below for additional information.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-colorkey"><span class=3D"pre">--vo-vdpau-colorkey=3D&lt;#RRGGBB|#AA=
RRGGBB&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-driv=
ers-vo-vdpau-colorkey" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the VDPAU presentation queue background color, which in=
 practice
            is the colorkey used if VDPAU operates in overlay mode (default=
:
            <tt class=3D"docutils literal">#020507</tt>, some shade of blac=
k). If the alpha component of this value
            is 0, the default VDPAU colorkey will be used instead (which is=
 usually
            green).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vdpau-force-yuv"><span class=3D"pre">--vo-vdpau-force-yuv</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vdpau-force-yuv" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Never accept RGBA input. This means mpv will insert a filte=
r to convert
            to a YUV format before the VO. Sometimes useful to force availa=
bility
            of certain YUV-only features, like video equalizer or deinterla=
cing.</dd>
            </dl>
            <p>Using the VDPAU frame queuing functionality controlled by th=
e queuetime
            options makes mpv's frame flip timing less sensitive to system =
CPU load and
            allows mpv to start decoding the next frame(s) slightly earlier=
, which can
            reduce jitter caused by individual slow-to-decode frames. Howev=
er, the
            NVIDIA graphics drivers can make other window behavior such as =
window moves
            choppy if VDPAU is using the blit queue (mainly happens if you =
have the
            composite extension enabled) and this feature is active. If thi=
s happens on
            your system and it bothers you then you can set the queuetime v=
alue to 0 to
            disable this feature. The settings to use in windowed and fulls=
creen mode
            are separate because there should be no reason to disable this =
for
            fullscreen mode (as the driver issue should not affect the vide=
o itself).</p>
            <p class=3D"last">You can queue more frames ahead by increasing=
 the queuetime values and the
            <tt class=3D"docutils literal">output_surfaces</tt> count (to e=
nsure enough surfaces to buffer video for a
            certain time ahead you need at least as many surfaces as the vi=
deo has
            frames during that time, plus two). This could help make video =
smoother in
            some cases. The main downsides are increased video RAM requirem=
ents for
            the surfaces and laggier display response to user commands (dis=
play
            changes only become visible some time after they're queued). Th=
e graphics
            driver implementation may also have limits on the length of max=
imum
            queuing time or number of queued surfaces that work well or at =
all.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
irect3d">direct3d<a href=3D"https://mpv.io/manual/master/#video-output-driv=
ers-direct3d" class=3D"anchor fa fa-link"></a></tt> (Windows only)</dt>
            <dd><p class=3D"first">Video output driver that uses the Direct=
3D interface.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This driver is for compatibility with systems=
 that don't provide
            proper OpenGL drivers, and where ANGLE does not perform well.</=
p>
            </div>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-direct3d-disable-texture-align"><span class=3D"pre">--vo-direct3d-disable=
-texture-align</span><a href=3D"https://mpv.io/manual/master/#video-output-=
drivers-vo-direct3d-disable-texture-align" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd>Normally texture sizes are always aligned to 16. With this =
option
            enabled, the video texture will always have exactly the same si=
ze as
            the video itself.</dd>
            </dl>
            <p>Debug options. These might be incorrect, might be removed in=
 the future,
            might crash, might cause slow downs, etc. Contact the developer=
s if you
            actually need any of these for performance or proper operation.=
</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-direct3d-force-power-of-2"><span class=3D"pre">--vo-direct3d-force-power-=
of-2</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo=
-direct3d-force-power-of-2" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Always force textures to power of 2, even if the device rep=
orts
            non-power-of-2 texture sizes as supported.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-direct3d-texture-memory"><span class=3D"pre">--vo-direct3d-texture-memory=
=3D&lt;mode&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output=
-drivers-vo-direct3d-texture-memory" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd><p class=3D"first">Only affects operation with shaders/text=
uring enabled, and (E)OSD.
            Possible values:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
efault">default<a href=3D"https://mpv.io/manual/master/#video-output-driver=
s-default" class=3D"anchor fa fa-link"></a></tt> (default)</dt>
            <dd>Use <tt class=3D"docutils literal">D3DPOOL_DEFAULT</tt>, wi=
th a <tt class=3D"docutils literal">D3DPOOL_SYSTEMMEM</tt> texture for
            locking. If the driver supports <tt class=3D"docutils literal">=
D3DDEVCAPS_TEXTURESYSTEMMEMORY</tt>,
            <tt class=3D"docutils literal">D3DPOOL_SYSTEMMEM</tt> is used d=
irectly.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
efault-pool"><span class=3D"pre">default-pool</span><a href=3D"https://mpv.=
io/manual/master/#video-output-drivers-default-pool" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Use <tt class=3D"docutils literal">D3DPOOL_DEFAULT</tt>. (L=
ike <tt class=3D"docutils literal">default</tt>, but never use a
            shadow-texture.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
efault-pool-shadow"><span class=3D"pre">default-pool-shadow</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-default-pool-shadow"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Use <tt class=3D"docutils literal">D3DPOOL_DEFAULT</tt>, wi=
th a <tt class=3D"docutils literal">D3DPOOL_SYSTEMMEM</tt> texture for
            locking. (Like <tt class=3D"docutils literal">default</tt>, but=
 always force the shadow-texture.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-m=
anaged">managed<a href=3D"https://mpv.io/manual/master/#video-output-driver=
s-managed" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Use <tt class=3D"docutils literal">D3DPOOL_MANAGED</tt>.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-s=
cratch">scratch<a href=3D"https://mpv.io/manual/master/#video-output-driver=
s-scratch" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Use <tt class=3D"docutils literal">D3DPOOL_SCRATCH</tt>, wi=
th a <tt class=3D"docutils literal">D3DPOOL_SYSTEMMEM</tt> texture for
            locking.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-direct3d-swap-discard"><span class=3D"pre">--vo-direct3d-swap-discard</sp=
an><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-direct3=
d-swap-discard" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Use <tt class=3D"docutils literal">D3DSWAPEFFECT_DISCARD</t=
t>, which might be faster.
            Might be slower too, as it must(?) clear every frame.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-direct3d-exact-backbuffer"><span class=3D"pre">--vo-direct3d-exact-backbu=
ffer</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo=
-direct3d-exact-backbuffer" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Always resize the backbuffer to window size.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-s=
dl">sdl<a href=3D"https://mpv.io/manual/master/#video-output-drivers-sdl" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">SDL 2.0+ Render video output driver, dep=
ending on system with or without
            hardware acceleration. Should work on all platforms supported b=
y SDL 2.0.
            For tuning, refer to your copy of the file <tt class=3D"docutil=
s literal">SDL_hints.h</tt>.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This driver is for compatibility with systems=
 that don't provide
            proper graphics drivers.</p>
            </div>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-s=
dl-sw"><span class=3D"pre">--sdl-sw</span><a href=3D"https://mpv.io/manual/=
master/#video-output-drivers-sdl-sw" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>Continue even if a software renderer is detected.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-s=
dl-switch-mode"><span class=3D"pre">--sdl-switch-mode</span><a href=3D"http=
s://mpv.io/manual/master/#video-output-drivers-sdl-switch-mode" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Instruct SDL to switch the monitor video mode when going fu=
llscreen.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
mabuf-wayland"><span class=3D"pre">dmabuf-wayland</span><a href=3D"https://=
mpv.io/manual/master/#video-output-drivers-dmabuf-wayland" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Experimental Wayland output driver designed for use with ei=
ther drm stateless
            or VA API hardware decoding. The driver is designed to avoid an=
y GPU to CPU copies,
            and to perform scaling and color space conversion using fixed-f=
unction hardware,
            if available, rather than GPU shaders. This frees up GPU resour=
ces for other tasks.
            Currently this driver is experimental and only works with the <=
tt class=3D"docutils literal"><span class=3D"pre">--hwdec=3Dvaapi</span></t=
t>
            or <tt class=3D"docutils literal">hwdec=3Ddrm</tt> drivers. Sup=
ported compositors : Weston and Sway.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
aapi">vaapi<a href=3D"https://mpv.io/manual/master/#video-output-drivers-va=
api" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Intel VA API video output driver with su=
pport for hardware decoding. Note
            that there is absolutely no reason to use this, other than comp=
atibility.
            This is low quality, and has issues with OSD. We strongly recom=
mend that
            you use <tt class=3D"docutils literal"><span class=3D"pre">--vo=
=3Dgpu</span></tt> with <tt class=3D"docutils literal"><span class=3D"pre">=
--hwdec=3Dvaapi</span></tt> instead.</p>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vaapi-scaling"><span class=3D"pre">--vo-vaapi-scaling=3D&lt;algorithm&gt;=
</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-vaa=
pi-scaling" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><dl class=3D"first last docutils">
            <dt>default</dt>
            <dd>Driver default (mpv default as well).</dd>
            <dt>fast</dt>
            <dd>Fast, but low quality.</dd>
            <dt>hq</dt>
            <dd>Unspecified driver dependent high-quality scaling, slow.</d=
d>
            <dt>nla</dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">non-line=
ar</span> anamorphic scaling</tt></dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vaapi-deint-mode"><span class=3D"pre">--vo-vaapi-deint-mode=3D&lt;mode&gt=
;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-va=
api-deint-mode" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select deinterlacing algorithm. Note tha=
t by default deinterlacing is
            initially always off, and needs to be enabled with the <tt clas=
s=3D"docutils literal">d</tt> key
            (default key binding for <tt class=3D"docutils literal">cycle d=
einterlace</tt>).</p>
            <p>This option doesn't apply if libva supports video post proce=
ssing (vpp).
            In this case, the default for <tt class=3D"docutils literal"><s=
pan class=3D"pre">deint-mode</span></tt> is <tt class=3D"docutils literal">=
no</tt>, and enabling
            deinterlacing via user interaction using the methods mentioned =
above
            actually inserts the <tt class=3D"docutils literal">vavpp</tt> =
video filter. If vpp is not actually
            supported with the libva backend in use, you can use this optio=
n to
            forcibly enable VO based deinterlacing.</p>
            <dl class=3D"last docutils">
            <dt>no</dt>
            <dd>Don't allow deinterlacing (default for newer libva).</dd>
            <dt>first-field</dt>
            <dd>Show only first field.</dd>
            <dt>bob</dt>
            <dd>bob deinterlacing (default for older libva).</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-vaapi-scaled-osd"><span class=3D"pre">--vo-vaapi-scaled-osd=3D&lt;yes|no&=
gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-=
vaapi-scaled-osd" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If enabled, then the OSD is rendered at video resolution an=
d scaled to
            display resolution. By default, this is disabled, and the OSD i=
s
            rendered at display resolution if the driver supports it.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-n=
ull">null<a href=3D"https://mpv.io/manual/master/#video-output-drivers-null=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Produces no video output. Useful for ben=
chmarking.</p>
            <p>Usually, it's better to disable video with <tt class=3D"docu=
tils literal"><span class=3D"pre">--no-video</span></tt> instead.</p>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-null-fps"><span class=3D"pre">--vo-null-fps=3D&lt;value&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-vo-null-fps" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Simulate display FPS. This artificially limits how many fra=
mes the
            VO accepts per second.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-c=
aca">caca<a href=3D"https://mpv.io/manual/master/#video-output-drivers-caca=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Color ASCII art video output driver that=
 works on a text console.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This driver is a joke.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-t=
ct">tct<a href=3D"https://mpv.io/manual/master/#video-output-drivers-tct" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Color Unicode art video output driver th=
at works on a text console.
            By default depends on support of true color by modern terminals=
 to display
            the images at full color range, but 256-colors output is also s=
upported (see
            below). On Windows it requires an ansi terminal such as mintty.=
</p>
            <p>Since mpv 0.30.0, you may need to use <tt class=3D"docutils =
literal"><span class=3D"pre">--profile=3Dsw-fast</span></tt> to get decent
            performance.</p>
            <p>Note: the TCT image output is not synchronized with other te=
rminal output
            from mpv, which can lead to broken images. The options <tt clas=
s=3D"docutils literal"><span class=3D"pre">--no-terminal</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">--really-qui=
et</span></tt> can help with that.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-tct-algo"><span class=3D"pre">--vo-tct-algo=3D&lt;algo&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-vo-tct-algo" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select how to write the pixels to the te=
rminal.</p>
            <dl class=3D"last docutils">
            <dt>half-blocks</dt>
            <dd>Uses unicode LOWER HALF BLOCK character to achieve higher v=
ertical
            resolution. (Default.)</dd>
            <dt>plain</dt>
            <dd>Uses spaces. Causes vertical resolution to drop twofolds, b=
ut in
            theory works in more places.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-tct-width"><span class=3D"pre">--vo-tct-width=3D&lt;width&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#video-output-drivers-vo-tct-width" clas=
s=3D"anchor fa fa-link"></a></tt>  <tt class=3D"docutils literal" id=3D"vid=
eo-output-drivers-vo-tct-height"><span class=3D"pre">--vo-tct-height=3D&lt;=
height&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-driv=
ers-vo-tct-height" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Assume the terminal has the specified character width and/o=
r height.
            These default to 80x25 if the terminal size cannot be determine=
d.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-tct-256"><span class=3D"pre">--vo-tct-256=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-output-drivers-vo-tct-256" class=3D=
"anchor fa fa-link"></a></tt> (default: no)</dt>
            <dd>Use 256 colors - for terminals which don't support true col=
or.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-k=
itty">kitty<a href=3D"https://mpv.io/manual/master/#video-output-drivers-ki=
tty" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Graphical output for the terminal, using=
 the kitty graphics protocol.
            Tested with kitty and Konsole.</p>
            <p>You may need to use <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--profile=3Dsw-fast</span></tt> to get decent performance.</p>
            <p>Kitty size and alignment options:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-kitty-cols"><span class=3D"pre">--vo-kitty-cols=3D&lt;columns&gt;</span><=
a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-kitty-cols"=
 class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"video-output-drivers-vo-kitty-rows"><span class=3D"pre">--vo-kitty-rows=
=3D&lt;rows&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output=
-drivers-vo-kitty-rows" class=3D"anchor fa fa-link"></a></tt> (default: 0)<=
/dt>
            <dd>Specify the terminal size in character cells, otherwise (0)=
 read it
            from the terminal, or fall back to 80x25.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-kitty-width"><span class=3D"pre">--vo-kitty-width=3D&lt;width&gt;</span><=
a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-kitty-width=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"video-output-drivers-vo-kitty-height"><span class=3D"pre">--vo-kitty-he=
ight=3D&lt;height&gt;</span><a href=3D"https://mpv.io/manual/master/#video-=
output-drivers-vo-kitty-height" class=3D"anchor fa fa-link"></a></tt> (defa=
ult: 0)</dt>
            <dd>Specify the available size in pixels, otherwise (0) read it=
 from the
            terminal, or fall back to 320x240.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-kitty-left"><span class=3D"pre">--vo-kitty-left=3D&lt;col&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#video-output-drivers-vo-kitty-left" cla=
ss=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"vi=
deo-output-drivers-vo-kitty-top"><span class=3D"pre">--vo-kitty-top=3D&lt;r=
ow&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-=
vo-kitty-top" class=3D"anchor fa fa-link"></a></tt> (default: 0)</dt>
            <dd>Specify the position in character cells where the image sta=
rts (1 is
            the first column or row). If 0 (default) then try to automatica=
lly
            determine it according to the other values and the image aspect=
 ratio
            and zoom.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-kitty-config-clear"><span class=3D"pre">--vo-kitty-config-clear=3D&lt;yes=
|no&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers=
-vo-kitty-config-clear" class=3D"anchor fa fa-link"></a></tt> (default: yes=
)</dt>
            <dd>Whether or not to clear the terminal whenever the output is
            reconfigured (e.g. when video size changes).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-kitty-alt-screen"><span class=3D"pre">--vo-kitty-alt-screen=3D&lt;yes|no&=
gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-=
kitty-alt-screen" class=3D"anchor fa fa-link"></a></tt> (default: yes)</dt>
            <dd>Whether or not to use the alternate screen buffer and retur=
n the
            terminal to its previous state on exit. When set to no, the las=
t
            kitty image stays on screen after quit, with the cursor followi=
ng it.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-kitty-use-shm"><span class=3D"pre">--vo-kitty-use-shm=3D&lt;yes|no&gt;</s=
pan><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-kitty-=
use-shm" class=3D"anchor fa fa-link"></a></tt> (default: no)</dt>
            <dd><p class=3D"first">Use shared memory objects to transfer im=
age data to the terminal.
            This is much faster than sending the data as escape codes, but =
is not
            supported by as many terminals. It also only works on the local=
 machine
            and not via e.g. SSH connections.</p>
            <p class=3D"last">This option is not implemented on Windows.</p=
>
            </dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-s=
ixel">sixel<a href=3D"https://mpv.io/manual/master/#video-output-drivers-si=
xel" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Graphical output for the terminal, using=
 sixels. Tested with <tt class=3D"docutils literal">mlterm</tt> and
            <tt class=3D"docutils literal">xterm</tt>.</p>
            <p>Note: the Sixel image output is not synchronized with other =
terminal
            output from mpv, which can lead to broken images.
            The option <tt class=3D"docutils literal"><span class=3D"pre">-=
-really-quiet</span></tt> can help with that, and is recommended.
            On some platforms, using the <tt class=3D"docutils literal"><sp=
an class=3D"pre">--vo-sixel-buffered</span></tt> option may work as
            well.</p>
            <p>You may need to use <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--profile=3Dsw-fast</span></tt> to get decent performance.</p>
            <p>Note: at the time of writing, <tt class=3D"docutils literal"=
>xterm</tt> does not enable sixel by default -
            launching it as <tt class=3D"docutils literal">xterm <span clas=
s=3D"pre">-ti</span> 340</tt> is one way to enable it. Also, <tt class=3D"d=
ocutils literal">xterm</tt>
            does not display images bigger than 1000x1000 pixels by default=
.</p>
            <p>To render and align sixel images correctly, mpv needs to kno=
w the terminal
            size both in cells and in pixels. By default it tries to use va=
lues which
            the terminal reports, however, due to differences between termi=
nals this is
            an error-prone process which cannot be automated with certainty=
 - some
            terminals report the size in pixels including the padding - e.g=
. <tt class=3D"docutils literal">xterm</tt>,
            while others report the actual usable number of pixels - like <=
tt class=3D"docutils literal">mlterm</tt>.
            Additionally, they may behave differently when maximized or in =
fullscreen,
            and mpv cannot detect this state using standard methods.</p>
            <p>Sixel size and alignment options:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-cols"><span class=3D"pre">--vo-sixel-cols=3D&lt;columns&gt;</span><=
a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-sixel-cols"=
 class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"video-output-drivers-vo-sixel-rows"><span class=3D"pre">--vo-sixel-rows=
=3D&lt;rows&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output=
-drivers-vo-sixel-rows" class=3D"anchor fa fa-link"></a></tt> (default: 0)<=
/dt>
            <dd>Specify the terminal size in character cells, otherwise (0)=
 read it
            from the terminal, or fall back to 80x25. Note that mpv doesn't=
 use the
            the last row with sixel because this seems to result in scrolli=
ng.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-width"><span class=3D"pre">--vo-sixel-width=3D&lt;width&gt;</span><=
a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-sixel-width=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"video-output-drivers-vo-sixel-height"><span class=3D"pre">--vo-sixel-he=
ight=3D&lt;height&gt;</span><a href=3D"https://mpv.io/manual/master/#video-=
output-drivers-vo-sixel-height" class=3D"anchor fa fa-link"></a></tt> (defa=
ult: 0)</dt>
            <dd>Specify the available size in pixels, otherwise (0) read it=
 from the
            terminal, or fall back to 320x240. Other than excluding the las=
t line,
            the height is also further rounded down to a multiple of 6 (six=
el unit
            height) to avoid overflowing below the designated size.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-left"><span class=3D"pre">--vo-sixel-left=3D&lt;col&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#video-output-drivers-vo-sixel-left" cla=
ss=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"vi=
deo-output-drivers-vo-sixel-top"><span class=3D"pre">--vo-sixel-top=3D&lt;r=
ow&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-=
vo-sixel-top" class=3D"anchor fa fa-link"></a></tt> (default: 0)</dt>
            <dd>Specify the position in character cells where the image sta=
rts (1 is
            the first column or row). If 0 (default) then try to automatica=
lly
            determine it according to the other values and the image aspect=
 ratio
            and zoom.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-pad-x"><span class=3D"pre">--vo-sixel-pad-x=3D&lt;pad_x&gt;</span><=
a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-sixel-pad-x=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"video-output-drivers-vo-sixel-pad-y"><span class=3D"pre">--vo-sixel-pad=
-y=3D&lt;pad_y&gt;</span><a href=3D"https://mpv.io/manual/master/#video-out=
put-drivers-vo-sixel-pad-y" class=3D"anchor fa fa-link"></a></tt> (default:=
 -1)</dt>
            <dd>Used only when mpv reads the size in pixels from the termin=
al.
            Specify the number of padding pixels (on one side) which are in=
cluded
            at the size which the terminal reports. If -1 (default) then th=
e number
            of pixels is rounded down to a multiple of number of cells (per=
 axis),
            to take into account padding at the report - this only works co=
rrectly
            when the overall padding per axis is smaller than the number of=
 cells.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-config-clear"><span class=3D"pre">--vo-sixel-config-clear=3D&lt;yes=
|no&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers=
-vo-sixel-config-clear" class=3D"anchor fa fa-link"></a></tt> (default: yes=
)</dt>
            <dd>Whether or not to clear the terminal whenever the output is
            reconfigured (e.g. when video size changes).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-alt-screen"><span class=3D"pre">--vo-sixel-alt-screen=3D&lt;yes|no&=
gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-=
sixel-alt-screen" class=3D"anchor fa fa-link"></a></tt> (default: yes)</dt>
            <dd><p class=3D"first">Whether or not to use the alternate scre=
en buffer and return the
            terminal to its previous state on exit. When set to no, the las=
t
            sixel image stays on screen after quit, with the cursor followi=
ng it.</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">--vo-sixel-exit-clear</span></tt> is a deprecated alias for this opti=
on and
            may be removed in the future.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-buffered"><span class=3D"pre">--vo-sixel-buffered=3D&lt;yes|no&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-sixe=
l-buffered" class=3D"anchor fa fa-link"></a></tt> (default: no)</dt>
            <dd>Buffers the full output sequence before writing it to the t=
erminal.
            On POSIX platforms, this can help prevent interruption (includi=
ng from
            other applications) and thus broken images, but may come at a
            performance cost with some terminals and is subject to implemen=
tation
            details.</dd>
            </dl>
            <p>Sixel image quality options:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-dither"><span class=3D"pre">--vo-sixel-dither=3D&lt;algo&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-sixel-dith=
er" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Selects the dither algorithm which libsi=
xel should apply.
            Can be one of the below list as per libsixel's documentation.</=
p>
            <dl class=3D"last docutils">
            <dt>auto (Default)</dt>
            <dd>Let libsixel choose the dithering method.</dd>
            <dt>none</dt>
            <dd>Don't diffuse</dd>
            <dt>atkinson</dt>
            <dd>Diffuse with Bill Atkinson's method.</dd>
            <dt>fs</dt>
            <dd>Diffuse with Floyd-Steinberg method</dd>
            <dt>jajuni</dt>
            <dd>Diffuse with Jarvis, Judice &amp; Ninke method</dd>
            <dt>stucki</dt>
            <dd>Diffuse with Stucki's method</dd>
            <dt>burkes</dt>
            <dd>Diffuse with Burkes' method</dd>
            <dt>arithmetic</dt>
            <dd>Positionally stable arithmetic dither</dd>
            <dt>xor</dt>
            <dd>Positionally stable arithmetic xor based dither</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-fixedpalette"><span class=3D"pre">--vo-sixel-fixedpalette=3D&lt;yes=
|no&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers=
-vo-sixel-fixedpalette" class=3D"anchor fa fa-link"></a></tt> (default: yes=
)</dt>
            <dd>Use libsixel's built-in static palette using the XTERM256 p=
rofile
            for dither. Fixed palette uses 256 colors for dithering. Note t=
hat
            using <tt class=3D"docutils literal">no</tt> (at the time of wr=
iting) will slow down <tt class=3D"docutils literal">xterm</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-reqcolors"><span class=3D"pre">--vo-sixel-reqcolors=3D&lt;colors&gt=
;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-si=
xel-reqcolors" class=3D"anchor fa fa-link"></a></tt> (default: 256)</dt>
            <dd>Has no effect with fixed palette. Set up libsixel to use re=
quired
            number of colors for dynamic palette. This value depends on the
            terminal emulator as well. Xterm supports 256 colors. Can set t=
his to
            a lower value for faster performance.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-sixel-threshold"><span class=3D"pre">--vo-sixel-threshold=3D&lt;threshold=
&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo=
-sixel-threshold" class=3D"anchor fa fa-link"></a></tt> (default: -1)</dt>
            <dd>Has no effect with fixed palette. Defines the threshold to =
change the
            palette - as percentage of the number of colors, e.g. 20 will c=
hange
            the palette when the number of colors changed by 20%. It's a si=
mple
            measure to reduce the number of palette changes, because it can=
 be slow
            in some terminals (<tt class=3D"docutils literal">xterm</tt>). =
The default (-1) will choose a palette
            on every frame and will have better quality.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-i=
mage">image<a href=3D"https://mpv.io/manual/master/#video-output-drivers-im=
age" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Output each frame into an image file in =
the current directory. Each file
            takes the frame number padded with leading zeros as name.</p>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-format"><span class=3D"pre">--vo-image-format=3D&lt;format&gt;</spa=
n><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-image-fo=
rmat" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select the image file format.</p>
            <dl class=3D"last docutils">
            <dt>jpg</dt>
            <dd>JPEG files, extension .jpg. (Default.)</dd>
            <dt>jpeg</dt>
            <dd>JPEG files, extension .jpeg.</dd>
            <dt>png</dt>
            <dd>PNG files.</dd>
            <dt>webp</dt>
            <dd>WebP files.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-png-compression"><span class=3D"pre">--vo-image-png-compression=3D&=
lt;0-9&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-driv=
ers-vo-image-png-compression" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>PNG compression factor (speed vs. file size tradeoff) (defa=
ult: 7)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-png-filter"><span class=3D"pre">--vo-image-png-filter=3D&lt;0-5&gt;=
</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-ima=
ge-png-filter" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Filter applied prior to PNG compression (0 =3D none; 1 =3D =
sub; 2 =3D up;
            3 =3D average; 4 =3D Paeth; 5 =3D mixed) (default: 5)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-jpeg-quality"><span class=3D"pre">--vo-image-jpeg-quality=3D&lt;0-1=
00&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-=
vo-image-jpeg-quality" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>JPEG quality factor (default: 90)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-jpeg-optimize"><span class=3D"pre">--vo-image-jpeg-optimize=3D&lt;0=
-100&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-driver=
s-vo-image-jpeg-optimize" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>JPEG optimization factor (default: 100)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-webp-lossless"><span class=3D"pre">--vo-image-webp-lossless=3D&lt;y=
es|no&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drive=
rs-vo-image-webp-lossless" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enable writing lossless WebP files (default: no)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-webp-quality"><span class=3D"pre">--vo-image-webp-quality=3D&lt;0-1=
00&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-=
vo-image-webp-quality" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>WebP quality (default: 75)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-webp-compression"><span class=3D"pre">--vo-image-webp-compression=
=3D&lt;0-6&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-=
drivers-vo-image-webp-compression" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>WebP compression factor (default: 4)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-v=
o-image-outdir"><span class=3D"pre">--vo-image-outdir=3D&lt;dirname&gt;</sp=
an><a href=3D"https://mpv.io/manual/master/#video-output-drivers-vo-image-o=
utdir" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify the directory to save the image files to (default: =
<tt class=3D"docutils literal">./</tt>).</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-l=
ibmpv">libmpv<a href=3D"https://mpv.io/manual/master/#video-output-drivers-=
libmpv" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">For use with libmpv direct embedding. As=
 a special case, on macOS it
            is used like a normal VO within mpv (cocoa-cb). Otherwise usele=
ss in any
            other contexts.
            (See <tt class=3D"docutils literal">&lt;mpv/render.h&gt;</tt>.)=
</p>
            <p class=3D"last">This also supports many of the options the <t=
t class=3D"docutils literal">gpu</tt> VO has, depending on the
            backend.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-r=
pi">rpi<a href=3D"https://mpv.io/manual/master/#video-output-drivers-rpi" c=
lass=3D"anchor fa fa-link"></a></tt> (Raspberry Pi)</dt>
            <dd><p class=3D"first">Native video output on the Raspberry Pi =
using the MMAL API.</p>
            <p>This is deprecated. Use <tt class=3D"docutils literal"><span=
 class=3D"pre">--vo=3Dgpu</span></tt> instead, which is the default and
            provides the same functionality. The <tt class=3D"docutils lite=
ral">rpi</tt> VO will be removed in
            mpv 0.23.0. Its functionality was folded into --vo=3Dgpu, which=
 now uses
            RPI hardware decoding by treating it as a hardware overlay (wit=
hout applying
            GL filtering). Also to be changed in 0.23.0: the --fs flag will=
 be reset to
            "no" by default (like on the other platforms).</p>
            <p>The following deprecated global options are supported by thi=
s video output:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-r=
pi-display"><span class=3D"pre">--rpi-display=3D&lt;number&gt;</span><a hre=
f=3D"https://mpv.io/manual/master/#video-output-drivers-rpi-display" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Select the display number on which the video overlay should=
 be shown
            (default: 0).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-r=
pi-layer"><span class=3D"pre">--rpi-layer=3D&lt;number&gt;</span><a href=3D=
"https://mpv.io/manual/master/#video-output-drivers-rpi-layer" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Select the dispmanx layer on which the video overlay should=
 be shown
            (default: -10). Note that mpv will also use the 2 layers above =
the
            selected layer, to handle the window background and OSD. Actual=
 video
            rendering will happen on the layer above the selected layer.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-r=
pi-background"><span class=3D"pre">--rpi-background=3D&lt;yes|no&gt;</span>=
<a href=3D"https://mpv.io/manual/master/#video-output-drivers-rpi-backgroun=
d" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether to render a black background behind the video (defa=
ult: no).
            Normally it's better to kill the console framebuffer instead, w=
hich
            gives better performance.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-r=
pi-osd"><span class=3D"pre">--rpi-osd=3D&lt;yes|no&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#video-output-drivers-rpi-osd" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Enabled by default. If disabled with <tt class=3D"docutils =
literal">no</tt>, no OSD layer is created.
            This also means there will be no subtitles rendered.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm">drm<a href=3D"https://mpv.io/manual/master/#video-output-drivers-drm" c=
lass=3D"anchor fa fa-link"></a></tt> (Direct Rendering Manager)</dt>
            <dd><p class=3D"first">Video output driver using Kernel Mode Se=
tting / Direct Rendering Manager.
            Should be used when one doesn't want to install full-blown grap=
hical
            environment (e.g. no X). Does not support hardware acceleration=
 (if you
            need this, check the <tt class=3D"docutils literal">drm</tt> ba=
ckend for <tt class=3D"docutils literal">gpu</tt> VO).</p>
            <p>Since mpv 0.30.0, you may need to use <tt class=3D"docutils =
literal"><span class=3D"pre">--profile=3Dsw-fast</span></tt> to get decent
            performance.</p>
            <p>The following global options are supported by this video out=
put:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-connector"><span class=3D"pre">--drm-connector=3D[&lt;gpu_number&gt;.]&l=
t;name&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-driv=
ers-drm-connector" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Select the connector to use (usually this is a monitor.) If=
 <tt class=3D"docutils literal">&lt;name&gt;</tt>
            is empty or <tt class=3D"docutils literal">auto</tt>, mpv rende=
rs the output on the first available
            connector. Use <tt class=3D"docutils literal"><span class=3D"pr=
e">--drm-connector=3Dhelp</span></tt> to get a list of available
            connectors. The <tt class=3D"docutils literal">&lt;gpu_number&g=
t;</tt> argument can be used to disambiguate
            multiple graphic cards, but is deprecated in favor of <tt class=
=3D"docutils literal"><span class=3D"pre">--drm-device</span></tt>.
            (default: empty)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-device"><span class=3D"pre">--drm-device=3D&lt;path&gt;</span><a href=3D=
"https://mpv.io/manual/master/#video-output-drivers-drm-device" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Select the DRM device file to use. If specified this overri=
des automatic
            card selection and any card number specified <tt class=3D"docut=
ils literal"><span class=3D"pre">--drm-connector</span></tt>.
            (default: empty)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-mode"><span class=3D"pre">--drm-mode=3D&lt;preferred|highest|N|WxH[@R]&g=
t;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-drm-=
mode" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Mode to use (resolution and frame rate).
            Possible values:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">preferred:</th><td=
 class=3D"field-body">Use the preferred mode for the screen on the selected
            connector. (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">highest:</th><td c=
lass=3D"field-body">Use the mode with the highest resolution available on t=
he
            selected connector.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">N:</th><td class=
=3D"field-body">Select mode by index.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">WxH[@R]:</th><td c=
lass=3D"field-body">Specify mode by width, height, and optionally refresh r=
ate.
            In case several modes match, selects the mode that comes
            first in the EDID list of modes.</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">Use <tt class=3D"docutils literal"><span clas=
s=3D"pre">--drm-mode=3Dhelp</span></tt> to get a list of available modes fo=
r all active
            connectors.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-draw-plane"><span class=3D"pre">--drm-draw-plane=3D&lt;primary|overlay|N=
&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-dr=
m-draw-plane" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select the DRM plane to which video and =
OSD is drawn to, under normal
            circumstances. The plane can be specified as <tt class=3D"docut=
ils literal">primary</tt>, which will
            pick the first applicable primary plane; <tt class=3D"docutils =
literal">overlay</tt>, which will pick
            the first applicable overlay plane; or by index. The index is z=
ero
            based, and related to the CRTC.
            (default: primary)</p>
            <p class=3D"last">When using this option with the drmprime-over=
lay hwdec interop, only the
            OSD is rendered to this plane.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-drmprime-video-plane"><span class=3D"pre">--drm-drmprime-video-plane=3D&=
lt;primary|overlay|N&gt;</span><a href=3D"https://mpv.io/manual/master/#vid=
eo-output-drivers-drm-drmprime-video-plane" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Select the DRM plane to use for video wi=
th the drmprime-overlay hwdec
            interop (used by e.g. the rkmpp hwdec on RockChip SoCs, and v4l=
2 hwdec:s
            on various other SoC:s). The plane is unused otherwise. This op=
tion
            accepts the same values as <tt class=3D"docutils literal"><span=
 class=3D"pre">--drm-draw-plane</span></tt>. (default: overlay)</p>
            <p class=3D"last">To be able to successfully play 4K video on v=
arious SoCs you might need
            to set <tt class=3D"docutils literal"><span class=3D"pre">--drm=
-draw-plane=3Doverlay</span> <span class=3D"pre">--drm-drmprime-video-plane=
=3Dprimary</span></tt>
            and setting <tt class=3D"docutils literal"><span class=3D"pre">=
--drm-draw-surface-size=3D1920x1080</span></tt>, to render the OSD at a
            lower resolution (the video when handled by the hwdec will be o=
n the
            drmprime-video plane and at full 4K resolution)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-format"><span class=3D"pre">--drm-format=3D&lt;xrgb8888|xrgb2101010&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-drm-for=
mat" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select the DRM format to use (default: x=
rgb8888). This allows you to
            choose the bit depth of the DRM mode. xrgb8888 is your usual 24=
 bit per
            pixel/8 bits per channel packed RGB format with 8 bits of paddi=
ng.
            xrgb2101010 is a packed 30 bits per pixel/10 bits per channel p=
acked RGB
            format with 2 bits of padding.</p>
            <p class=3D"last">There are cases when xrgb2101010 will work wi=
th the <tt class=3D"docutils literal">drm</tt> VO, but not
            with the <tt class=3D"docutils literal">drm</tt> backend for th=
e <tt class=3D"docutils literal">gpu</tt> VO. This is because with the
            <tt class=3D"docutils literal">gpu</tt> VO, in addition to requ=
iring support in your DRM driver,
            requires support for xrgb2101010 in your EGL driver</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-draw-surface-size"><span class=3D"pre">--drm-draw-surface-size=3D&lt;[Wx=
H]&gt;</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-=
drm-draw-surface-size" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Sets the size of the surface used on the=
 draw plane. The surface will
            then be upscaled to the current screen resolution. This option =
can be
            useful when used together with the drmprime-overlay hwdec inter=
op at
            high resolutions, as it allows scaling the draw plane (which in=
 this
            case only handles the OSD) down to a size the GPU can handle.</=
p>
            <p>When used without the drmprime-overlay hwdec interop this op=
tion will
            just cause the video to get rendered at a different resolution =
and then
            scaled to screen size.</p>
            <p class=3D"last">(default: display resolution)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-d=
rm-vrr-enabled"><span class=3D"pre">--drm-vrr-enabled=3D&lt;no|yes|auto&gt;=
</span><a href=3D"https://mpv.io/manual/master/#video-output-drivers-drm-vr=
r-enabled" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Toggle use of Variable Refresh Rate (VRR=
), aka Freesync or Adaptive Sync
            on compatible systems. VRR allows for the display to be refresh=
ed at any
            rate within a range (usually ~40Hz-60Hz for 60Hz displays). Thi=
s can help
            with playback of 24/25/50fps content. Support depends on the us=
e of a
            compatible monitor, GPU, and a sufficiently new kernel with dri=
vers
            that support the feature.</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Do not attempt to enable VRR. (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">Attempt to enable VRR, whether the capability is reported o=
r not.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">Attempt to enable VRR if support is reported.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-m=
ediacodec-embed">mediacodec_embed<a href=3D"https://mpv.io/manual/master/#v=
ideo-output-drivers-mediacodec-embed" class=3D"anchor fa fa-link"></a></tt>=
 (Android)</dt>
            <dd><p class=3D"first">Renders <tt class=3D"docutils literal">I=
MGFMT_MEDIACODEC</tt> frames directly to an <tt class=3D"docutils literal">=
android.view.Surface</tt>.
            Requires <tt class=3D"docutils literal"><span class=3D"pre">--h=
wdec=3Dmediacodec</span></tt> for hardware decoding, along with
            <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dmedia=
codec_embed</span></tt> and <tt class=3D"docutils literal"><span class=3D"p=
re">--wid=3D(intptr_t)(*android.view.Surface)</span></tt>.</p>
            <p>Since this video output driver uses native decoding and rend=
ering routines,
            many of mpv's features (subtitle rendering, OSD/OSC, video filt=
ers, etc)
            are not available with this driver.</p>
            <p class=3D"last">To use hardware decoding with <tt class=3D"do=
cutils literal"><span class=3D"pre">--vo=3Dgpu</span></tt> instead, use <tt=
 class=3D"docutils literal"><span class=3D"pre">--hwdec=3Dmediacodec</span>=
</tt>
            or <tt class=3D"docutils literal"><span class=3D"pre">mediacode=
c-copy</span></tt> along with <tt class=3D"docutils literal"><span class=3D=
"pre">--gpu-context=3Dandroid</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-output-drivers-w=
lshm">wlshm<a href=3D"https://mpv.io/manual/master/#video-output-drivers-wl=
shm" class=3D"anchor fa fa-link"></a></tt> (Wayland only)</dt>
            <dd><p class=3D"first">Shared memory video output driver withou=
t hardware acceleration that works
            whenever Wayland is present.</p>
            <p>Since mpv 0.30.0, you may need to use <tt class=3D"docutils =
literal"><span class=3D"pre">--profile=3Dsw-fast</span></tt> to get decent
            performance.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This is a fallback only, and should not be no=
rmally used.</p>
            </div>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"audio-filters">
            <h1>AUDIO FILTERS</h1>
            <p>Audio filters allow you to modify the audio stream and its p=
roperties. The
            syntax is:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-af"><spa=
n class=3D"pre">--af=3D...</span><a href=3D"https://mpv.io/manual/master/#a=
udio-filters-af" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Setup a chain of audio filters. See <tt class=3D"docutils l=
iteral"><span class=3D"pre">--vf</span></tt> (<a class=3D"reference interna=
l" href=3D"https://mpv.io/manual/master/#video-filters">VIDEO FILTERS</a>) =
for the
            full syntax.</dd>
            </dl>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p>To get a full list of available audio filters, see <tt class=
=3D"docutils literal"><span class=3D"pre">--af=3Dhelp</span></tt>.</p>
            <p>Also, keep in mind that most actual filters are available vi=
a the <tt class=3D"docutils literal">lavfi</tt>
            wrapper, which gives you access to most of libavfilter's filter=
s. This
            includes all filters that have been ported from MPlayer to liba=
vfilter.</p>
            <p class=3D"last">The <tt class=3D"docutils literal"><span clas=
s=3D"pre">--vf</span></tt> description describes how libavfilter can be use=
d and how to
            workaround deprecated mpv filters.</p>
            </div>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">--vf<=
/span></tt> group of options for info on how <tt class=3D"docutils literal"=
><span class=3D"pre">--af-defaults</span></tt>, <tt class=3D"docutils liter=
al"><span class=3D"pre">--af-add</span></tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">--af-pre</sp=
an></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--af-del</span=
></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--af-clr</span><=
/tt>, and possibly others work.</p>
            <p>Available filters are:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-lavcac3e=
nc["><span class=3D"pre">lavcac3enc[=3Doptions]</span><a href=3D"https://mp=
v.io/manual/master/#audio-filters-lavcac3enc[" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Encode multi-channel audio to AC-3 at ru=
ntime using libavcodec. Supports
            16-bit native-endian input format, maximum 6 channels. The outp=
ut is
            big-endian when outputting a raw AC-3 stream, native-endian whe=
n
            outputting to S/PDIF. If the input sample rate is not 48 kHz, 4=
4.1 kHz or
            32 kHz, it will be resampled to 48 kHz.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-tospdif"=
><span class=3D"pre">tospdif=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.=
io/manual/master/#audio-filters-tospdif" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Output raw AC-3 stream if <tt class=3D"docutils literal">no=
</tt>, output to S/PDIF for
            pass-through if <tt class=3D"docutils literal">yes</tt> (defaul=
t).</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-bitrate"=
><span class=3D"pre">bitrate=3D&lt;rate&gt;</span><a href=3D"https://mpv.io=
/manual/master/#audio-filters-bitrate" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">The bitrate use for the AC-3 stream. Set=
 it to 384 to get 384 kbps.</p>
            <p>The default is 640. Some receivers might not be able to hand=
le this.</p>
            <p>Valid values: 32, 40, 48, 56, 64, 80, 96, 112, 128,
            160, 192, 224, 256, 320, 384, 448, 512, 576, 640.</p>
            <p>The special value <tt class=3D"docutils literal">auto</tt> s=
elects a default bitrate based on the
            input channel number:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">1ch:</th><td class=
=3D"field-body">96</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2ch:</th><td class=
=3D"field-body">192</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">3ch:</th><td class=
=3D"field-body">224</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">4ch:</th><td class=
=3D"field-body">384</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">5ch:</th><td class=
=3D"field-body">448</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">6ch:</th><td class=
=3D"field-body">448</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-minch"><=
span class=3D"pre">minch=3D&lt;n&gt;</span><a href=3D"https://mpv.io/manual=
/master/#audio-filters-minch" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If the input channel number is less than <tt class=3D"docut=
ils literal">&lt;minch&gt;</tt>, the filter will
            detach itself (default: 3).</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-encoder"=
><span class=3D"pre">encoder=3D&lt;name&gt;</span><a href=3D"https://mpv.io=
/manual/master/#audio-filters-encoder" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>Select the libavcodec encoder used. Currently, this should =
be an AC-3
            encoder, and using another codec will fail horribly.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-format">=
<span class=3D"pre">format=3Dformat:srate:channels:out-srate:out-channels</=
span><a href=3D"https://mpv.io/manual/master/#audio-filters-format" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Does not do any format conversion itself=
. Rather, it may cause the
            filter system to insert necessary conversion filters before or =
after this
            filter if needed. It is primarily useful for controlling the au=
dio format
            going into other filters. To specify the format for audio outpu=
t, see
            <tt class=3D"docutils literal"><span class=3D"pre">--audio-form=
at</span></tt>, <tt class=3D"docutils literal"><span class=3D"pre">--audio-=
samplerate</span></tt>, and <tt class=3D"docutils literal"><span class=3D"p=
re">--audio-channels</span></tt>. This
            filter is able to force a particular format, whereas <tt class=
=3D"docutils literal"><span class=3D"pre">--audio-*</span></tt>
            may be overridden by the ao based on output compatibility.</p>
            <p>All parameters are optional. The first 3 parameters restrict=
 what the filter
            accepts as input. They will therefore cause conversion filters =
to be
            inserted before this one.  The <tt class=3D"docutils literal">o=
ut-</tt> parameters tell the filters or audio
            outputs following this filter how to interpret the data without=
 actually
            doing a conversion. Setting these will probably just break thin=
gs unless you
            really know you want this for some reason, such as testing or d=
ealing with
            broken media.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-<format>=
">&lt;format&gt;<a href=3D"https://mpv.io/manual/master/#audio-filters-%3Cf=
ormat%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Force conversion to this format. Use <tt class=3D"docutils =
literal"><span class=3D"pre">--af=3Dformat=3Dformat=3Dhelp</span></tt> to g=
et
            a list of valid formats.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-<srate>"=
>&lt;srate&gt;<a href=3D"https://mpv.io/manual/master/#audio-filters-%3Csra=
te%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Force conversion to a specific sample rate. The rate is an =
integer,
            48000 for example.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-<channel=
s>">&lt;channels&gt;<a href=3D"https://mpv.io/manual/master/#audio-filters-=
%3Cchannels%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Force mixing to a specific channel layout. See <tt class=3D=
"docutils literal"><span class=3D"pre">--audio-channels</span></tt> option
            for possible values.</dd>
            </dl>
            <p><tt class=3D"docutils literal"><span class=3D"pre">&lt;out-s=
rate&gt;</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">&lt;out-c=
hannels&gt;</span></tt></p>
            <p class=3D"last"><em>NOTE</em>: this filter used to be named <=
tt class=3D"docutils literal">force</tt>. The old <tt class=3D"docutils lit=
eral">format</tt> filter
            used to do conversion itself, unlike this one which lets the fi=
lter system
            handle the conversion.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-scaletem=
po["><span class=3D"pre">scaletempo[=3Doption1:option2:...]</span><a href=
=3D"https://mpv.io/manual/master/#audio-filters-scaletempo[" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Scales audio tempo without altering pitc=
h, optionally synced to playback
            speed (default).</p>
            <p>This works by playing 'stride' ms of audio at normal speed t=
hen consuming
            'stride*scale' ms of input audio. It pieces the strides togethe=
r by
            blending 'overlap'% of stride with audio following the previous=
 stride. It
            optionally performs a short statistical analysis on the next 's=
earch' ms
            of audio to determine the best overlap position.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-scale"><=
span class=3D"pre">scale=3D&lt;amount&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#audio-filters-scale" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Nominal amount to scale tempo. Scales this amount in additi=
on to
            speed. (default: 1.0)</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-stride">=
<span class=3D"pre">stride=3D&lt;amount&gt;</span><a href=3D"https://mpv.io=
/manual/master/#audio-filters-stride" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Length in milliseconds to output each stride. Too high of a=
 value will
            cause noticeable skips at high scale amounts and an echo at low=
 scale
            amounts. Very low values will alter pitch. Increasing improves
            performance. (default: 60)</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-overlap"=
><span class=3D"pre">overlap=3D&lt;percent&gt;</span><a href=3D"https://mpv=
.io/manual/master/#audio-filters-overlap" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Percentage of stride to overlap. Decreasing improves perfor=
mance.
            (default: .20)</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-search">=
<span class=3D"pre">search=3D&lt;amount&gt;</span><a href=3D"https://mpv.io=
/manual/master/#audio-filters-search" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Length in milliseconds to search for best overlap position.=
 Decreasing
            improves performance greatly. On slow systems, you will probabl=
y want
            to set this very low. (default: 14)</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-speed"><=
span class=3D"pre">speed=3D&lt;tempo|pitch|both|none&gt;</span><a href=3D"h=
ttps://mpv.io/manual/master/#audio-filters-speed" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd><p class=3D"first">Set response to speed change.</p>
            <dl class=3D"last docutils">
            <dt>tempo</dt>
            <dd>Scale tempo in sync with speed (default).</dd>
            <dt>pitch</dt>
            <dd><p class=3D"first">Reverses effect of filter. Scales pitch =
without altering tempo.
            Add this to your <tt class=3D"docutils literal">input.conf</tt>=
 to step by musical semi-tones:</p>
            <pre class=3D"literal-block">[ multiply speed 0.943874312681693=
5
] multiply speed 1.059463094352953
</pre>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Loses sync with video.</p>
            </div>
            </dd>
            <dt>both</dt>
            <dd>Scale both tempo and pitch.</dd>
            <dt>none</dt>
            <dd>Ignore speed changes.</dd>
            </dl>
            </dd>
            </dl>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-af">mpv =
<span class=3D"pre">--af=3Dscaletempo</span> <span class=3D"pre">--speed=3D=
1.2</span> media.ogg<a href=3D"https://mpv.io/manual/master/#audio-filters-=
af" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Would play media at 1.2x normal speed, with audio at normal
            pitch. Changing playback speed would change audio tempo to matc=
h.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-af">mpv =
<span class=3D"pre">--af=3Dscaletempo=3Dscale=3D1.2:speed=3Dnone</span> <sp=
an class=3D"pre">--speed=3D1.2</span> media.ogg<a href=3D"https://mpv.io/ma=
nual/master/#audio-filters-af" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Would play media at 1.2x normal speed, with audio at normal
            pitch, but changing playback speed would have no effect on audi=
o
            tempo.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-af">mpv =
<span class=3D"pre">--af=3Dscaletempo=3Dstride=3D30:overlap=3D.50:search=3D=
10</span> media.ogg<a href=3D"https://mpv.io/manual/master/#audio-filters-a=
f" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Would tweak the quality and performance parameters.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-af">mpv =
<span class=3D"pre">--af=3Dscaletempo=3Dscale=3D1.2:speed=3Dpitch</span> au=
dio.ogg<a href=3D"https://mpv.io/manual/master/#audio-filters-af" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>Would play media at 1.2x normal speed, with audio at normal=
 pitch.
            Changing playback speed would change pitch, leaving audio tempo=
 at
            1.2x.</dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-scaletem=
po2["><span class=3D"pre">scaletempo2[=3Doption1:option2:...]</span><a href=
=3D"https://mpv.io/manual/master/#audio-filters-scaletempo2[" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Scales audio tempo without altering pitc=
h.
            The algorithm is ported from chromium and uses the
            Waveform Similarity Overlap-and-add (WSOLA) method.
            It seems to achieve a higher audio quality than scaletempo and =
rubberband.</p>
            <p>By default, the <tt class=3D"docutils literal"><span class=
=3D"pre">search-interval</span></tt> and <tt class=3D"docutils literal"><sp=
an class=3D"pre">window-size</span></tt> parameters
            have the same values as in chromium.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-min-spee=
d"><span class=3D"pre">min-speed=3D&lt;speed&gt;</span><a href=3D"https://m=
pv.io/manual/master/#audio-filters-min-speed" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Mute audio if the playback speed is below <tt class=3D"docu=
tils literal">&lt;speed&gt;</tt>. (default: 0.25)</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-max-spee=
d"><span class=3D"pre">max-speed=3D&lt;speed&gt;</span><a href=3D"https://m=
pv.io/manual/master/#audio-filters-max-speed" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Mute audio if the playback speed is above <tt class=3D"docu=
tils literal">&lt;speed&gt;</tt>
            and <tt class=3D"docutils literal">&lt;speed&gt; !=3D 0</tt>. (=
default: 4.0)</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-search-i=
nterval"><span class=3D"pre">search-interval=3D&lt;amount&gt;</span><a href=
=3D"https://mpv.io/manual/master/#audio-filters-search-interval" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Length in milliseconds to search for best overlap position.=
 (default: 30)</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-window-s=
ize"><span class=3D"pre">window-size=3D&lt;amount&gt;</span><a href=3D"http=
s://mpv.io/manual/master/#audio-filters-window-size" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Length in milliseconds of the overlap-and-add window. (defa=
ult: 20)</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-rubberba=
nd">rubberband<a href=3D"https://mpv.io/manual/master/#audio-filters-rubber=
band" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">High quality pitch correction with libru=
bberband. This can be used in place
            of <tt class=3D"docutils literal">scaletempo</tt>, and will be =
used to adjust audio pitch when playing
            at speed different from normal. It can also be used to adjust a=
udio pitch
            without changing playback speed.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-<pitch-s=
cale>"><span class=3D"pre">&lt;pitch-scale&gt;</span><a href=3D"https://mpv=
.io/manual/master/#audio-filters-%3Cpitch-scale%3E" class=3D"anchor fa fa-l=
ink"></a></tt></dt>
            <dd>Sets the pitch scaling factor. Frequencies are multiplied b=
y this value.</dd>
            </dl>
            <p>This filter has a number of additional sub-options. You can =
list them with
            <tt class=3D"docutils literal">mpv <span class=3D"pre">--af=3Dr=
ubberband=3Dhelp</span></tt>. This will also show the default values
            for each option. The options are not documented here, because t=
hey are
            merely passed to librubberband. Look at the librubberband docum=
entation
            to learn what each option does:
            <a class=3D"reference external" href=3D"https://breakfastquay.c=
om/rubberband/code-doc/classRubberBand_1_1RubberBandStretcher.html">https:/=
/breakfastquay.com/rubberband/code-doc/classRubberBand_1_1RubberBandStretch=
er.html</a>
            (The mapping of the mpv rubberband filter sub-option names and =
values to
            those of librubberband follows a simple pattern: <tt class=3D"d=
ocutils literal">"Option" + Name + Value</tt>.)</p>
            <p>This filter supports the following <tt class=3D"docutils lit=
eral"><span class=3D"pre">af-command</span></tt> commands:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-set-pitc=
h"><span class=3D"pre">set-pitch</span><a href=3D"https://mpv.io/manual/mas=
ter/#audio-filters-set-pitch" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the <tt class=3D"docutils literal"><span class=3D"pre">=
&lt;pitch-scale&gt;</span></tt> argument dynamically. This can be used to
            change the playback pitch at runtime. Note that speed is contro=
lled
            using the standard <tt class=3D"docutils literal">speed</tt> pr=
operty, not <tt class=3D"docutils literal"><span class=3D"pre">af-command</=
span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-multiply=
-pitch"><span class=3D"pre">multiply-pitch</span> &lt;factor&gt;<a href=3D"=
https://mpv.io/manual/master/#audio-filters-multiply-pitch" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Multiply the current value of <tt class=3D"docutils literal=
"><span class=3D"pre">&lt;pitch-scale&gt;</span></tt> dynamically.  For
            example: 0.5 to go down by an octave, 1.5 to go up by a perfect=
 fifth.
            If you want to go up or down by semi-tones, use 1.0594630943529=
53 and
            0.9438743126816935</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-lavfi">l=
avfi=3Dgraph<a href=3D"https://mpv.io/manual/master/#audio-filters-lavfi" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Filter audio using FFmpeg's libavfilter.=
</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-<graph>"=
>&lt;graph&gt;<a href=3D"https://mpv.io/manual/master/#audio-filters-%3Cgra=
ph%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Libavfilter graph. See <tt class=3D"docu=
tils literal">lavfi</tt> video filter for details - the graph
            syntax is the same.</p>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Don't forget to quote libavfilter graphs as d=
escribed in the lavfi
            video filter section.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-o"><span=
 class=3D"pre">o=3D&lt;string&gt;</span><a href=3D"https://mpv.io/manual/ma=
ster/#audio-filters-o" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>AVOptions.</dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-fix-pts"=
><span class=3D"pre">fix-pts=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.=
io/manual/master/#audio-filters-fix-pts" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Determine PTS based on sample count (default: no). If this =
is enabled,
            the player won't rely on libavfilter passing through PTS accura=
tely.
            Instead, it pass a sample count as PTS to libavfilter, and comp=
ute the
            PTS used by mpv based on that and the input PTS. This helps wit=
h filters
            which output a recomputed PTS instead of the original PTS (incl=
uding
            filters which require the PTS to start at 0). mpv normally expe=
cts
            filters to not touch the PTS (or only to the extent of changing=
 frame
            boundaries), so this is not the default, but it will be needed =
to use
            broken filters. In practice, these broken filters will either c=
ause slow
            A/V desync over time (with some files), or break playback compl=
etely if
            you seek or start playback from the middle of a file.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"audio-filters-drop">dr=
op<a href=3D"https://mpv.io/manual/master/#audio-filters-drop" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>This filter drops or repeats audio frames to adapt to playb=
ack speed. It
            always operates on full audio frames, because it was made to ha=
ndle SPDIF
            (compressed audio passthrough). This is used automatically if t=
he
            <tt class=3D"docutils literal"><span class=3D"pre">--video-sync=
=3Ddisplay-adrop</span></tt> option is used. Do not use this filter (or
            the given option); they are extremely low quality.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"video-filters">
            <h1>VIDEO FILTERS</h1>
            <p>Video filters allow you to modify the video stream and its p=
roperties. All of
            the information described in this section applies to audio filt=
ers as well
            (generally using the prefix <tt class=3D"docutils literal"><spa=
n class=3D"pre">--af</span></tt> instead of <tt class=3D"docutils literal">=
<span class=3D"pre">--vf</span></tt>).</p>
            <p>The exact syntax is:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf"><spa=
n class=3D"pre">--vf=3D&lt;filter1[=3Dparameter1:parameter2:...],filter2,..=
.&gt;</span><a href=3D"https://mpv.io/manual/master/#video-filters-vf" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Setup a chain of video filters. This con=
sists on the filter name, and an
            option list of parameters after <tt class=3D"docutils literal">=
=3D</tt>. The parameters are separated by
            <tt class=3D"docutils literal">:</tt> (not <tt class=3D"docutil=
s literal">,</tt>, as that starts a new filter entry).</p>
            <p>Before the filter name, a label can be specified with <tt cl=
ass=3D"docutils literal">@name:</tt>, where
            name is an arbitrary user-given name, which identifies the filt=
er. This
            is only needed if you want to toggle the filter at runtime.</p>
            <p>A <tt class=3D"docutils literal">!</tt> before the filter na=
me means the filter is disabled by default. It
            will be skipped on filter creation. This is also useful for run=
time filter
            toggling.</p>
            <p>See the <tt class=3D"docutils literal">vf</tt> command (and =
<tt class=3D"docutils literal">toggle</tt> sub-command) for further explana=
tions
            and examples.</p>
            <p>The general filter entry syntax is:</p>
            <blockquote>
            <tt class=3D"docutils literal"><span class=3D"pre">["@"&lt;labe=
l-name&gt;":"]</span> <span class=3D"pre">["!"]</span> <span class=3D"pre">=
&lt;filter-name&gt;</span> [ "=3D" <span class=3D"pre">&lt;filter-parameter=
-list&gt;</span> ]</tt></blockquote>
            <p>or for the special "toggle" syntax (see <tt class=3D"docutil=
s literal">vf</tt> command):</p>
            <blockquote>
            <tt class=3D"docutils literal"><span class=3D"pre">"@"&lt;label=
-name&gt;</span></tt></blockquote>
            <p>and the <tt class=3D"docutils literal"><span class=3D"pre">f=
ilter-parameter-list</span></tt>:</p>
            <blockquote>
            <tt class=3D"docutils literal"><span class=3D"pre">&lt;filter-p=
arameter&gt;</span> | <span class=3D"pre">&lt;filter-parameter&gt;</span> "=
," <span class=3D"pre">&lt;filter-parameter-list&gt;</span></tt></blockquot=
e>
            <p>and <tt class=3D"docutils literal"><span class=3D"pre">filte=
r-parameter</span></tt>:</p>
            <blockquote>
            <tt class=3D"docutils literal">( <span class=3D"pre">&lt;param-=
name&gt;</span> "=3D" <span class=3D"pre">&lt;param-value&gt;</span> ) | <s=
pan class=3D"pre">&lt;param-value&gt;</span></tt></blockquote>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">param-value</span></tt> can further be quoted in <tt class=3D"docutil=
s literal">[</tt> / <tt class=3D"docutils literal">]</tt> in case the value
            contains characters like <tt class=3D"docutils literal">,</tt> =
or <tt class=3D"docutils literal">=3D</tt>. This is used in particular with
            the <tt class=3D"docutils literal">lavfi</tt> filter, which use=
s a very similar syntax as mpv (MPlayer
            historically) to specify filters and their parameters.</p>
            </dd>
            </dl>
            <p>Filters can be manipulated at run time. You can use <tt clas=
s=3D"docutils literal">@</tt> labels as described
            above in combination with the <tt class=3D"docutils literal">vf=
</tt> command (see <a class=3D"reference internal" href=3D"https://mpv.io/m=
anual/master/#command-interface">COMMAND INTERFACE</a>) to get
            more control over this. Initially disabled filters with <tt cla=
ss=3D"docutils literal">!</tt> are useful for
            this as well.</p>
            <p>You can also set defaults for each filter. The defaults are =
applied before the
            normal filter parameters. This is deprecated and never worked f=
or the
            libavfilter bridge.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-defau=
lts"><span class=3D"pre">--vf-defaults=3D&lt;filter1[=3Dparameter1:paramete=
r2:...],filter2,...&gt;</span><a href=3D"https://mpv.io/manual/master/#vide=
o-filters-vf-defaults" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set defaults for each filter. (Deprecated. <tt class=3D"doc=
utils literal"><span class=3D"pre">--af-defaults</span></tt> is deprecated
            as well.)</dd>
            </dl>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p>To get a full list of available video filters, see <tt class=
=3D"docutils literal"><span class=3D"pre">--vf=3Dhelp</span></tt> and
            <a class=3D"reference external" href=3D"https://ffmpeg.org/ffmp=
eg-filters.html">https://ffmpeg.org/ffmpeg-filters.html</a> .</p>
            <p>Also, keep in mind that most actual filters are available vi=
a the <tt class=3D"docutils literal">lavfi</tt>
            wrapper, which gives you access to most of libavfilter's filter=
s. This
            includes all filters that have been ported from MPlayer to liba=
vfilter.</p>
            <p>Most builtin filters are deprecated in some ways, unless the=
y're only available
            in mpv (such as filters which deal with mpv specifics, or which=
 are
            implemented in mpv only).</p>
            <p>If a filter is not builtin, the <tt class=3D"docutils litera=
l"><span class=3D"pre">lavfi-bridge</span></tt> will be automatically
            tried. This bridge does not support help output, and does not v=
erify
            parameters before the filter is actually used. Although the mpv=
 syntax
            is rather similar to libavfilter's, it's not the same. (Which m=
eans not
            everything accepted by vf_lavfi's <tt class=3D"docutils literal=
">graph</tt> option will be accepted by
            <tt class=3D"docutils literal"><span class=3D"pre">--vf</span><=
/tt>.)</p>
            <p class=3D"last">You can also prefix the filter name with <tt =
class=3D"docutils literal">lavfi-</tt> to force the wrapper.
            This is helpful if the filter name collides with a deprecated m=
pv builtin
            filter. For example <tt class=3D"docutils literal"><span class=
=3D"pre">--vf=3Dlavfi-scale=3Dargs</span></tt> would use libavfilter's
            <tt class=3D"docutils literal">scale</tt> filter over mpv's dep=
recated builtin one.</p>
            </div>
            <p>Video filters are managed in lists. There are a few commands=
 to manage the
            filter list.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-appen=
d"><span class=3D"pre">--vf-append=3Dfilter</span><a href=3D"https://mpv.io=
/manual/master/#video-filters-vf-append" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Appends the filter given as arguments to the filter list.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-add">=
<span class=3D"pre">--vf-add=3Dfilter</span><a href=3D"https://mpv.io/manua=
l/master/#video-filters-vf-add" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Appends the filter given as arguments to the filter list. (=
Passing multiple
            filters is currently still possible, but deprecated.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-pre">=
<span class=3D"pre">--vf-pre=3Dfilter</span><a href=3D"https://mpv.io/manua=
l/master/#video-filters-vf-pre" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Prepends the filters given as arguments to the filter list.=
 (Passing
            multiple filters is currently still possible, but deprecated.)<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-remov=
e"><span class=3D"pre">--vf-remove=3Dfilter</span><a href=3D"https://mpv.io=
/manual/master/#video-filters-vf-remove" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Deletes the filter from the list. The filter can be either =
given the way it
            was added (filter name and its full argument list), or by label=
 (prefixed
            with <tt class=3D"docutils literal">@</tt>). Matching of filter=
s works as follows: if either of the compared
            filters has a label set, only the labels are compared. If none =
of the
            filters have a label, the filter name, arguments, and argument =
order are
            compared. (Passing multiple filters is currently still possible=
, but
            deprecated.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-toggl=
e"><span class=3D"pre">-vf-toggle=3Dfilter</span><a href=3D"https://mpv.io/=
manual/master/#video-filters-vf-toggle" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd>Add the given filter to the list if it was not present yet,=
 or remove it
            from the list if it was present. Matching of filters works as d=
escribed in
            <tt class=3D"docutils literal"><span class=3D"pre">--vf-remove<=
/span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-del">=
<span class=3D"pre">--vf-del=3Dfilter</span><a href=3D"https://mpv.io/manua=
l/master/#video-filters-vf-del" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Sort of like <tt class=3D"docutils literal"><span class=3D"=
pre">--vf-remove</span></tt>, but also accepts an index number. Index
            numbers start at 0, negative numbers address the end of the lis=
t (-1 is the
            last). Deprecated.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf-clr">=
<span class=3D"pre">--vf-clr</span><a href=3D"https://mpv.io/manual/master/=
#video-filters-vf-clr" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Completely empties the filter list.</dd>
            </dl>
            <p>With filters that support it, you can access parameters by t=
heir name.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf"><spa=
n class=3D"pre">--vf=3D&lt;filter&gt;=3Dhelp</span><a href=3D"https://mpv.i=
o/manual/master/#video-filters-vf" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Prints the parameter names and parameter value ranges for a=
 particular
            filter.</dd>
            </dl>
            <p>Available mpv-only filters are:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-format">=
<span class=3D"pre">format=3Dfmt=3D&lt;value&gt;:colormatrix=3D&lt;value&gt=
;:...</span><a href=3D"https://mpv.io/manual/master/#video-filters-format" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Applies video parameter overrides, with =
optional conversion. By default,
            this overrides the video's parameters without conversion (excep=
t for the
            <tt class=3D"docutils literal">fmt</tt> parameter), but can be =
made to perform an appropriate conversion
            with <tt class=3D"docutils literal">convert=3Dyes</tt> for para=
meters for which conversion is supported.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<fmt>">&=
lt;fmt&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Cfmt%3E"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Image format name, e.g. rgb15, bgr24, 42=
0p, etc. (default: don't change).</p>
            <p>This filter always performs conversion to the given format.<=
/p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">For a list of available formats, use <tt clas=
s=3D"docutils literal"><span class=3D"pre">--vf=3Dformat=3Dfmt=3Dhelp</span=
></tt>.</p>
            </div>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Conversion between hardware formats is suppor=
ted in some cases.
            eg: <tt class=3D"docutils literal">cuda</tt> to <tt class=3D"do=
cutils literal">vulkan</tt>, or <tt class=3D"docutils literal">vaapi</tt> t=
o <tt class=3D"docutils literal">vulkan</tt>.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<convert=
">&lt;convert=3Dyes|no&gt;<a href=3D"https://mpv.io/manual/master/#video-fi=
lters-%3Cconvert" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Force conversion of color parameters (de=
fault: no).</p>
            <p>If this is disabled (the default), the only conversion that =
is possibly
            performed is format conversion if <tt class=3D"docutils literal=
">&lt;fmt&gt;</tt> is set. All other parameters
            (like <tt class=3D"docutils literal">&lt;colormatrix&gt;</tt>) =
are forced without conversion. This mode is
            typically useful when files have been incorrectly tagged.</p>
            <p>If this is enabled, libswscale or zimg is used if any of the=
 parameters
            mismatch. zimg is used of the input/output image formats are su=
pported
            by mpv's zimg wrapper, and if <tt class=3D"docutils literal"><s=
pan class=3D"pre">--sws-allow-zimg=3Dyes</span></tt> is used. Both
            libraries may not support all kinds of conversions. This typica=
lly
            results in silent incorrect conversion. zimg has in many cases =
a better
            chance of performing the conversion correctly.</p>
            <p>In both cases, the color parameters are set on the output st=
age of the
            image format conversion (if <tt class=3D"docutils literal">fmt<=
/tt> was set). The difference is that
            with <tt class=3D"docutils literal">convert=3Dno</tt>, the colo=
r parameters are not passed on to the
            converter.</p>
            <p>If input and output video parameters are the same, conversio=
n is always
            skipped.</p>
            <p>When converting between hardware formats, this parameter has=
 no effect,
            and the only conversion that is done is the format conversion.<=
/p>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf">mpv =
test.mkv <span class=3D"pre">--vf=3Dformat:colormatrix=3Dycgco</span><a hre=
f=3D"https://mpv.io/manual/master/#video-filters-vf" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Results in incorrect colors (if test.mkv was tagged correct=
ly).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf">mpv =
test.mkv <span class=3D"pre">--vf=3Dformat:colormatrix=3Dycgco:convert=3Dye=
s</span> <span class=3D"pre">--sws-allow-zimg</span><a href=3D"https://mpv.=
io/manual/master/#video-filters-vf" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Results in true conversion to <tt class=
=3D"docutils literal">ycgco</tt>, assuming the renderer
            supports it (<tt class=3D"docutils literal"><span class=3D"pre"=
>--vo=3Dgpu</span></tt> normally does). You can add <tt class=3D"docutils l=
iteral"><span class=3D"pre">--vo=3Dxv</span></tt>
            to force a VO which definitely does not support it, which shoul=
d
            show incorrect colors as confirmation.</p>
            <p class=3D"last">Using <tt class=3D"docutils literal"><span cl=
ass=3D"pre">--sws-allow-zimg=3Dno</span></tt> (or disabling zimg at build t=
ime)
            will use libswscale, which cannot perform this conversion as
            of this writing.</p>
            </dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<colorma=
trix>">&lt;colormatrix&gt;<a href=3D"https://mpv.io/manual/master/#video-fi=
lters-%3Ccolormatrix%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Controls the YUV to RGB color space conv=
ersion when playing video. There
            are various standards. Normally, BT.601 should be used for SD v=
ideo, and
            BT.709 for HD video. (This is done by default.) Using incorrect=
 color space
            results in slightly under or over saturated and shifted colors.=
</p>
            <p>These options are not always supported. Different video outp=
uts provide
            varying degrees of support. The <tt class=3D"docutils literal">=
gpu</tt> and <tt class=3D"docutils literal">vdpau</tt> video output
            drivers usually offer full support. The <tt class=3D"docutils l=
iteral">xv</tt> output can set the color
            space if the system video driver supports it, but not input and=
 output
            levels. The <tt class=3D"docutils literal">scale</tt> video fil=
ter can configure color space and input
            levels, but only if the output format is RGB (if the video outp=
ut driver
            supports RGB output, you can force this with <tt class=3D"docut=
ils literal"><span class=3D"pre">-vf</span> scale,format=3Drgba</tt>).</p>
            <p>If this option is set to <tt class=3D"docutils literal">auto=
</tt> (which is the default), the video's
            color space flag will be used. If that flag is unset, the color=
 space
            will be selected automatically. This is done using a simple heu=
ristic that
            attempts to distinguish SD and HD video. If the video is larger=
 than
            1279x576 pixels, BT.709 (HD) will be used; otherwise BT.601 (SD=
) is
            selected.</p>
            <p>Available color spaces are:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">automatic selection (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.601:</th><td cl=
ass=3D"field-body">ITU-R BT.601 (SD)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.709:</th><td cl=
ass=3D"field-body">ITU-R BT.709 (HD)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.2020-ncl:</th><=
td class=3D"field-body">ITU-R BT.2020 non-constant luminance system</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.2020-cl:</th><t=
d class=3D"field-body">ITU-R BT.2020 constant luminance system</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">smpte-240m:</th><t=
d class=3D"field-body">SMPTE-240M</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<colorle=
vels>">&lt;colorlevels&gt;<a href=3D"https://mpv.io/manual/master/#video-fi=
lters-%3Ccolorlevels%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">YUV color levels used with YUV to RGB co=
nversion. This option is only
            necessary when playing broken files which do not follow standar=
d color
            levels or which are flagged wrong. If the video does not specif=
y its
            color range, it is assumed to be limited range.</p>
            <p>The same limitations as with <tt class=3D"docutils literal">=
&lt;colormatrix&gt;</tt> apply.</p>
            <p>Available color ranges are:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">automatic selection (normally limited range) (default)</td=
>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">limited:</th><td c=
lass=3D"field-body">limited range (16-235 for luma, 16-240 for chroma)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">full:</th><td clas=
s=3D"field-body">full range (0-255 for both luma and chroma)</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<primari=
es>">&lt;primaries&gt;<a href=3D"https://mpv.io/manual/master/#video-filter=
s-%3Cprimaries%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">RGB primaries the source file was encode=
d with. Normally this should be set
            in the file header, but when playing broken or mistagged files =
this can be
            used to override the setting.</p>
            <p>This option only affects video output drivers that perform c=
olor
            management, for example <tt class=3D"docutils literal">gpu</tt>=
 with the <tt class=3D"docutils literal"><span class=3D"pre">target-prim</s=
pan></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">icc-profile<=
/span></tt> suboptions set.</p>
            <p>If this option is set to <tt class=3D"docutils literal">auto=
</tt> (which is the default), the video's
            primaries flag will be used. If that flag is unset, the color s=
pace will
            be selected automatically, using the following heuristics: If t=
he
            <tt class=3D"docutils literal">&lt;colormatrix&gt;</tt> is set =
or determined as BT.2020 or BT.709, the
            corresponding primaries are used. Otherwise, if the video heigh=
t is
            exactly 576 (PAL), BT.601-625 is used. If it's exactly 480 or 4=
86 (NTSC),
            BT.601-525 is used. If the video resolution is anything else, B=
T.709 is
            used.</p>
            <p>Available primaries are:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">automatic selection (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.601-525:</th><t=
d class=3D"field-body">ITU-R BT.601 (SD) 525-line systems (NTSC, SMPTE-C)</=
td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.601-625:</th><t=
d class=3D"field-body">ITU-R BT.601 (SD) 625-line systems (PAL, SECAM)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.709:</th><td cl=
ass=3D"field-body">ITU-R BT.709 (HD) (same primaries as sRGB)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.2020:</th><td c=
lass=3D"field-body">ITU-R BT.2020 (UHD)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">apple:</th><td cla=
ss=3D"field-body">Apple RGB</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">adobe:</th><td cla=
ss=3D"field-body">Adobe RGB (1998)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">prophoto:</th><td =
class=3D"field-body">ProPhoto RGB (ROMM)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">cie1931:</th><td c=
lass=3D"field-body">CIE 1931 RGB</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">dci-p3:</th><td cl=
ass=3D"field-body">DCI-P3 (Digital Cinema)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">v-gamut:</th><td c=
lass=3D"field-body">Panasonic V-Gamut primaries</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<gamma>"=
>&lt;gamma&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Cgam=
ma%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Gamma function the source file was encod=
ed with. Normally this should be set
            in the file header, but when playing broken or mistagged files =
this can be
            used to override the setting.</p>
            <p>This option only affects video output drivers that perform c=
olor management.</p>
            <p>If this option is set to <tt class=3D"docutils literal">auto=
</tt> (which is the default), the gamma will
            be set to BT.1886 for YCbCr content, sRGB for RGB content and L=
inear for
            XYZ content.</p>
            <p>Available gamma functions are:</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">automatic selection (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">bt.1886:</th><td c=
lass=3D"field-body">ITU-R BT.1886 (EOTF corresponding to BT.601/BT.709/BT.2=
020)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">srgb:</th><td clas=
s=3D"field-body">IEC 61966-2-4 (sRGB)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">linear:</th><td cl=
ass=3D"field-body">Linear light</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gamma1.8:</th><td =
class=3D"field-body">Pure power curve (gamma 1.8)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gamma2.0:</th><td =
class=3D"field-body">Pure power curve (gamma 2.0)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gamma2.2:</th><td =
class=3D"field-body">Pure power curve (gamma 2.2)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gamma2.4:</th><td =
class=3D"field-body">Pure power curve (gamma 2.4)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gamma2.6:</th><td =
class=3D"field-body">Pure power curve (gamma 2.6)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gamma2.8:</th><td =
class=3D"field-body">Pure power curve (gamma 2.8)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">prophoto:</th><td =
class=3D"field-body">ProPhoto RGB (ROMM) curve</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">pq:</th><td class=
=3D"field-body">ITU-R BT.2100 PQ (Perceptual quantizer) curve</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">hlg:</th><td class=
=3D"field-body">ITU-R BT.2100 HLG (Hybrid Log-gamma) curve</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">v-log:</th><td cla=
ss=3D"field-body">Panasonic V-Log transfer curve</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">s-log1:</th><td cl=
ass=3D"field-body">Sony S-Log1 transfer curve</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">s-log2:</th><td cl=
ass=3D"field-body">Sony S-Log2 transfer curve</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<sig-pea=
k>"><span class=3D"pre">&lt;sig-peak&gt;</span><a href=3D"https://mpv.io/ma=
nual/master/#video-filters-%3Csig-peak%3E" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd><p class=3D"first">Reference peak illumination for the vide=
o file, relative to the
            signal's reference white level. This is mostly interesting for =
HDR, but
            it can also be used tone map SDR content to simulate a differen=
t
            exposure. Normally inferred from tags such as MaxCLL or masteri=
ng
            metadata.</p>
            <p class=3D"last">The default of 0.0 will default to the source=
's nominal peak luminance.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<light>"=
>&lt;light&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Clig=
ht%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><blockquote class=3D"first">
            <p>Light type of the scene. This is mostly correctly inferred b=
ased on the
            gamma function, but it can be useful to override this when view=
ing raw
            camera footage (e.g. V-Log), which is normally scene-referred i=
nstead
            of display-referred.</p>
            <p>Available light types are:</p>
            </blockquote>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">auto:</th><td clas=
s=3D"field-body">Automatic selection (default)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">display:</th><td c=
lass=3D"field-body">Display-referred light (most content)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">hlg:</th><td class=
=3D"field-body">Scene-referred using the HLG OOTF (e.g. HLG content)</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">709-1886:</th><td =
class=3D"field-body">Scene-referred using the BT709+BT1886 interaction</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gamma1.2:</th><td =
class=3D"field-body">Scene-referred using a pure power OOTF (gamma=3D1.2)</=
td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<dolbyvi=
sion">&lt;dolbyvision=3Dyes|no&gt;<a href=3D"https://mpv.io/manual/master/#=
video-filters-%3Cdolbyvision" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether or not to include Dolby Vision metadata (default: y=
es). If
            disabled, any Dolby Vision metadata will be stripped from frame=
s.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<film-gr=
ain"><span class=3D"pre">&lt;film-grain=3Dyes|no&gt;</span><a href=3D"https=
://mpv.io/manual/master/#video-filters-%3Cfilm-grain" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Whether or not to include film grain metadata (default: yes=
). If
            disabled, any film grain metadata will be stripped from frames.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<stereo-=
in>"><span class=3D"pre">&lt;stereo-in&gt;</span><a href=3D"https://mpv.io/=
manual/master/#video-filters-%3Cstereo-in%3E" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Set the stereo mode the video is assumed to be encoded in. =
Use
            <tt class=3D"docutils literal"><span class=3D"pre">--vf=3Dforma=
t:stereo-in=3Dhelp</span></tt> to list all available modes. Check with
            the <tt class=3D"docutils literal">stereo3d</tt> filter documen=
tation to see what the names mean.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<stereo-=
out>"><span class=3D"pre">&lt;stereo-out&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#video-filters-%3Cstereo-out%3E" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd>Set the stereo mode the video should be displayed as. Takes=
 the
            same values as the <tt class=3D"docutils literal"><span class=
=3D"pre">stereo-in</span></tt> option.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<rotate>=
">&lt;rotate&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Cr=
otate%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the rotation the video is assumed to be encoded with in=
 degrees.
            The special value <tt class=3D"docutils literal"><span class=3D=
"pre">-1</span></tt> uses the input format.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<w>">&lt=
;w&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Cw%3E" class=
=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"vide=
o-filters-<h>">&lt;h&gt;<a href=3D"https://mpv.io/manual/master/#video-filt=
ers-%3Ch%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If not 0, perform conversion to the given size. Ignored if
            <tt class=3D"docutils literal">convert=3Dyes</tt> is not set.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<dw>">&l=
t;dw&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Cdw%3E" cl=
ass=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"v=
ideo-filters-<dh>">&lt;dh&gt;<a href=3D"https://mpv.io/manual/master/#video=
-filters-%3Cdh%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the display size. Note that setting the display size su=
ch that
            the video is scaled in both directions instead of just changing=
 the
            aspect ratio is an implementation detail, and might change late=
r.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<dar>">&=
lt;dar&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Cdar%3E"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the display aspect ratio of the video frame. This is a =
float,
            but values such as <tt class=3D"docutils literal">[16:9]</tt> c=
an be passed too (<tt class=3D"docutils literal"><span class=3D"pre">[...]<=
/span></tt> for quoting
            to prevent the option parser from interpreting the <tt class=3D=
"docutils literal">:</tt> character).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<force-s=
caler"><span class=3D"pre">&lt;force-scaler=3Dauto|zimg|sws&gt;</span><a hr=
ef=3D"https://mpv.io/manual/master/#video-filters-%3Cforce-scaler" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Force a specific scaler backend, if applicable. This is a d=
ebug option
            and could go away any time.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<alpha">=
&lt;alpha=3Dauto|straight|premul&gt;<a href=3D"https://mpv.io/manual/master=
/#video-filters-%3Calpha" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set the kind of alpha the video uses. Undefined effect if t=
he image
            format has no alpha channel (could be ignored or cause an error=
,
            depending on how mpv internals evolve). Setting this may or may=
 not
            cause downstream image processing to treat alpha differently, d=
epending
            on support. With <tt class=3D"docutils literal">convert</tt> an=
d zimg used, this will convert the alpha.
            libswscale and other FFmpeg components completely ignore this.<=
/dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-lavfi"><=
span class=3D"pre">lavfi=3Dgraph[:sws-flags[:o=3Dopts]]</span><a href=3D"ht=
tps://mpv.io/manual/master/#video-filters-lavfi" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd><p class=3D"first">Filter video using FFmpeg's libavfilter.=
</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<graph>"=
>&lt;graph&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Cgra=
ph%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The libavfilter graph string. The filter=
 must have a single video input
            pad and a single video output pad.</p>
            <p>See <a class=3D"reference external" href=3D"https://ffmpeg.o=
rg/ffmpeg-filters.html">https://ffmpeg.org/ffmpeg-filters.html</a> for synt=
ax and available
            filters.</p>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">If you want to use the full filter syntax wit=
h this option, you have
            to quote the filter graph in order to prevent mpv's syntax and =
the
            filter graph syntax from clashing. To prevent a quoting and esc=
aping
            mess, consider using <tt class=3D"docutils literal"><span class=
=3D"pre">--lavfi-complex</span></tt> if you know which video
            track you want to use from the input file. (There is only one v=
ideo
            track for nearly all video files anyway.)</p>
            </div>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf"><spa=
n class=3D"pre">--vf=3Dlavfi=3D[gradfun=3D20:30,vflip]</span><a href=3D"htt=
ps://mpv.io/manual/master/#video-filters-vf" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd><tt class=3D"docutils literal">gradfun</tt> filter with non=
sense parameters, followed by a
            <tt class=3D"docutils literal">vflip</tt> filter. (This demonst=
rates how libavfilter takes a
            graph and not just a single filter.) The filter graph string is
            quoted with <tt class=3D"docutils literal">[</tt> and <tt class=
=3D"docutils literal">]</tt>. This requires no additional quoting
            or escaping with some shells (like bash), while others (like
            zsh) require additional <tt class=3D"docutils literal">"</tt> q=
uotes around the option string.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-'-vf"><s=
pan class=3D"pre">'--vf=3Dlavfi=3D"gradfun=3D20:30,vflip"'</span><a href=3D=
"https://mpv.io/manual/master/#video-filters-'-vf" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Same as before, but uses quoting that should be safe with a=
ll
            shells. The outer <tt class=3D"docutils literal">'</tt> quotes =
make sure that the shell does not
            remove the <tt class=3D"docutils literal">"</tt> quotes needed =
by mpv.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-'-vf"><s=
pan class=3D"pre">'--vf=3Dlavfi=3Dgraph=3D"gradfun=3Dradius=3D30:strength=
=3D20,vflip"'</span><a href=3D"https://mpv.io/manual/master/#video-filters-=
'-vf" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Same as before, but uses named parameters for everything.</=
dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<sws-fla=
gs>"><span class=3D"pre">&lt;sws-flags&gt;</span><a href=3D"https://mpv.io/=
manual/master/#video-filters-%3Csws-flags%3E" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd><p class=3D"first">If libavfilter inserts filters for pixel=
 format conversion, this
            option gives the flags which should be passed to libswscale. Th=
is
            option is numeric and takes a bit-wise combination of <tt class=
=3D"docutils literal">SWS_</tt> flags.</p>
            <p class=3D"last">See <tt class=3D"docutils literal"><span clas=
s=3D"pre">https://git.videolan.org/?p=3Dffmpeg.git;a=3Dblob;f=3Dlibswscale/=
swscale.h</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<o>">&lt=
;o&gt;<a href=3D"https://mpv.io/manual/master/#video-filters-%3Co%3E" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set AVFilterGraph options. These should =
be documented by FFmpeg.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-'-vf"><s=
pan class=3D"pre">'--vf=3Dlavfi=3Dyadif:o=3D"threads=3D2,thread_type=3Dslic=
e"'</span><a href=3D"https://mpv.io/manual/master/#video-filters-'-vf" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>forces a specific threading configuration.</dd>
            </dl>
            </div>
            </dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-sub"><sp=
an class=3D"pre">sub=3D[=3Dbottom-margin:top-margin]</span><a href=3D"https=
://mpv.io/manual/master/#video-filters-sub" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Moves subtitle rendering to an arbitrary=
 point in the filter chain, or force
            subtitle rendering in the video filter as opposed to using vide=
o output OSD
            support.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<bottom-=
margin>"><span class=3D"pre">&lt;bottom-margin&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#video-filters-%3Cbottom-margin%3E" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd>Adds a black band at the bottom of the frame. The SSA/ASS r=
enderer can
            place subtitles there (with <tt class=3D"docutils literal"><spa=
n class=3D"pre">--sub-use-margins</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<top-mar=
gin>"><span class=3D"pre">&lt;top-margin&gt;</span><a href=3D"https://mpv.i=
o/manual/master/#video-filters-%3Ctop-margin%3E" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd>Black band on the top for toptitles  (with <tt class=3D"doc=
utils literal"><span class=3D"pre">--sub-use-margins</span></tt>).</dd>
            </dl>
            <div class=3D"admonition admonition-examples last">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vf"><spa=
n class=3D"pre">--vf=3Dsub,eq</span><a href=3D"https://mpv.io/manual/master=
/#video-filters-vf" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Moves sub rendering before the eq filter. This will put bot=
h
            subtitle colors and video under the influence of the video equa=
lizer
            settings.</dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vapoursy=
nth"><span class=3D"pre">vapoursynth=3Dfile:buffered-frames:concurrent-fram=
es</span><a href=3D"https://mpv.io/manual/master/#video-filters-vapoursynth=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Loads a VapourSynth filter script. This =
is intended for streamed
            processing: mpv actually provides a source filter, instead of u=
sing a
            native VapourSynth video source. The mpv source will answer fra=
me
            requests only within a small window of frames (the size of this=
 window
            is controlled with the <tt class=3D"docutils literal"><span cla=
ss=3D"pre">buffered-frames</span></tt> parameter), and requests outside
            of that will return errors. As such, you can't use the full pow=
er of
            VapourSynth, but you can use certain filters.</p>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Do not use this filter, unless you have exper=
t knowledge in VapourSynth,
            and know how to fix bugs in the mpv VapourSynth wrapper code.</=
p>
            </div>
            <p>If you just want to play video generated by VapourSynth (i.e=
. using
            a native VapourSynth video source), it's better to use <tt clas=
s=3D"docutils literal">vspipe</tt> and a
            pipe or FIFO to feed the video to mpv. The same applies if the =
filter script
            requires random frame access (see <tt class=3D"docutils literal=
"><span class=3D"pre">buffered-frames</span></tt> parameter).</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-file">fi=
le<a href=3D"https://mpv.io/manual/master/#video-filters-file" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Filename of the script source. Currently=
, this is always a python
            script (<tt class=3D"docutils literal">.vpy</tt> in VapourSynth=
 convention).</p>
            <p>The variable <tt class=3D"docutils literal">video_in</tt> is=
 set to the mpv video source, and it is
            expected that the script reads video from it. (Otherwise, mpv w=
ill
            decode no video, and the video packet queue will overflow, even=
tually
            leading to only audio playing, or worse.)</p>
            <p>The filter graph created by the script is also expected to p=
ass through
            timestamps using the <tt class=3D"docutils literal">_DurationNu=
m</tt> and <tt class=3D"docutils literal">_DurationDen</tt> frame
            properties.</p>
            <p>See the end of the option list for a full list of script var=
iables
            defined by mpv.</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example:</p>
            <pre class=3D"last literal-block">import vapoursynth as vs
from vapoursynth import core
core.std.AddBorders(video_in, 10, 10, 20, 20).set_output()
</pre>
            </div>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">The script will be reloaded on every seek. Th=
is is done to reset
            the filter properly on discontinuities.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-buffered=
-frames"><span class=3D"pre">buffered-frames</span><a href=3D"https://mpv.i=
o/manual/master/#video-filters-buffered-frames" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Maximum number of decoded video frames t=
hat should be buffered before
            the filter (default: 4). This specifies the maximum number of f=
rames
            the script can request in backward direction.</p>
            <p>E.g. if <tt class=3D"docutils literal"><span class=3D"pre">b=
uffered-frames=3D5</span></tt>, and the script just requested frame 15,
            it can still request frame 10, but frame 9 is not available any=
more.
            If it requests frame 30, mpv will decode 15 more frames, and ke=
ep only
            frames 25-30.</p>
            <p>The only reason why this buffer exists is to serve the rando=
m access
            requests the VapourSynth filter can make.</p>
            <p>The VapourSynth API has a <tt class=3D"docutils literal">get=
FrameAsync</tt> function, which takes an
            absolute frame number. Source filters must respond to all reque=
sts. For
            example, a source filter can request frame 2432, and then frame=
 3.
            Source filters  typically implement this by pre-indexing the en=
tire
            file.</p>
            <p>mpv on the other hand is stream oriented, and does not allow=
 filters to
            seek. (And it would not make sense to allow it, because it woul=
d ruin
            performance.) Filters get frames sequentially in playback direc=
tion, and
            cannot request them out of order.</p>
            <p>To compensate for this mismatch, mpv allows the filter to ac=
cess frames
            within a certain window. <tt class=3D"docutils literal"><span c=
lass=3D"pre">buffered-frames</span></tt> controls the size of this
            window. Most VapourSynth filters happen to work with this, beca=
use mpv
            requests frames sequentially increasing from it, and most filte=
rs only
            require frames "close" to the requested frame.</p>
            <p>If the filter requests a frame that has a higher frame numbe=
r than the
            highest buffered frame, new frames will be decoded until the re=
quested
            frame number is reached. Excessive frames will be flushed out i=
n a FIFO
            manner (there are only at most <tt class=3D"docutils literal"><=
span class=3D"pre">buffered-frames</span></tt> in this buffer).</p>
            <p>If the filter requests a frame that has a lower frame number=
 than the
            lowest buffered frame, the request cannot be satisfied, and an =
error
            is returned to the filter. This kind of error is not supposed t=
o happen
            in a "proper" VapourSynth environment. What exactly happens dep=
ends on
            the filters involved.</p>
            <p>Increasing this buffer will not improve performance. Rather,=
 it will
            waste memory, and slow down seeks (when enough frames to fill t=
he buffer
            need to be decoded at once). It is only needed to prevent the e=
rror
            described in the previous paragraph.</p>
            <p>How many frames a filter requires depends on filter implemen=
tation
            details, and mpv has no way of knowing. A scale filter might ne=
ed only
            1 frame, an interpolation filter may require a small number of =
frames,
            and the <tt class=3D"docutils literal">Reverse</tt> filter will=
 require an infinite number of frames.</p>
            <p>If you want reliable operation to the full extend VapourSynt=
h is
            capable, use <tt class=3D"docutils literal">vspipe</tt>.</p>
            <p class=3D"last">The actual number of buffered frames also dep=
ends on the value of the
            <tt class=3D"docutils literal"><span class=3D"pre">concurrent-f=
rames</span></tt> option. Currently, both option values are
            multiplied to get the final buffer size.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-concurre=
nt-frames"><span class=3D"pre">concurrent-frames</span><a href=3D"https://m=
pv.io/manual/master/#video-filters-concurrent-frames" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Number of frames that should be requeste=
d in parallel. The
            level of concurrency depends on the filter and how quickly mpv =
can
            decode video to feed the filter. This value should probably be
            proportional to the number of cores on your machine. Most time,
            making it higher than the number of cores can actually make it
            slower.</p>
            <p>Technically, mpv will call the VapourSynth <tt class=3D"docu=
tils literal">getFrameAsync</tt> function
            in a loop, until there are <tt class=3D"docutils literal"><span=
 class=3D"pre">concurrent-frames</span></tt> frames that have not
            been returned by the filter yet. This also assumes that the res=
t of the
            mpv filter chain reads the output of the <tt class=3D"docutils =
literal">vapoursynth</tt> filter quickly
            enough. (For example, if you pause the player, filtering will s=
top very
            soon, because the filtered frames are waiting in a queue.)</p>
            <p>Actual concurrency depends on many other factors.</p>
            <p class=3D"last">By default, this uses the special value <tt c=
lass=3D"docutils literal">auto</tt>, which sets the option
            to the number of detected logical CPU cores.</p>
            </dd>
            </dl>
            <p>The following <tt class=3D"docutils literal">.vpy</tt> scrip=
t variables are defined by mpv:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-video-in=
">video_in<a href=3D"https://mpv.io/manual/master/#video-filters-video-in" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The mpv video source as vapoursynth clip. Note that this ha=
s an
            incorrect (very high) length set, which confuses many filters. =
This is
            necessary, because the true number of frames is unknown. You ca=
n use the
            <tt class=3D"docutils literal">Trim</tt> filter on the clip to =
reduce the length.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-video-in=
-dw">video_in_dw<a href=3D"https://mpv.io/manual/master/#video-filters-vide=
o-in-dw" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils liter=
al" id=3D"video-filters-video-in-dh">video_in_dh<a href=3D"https://mpv.io/m=
anual/master/#video-filters-video-in-dh" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Display size of the video. Can be different from video size=
 if the
            video does not use square pixels (e.g. DVD).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-containe=
r-fps">container_fps<a href=3D"https://mpv.io/manual/master/#video-filters-=
container-fps" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">FPS value as reported by file headers. T=
his value can be wrong or
            completely broken (e.g. 0 or NaN). Even if the value is correct=
,
            if another filter changes the real FPS (by dropping or insertin=
g
            frames), the value of this variable will not be useful. Note th=
at
            the <tt class=3D"docutils literal"><span class=3D"pre">--fps</s=
pan></tt> command line option overrides this value.</p>
            <p class=3D"last">Useful for some filters which insist on havin=
g a FPS.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-display-=
fps">display_fps<a href=3D"https://mpv.io/manual/master/#video-filters-disp=
lay-fps" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Refresh rate of the current display. Note that this value c=
an be 0.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vavpp">v=
avpp<a href=3D"https://mpv.io/manual/master/#video-filters-vavpp" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">VA-API video post processing. Requires t=
he system to support VA-API,
            i.e. Linux/BSD only. Works with <tt class=3D"docutils literal">=
<span class=3D"pre">--vo=3Dvaapi</span></tt> and <tt class=3D"docutils lite=
ral"><span class=3D"pre">--vo=3Dgpu</span></tt> only.
            Currently deinterlaces. This filter is automatically inserted i=
f
            deinterlacing is requested (either using the <tt class=3D"docut=
ils literal">d</tt> key, by default mapped to
            the command <tt class=3D"docutils literal">cycle deinterlace</t=
t>, or the <tt class=3D"docutils literal"><span class=3D"pre">--deinterlace=
</span></tt> option).</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-deint"><=
span class=3D"pre">deint=3D&lt;method&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#video-filters-deint" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Select the deinterlacing algorithm.</p>
            <dl class=3D"last docutils">
            <dt>no</dt>
            <dd>Don't perform deinterlacing.</dd>
            <dt>auto</dt>
            <dd>Select the best quality deinterlacing algorithm (default). =
This
            goes by the order of the options as documented, with
            <tt class=3D"docutils literal"><span class=3D"pre">motion-compe=
nsated</span></tt> being considered best quality.</dd>
            <dt>first-field</dt>
            <dd>Show only first field.</dd>
            <dt>bob</dt>
            <dd>bob deinterlacing.</dd>
            <dt>weave, motion-adaptive, motion-compensated</dt>
            <dd>Advanced deinterlacing algorithms. Whether these actually w=
ork
            depends on the GPU hardware, the GPU drivers, driver bugs, and
            mpv bugs.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-<interla=
ced-only>"><span class=3D"pre">&lt;interlaced-only&gt;</span><a href=3D"htt=
ps://mpv.io/manual/master/#video-filters-%3Cinterlaced-only%3E" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><table class=3D"first last docutils field-list" frame=3D"vo=
id" rules=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Deinterlace all frames (default).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">Only deinterlace frames marked as interlaced.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-reversal=
-bug"><span class=3D"pre">reversal-bug=3D&lt;yes|no&gt;</span><a href=3D"ht=
tps://mpv.io/manual/master/#video-filters-reversal-bug" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><table class=3D"first last docutils field-list" frame=3D"vo=
id" rules=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">no:</th><td class=
=3D"field-body">Use the API as it was interpreted by older Mesa drivers. Wh=
ile
            this interpretation was more obvious and intuitive, it was
            apparently wrong, and not shared by Intel driver developers.</t=
d>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">yes:</th><td class=
=3D"field-body">Use Intel interpretation of surface forward and backwards
            references (default). This is what Intel drivers and newer Mesa
            drivers expect. Matters only for the advanced deinterlacing
            algorithms.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-vdpaupp"=
>vdpaupp<a href=3D"https://mpv.io/manual/master/#video-filters-vdpaupp" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">VDPAU video post processing. Works with =
<tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dvdpau</span></tt>=
 and <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu</span></=
tt>
            only. This filter is automatically inserted if deinterlacing is=
 requested
            (either using the <tt class=3D"docutils literal">d</tt> key, by=
 default mapped to the command
            <tt class=3D"docutils literal">cycle deinterlace</tt>, or the <=
tt class=3D"docutils literal"><span class=3D"pre">--deinterlace</span></tt>=
 option). When enabling
            deinterlacing, it is always preferred over software deinterlace=
r filters
            if the <tt class=3D"docutils literal">vdpau</tt> VO is used, an=
d also if <tt class=3D"docutils literal">gpu</tt> is used and hardware
            decoding was activated at least once (i.e. vdpau was loaded).</=
p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-sharpen"=
><span class=3D"pre">sharpen=3D&lt;-1-1&gt;</span><a href=3D"https://mpv.io=
/manual/master/#video-filters-sharpen" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>For positive values, apply a sharpening algorithm to the vi=
deo, for
            negative values a blurring algorithm (default: 0).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-denoise"=
><span class=3D"pre">denoise=3D&lt;0-1&gt;</span><a href=3D"https://mpv.io/=
manual/master/#video-filters-denoise" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Apply a noise reduction algorithm to the video (default: 0;=
 no noise
            reduction).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-deint"><=
span class=3D"pre">deint=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#video-filters-deint" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Whether deinterlacing is enabled (default: no). If enabled,=
 it will use
            the mode selected with <tt class=3D"docutils literal"><span cla=
ss=3D"pre">deint-mode</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-deint-mo=
de"><span class=3D"pre">deint-mode=3D&lt;first-field|bob|temporal|temporal-=
spatial&gt;</span><a href=3D"https://mpv.io/manual/master/#video-filters-de=
int-mode" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Select deinterlacing mode (default: temp=
oral).</p>
            <p>Note that there's currently a mechanism that allows the <tt =
class=3D"docutils literal">vdpau</tt> VO to
            change the <tt class=3D"docutils literal"><span class=3D"pre">d=
eint-mode</span></tt> of auto-inserted <tt class=3D"docutils literal">vdpau=
pp</tt> filters. To avoid
            confusion, it's recommended not to use the <tt class=3D"docutil=
s literal"><span class=3D"pre">--vo=3Dvdpau</span></tt> suboptions
            related to filtering.</p>
            <dl class=3D"last docutils">
            <dt>first-field</dt>
            <dd>Show only first field.</dd>
            <dt>bob</dt>
            <dd>Bob deinterlacing.</dd>
            <dt>temporal</dt>
            <dd>Motion-adaptive temporal deinterlacing. May lead to A/V des=
ync
            with slow video hardware and/or high resolution.</dd>
            <dt>temporal-spatial</dt>
            <dd>Motion-adaptive temporal deinterlacing with edge-guided spa=
tial
            interpolation. Needs fast video hardware.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-chroma-d=
eint"><span class=3D"pre">chroma-deint</span><a href=3D"https://mpv.io/manu=
al/master/#video-filters-chroma-deint" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>Makes temporal deinterlacers operate both on luma and chrom=
a (default).
            Use no-chroma-deint to solely use luma and speed up advanced
            deinterlacing. Useful with slow video memory.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-pullup">=
pullup<a href=3D"https://mpv.io/manual/master/#video-filters-pullup" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Try to apply inverse telecine, needs motion adaptive tempor=
al
            deinterlacing.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-interlac=
ed-only"><span class=3D"pre">interlaced-only=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-filters-interlaced-only" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>If <tt class=3D"docutils literal">yes</tt>, only deinterlac=
e frames marked as interlaced (default: no).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-hqscalin=
g"><span class=3D"pre">hqscaling=3D&lt;0-9&gt;</span><a href=3D"https://mpv=
.io/manual/master/#video-filters-hqscaling" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><dl class=3D"first last docutils">
            <dt>0</dt>
            <dd>Use default VDPAU scaling (default).</dd>
            <dt>1-9</dt>
            <dd>Apply high quality VDPAU scaling (needs capable hardware).<=
/dd>
            </dl>
            </dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-d3d11vpp=
">d3d11vpp<a href=3D"https://mpv.io/manual/master/#video-filters-d3d11vpp" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Direct3D 11 video post processing. Curre=
ntly requires D3D11 hardware
            decoding for use.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-deint"><=
span class=3D"pre">deint=3D&lt;yes|no&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#video-filters-deint" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Whether deinterlacing is enabled (default: no).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-interlac=
ed-only"><span class=3D"pre">interlaced-only=3D&lt;yes|no&gt;</span><a href=
=3D"https://mpv.io/manual/master/#video-filters-interlaced-only" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>If <tt class=3D"docutils literal">yes</tt>, only deinterlac=
e frames marked as interlaced (default: no).</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-mode"><s=
pan class=3D"pre">mode=3D&lt;blend|bob|adaptive|mocomp|ivctc|none&gt;</span=
><a href=3D"https://mpv.io/manual/master/#video-filters-mode" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>Tries to select a video processor with the given processing=
 capability.
            If a video processor supports multiple capabilities, it is not =
clear
            which algorithm is actually selected. <tt class=3D"docutils lit=
eral">none</tt> always falls back. On
            most if not all hardware, this option will probably do nothing,=
 because
            a video processor usually supports all modes or none.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-fingerpr=
int"><span class=3D"pre">fingerprint=3D...</span><a href=3D"https://mpv.io/=
manual/master/#video-filters-fingerprint" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd><p class=3D"first">Compute video frame fingerprints and pro=
vide them as metadata. Actually, it
            currently barely deserved to be called <tt class=3D"docutils li=
teral">fingerprint</tt>, because it does not
            compute "proper" fingerprints, only tiny downscaled images (but=
 which can be
            used to compute image hashes or for similarity matching).</p>
            <p>The main purpose of this filter is to support the <tt class=
=3D"docutils literal"><span class=3D"pre">skip-logo.lua</span></tt> script.
            If this script is dropped, or mpv ever gains a way to load user=
-defined
            filters (other than VapourSynth), this filter will be removed. =
Due to the
            "special" nature of this filter, it will be removed without war=
ning.</p>
            <p>The intended way to read from the filter is using <tt class=
=3D"docutils literal"><span class=3D"pre">vf-metadata</span></tt> (also
            see <tt class=3D"docutils literal"><span class=3D"pre">clear-on=
-query</span></tt> filter parameter). The property will return a list
            of key/value pairs as follows:</p>
            <pre class=3D"literal-block">fp0.pts =3D 1.2345
fp0.hex =3D 1234abcdef...bcde
fp1.pts =3D 1.4567
fp1.hex =3D abcdef1234...6789
...
fpN.pts =3D ...
fpN.hex =3D ...
type =3D gray-hex-16x16
</pre>
            <p>Each <tt class=3D"docutils literal">fp&lt;N&gt;</tt> entry i=
s for a frame. The <tt class=3D"docutils literal">pts</tt> entry specifies =
the
            timestamp of the frame (within the filter chain; in simple case=
s this is
            the same as the display timestamp). The <tt class=3D"docutils l=
iteral">hex</tt> field is the hex encoded
            fingerprint, whose size and meaning depend on the <tt class=3D"=
docutils literal">type</tt> filter option.
            The <tt class=3D"docutils literal">type</tt> field has the same=
 value as the option the filter was created
            with.</p>
            <p>This returns the frames that were filtered since the last qu=
ery of the
            property. If <tt class=3D"docutils literal"><span class=3D"pre"=
>clear-on-query=3Dno</span></tt> was set, a query doesn't reset the list
            of frames. In both cases, a maximum of 10 frames is returned. I=
f there are
            more frames, the oldest frames are discarded. Frames are return=
ed in filter
            order.</p>
            <p>(This doesn't return a structured list for the per-frame det=
ails because the
            internals of the <tt class=3D"docutils literal"><span class=3D"=
pre">vf-metadata</span></tt> mechanism suck. The returned format may
            change in the future.)</p>
            <p>This filter uses zimg for speed and profit. However, it will=
 fallback to
            libswscale in a number of situations: lesser pixel formats, una=
ligned data
            pointers or strides, or if zimg fails to initialize for unknown=
 reasons. In
            these cases, the filter will use more CPU. Also, it will output=
 different
            fingerprints, because libswscale cannot perform the full range =
expansion we
            normally request from zimg. As a consequence, the filter may be=
 slower and
            not work correctly in random situations.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-type"><s=
pan class=3D"pre">type=3D...</span><a href=3D"https://mpv.io/manual/master/=
#video-filters-type" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">What fingerprint to compute. Available t=
ypes are:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">gray-hex-8x8:</th>=
<td class=3D"field-body">grayscale, 8 bit, 8x8 size</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">gray-hex-16x16:</t=
h><td class=3D"field-body">grayscale, 8 bit, 16x16 size (default)</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">Both types simply remove all colors, downscal=
e the image, concatenate
            all pixel values to a byte array, and convert the array to a he=
x string.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-clear-on=
-query"><span class=3D"pre">clear-on-query=3Dyes|no</span><a href=3D"https:=
//mpv.io/manual/master/#video-filters-clear-on-query" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Clear the list of frame fingerprints if the <tt class=3D"do=
cutils literal"><span class=3D"pre">vf-metadata</span></tt> property for
            this filter is queried (default: yes). This requires some care =
by the
            user. Some types of accesses might query the filter multiple ti=
mes,
            which leads to lost frames.</dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-print">p=
rint=3Dyes|no<a href=3D"https://mpv.io/manual/master/#video-filters-print" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Print computed fingerprints to the terminal (default: no). =
This is
            mostly for testing and such. Scripts should use <tt class=3D"do=
cutils literal"><span class=3D"pre">vf-metadata</span></tt> to
            read information from this filter instead.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"video-filters-gpu"><sp=
an class=3D"pre">gpu=3D...</span><a href=3D"https://mpv.io/manual/master/#v=
ideo-filters-gpu" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Convert video to RGB using the OpenGL re=
nderer normally used with
            <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dgpu</=
span></tt>. This requires that the EGL implementation supports off-screen
            rendering on the default display. (This is the case with Mesa.)=
</p>
            <p>Sub-options:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"video-filters-w"><span=
 class=3D"pre">w=3D&lt;pixels&gt;</span><a href=3D"https://mpv.io/manual/ma=
ster/#video-filters-w" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"=
docutils literal" id=3D"video-filters-h"><span class=3D"pre">h=3D&lt;pixels=
&gt;</span><a href=3D"https://mpv.io/manual/master/#video-filters-h" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Size of the output in pixels (default: 0). If not positive,=
 this will
            use the size of the first filtered input frame.</dd>
            </dl>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This is highly experimental. Performance is b=
ad, and it will not work
            everywhere in the first place. Some features are not supported.=
</p>
            </div>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This does not do OSD rendering. If you see OS=
D, then it has been
            rendered by the VO backend. (Subtitles are rendered by the <tt =
class=3D"docutils literal">gpu</tt>
            filter, if possible.)</p>
            </div>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">If you use this with encoding mode, keep in m=
ind that encoding mode will
            convert the RGB filter's output back to yuv420p in software, us=
ing the
            configured software scaler. Using <tt class=3D"docutils literal=
">zimg</tt> might improve this, but in
            any case it might go against your goals when using this filter.=
</p>
            </div>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Do not use this with <tt class=3D"docutils li=
teral"><span class=3D"pre">--vo=3Dgpu</span></tt>. It will apply filtering =
twice, since
            most <tt class=3D"docutils literal"><span class=3D"pre">--vo=3D=
gpu</span></tt> options are unconditionally applied to the <tt class=3D"doc=
utils literal">gpu</tt>
            filter. There is no mechanism in mpv to prevent this.</p>
            </div>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"encoding">
            <h1>ENCODING</h1>
            <p>You can encode files from one format/codec to another using =
this facility.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"encoding-o"><span clas=
s=3D"pre">--o=3D&lt;filename&gt;</span><a href=3D"https://mpv.io/manual/mas=
ter/#encoding-o" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Enables encoding mode and specifies the output file name.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-of"><span cla=
ss=3D"pre">--of=3D&lt;format&gt;</span><a href=3D"https://mpv.io/manual/mas=
ter/#encoding-of" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specifies the output format (overrides autodetection by the=
 file name
            extension of the file specified by <tt class=3D"docutils litera=
l"><span class=3D"pre">-o</span></tt>). See <tt class=3D"docutils literal">=
<span class=3D"pre">--of=3Dhelp</span></tt> for a full
            list of supported formats.</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-ofopts"><span=
 class=3D"pre">--ofopts=3D&lt;options&gt;</span><a href=3D"https://mpv.io/m=
anual/master/#encoding-ofopts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specifies the output format options for =
libavformat.
            See <tt class=3D"docutils literal"><span class=3D"pre">--ofopts=
=3Dhelp</span></tt> for a full list of supported options.</p>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"encoding-ofopts-add"><=
span class=3D"pre">--ofopts-add=3D&lt;option&gt;</span><a href=3D"https://m=
pv.io/manual/master/#encoding-ofopts-add" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Appends the option given as an argument to the options list=
. (Passing
            multiple options is currently still possible, but deprecated.)<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-ofopts"><span=
 class=3D"pre">--ofopts=3D""</span><a href=3D"https://mpv.io/manual/master/=
#encoding-ofopts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Completely empties the options list.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-oac"><span cl=
ass=3D"pre">--oac=3D&lt;codec&gt;</span><a href=3D"https://mpv.io/manual/ma=
ster/#encoding-oac" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specifies the output audio codec. See <tt class=3D"docutils=
 literal"><span class=3D"pre">--oac=3Dhelp</span></tt> for a full list of
            supported codecs.</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-oaoffset"><sp=
an class=3D"pre">--oaoffset=3D&lt;value&gt;</span><a href=3D"https://mpv.io=
/manual/master/#encoding-oaoffset" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Shifts audio data by the given time (in seconds) by adding/=
removing
            samples at the start. Deprecated.</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-oacopts"><spa=
n class=3D"pre">--oacopts=3D&lt;options&gt;</span><a href=3D"https://mpv.io=
/manual/master/#encoding-oacopts" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Specifies the output audio codec options=
 for libavcodec.
            See <tt class=3D"docutils literal"><span class=3D"pre">--oacopt=
s=3Dhelp</span></tt> for a full list of supported options.</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt>"<tt class=3D"docutils literal" id=3D"encoding-oac"><span c=
lass=3D"pre">--oac=3Dlibmp3lame</span> <span class=3D"pre">--oacopts=3Db=3D=
128000</span><a href=3D"https://mpv.io/manual/master/#encoding-oac" class=
=3D"anchor fa fa-link"></a></tt>"</dt>
            <dd>selects 128 kbps MP3 encoding.</dd>
            </dl>
            </div>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"encoding-oacopts-add">=
<span class=3D"pre">--oacopts-add=3D&lt;option&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#encoding-oacopts-add" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Appends the option given as an argument to the options list=
. (Passing
            multiple options is currently still possible, but deprecated.)<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-oacopts"><spa=
n class=3D"pre">--oacopts=3D""</span><a href=3D"https://mpv.io/manual/maste=
r/#encoding-oacopts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Completely empties the options list.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-oafirst"><spa=
n class=3D"pre">--oafirst</span><a href=3D"https://mpv.io/manual/master/#en=
coding-oafirst" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Force the audio stream to become the first stream in the ou=
tput.
            By default, the order is unspecified. Deprecated.</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-ovc"><span cl=
ass=3D"pre">--ovc=3D&lt;codec&gt;</span><a href=3D"https://mpv.io/manual/ma=
ster/#encoding-ovc" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specifies the output video codec. See <tt class=3D"docutils=
 literal"><span class=3D"pre">--ovc=3Dhelp</span></tt> for a full list of
            supported codecs.</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-ovoffset"><sp=
an class=3D"pre">--ovoffset=3D&lt;value&gt;</span><a href=3D"https://mpv.io=
/manual/master/#encoding-ovoffset" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Shifts video data by the given time (in seconds) by shiftin=
g the pts
            values. Deprecated.</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-ovcopts"><spa=
n class=3D"pre">--ovcopts=3D&lt;options&gt;</span><a href=3D"https://mpv.io=
/manual/master/#encoding-ovcopts" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Specifies the output video codec options=
 for libavcodec.
            See --ovcopts=3Dhelp for a full list of supported options.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"encoding-&quot;-ovc"><=
span class=3D"pre">"--ovc=3Dmpeg4</span> <span class=3D"pre">--ovcopts=3Dqs=
cale=3D5"</span><a href=3D"https://mpv.io/manual/master/#encoding-%22-ovc" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>selects constant quantizer scale 5 for MPEG-4 encoding.</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"encoding-&quot;-ovc"><=
span class=3D"pre">"--ovc=3Dlibx264</span> <span class=3D"pre">--ovcopts=3D=
crf=3D23"</span><a href=3D"https://mpv.io/manual/master/#encoding-%22-ovc" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>selects VBR quality factor 23 for H.264 encoding.</dd>
            </dl>
            </div>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"encoding-ovcopts-add">=
<span class=3D"pre">--ovcopts-add=3D&lt;option&gt;</span><a href=3D"https:/=
/mpv.io/manual/master/#encoding-ovcopts-add" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Appends the option given as an argument to the options list=
. (Passing
            multiple options is currently still possible, but deprecated.)<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-ovcopts"><spa=
n class=3D"pre">--ovcopts=3D""</span><a href=3D"https://mpv.io/manual/maste=
r/#encoding-ovcopts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Completely empties the options list.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-ovfirst"><spa=
n class=3D"pre">--ovfirst</span><a href=3D"https://mpv.io/manual/master/#en=
coding-ovfirst" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Force the video stream to become the first stream in the ou=
tput.
            By default, the order is unspecified. Deprecated.</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-orawts"><span=
 class=3D"pre">--orawts</span><a href=3D"https://mpv.io/manual/master/#enco=
ding-orawts" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Copies input pts to the output video (not supported by some=
 output
            container formats, e.g. AVI). In this mode, discontinuities are=
 not fixed
            and all pts are passed through as-is. Never seek backwards or u=
se multiple
            input files in this mode!</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-no-ocopy-meta=
data"><span class=3D"pre">--no-ocopy-metadata</span><a href=3D"https://mpv.=
io/manual/master/#encoding-no-ocopy-metadata" class=3D"anchor fa fa-link"><=
/a></tt></dt>
            <dd>Turns off copying of metadata from input files to output fi=
les when
            encoding (which is enabled by default).</dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-oset-metadata=
"><span class=3D"pre">--oset-metadata=3D&lt;metadata-tag[,metadata-tag,...]=
&gt;</span><a href=3D"https://mpv.io/manual/master/#encoding-oset-metadata"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specifies metadata to include in the out=
put file.
            Supported keys vary between output formats. For example, Matros=
ka (MKV) and
            FLAC allow almost arbitrary keys, while support in MP4 and MP3 =
is more
            limited.</p>
            <p>This is a key/value list option. See <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-options">List Options</=
a> for details.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt>"<tt class=3D"docutils literal" id=3D"encoding-oset-metadat=
a"><span class=3D"pre">--oset-metadata=3Dtitle=3D"Output</span> <span class=
=3D"pre">title",comment=3D"Another</span> tag"<a href=3D"https://mpv.io/man=
ual/master/#encoding-oset-metadata" class=3D"anchor fa fa-link"></a></tt>"<=
/dt>
            <dd>adds a title and a comment to the output file.</dd>
            </dl>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"encoding-oremove-metad=
ata"><span class=3D"pre">--oremove-metadata=3D&lt;metadata-tag[,metadata-ta=
g,...]&gt;</span><a href=3D"https://mpv.io/manual/master/#encoding-oremove-=
metadata" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Specifies metadata to exclude from the o=
utput file when copying from the
            input file.</p>
            <p>This is a string list option. See <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-options">List Options</a> =
for details.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <dl class=3D"last docutils">
            <dt>"<tt class=3D"docutils literal" id=3D"encoding-oremove-meta=
data"><span class=3D"pre">--oremove-metadata=3Dcomment,genre</span><a href=
=3D"https://mpv.io/manual/master/#encoding-oremove-metadata" class=3D"ancho=
r fa fa-link"></a></tt>"</dt>
            <dd>excludes copying of the the comment and genre tags to the o=
utput
            file.</dd>
            </dl>
            </div>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"command-interface">
            <h1>COMMAND INTERFACE</h1>
            <p>The mpv core can be controlled with commands and properties.=
 A number of ways
            to interact with the player use them: key bindings (<tt class=
=3D"docutils literal">input.conf</tt>), OSD
            (showing information with properties), JSON IPC, the client API=
 (<tt class=3D"docutils literal">libmpv</tt>),
            and the classic slave mode.</p>
            <div class=3D"section" id=3D"input-conf">
            <h2>input.conf</h2>
            <p>The input.conf file consists of a list of key bindings, for =
example:</p>
            <pre class=3D"literal-block">s screenshot      # take a screens=
hot with the s key
LEFT seek 15      # map the left-arrow key to seeking forward by 15 seconds
</pre>
            <p>Each line maps a key to an input command. Keys are specified=
 with their literal
            value (upper case if combined with <tt class=3D"docutils litera=
l">Shift</tt>), or a name for special keys. For
            example, <tt class=3D"docutils literal">a</tt> maps to the <tt =
class=3D"docutils literal">a</tt> key without shift, and <tt class=3D"docut=
ils literal">A</tt> maps to <tt class=3D"docutils literal">a</tt>
            with shift.</p>
            <p>The file is located in the mpv configuration directory (norm=
ally at
            <tt class=3D"docutils literal"><span class=3D"pre">~/.config/mp=
v/input.conf</span></tt> depending on platform). The default bindings are
            defined here:</p>
            <pre class=3D"literal-block">https://github.com/mpv-player/mpv/=
blob/master/etc/input.conf
</pre>
            <p>A list of special keys can be obtained with</p>
            <blockquote>
            <tt class=3D"docutils literal">mpv <span class=3D"pre">--input-=
keylist</span></tt></blockquote>
            <p>In general, keys can be combined with <tt class=3D"docutils =
literal">Shift</tt>, <tt class=3D"docutils literal">Ctrl</tt> and <tt class=
=3D"docutils literal">Alt</tt>:</p>
            <pre class=3D"literal-block">ctrl+q quit
</pre>
            <p><strong>mpv</strong> can be started in input test mode, whic=
h displays key bindings and the
            commands they're bound to on the OSD, instead of executing the =
commands:</p>
            <pre class=3D"literal-block">mpv --input-test --force-window --=
idle
</pre>
            <p>(Only closing the window will make <strong>mpv</strong> exit=
, pressing normal keys will
            merely display the binding, even if mapped to quit.)</p>
            <p>Also see <a class=3D"reference internal" href=3D"https://mpv=
.io/manual/master/#key-names">Key names</a>.</p>
            </div>
            <div class=3D"section" id=3D"input-conf-syntax">
            <h2>input.conf syntax</h2>
            <p><tt class=3D"docutils literal"><span class=3D"pre">[Shift+][=
Ctrl+][Alt+][Meta+]&lt;key&gt;</span> <span class=3D"pre">[{&lt;section&gt;=
}]</span> &lt;command&gt; ( ; &lt;command&gt; )*</tt></p>
            <p>Note that by default, the right Alt key can be used to creat=
e special
            characters, and thus does not register as a modifier. The optio=
n
            <tt class=3D"docutils literal"><span class=3D"pre">--no-input-r=
ight-alt-gr</span></tt> changes this behavior.</p>
            <p>Newlines always start a new binding. <tt class=3D"docutils l=
iteral">#</tt> starts a comment (outside of quoted
            string arguments). To bind commands to the <tt class=3D"docutil=
s literal">#</tt> key, <tt class=3D"docutils literal">SHARP</tt> can be use=
d.</p>
            <p><tt class=3D"docutils literal">&lt;key&gt;</tt> is either th=
e literal character the key produces (ASCII or Unicode
            character), or a symbolic name (as printed by <tt class=3D"docu=
tils literal"><span class=3D"pre">--input-keylist</span></tt>).</p>
            <p><tt class=3D"docutils literal">&lt;section&gt;</tt> (braced =
with <tt class=3D"docutils literal">{</tt> and <tt class=3D"docutils litera=
l">}</tt>) is the input section for this
            command.</p>
            <p><tt class=3D"docutils literal">&lt;command&gt;</tt> is the c=
ommand itself. It consists of the command name and
            multiple (or none) arguments, all separated by whitespace. Stri=
ng arguments
            should be quoted, typically with <tt class=3D"docutils literal"=
>"</tt>. See <tt class=3D"docutils literal">Flat command syntax</tt>.</p>
            <p>You can bind multiple commands to one key. For example:</p>
            <div class=3D"line-block">
            <div class=3D"line">a show-text "command 1" ; show-text "comman=
d 2"</div>
            </div>
            <p>It's also possible to bind a command to a sequence of keys:<=
/p>
            <div class=3D"line-block">
            <div class=3D"line">a-b-c show-text "command run after a, b, c =
have been pressed"</div>
            </div>
            <p>(This is not shown in the general command syntax.)</p>
            <p>If <tt class=3D"docutils literal">a</tt> or <tt class=3D"doc=
utils literal"><span class=3D"pre">a-b</span></tt> or <tt class=3D"docutils=
 literal">b</tt> are already bound, this will run the first command
            that matches, and the multi-key command will never be called. I=
ntermediate keys
            can be remapped to <tt class=3D"docutils literal">ignore</tt> i=
n order to avoid this issue. The maximum number
            of (non-modifier) keys for combinations is currently 4.</p>
            </div>
            <div class=3D"section" id=3D"key-names">
            <h2>Key names</h2>
            <p>All mouse and keyboard input is to converted to mpv-specific=
 key names. Key
            names are either special symbolic identifiers representing a ph=
ysical key, or a
            text key names, which are unicode code points encoded as UTF-8.=
 These are what
            keyboard input would normally produce, for example <tt class=3D=
"docutils literal">a</tt> for the A key. As a
            consequence, mpv uses input translated by the current OS keyboa=
rd layout, rather
            than physical scan codes.</p>
            <p>Currently there is the hardcoded assumption that every text =
key can be
            represented as a single unicode code point (in NFKC form).</p>
            <p>All key names can be combined with the modifiers <tt class=
=3D"docutils literal">Shift</tt>, <tt class=3D"docutils literal">Ctrl</tt>,=
 <tt class=3D"docutils literal">Alt</tt>,
            <tt class=3D"docutils literal">Meta</tt>. They must be prefixed=
 to the actual key name, where each modifier
            is followed by a <tt class=3D"docutils literal">+</tt> (for exa=
mple <tt class=3D"docutils literal">ctrl+q</tt>).</p>
            <p>The <tt class=3D"docutils literal">Shift</tt> modifier requi=
res some attention. For instance <tt class=3D"docutils literal">Shift+2</tt=
> should
            usually be specified as key-name <tt class=3D"docutils literal"=
>@</tt> at <tt class=3D"docutils literal">input.conf</tt>, and similarly th=
e
            combination <tt class=3D"docutils literal">Alt+Shift+2</tt> is =
usually <tt class=3D"docutils literal">Alt+@</tt>, etc. Special key names l=
ike
            <tt class=3D"docutils literal">Shift+LEFT</tt> work as expected=
. If in doubt - use <tt class=3D"docutils literal"><span class=3D"pre">--in=
put-test</span></tt> to check
            how a key/combination is seen by mpv.</p>
            <p>Symbolic key names and modifier names are case-insensitive. =
Unicode key names
            are case-sensitive because input bindings typically respect the=
 shift key.</p>
            <p>Another type of key names are hexadecimal key names, that se=
rve as fallback
            for special keys that are neither unicode, nor have a special m=
pv defined name.
            They will break as soon as mpv adds proper names for them, but =
can enable you
            to use a key at all if that does not happen.</p>
            <p>All symbolic names are listed by <tt class=3D"docutils liter=
al"><span class=3D"pre">--input-keylist</span></tt>. <tt class=3D"docutils =
literal"><span class=3D"pre">--input-test</span></tt> is a
            special mode that prints all input on the OSD.</p>
            <p>Comments on some symbolic names:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-kp*"=
>KP*<a href=3D"https://mpv.io/manual/master/#command-interface-kp*" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Keypad names. Behavior varies by backend (whether they impl=
ement this, and
            on how they treat numlock), but typically, mpv tries to map key=
s on the
            keypad to separate names, even if they produce the same text as=
 normal keys.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mous=
e-btn*">MOUSE_BTN*<a href=3D"https://mpv.io/manual/master/#command-interfac=
e-mouse-btn*" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils =
literal" id=3D"command-interface-mbtn*">MBTN*<a href=3D"https://mpv.io/manu=
al/master/#command-interface-mbtn*" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Various mouse buttons.</p>
            <p>Depending on backend, the mouse wheel might also be represen=
ted as a button.
            In addition, <tt class=3D"docutils literal">MOUSE_BTN3</tt> to =
<tt class=3D"docutils literal">MOUSE_BTN6</tt> are deprecated aliases for
            <tt class=3D"docutils literal">WHEEL_UP</tt>, <tt class=3D"docu=
tils literal">WHEEL_DOWN</tt>, <tt class=3D"docutils literal">WHEEL_LEFT</t=
t>, <tt class=3D"docutils literal">WHEEL_RIGHT</tt>.</p>
            <p class=3D"last"><tt class=3D"docutils literal">MBTN*</tt> are=
 aliases for <tt class=3D"docutils literal">MOUSE_BTN*</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-whee=
l-*">WHEEL_*<a href=3D"https://mpv.io/manual/master/#command-interface-whee=
l-*" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Mouse wheels (typically).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-axis=
-*">AXIS_*<a href=3D"https://mpv.io/manual/master/#command-interface-axis-*=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Deprecated aliases for <tt class=3D"docutils literal">WHEEL=
_*</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-*-db=
l">*_DBL<a href=3D"https://mpv.io/manual/master/#command-interface-*-dbl" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Mouse button double clicks.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mous=
e-move">MOUSE_MOVE<a href=3D"https://mpv.io/manual/master/#command-interfac=
e-mouse-move" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils =
literal" id=3D"command-interface-mouse-enter">MOUSE_ENTER<a href=3D"https:/=
/mpv.io/manual/master/#command-interface-mouse-enter" class=3D"anchor fa fa=
-link"></a></tt>, <tt class=3D"docutils literal" id=3D"command-interface-mo=
use-leave">MOUSE_LEAVE<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-mouse-leave" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Emitted by mouse move events. Enter/leave happens when the =
mouse enters or
            leave the mpv window (or the current mouse region, using the de=
precated
            mouse region input section mechanism).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-clos=
e-win">CLOSE_WIN<a href=3D"https://mpv.io/manual/master/#command-interface-=
close-win" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Pseudo key emitted when closing the mpv window using the OS=
 window manager
            (for example, by clicking the close button in the window title =
bar).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-game=
pad-*">GAMEPAD_*<a href=3D"https://mpv.io/manual/master/#command-interface-=
gamepad-*" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Keys emitted by the SDL gamepad backend.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-unma=
pped">UNMAPPED<a href=3D"https://mpv.io/manual/master/#command-interface-un=
mapped" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Pseudo-key that matches any unmapped key. (You should proba=
bly avoid this
            if possible, because it might change behavior or get removed in=
 the future.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-any-=
unicode">ANY_UNICODE<a href=3D"https://mpv.io/manual/master/#command-interf=
ace-any-unicode" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Pseudo-key that matches any key that produces text. (You sh=
ould probably
            avoid this if possible, because it might change behavior or get=
 removed in
            the future.)</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"flat-command-syntax">
            <h2>Flat command syntax</h2>
            <p>This is the syntax used in input.conf, and referred to "inpu=
t.conf syntax" in
            a number of other places.</p>
            <div class=3D"line-block">
            <div class=3D"line"><br></div>
            <div class=3D"line"><tt class=3D"docutils literal">&lt;command&=
gt;&nbsp; ::=3D [&lt;prefixes&gt;] &lt;command_name&gt; <span class=3D"pre"=
>(&lt;argument&gt;)*</span></tt></div>
            <div class=3D"line"><tt class=3D"docutils literal">&lt;argument=
&gt; ::=3D (&lt;unquoted&gt; | " &lt;double_quoted&gt; " | ' &lt;single_quo=
ted&gt; ' | `X &lt;custom_quoted&gt; X`)</tt></div>
            </div>
            <p><tt class=3D"docutils literal">command_name</tt> is an unquo=
ted string with the command name itself. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#list-of-input-commands">List of Input Commands</a> for a list.</p>
            <p>Arguments are separated by whitespaces even if the command e=
xpects only one
            argument. Arguments with whitespaces or other special character=
s must be quoted,
            or the command cannot be parsed correctly.</p>
            <p>Double quotes interpret JSON/C-style escaping, like <tt clas=
s=3D"docutils literal">\t</tt> or <tt class=3D"docutils literal">\"</tt> or=
 <tt class=3D"docutils literal">\\</tt>.
            JSON escapes according to RFC 8259, minus surrogate pair escape=
s. This is the
            only form which allows newlines at the value - as <tt class=3D"=
docutils literal">\n</tt>.</p>
            <p>Single quotes take the content literally, and cannot include=
 the single-quote
            character at the value.</p>
            <p>Custom quotes also take the content literally, but are more =
flexible than single
            quotes. They start with <tt class=3D"docutils literal">`</tt> (=
back-quote) followed by any ASCII character,
            and end at the first occurrence of the same pair in reverse ord=
er, e.g.
            <tt class=3D"docutils literal"><span class=3D"pre">`-foo-`</spa=
n></tt> or <tt class=3D"docutils literal">``bar``</tt>. The final pair sequ=
ence is not allowed at the
            value - in these examples <tt class=3D"docutils literal"><span =
class=3D"pre">-`</span></tt> and <tt class=3D"docutils literal">``</tt> res=
pectively. In the second
            example the last character of the value also can't be a back-qu=
ote.</p>
            <p>Mixed quoting at the same argument, like <tt class=3D"docuti=
ls literal"><span class=3D"pre">'foo'"bar"</span></tt>, is not supported.</=
p>
            <p>Note that argument parsing and property expansion happen at =
different stages.
            First, arguments are determined as described above, and then, w=
here applicable,
            properties are expanded - regardless of argument quoting. Howev=
er, expansion
            can still be prevented with the <tt class=3D"docutils literal">=
raw</tt> prefix or <tt class=3D"docutils literal">$&gt;</tt>. See <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#input-command=
-prefixes">Input Command
            Prefixes</a> and <a class=3D"reference internal" href=3D"https:=
//mpv.io/manual/master/#property-expansion">Property Expansion</a>.</p>
            </div>
            <div class=3D"section" id=3D"commands-specified-as-arrays">
            <h2>Commands specified as arrays</h2>
            <p>This applies to certain APIs, such as <tt class=3D"docutils =
literal">mp.commandv()</tt> or
            <tt class=3D"docutils literal">mp.command_native()</tt> (with a=
rray parameters) in Lua scripting, or
            <tt class=3D"docutils literal">mpv_command()</tt> or <tt class=
=3D"docutils literal">mpv_command_node()</tt> (with MPV_FORMAT_NODE_ARRAY) =
in the
            C libmpv client API.</p>
            <p>The command as well as all arguments are passed as a single =
array. Similar to
            the <a class=3D"reference internal" href=3D"https://mpv.io/manu=
al/master/#flat-command-syntax">Flat command syntax</a>, you can first pass=
 prefixes as strings (each as
            separate array item), then the command name as string, and then=
 each argument
            as string or a native value.</p>
            <p>Since these APIs pass arguments as separate strings or nativ=
e values, they do
            not expect quotes, and do support escaping. Technically, there =
is the input.conf
            parser, which first splits the command string into arguments, a=
nd then invokes
            argument parsers for each argument. The input.conf parser norma=
lly handles
            quotes and escaping. The array command APIs mentioned above pas=
s strings
            directly to the argument parsers, or can sidestep them by the a=
bility to pass
            non-string values.</p>
            <p>Property expansion is disabled by default for these APIs. Th=
is can be changed
            with the <tt class=3D"docutils literal"><span class=3D"pre">exp=
and-properties</span></tt> prefix. See <a class=3D"reference internal" href=
=3D"https://mpv.io/manual/master/#input-command-prefixes">Input Command Pre=
fixes</a>.</p>
            <p>Sometimes commands have string arguments, that in turn are a=
ctually parsed by
            other components (e.g. filter strings with <tt class=3D"docutil=
s literal">vf add</tt>) - in these cases, you
            you would have to double-escape in input.conf, but not with the=
 array APIs.</p>
            <p>For complex commands, consider using <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#named-arguments">Named argum=
ents</a> instead, which should
            give slightly more compatibility. Some commands do not support =
named arguments
            and inherently take an array, though.</p>
            </div>
            <div class=3D"section" id=3D"named-arguments">
            <h2>Named arguments</h2>
            <p>This applies to certain APIs, such as <tt class=3D"docutils =
literal">mp.command_native()</tt> (with tables that
            have string keys) in Lua scripting, or <tt class=3D"docutils li=
teral">mpv_command_node()</tt> (with
            MPV_FORMAT_NODE_MAP) in the C libmpv client API.</p>
            <p>The name of the command is provided with a <tt class=3D"docu=
tils literal">name</tt> string field. The name of
            each command is defined in each command description in the
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#list-of-input-commands">List of Input Commands</a>. <tt class=3D"doc=
utils literal"><span class=3D"pre">--input-cmdlist</span></tt> also lists t=
hem. See the
            <tt class=3D"docutils literal">subprocess</tt> command for an e=
xample.</p>
            <p>Some commands do not support named arguments (e.g. <tt class=
=3D"docutils literal">run</tt> command). You need
            to use APIs that pass arguments as arrays.</p>
            <p>Named arguments are not supported in the "flat" input.conf s=
yntax, which means
            you cannot use them for key bindings in input.conf at all.</p>
            <p>Property expansion is disabled by default for these APIs. Th=
is can be changed
            with the <tt class=3D"docutils literal"><span class=3D"pre">exp=
and-properties</span></tt> prefix. See <a class=3D"reference internal" href=
=3D"https://mpv.io/manual/master/#input-command-prefixes">Input Command Pre=
fixes</a>.</p>
            </div>
            <div class=3D"section" id=3D"list-of-input-commands">
            <h2>List of Input Commands</h2>
            <p>Commands with parameters have the parameter name enclosed in=
 <tt class=3D"docutils literal">&lt;</tt> / <tt class=3D"docutils literal">=
&gt;</tt>.
            Don't add those to the actual command. Optional arguments are e=
nclosed in
            <tt class=3D"docutils literal">[</tt> / <tt class=3D"docutils l=
iteral">]</tt>. If you don't pass them, they will be set to a default value=
.</p>
            <p>Remember to quote string arguments in input.conf (see <a cla=
ss=3D"reference internal" href=3D"https://mpv.io/manual/master/#flat-comman=
d-syntax">Flat command syntax</a>).</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-igno=
re">ignore<a href=3D"https://mpv.io/manual/master/#command-interface-ignore=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Use this to "block" keys that should be unbound, and do not=
hing. Useful for
            disabling default bindings, without disabling all bindings with
            <tt class=3D"docutils literal"><span class=3D"pre">--no-input-d=
efault-bindings</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-seek=
-<target>-[<flags>]">seek &lt;target&gt; [&lt;flags&gt;]<a href=3D"https://=
mpv.io/manual/master/#command-interface-seek-%3Ctarget%3E-[%3Cflags%3E]" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Change the playback position. By default=
, seeks by a relative amount of
            seconds.</p>
            <p>The second argument consists of flags controlling the seek m=
ode:</p>
            <dl class=3D"docutils">
            <dt>relative (default)</dt>
            <dd>Seek relative to current position (a negative value seeks b=
ackwards).</dd>
            <dt>absolute</dt>
            <dd>Seek to a given time (a negative value starts from the end =
of the file).</dd>
            <dt>absolute-percent</dt>
            <dd>Seek to a given percent position.</dd>
            <dt>relative-percent</dt>
            <dd>Seek relative to current position in percent.</dd>
            <dt>keyframes</dt>
            <dd>Always restart playback at keyframe boundaries (fast).</dd>
            <dt>exact</dt>
            <dd>Always do exact/hr/precise seeks (slow).</dd>
            </dl>
            <p>Multiple flags can be combined, e.g.: <tt class=3D"docutils =
literal">absolute+keyframes</tt>.</p>
            <p>By default, <tt class=3D"docutils literal">keyframes</tt> is=
 used for <tt class=3D"docutils literal">relative</tt>, <tt class=3D"docuti=
ls literal"><span class=3D"pre">relative-percent</span></tt>,
            and <tt class=3D"docutils literal"><span class=3D"pre">absolute=
-percent</span></tt> seeks, while <tt class=3D"docutils literal">exact</tt>=
 is used for <tt class=3D"docutils literal">absolute</tt>
            seeks.</p>
            <p class=3D"last">Before mpv 0.9, the <tt class=3D"docutils lit=
eral">keyframes</tt> and <tt class=3D"docutils literal">exact</tt> flags ha=
d to be passed as
            3rd parameter (essentially using a space instead of <tt class=
=3D"docutils literal">+</tt>). The 3rd
            parameter is still parsed, but is considered deprecated.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-reve=
rt-seek"><span class=3D"pre">revert-seek</span> [&lt;flags&gt;]<a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-revert-seek" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Undoes the <tt class=3D"docutils literal=
">seek</tt> command, and some other commands that seek (but not
            necessarily all of them). Calling this command once will jump t=
o the
            playback position before the seek. Calling it a second time und=
oes the
            <tt class=3D"docutils literal"><span class=3D"pre">revert-seek<=
/span></tt> command itself. This only works within a single file.</p>
            <p>The first argument is optional, and can change the behavior:=
</p>
            <dl class=3D"docutils">
            <dt>mark</dt>
            <dd>Mark the current time position. The next normal <tt class=
=3D"docutils literal"><span class=3D"pre">revert-seek</span></tt> command
            will seek back to this point, no matter how many seeks happened=
 since
            last time.</dd>
            <dt>mark-permanent</dt>
            <dd>If set, mark the current position, and do not change the ma=
rk position
            before the next <tt class=3D"docutils literal"><span class=3D"p=
re">revert-seek</span></tt> command that has <tt class=3D"docutils literal"=
>mark</tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">mark-permane=
nt</span></tt> set (or playback of the current file ends). Until
            this happens, <tt class=3D"docutils literal"><span class=3D"pre=
">revert-seek</span></tt> will always seek to the marked point. This
            flag cannot be combined with <tt class=3D"docutils literal">mar=
k</tt>.</dd>
            </dl>
            <p class=3D"last">Using it without any arguments gives you the =
default behavior.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-fram=
e-step"><span class=3D"pre">frame-step</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-frame-step" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Play one frame, then pause. Does nothing with audio-only pl=
ayback.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-fram=
e-back-step"><span class=3D"pre">frame-back-step</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-frame-back-step" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Go back by one frame, then pause. Note t=
hat this can be very slow (it tries
            to be precise, not fast), and sometimes fails to behave as expe=
cted. How
            well this works depends on whether precise seeking works correc=
tly (e.g.
            see the <tt class=3D"docutils literal"><span class=3D"pre">--hr=
-seek-demuxer-offset</span></tt> option). Video filters or other video
            post-processing that modifies timing of frames (e.g. deinterlac=
ing) should
            usually work, but might make backstepping silently behave incor=
rectly in
            corner cases. Using <tt class=3D"docutils literal"><span class=
=3D"pre">--hr-seek-framedrop=3Dno</span></tt> should help, although it
            might make precise seeking slower.</p>
            <p class=3D"last">This does not work with audio-only playback.<=
/p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-set-=
<name>-<value>">set &lt;name&gt; &lt;value&gt;<a href=3D"https://mpv.io/man=
ual/master/#command-interface-set-%3Cname%3E-%3Cvalue%3E" class=3D"anchor f=
a fa-link"></a></tt></dt>
            <dd>Set the given property or option to the given value.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-del-=
<name>">del &lt;name&gt;<a href=3D"https://mpv.io/manual/master/#command-in=
terface-del-%3Cname%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Delete the given property. Most properties cannot be delete=
d.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-add-=
<name>-[<value>]">add &lt;name&gt; [&lt;value&gt;]<a href=3D"https://mpv.io=
/manual/master/#command-interface-add-%3Cname%3E-[%3Cvalue%3E]" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Add the given value to the property or option. On overflow =
or underflow,
            clamp the property to the maximum. If <tt class=3D"docutils lit=
eral">&lt;value&gt;</tt> is omitted, assume <tt class=3D"docutils literal">=
1</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-cycl=
e-<name>-[<value>]">cycle &lt;name&gt; [&lt;value&gt;]<a href=3D"https://mp=
v.io/manual/master/#command-interface-cycle-%3Cname%3E-[%3Cvalue%3E]" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Cycle the given property or option. The =
second argument can be <tt class=3D"docutils literal">up</tt> or
            <tt class=3D"docutils literal">down</tt> to set the cycle direc=
tion. On overflow, set the property back to
            the minimum, on underflow set it to the maximum. If <tt class=
=3D"docutils literal">up</tt> or <tt class=3D"docutils literal">down</tt> i=
s
            omitted, assume <tt class=3D"docutils literal">up</tt>.</p>
            <p class=3D"last">Whether or not key-repeat is enabled by defau=
lt depends on the property.
            Currently properties with continuous values are repeatable by d=
efault (like
            <tt class=3D"docutils literal">volume</tt>), while discrete val=
ues are not (like <tt class=3D"docutils literal"><span class=3D"pre">osd-le=
vel</span></tt>).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mult=
iply-<name>-<value>">multiply &lt;name&gt; &lt;value&gt;<a href=3D"https://=
mpv.io/manual/master/#command-interface-multiply-%3Cname%3E-%3Cvalue%3E" cl=
ass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Similar to <tt class=3D"docutils literal">add</tt>, but mul=
tiplies the property or option with the numeric
            value.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-scre=
enshot-<flags>">screenshot &lt;flags&gt;<a href=3D"https://mpv.io/manual/ma=
ster/#command-interface-screenshot-%3Cflags%3E" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd><p class=3D"first">Take a screenshot.</p>
            <p>Multiple flags are available (some can be combined with <tt =
class=3D"docutils literal">+</tt>):</p>
            <dl class=3D"docutils">
            <dt>&lt;subtitles&gt; (default)</dt>
            <dd>Save the video image, in its original resolution, and with =
subtitles.
            Some video outputs may still include the OSD in the output unde=
r certain
            circumstances.</dd>
            <dt>&lt;video&gt;</dt>
            <dd>Like <tt class=3D"docutils literal">subtitles</tt>, but typ=
ically without OSD or subtitles. The exact
            behavior depends on the selected video output.</dd>
            <dt>&lt;window&gt;</dt>
            <dd>Save the contents of the mpv window. Typically scaled, with=
 OSD and
            subtitles. The exact behavior depends on the selected video out=
put, and
            if no support is available, this will act like <tt class=3D"doc=
utils literal">video</tt>.</dd>
            <dt>&lt;each-frame&gt;</dt>
            <dd>Take a screenshot each frame. Issue this command again to s=
top taking
            screenshots. Note that you should disable frame-dropping when u=
sing
            this mode - or you might receive duplicate images in cases when=
 a
            frame was dropped. This flag can be combined with the other fla=
gs,
            e.g. <tt class=3D"docutils literal"><span class=3D"pre">video+e=
ach-frame</span></tt>.</dd>
            </dl>
            <p>Older mpv versions required passing <tt class=3D"docutils li=
teral">single</tt> and <tt class=3D"docutils literal"><span class=3D"pre">e=
ach-frame</span></tt> as
            second argument (and did not have flags). This syntax is still =
understood,
            but deprecated and might be removed in the future.</p>
            <p>If you combine this command with another one using <tt class=
=3D"docutils literal">;</tt>, you can use the
            <tt class=3D"docutils literal">async</tt> flag to make encoding=
/writing the image file asynchronous. For
            normal standalone commands, this is always asynchronous, and th=
e flag has
            no effect. (This behavior changed with mpv 0.29.0.)</p>
            <p class=3D"last">On success, returns a <tt class=3D"docutils l=
iteral">mpv_node</tt> with a <tt class=3D"docutils literal">filename</tt> f=
ield set to the
            saved screenshot location.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-scre=
enshot-to-file"><span class=3D"pre">screenshot-to-file</span> &lt;filename&=
gt; &lt;flags&gt;<a href=3D"https://mpv.io/manual/master/#command-interface=
-screenshot-to-file" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Take a screenshot and save it to a given=
 file. The format of the file will
            be guessed by the extension (and <tt class=3D"docutils literal"=
><span class=3D"pre">--screenshot-format</span></tt> is ignored - the
            behavior when the extension is missing or unknown is arbitrary)=
.</p>
            <p>The second argument is like the first argument to <tt class=
=3D"docutils literal">screenshot</tt> and
            supports <tt class=3D"docutils literal">subtitles</tt>, <tt cla=
ss=3D"docutils literal">video</tt>, <tt class=3D"docutils literal">window</=
tt>.</p>
            <p>If the file already exists, it's overwritten.</p>
            <p class=3D"last">Like all input command parameters, the filena=
me is subject to property
            expansion as described in <a class=3D"reference internal" href=
=3D"https://mpv.io/manual/master/#property-expansion">Property Expansion</a=
>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-next"><span class=3D"pre">playlist-next</span> &lt;flags&gt;<a href=3D=
"https://mpv.io/manual/master/#command-interface-playlist-next" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Go to the next entry on the playlist.</p=
>
            <p>First argument:</p>
            <dl class=3D"last docutils">
            <dt>weak (default)</dt>
            <dd>If the last file on the playlist is currently played, do no=
thing.</dd>
            <dt>force</dt>
            <dd>Terminate playback if there are no more files on the playli=
st.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-prev"><span class=3D"pre">playlist-prev</span> &lt;flags&gt;<a href=3D=
"https://mpv.io/manual/master/#command-interface-playlist-prev" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Go to the previous entry on the playlist=
.</p>
            <p>First argument:</p>
            <dl class=3D"last docutils">
            <dt>weak (default)</dt>
            <dd>If the first file on the playlist is currently played, do n=
othing.</dd>
            <dt>force</dt>
            <dd>Terminate playback if the first file is being played.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-play-index"><span class=3D"pre">playlist-play-index</span> &lt;integer=
|current|none&gt;<a href=3D"https://mpv.io/manual/master/#command-interface=
-playlist-play-index" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Start (or restart) playback of the given=
 playlist index. In addition to the
            0-based playlist entry index, it supports the following values:=
</p>
            <dl class=3D"docutils">
            <dt>&lt;current&gt;</dt>
            <dd>The current playlist entry (as in <tt class=3D"docutils lit=
eral"><span class=3D"pre">playlist-current-pos</span></tt>) will be
            played again (unload and reload). If none is set, playback is s=
topped.
            (In corner cases, <tt class=3D"docutils literal"><span class=3D=
"pre">playlist-current-pos</span></tt> can point to a playlist entry
            even if playback is currently inactive,</dd>
            <dt>&lt;none&gt;</dt>
            <dd>Playback is stopped. If idle mode (<tt class=3D"docutils li=
teral"><span class=3D"pre">--idle</span></tt>) is enabled, the player
            will enter idle mode, otherwise it will exit.</dd>
            </dl>
            <p>This command is similar to <tt class=3D"docutils literal">lo=
adfile</tt> in that it only manipulates the
            state of what to play next, without waiting until the current f=
ile is
            unloaded, and the next one is loaded.</p>
            <p class=3D"last">Setting <tt class=3D"docutils literal"><span =
class=3D"pre">playlist-pos</span></tt> or similar properties can have a sim=
ilar effect to
            this command. However, it's more explicit, and guarantees that =
playback is
            restarted if for example the new playlist entry is the same as =
the previous
            one.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-[<op=
tions>]]">loadfile &lt;url&gt; [&lt;flags&gt; <span class=3D"pre">[&lt;opti=
ons&gt;]]</span><a href=3D"https://mpv.io/manual/master/#command-interface-=
[%3Coptions%3E]]" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load the given file or URL and play it. =
Technically, this is just a playlist
            manipulation command (which either replaces the playlist or app=
ends an entry
            to it). Actual file loading happens independently. For example,=
 a
            <tt class=3D"docutils literal">loadfile</tt> command that repla=
ces the current file with a new one returns
            before the current file is stopped, and the new file even begin=
s loading.</p>
            <p>Second argument:</p>
            <dl class=3D"docutils">
            <dt>&lt;replace&gt; (default)</dt>
            <dd>Stop playback of the current file, and play the new file im=
mediately.</dd>
            <dt>&lt;append&gt;</dt>
            <dd>Append the file to the playlist.</dd>
            <dt>&lt;append-play&gt;</dt>
            <dd>Append the file, and if nothing is currently playing, start=
 playback.
            (Always starts with the added file, even if the playlist was no=
t empty
            before running this command.)</dd>
            </dl>
            <p class=3D"last">The third argument is a list of options and v=
alues which should be set
            while the file is playing. It is of the form <tt class=3D"docut=
ils literal"><span class=3D"pre">opt1=3Dvalue1,opt2=3Dvalue2,..</span></tt>=
.
            When using the client API, this can be a <tt class=3D"docutils =
literal">MPV_FORMAT_NODE_MAP</tt> (or a Lua
            table), however the values themselves must be strings currently=
. These
            options are set during playback, and restored to the previous v=
alue at end
            of playback (see <a class=3D"reference internal" href=3D"https:=
//mpv.io/manual/master/#per-file-options">Per-File Options</a>).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-load=
list-<url>-[<flags>]">loadlist &lt;url&gt; [&lt;flags&gt;]<a href=3D"https:=
//mpv.io/manual/master/#command-interface-loadlist-%3Curl%3E-[%3Cflags%3E]"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load the given playlist file or URL (lik=
e <tt class=3D"docutils literal"><span class=3D"pre">--playlist</span></tt>=
).</p>
            <p>Second argument:</p>
            <dl class=3D"last docutils">
            <dt>&lt;replace&gt; (default)</dt>
            <dd>Stop playback and replace the internal playlist with the ne=
w one.</dd>
            <dt>&lt;append&gt;</dt>
            <dd>Append the new playlist at the end of the current internal =
playlist.</dd>
            <dt>&lt;append-play&gt;</dt>
            <dd>Append the new playlist, and if nothing is currently playin=
g, start
            playback. (Always starts with the new playlist, even if the int=
ernal
            playlist was not empty before running this command.)</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-clear"><span class=3D"pre">playlist-clear</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-playlist-clear" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Clear the playlist, except the currently played file.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-remove"><span class=3D"pre">playlist-remove</span> &lt;index&gt;<a hre=
f=3D"https://mpv.io/manual/master/#command-interface-playlist-remove" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Remove the playlist entry at the given index. Index values =
start counting
            with 0. The special value <tt class=3D"docutils literal">curren=
t</tt> removes the current entry. Note that
            removing the current entry also stops playback and starts playi=
ng the next
            entry.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-move"><span class=3D"pre">playlist-move</span> &lt;index1&gt; &lt;inde=
x2&gt;<a href=3D"https://mpv.io/manual/master/#command-interface-playlist-m=
ove" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Move the playlist entry at index1, so that it takes the pla=
ce of the
            entry index2. (Paradoxically, the moved playlist entry will not=
 have
            the index value index2 after moving if index1 was lower than in=
dex2,
            because index2 refers to the target entry, not the index the en=
try
            will have after moving.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-shuffle"><span class=3D"pre">playlist-shuffle</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-playlist-shuffle" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Shuffle the playlist. This is similar to what is done on st=
art if the
            <tt class=3D"docutils literal"><span class=3D"pre">--shuffle</s=
pan></tt> option is used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-unshuffle"><span class=3D"pre">playlist-unshuffle</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-playlist-unshuffle" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Attempt to revert the previous <tt class=3D"docutils litera=
l"><span class=3D"pre">playlist-shuffle</span></tt> command. This works
            only once (multiple successive <tt class=3D"docutils literal"><=
span class=3D"pre">playlist-unshuffle</span></tt> commands do nothing).
            May not work correctly if new recursive playlists have been ope=
ned since
            a <tt class=3D"docutils literal"><span class=3D"pre">playlist-s=
huffle</span></tt> command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-[-]]=
]">run &lt;command&gt; [&lt;arg1&gt; [&lt;arg2&gt; <span class=3D"pre">[...=
]]]</span><a href=3D"https://mpv.io/manual/master/#command-interface-[-]]]"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Run the given command. Unlike in MPlayer=
/mplayer2 and earlier versions of
            mpv (0.2.x and older), this doesn't call the shell. Instead, th=
e command
            is run directly, with each argument passed separately. Each arg=
ument is
            expanded like in <a class=3D"reference internal" href=3D"https:=
//mpv.io/manual/master/#property-expansion">Property Expansion</a>.</p>
            <p>This command has a variable number of arguments, and cannot =
be used with
            named arguments.</p>
            <p>The program is run in a detached way. mpv doesn't wait until=
 the command
            is completed, but continues playback right after spawning it.</=
p>
            <p>To get the old behavior, use <tt class=3D"docutils literal">=
/bin/sh</tt> and <tt class=3D"docutils literal"><span class=3D"pre">-c</spa=
n></tt> as the first two
            arguments.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p><tt class=3D"docutils literal">run "/bin/sh" <span class=3D"=
pre">"-c"</span> "echo ${title} &gt; /tmp/playing"</tt></p>
            <p class=3D"last">This is not a particularly good example, beca=
use it doesn't handle
            escaping, and a specially prepared file might allow an attacker=
 to
            execute arbitrary shell commands. It is recommended to write a =
small
            shell script, and call that with <tt class=3D"docutils literal"=
>run</tt>.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-subp=
rocess">subprocess<a href=3D"https://mpv.io/manual/master/#command-interfac=
e-subprocess" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">run</tt>, but gives more control about process execution to the
            caller, and does does not detach the process.</p>
            <p>You can avoid blocking until the process terminates by runni=
ng this command
            asynchronously. (For example <tt class=3D"docutils literal">mp.=
command_native_async()</tt> in Lua scripting.)</p>
            <p>This has the following named arguments. The order of them is=
 not guaranteed,
            so you should always call them with named arguments, see <a cla=
ss=3D"reference internal" href=3D"https://mpv.io/manual/master/#named-argum=
ents">Named arguments</a>.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-args=
">args<a href=3D"https://mpv.io/manual/master/#command-interface-args" clas=
s=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=3D"com=
mand-interface-mpv-format-node-array[mpv-format-string]">MPV_FORMAT_NODE_AR=
RAY[MPV_FORMAT_STRING]<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-mpv-format-node-array[mpv-format-string]" class=3D"anchor fa fa-link"=
></a></tt>)</dt>
            <dd><p class=3D"first">Array of strings with the command as fir=
st argument, and subsequent
            command line arguments following. This is just like the <tt cla=
ss=3D"docutils literal">run</tt> command
            argument list.</p>
            <p class=3D"last">The first array entry is either an absolute p=
ath to the executable, or
            a filename with no path components, in which case the executabl=
e is
            searched in the directories in the <tt class=3D"docutils litera=
l">PATH</tt> environment variable. On
            Unix, this is equivalent to <tt class=3D"docutils literal">posi=
x_spawnp</tt> and <tt class=3D"docutils literal">execvp</tt> behavior.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
back-only">playback_only<a href=3D"https://mpv.io/manual/master/#command-in=
terface-playback-only" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"=
docutils literal" id=3D"command-interface-mpv-format-flag">MPV_FORMAT_FLAG<=
a href=3D"https://mpv.io/manual/master/#command-interface-mpv-format-flag" =
class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Boolean indicating whether the process should be killed whe=
n playback
            of the current playlist entry terminates (optional, default: tr=
ue). If
            enabled, stopping playback will automatically kill the process,=
 and you
            can't start it outside of playback.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-capt=
ure-size">capture_size<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-capture-size" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"doc=
utils literal" id=3D"command-interface-mpv-format-int64">MPV_FORMAT_INT64<a=
 href=3D"https://mpv.io/manual/master/#command-interface-mpv-format-int64" =
class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Integer setting the maximum number of stdout plus stderr by=
tes that can
            be captured (optional, default: 64MB). If the number of bytes e=
xceeds
            this, capturing is stopped. The limit is per captured stream.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-capt=
ure-stdout">capture_stdout<a href=3D"https://mpv.io/manual/master/#command-=
interface-capture-stdout" class=3D"anchor fa fa-link"></a></tt> (<tt class=
=3D"docutils literal" id=3D"command-interface-mpv-format-flag">MPV_FORMAT_F=
LAG<a href=3D"https://mpv.io/manual/master/#command-interface-mpv-format-fl=
ag" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Capture all data the process outputs to stdout and return i=
t once the
            process ends (optional, default: no).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-capt=
ure-stderr">capture_stderr<a href=3D"https://mpv.io/manual/master/#command-=
interface-capture-stderr" class=3D"anchor fa fa-link"></a></tt> (<tt class=
=3D"docutils literal" id=3D"command-interface-mpv-format-flag">MPV_FORMAT_F=
LAG<a href=3D"https://mpv.io/manual/master/#command-interface-mpv-format-fl=
ag" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Same as <tt class=3D"docutils literal">capture_stdout</tt>,=
 but for stderr.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-deta=
ch">detach<a href=3D"https://mpv.io/manual/master/#command-interface-detach=
" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=
=3D"command-interface-mpv-format-flag">MPV_FORMAT_FLAG<a href=3D"https://mp=
v.io/manual/master/#command-interface-mpv-format-flag" class=3D"anchor fa f=
a-link"></a></tt>)</dt>
            <dd>Whether to run the process in detached mode (optional, defa=
ult: no). In
            this mode, the process is run in a new process session, and the=
 command
            does not wait for the process to terminate. If neither
            <tt class=3D"docutils literal">capture_stdout</tt> nor <tt clas=
s=3D"docutils literal">capture_stderr</tt> have been set to true,
            the command returns immediately after the new process has been =
started,
            otherwise the command will read as long as the pipes are open.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-env"=
>env<a href=3D"https://mpv.io/manual/master/#command-interface-env" class=
=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=3D"comm=
and-interface-mpv-format-node-array[mpv-format-string]">MPV_FORMAT_NODE_ARR=
AY[MPV_FORMAT_STRING]<a href=3D"https://mpv.io/manual/master/#command-inter=
face-mpv-format-node-array[mpv-format-string]" class=3D"anchor fa fa-link">=
</a></tt>)</dt>
            <dd><p class=3D"first">Set a list of environment variables for =
the new process (default: empty).
            If an empty list is passed, the environment of the mpv process =
is used
            instead. (Unlike the underlying OS mechanisms, the mpv command =
cannot
            start a process with empty environment. Fortunately, that is co=
mpletely
            useless.) The format of the list is as in the <tt class=3D"docu=
tils literal">execle()</tt> syscall. Each
            string item defines an environment variable as in <tt class=3D"=
docutils literal">NAME=3DVALUE</tt>.</p>
            <p class=3D"last">On Lua, you may use <tt class=3D"docutils lit=
eral">utils.get_env_list()</tt> to retrieve the current
            environment if you e.g. simply want to add a new variable.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stdi=
n-data">stdin_data<a href=3D"https://mpv.io/manual/master/#command-interfac=
e-stdin-data" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils =
literal" id=3D"command-interface-mpv-format-string">MPV_FORMAT_STRING<a hre=
f=3D"https://mpv.io/manual/master/#command-interface-mpv-format-string" cla=
ss=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Feed the given string to the new process' stdin. Since this=
 is a string,
            you cannot pass arbitrary binary data. If the process terminate=
s or
            closes the pipe before all data is written, the remaining data =
is
            silently discarded. Probably does not work on win32.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-pass=
through-stdin">passthrough_stdin<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-passthrough-stdin" class=3D"anchor fa fa-link"></a></tt> (<=
tt class=3D"docutils literal" id=3D"command-interface-mpv-format-flag">MPV_=
FORMAT_FLAG<a href=3D"https://mpv.io/manual/master/#command-interface-mpv-f=
ormat-flag" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>If enabled, wire the new process' stdin to mpv's stdin (def=
ault: no).
            Before mpv 0.33.0, this argument did not exist, but the behavio=
r was as
            if this was set to true.</dd>
            </dl>
            <p>The command returns the following result (as <tt class=3D"do=
cutils literal">MPV_FORMAT_NODE_MAP</tt>):</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stat=
us">status<a href=3D"https://mpv.io/manual/master/#command-interface-status=
" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=
=3D"command-interface-mpv-format-int64">MPV_FORMAT_INT64<a href=3D"https://=
mpv.io/manual/master/#command-interface-mpv-format-int64" class=3D"anchor f=
a fa-link"></a></tt>)</dt>
            <dd><p class=3D"first">Typically this is the process exit code =
(0 or positive) if the process
            terminates normally, or negative for other errors (failed to st=
art,
            terminated by mpv, and others).  The meaning of negative values=
 is
            undefined, other than meaning error (and does not correspond to=
 OS low
            level exit status values).</p>
            <p class=3D"last">On Windows, it can happen that a negative ret=
urn value is returned even
            if the process terminates normally, because the win32 <tt class=
=3D"docutils literal">UINT</tt> exit
            code is assigned to an <tt class=3D"docutils literal">int</tt> =
variable before being set as <tt class=3D"docutils literal">int64_t</tt>
            field in the result map. This might be fixed later.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stdo=
ut">stdout<a href=3D"https://mpv.io/manual/master/#command-interface-stdout=
" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=
=3D"command-interface-mpv-format-byte-array">MPV_FORMAT_BYTE_ARRAY<a href=
=3D"https://mpv.io/manual/master/#command-interface-mpv-format-byte-array" =
class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Captured stdout stream, limited to <tt class=3D"docutils li=
teral">capture_size</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stde=
rr">stderr<a href=3D"https://mpv.io/manual/master/#command-interface-stderr=
" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=
=3D"command-interface-mpv-format-byte-array">MPV_FORMAT_BYTE_ARRAY<a href=
=3D"https://mpv.io/manual/master/#command-interface-mpv-format-byte-array" =
class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Same as <tt class=3D"docutils literal">stdout</tt>, but for=
 stderr.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-erro=
r-string">error_string<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-error-string" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"doc=
utils literal" id=3D"command-interface-mpv-format-string">MPV_FORMAT_STRING=
<a href=3D"https://mpv.io/manual/master/#command-interface-mpv-format-strin=
g" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd><p class=3D"first">Empty string if the process terminated n=
ormally. The string <tt class=3D"docutils literal">killed</tt>
            if the process was terminated in an unusual way. The string <tt=
 class=3D"docutils literal">init</tt> if
            the process could not be started.</p>
            <p class=3D"last">On Windows, <tt class=3D"docutils literal">ki=
lled</tt> is only returned when the process has been
            killed by mpv as a result of <tt class=3D"docutils literal">pla=
yback_only</tt> being set to true.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-kill=
ed-by-us">killed_by_us<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-killed-by-us" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"doc=
utils literal" id=3D"command-interface-mpv-format-flag">MPV_FORMAT_FLAG<a h=
ref=3D"https://mpv.io/manual/master/#command-interface-mpv-format-flag" cla=
ss=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Whether the process has been killed by mpv, for example as =
a result of
            <tt class=3D"docutils literal">playback_only</tt> being set to =
true, aborting the command (e.g. by
            <tt class=3D"docutils literal">mp.abort_async_command()</tt>), =
or if the player is about to exit.</dd>
            </dl>
            <p>Note that the command itself will always return success as l=
ong as the
            parameters are correct. Whether the process could be spawned or=
 whether
            it was somehow killed or returned an error status has to be que=
ried from
            the result value.</p>
            <p>This command can be asynchronously aborted via API. Also see=
 <a class=3D"reference internal" href=3D"https://mpv.io/manual/master/#asyn=
chronous-command-details">Asynchronous
            command details</a>. Only the <tt class=3D"docutils literal">ru=
n</tt> command can start processes in a truly
            detached way.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">The subprocess will always be terminated on p=
layer exit if it
            wasn't started in detached mode, even if <tt class=3D"docutils =
literal">playback_only</tt> is
            false.</p>
            </div>
            <div class=3D"admonition admonition-warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">Don't forget to set the <tt class=3D"docutils=
 literal">playback_only</tt> field to false if you want
            the command to run while the player is in idle mode, or if you =
don't
            want the end of playback to kill the command.</p>
            </div>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <pre class=3D"literal-block">local r =3D mp.command_native({
    name =3D "subprocess",
    playback_only =3D false,
    capture_stdout =3D true,
    args =3D {"cat", "/proc/cpuinfo"},
})
if r.status =3D=3D 0 then
    print("result: " .. r.stdout)
end
</pre>
            <p class=3D"last">This is a fairly useless Lua example, which d=
emonstrates how to run
            a process in a blocking manner, and retrieving its stdout outpu=
t.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-quit=
-[<code>]">quit [&lt;code&gt;]<a href=3D"https://mpv.io/manual/master/#comm=
and-interface-quit-[%3Ccode%3E]" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Exit the player. If an argument is given, it's used as proc=
ess exit code.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-quit=
-watch-later"><span class=3D"pre">quit-watch-later</span> [&lt;code&gt;]<a =
href=3D"https://mpv.io/manual/master/#command-interface-quit-watch-later" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Exit player, and store current playback position. Playing t=
hat file later
            will seek to the previous position on start. The (optional) arg=
ument is
            exactly as in the <tt class=3D"docutils literal">quit</tt> comm=
and. See <a class=3D"reference internal" href=3D"https://mpv.io/manual/mast=
er/#resuming-playback">RESUMING PLAYBACK</a>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
add"><span class=3D"pre">sub-add</span> &lt;url&gt; [&lt;flags&gt; [&lt;tit=
le&gt; <span class=3D"pre">[&lt;lang&gt;]]]</span><a href=3D"https://mpv.io=
/manual/master/#command-interface-sub-add" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd><p class=3D"first">Load the given subtitle file or stream. =
By default, it is selected as
            current subtitle  after loading.</p>
            <p>The <tt class=3D"docutils literal">flags</tt> argument is on=
e of the following values:</p>
            <p>&lt;select&gt;</p>
            <blockquote>
            Select the subtitle immediately (default).</blockquote>
            <p>&lt;auto&gt;</p>
            <blockquote>
            Don't select the subtitle. (Or in some special situations, let =
the
            default stream selection mechanism decide.)</blockquote>
            <p>&lt;cached&gt;</p>
            <blockquote>
            Select the subtitle. If a subtitle with the same filename was a=
lready
            added, that one is selected, instead of loading a duplicate ent=
ry.
            (In this case, title/language are ignored, and if the was chang=
ed since
            it was loaded, these changes won't be reflected.)</blockquote>
            <p>The <tt class=3D"docutils literal">title</tt> argument sets =
the track title in the UI.</p>
            <p class=3D"last">The <tt class=3D"docutils literal">lang</tt> =
argument sets the track language, and can also influence
            stream selection with <tt class=3D"docutils literal">flags</tt>=
 set to <tt class=3D"docutils literal">auto</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
remove"><span class=3D"pre">sub-remove</span> [&lt;id&gt;]<a href=3D"https:=
//mpv.io/manual/master/#command-interface-sub-remove" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Remove the given subtitle track. If the <tt class=3D"docuti=
ls literal">id</tt> argument is missing, remove
            the current track. (Works on external subtitle files only.)</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
reload"><span class=3D"pre">sub-reload</span> [&lt;id&gt;]<a href=3D"https:=
//mpv.io/manual/master/#command-interface-sub-reload" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Reload the given subtitle tracks. If the=
 <tt class=3D"docutils literal">id</tt> argument is missing, reload
            the current track. (Works on external subtitle files only.)</p>
            <p class=3D"last">This works by unloading and re-adding the sub=
title track.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
step"><span class=3D"pre">sub-step</span> &lt;skip&gt; &lt;flags&gt;<a href=
=3D"https://mpv.io/manual/master/#command-interface-sub-step" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Change subtitle timing such, that the su=
btitle event after the next
            <tt class=3D"docutils literal">&lt;skip&gt;</tt> subtitle event=
s is displayed. <tt class=3D"docutils literal">&lt;skip&gt;</tt> can be neg=
ative to step
            backwards.</p>
            <p>Secondary argument:</p>
            <dl class=3D"last docutils">
            <dt>primary (default)</dt>
            <dd>Steps through the primary subtitles.</dd>
            <dt>secondary</dt>
            <dd>Steps through the secondary subtitles.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
seek"><span class=3D"pre">sub-seek</span> &lt;skip&gt; &lt;flags&gt;<a href=
=3D"https://mpv.io/manual/master/#command-interface-sub-seek" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Seek to the next (skip set to 1) or the =
previous (skip set to -1) subtitle.
            This is similar to <tt class=3D"docutils literal"><span class=
=3D"pre">sub-step</span></tt>, except that it seeks video and audio
            instead of adjusting the subtitle delay.</p>
            <p>Secondary argument:</p>
            <dl class=3D"docutils">
            <dt>primary (default)</dt>
            <dd>Seeks through the primary subtitles.</dd>
            <dt>secondary</dt>
            <dd>Seeks through the secondary subtitles.</dd>
            </dl>
            <p class=3D"last">For embedded subtitles (like with Matroska), =
this works only with subtitle
            events that have already been displayed, or are within a short =
prefetch
            range.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-prin=
t-text"><span class=3D"pre">print-text</span> &lt;text&gt;<a href=3D"https:=
//mpv.io/manual/master/#command-interface-print-text" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Print text to stdout. The string can contain properties (se=
e
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#property-expansion">Property Expansion</a>). Take care to put the ar=
gument in quotes.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-show=
-text"><span class=3D"pre">show-text</span> &lt;text&gt; <span class=3D"pre=
">[&lt;duration&gt;|-1</span> <span class=3D"pre">[&lt;level&gt;]]</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-show-text" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Show text on the OSD. The string can con=
tain properties, which are expanded
            as described in <a class=3D"reference internal" href=3D"https:/=
/mpv.io/manual/master/#property-expansion">Property Expansion</a>. This can=
 be used to show playback
            time, filename, and so on.</p>
            <dl class=3D"last docutils">
            <dt>&lt;duration&gt;</dt>
            <dd>The time in ms to show the message for. By default, it uses=
 the same
            value as <tt class=3D"docutils literal"><span class=3D"pre">--o=
sd-duration</span></tt>.</dd>
            <dt>&lt;level&gt;</dt>
            <dd>The minimum OSD level to show the text at (see <tt class=3D=
"docutils literal"><span class=3D"pre">--osd-level</span></tt>).</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-expa=
nd-text"><span class=3D"pre">expand-text</span> &lt;string&gt;<a href=3D"ht=
tps://mpv.io/manual/master/#command-interface-expand-text" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Property-expand the argument and return the expanded string=
. This can be
            used only through the client API or from a script using
            <tt class=3D"docutils literal">mp.command_native</tt>. (see <a =
class=3D"reference internal" href=3D"https://mpv.io/manual/master/#property=
-expansion">Property Expansion</a>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-expa=
nd-path"><span class=3D"pre">expand-path</span> "&lt;string&gt;"<a href=3D"=
https://mpv.io/manual/master/#command-interface-expand-path" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Expand a path's double-tilde placeholder=
s into a platform-specific path.
            As <tt class=3D"docutils literal"><span class=3D"pre">expand-te=
xt</span></tt>, this can only be used through the client API or from
            a script using <tt class=3D"docutils literal">mp.command_native=
</tt>.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.osd_me=
ssage(mp.command_native({"expand-path",</span> <span class=3D"pre">"~~home/=
"}))</span></tt></p>
            <p class=3D"last">This line of Lua would show the location of t=
he user's mpv
            configuration directory on the OSD.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-show=
-progress"><span class=3D"pre">show-progress</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-show-progress" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Show the progress bar, the elapsed time and the total durat=
ion of the file
            on the OSD.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-writ=
e-watch-later-config"><span class=3D"pre">write-watch-later-config</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-write-watch-later-=
config" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Write the resume config file that the <tt class=3D"docutils=
 literal"><span class=3D"pre">quit-watch-later</span></tt> command writes,
            but continue playback normally.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-dele=
te-watch-later-config"><span class=3D"pre">delete-watch-later-config</span>=
 [&lt;filename&gt;]<a href=3D"https://mpv.io/manual/master/#command-interfa=
ce-delete-watch-later-config" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Delete any existing resume config file that was written by
            <tt class=3D"docutils literal"><span class=3D"pre">quit-watch-l=
ater</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre">writ=
e-watch-later-config</span></tt>. If a filename is
            specified, then the deleted config is for that file; otherwise,=
 it is the
            same one as would be written by <tt class=3D"docutils literal">=
<span class=3D"pre">quit-watch-later</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">write-watch-=
later-config</span></tt> in the current circumstance.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stop=
-[<flags>]">stop [&lt;flags&gt;]<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-stop-[%3Cflags%3E]" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Stop playback and clear playlist. With d=
efault settings, this is
            essentially like <tt class=3D"docutils literal">quit</tt>. Usef=
ul for the client API: playback can be
            stopped without terminating the player.</p>
            <p>The first argument is optional, and supports the following f=
lags:</p>
            <dl class=3D"last docutils">
            <dt>keep-playlist</dt>
            <dd>Do not clear the playlist.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-[<mo=
de>]]">mouse &lt;x&gt; &lt;y&gt; [&lt;button&gt; <span class=3D"pre">[&lt;m=
ode&gt;]]</span><a href=3D"https://mpv.io/manual/master/#command-interface-=
[%3Cmode%3E]]" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Send a mouse event with given coordinate=
 (<tt class=3D"docutils literal">&lt;x&gt;</tt>, <tt class=3D"docutils lite=
ral">&lt;y&gt;</tt>).</p>
            <p>Second argument:</p>
            <dl class=3D"docutils">
            <dt>&lt;button&gt;</dt>
            <dd>The button number of clicked mouse button. This should be o=
ne of 0-19.
            If <tt class=3D"docutils literal">&lt;button&gt;</tt> is omitte=
d, only the position will be updated.</dd>
            </dl>
            <p>Third argument:</p>
            <dl class=3D"last docutils">
            <dt>&lt;single&gt; (default)</dt>
            <dd>The mouse event represents regular single click.</dd>
            <dt>&lt;double&gt;</dt>
            <dd>The mouse event represents double-click.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-keyp=
ress-<name>">keypress &lt;name&gt;<a href=3D"https://mpv.io/manual/master/#=
command-interface-keypress-%3Cname%3E" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>Send a key event through mpv's input handler, triggering wh=
atever
            behavior is configured to that key. <tt class=3D"docutils liter=
al">name</tt> uses the <tt class=3D"docutils literal">input.conf</tt>
            naming scheme for keys and modifiers. Useful for the client API=
: key events
            can be sent to libmpv to handle internally.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-keyd=
own-<name>">keydown &lt;name&gt;<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-keydown-%3Cname%3E" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Similar to <tt class=3D"docutils literal">keypress</tt>, bu=
t sets the <tt class=3D"docutils literal">KEYDOWN</tt> flag so that if the =
key is
            bound to a repeatable command, it will be run repeatedly with m=
pv's key
            repeat timing until the <tt class=3D"docutils literal">keyup</t=
t> command is called.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-keyu=
p-[<name>]">keyup [&lt;name&gt;]<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-keyup-[%3Cname%3E]" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Set the <tt class=3D"docutils literal">KEYUP</tt> flag, sto=
pping any repeated behavior that had been
            triggered. <tt class=3D"docutils literal">name</tt> is optional=
. If <tt class=3D"docutils literal">name</tt> is not given or is an
            empty string, <tt class=3D"docutils literal">KEYUP</tt> will be=
 set on all keys. Otherwise, <tt class=3D"docutils literal">KEYUP</tt> will
            only be set on the key specified by <tt class=3D"docutils liter=
al">name</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-keyb=
ind-<name>-<command>">keybind &lt;name&gt; &lt;command&gt;<a href=3D"https:=
//mpv.io/manual/master/#command-interface-keybind-%3Cname%3E-%3Ccommand%3E"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Binds a key to an input command. <tt class=3D"docutils lite=
ral">command</tt> must be a complete command
            containing all the desired arguments and flags. Both <tt class=
=3D"docutils literal">name</tt> and
            <tt class=3D"docutils literal">command</tt> use the <tt class=
=3D"docutils literal">input.conf</tt> naming scheme. This is primarily
            useful for the client API.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-add"><span class=3D"pre">audio-add</span> &lt;url&gt; [&lt;flags&gt; [&lt=
;title&gt; <span class=3D"pre">[&lt;lang&gt;]]]</span><a href=3D"https://mp=
v.io/manual/master/#command-interface-audio-add" class=3D"anchor fa fa-link=
"></a></tt></dt>
            <dd>Load the given audio file. See <tt class=3D"docutils litera=
l"><span class=3D"pre">sub-add</span></tt> command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-remove"><span class=3D"pre">audio-remove</span> [&lt;id&gt;]<a href=3D"ht=
tps://mpv.io/manual/master/#command-interface-audio-remove" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Remove the given audio track. See <tt class=3D"docutils lit=
eral"><span class=3D"pre">sub-remove</span></tt> command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-reload"><span class=3D"pre">audio-reload</span> [&lt;id&gt;]<a href=3D"ht=
tps://mpv.io/manual/master/#command-interface-audio-reload" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Reload the given audio tracks. See <tt class=3D"docutils li=
teral"><span class=3D"pre">sub-reload</span></tt> command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-add"><span class=3D"pre">video-add</span> &lt;url&gt; [&lt;flags&gt; [&lt=
;title&gt; [&lt;lang&gt; <span class=3D"pre">[&lt;albumart&gt;]]]]</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-video-add" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load the given video file. See <tt class=
=3D"docutils literal"><span class=3D"pre">sub-add</span></tt> command for c=
ommon options.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-albu=
mart">albumart<a href=3D"https://mpv.io/manual/master/#command-interface-al=
bumart" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils litera=
l" id=3D"command-interface-mpv-format-flag">MPV_FORMAT_FLAG<a href=3D"https=
://mpv.io/manual/master/#command-interface-mpv-format-flag" class=3D"anchor=
 fa fa-link"></a></tt>)</dt>
            <dd>If enabled, mpv will load the given video as album art.</dd=
>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-remove"><span class=3D"pre">video-remove</span> [&lt;id&gt;]<a href=3D"ht=
tps://mpv.io/manual/master/#command-interface-video-remove" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Remove the given video track. See <tt class=3D"docutils lit=
eral"><span class=3D"pre">sub-remove</span></tt> command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-reload"><span class=3D"pre">video-reload</span> [&lt;id&gt;]<a href=3D"ht=
tps://mpv.io/manual/master/#command-interface-video-reload" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Reload the given video tracks. See <tt class=3D"docutils li=
teral"><span class=3D"pre">sub-reload</span></tt> command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-resc=
an-external-files"><span class=3D"pre">rescan-external-files</span> [&lt;mo=
de&gt;]<a href=3D"https://mpv.io/manual/master/#command-interface-rescan-ex=
ternal-files" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Rescan external files according to the c=
urrent <tt class=3D"docutils literal"><span class=3D"pre">--sub-auto</span>=
</tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">--audio-file=
-auto</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">--=
cover-art-auto</span></tt> settings. This can be used
            to auto-load external files <em>after</em> the file was loaded.=
</p>
            <p>The <tt class=3D"docutils literal">mode</tt> argument is one=
 of the following:</p>
            <dl class=3D"last docutils">
            <dt>&lt;reselect&gt; (default)</dt>
            <dd>Select the default audio and subtitle streams, which typica=
lly selects
            external files with the highest preference. (The implementation=
 is not
            perfect, and could be improved on request.)</dd>
            <dt>&lt;keep-selection&gt;</dt>
            <dd>Do not change current track selections.</dd>
            </dl>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"input-commands-that-are-possibly-s=
ubject-to-change">
            <h2>Input Commands that are Possibly Subject to Change</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-af-<=
operation>-<value>">af &lt;operation&gt; &lt;value&gt;<a href=3D"https://mp=
v.io/manual/master/#command-interface-af-%3Coperation%3E-%3Cvalue%3E" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Change audio filter chain. See <tt class=3D"docutils litera=
l">vf</tt> command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vf-<=
operation>-<value>">vf &lt;operation&gt; &lt;value&gt;<a href=3D"https://mp=
v.io/manual/master/#command-interface-vf-%3Coperation%3E-%3Cvalue%3E" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Change video filter chain.</p>
            <p>The semantics are exactly the same as with option parsing (s=
ee
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#video-filters">VIDEO FILTERS</a>). As such the text below is a redun=
dant and incomplete
            summary.</p>
            <p>The first argument decides what happens:</p>
            <dl class=3D"docutils">
            <dt>&lt;set&gt;</dt>
            <dd>Overwrite the previous filter chain with the new one.</dd>
            <dt>&lt;add&gt;</dt>
            <dd>Append the new filter chain to the previous one.</dd>
            <dt>&lt;toggle&gt;</dt>
            <dd><p class=3D"first">Check if the given filter (with the exac=
t parameters) is already in the
            video chain. If it is, remove the filter. If it isn't, add the =
filter.
            (If several filters are passed to the command, this is done for
            each filter.)</p>
            <p class=3D"last">A special variant is combining this with labe=
ls, and using <tt class=3D"docutils literal">@name</tt>
            without filter name and parameters as filter entry. This toggle=
s the
            enable/disable flag.</p>
            </dd>
            <dt>&lt;remove&gt;</dt>
            <dd>Like <tt class=3D"docutils literal">toggle</tt>, but always=
 remove the given filter from the chain.</dd>
            <dt>&lt;del&gt;</dt>
            <dd>Remove the given filters from the video chain. Unlike in th=
e other
            cases, the second parameter is a comma separated list of filter=
 names
            or integer indexes. <tt class=3D"docutils literal">0</tt> would=
 denote the first filter. Negative
            indexes start from the last filter, and <tt class=3D"docutils l=
iteral"><span class=3D"pre">-1</span></tt> denotes the last
            filter. Deprecated, use <tt class=3D"docutils literal">remove</=
tt>.</dd>
            <dt>&lt;clr&gt;</dt>
            <dd>Remove all filters. Note that like the other sub-commands, =
this does
            not control automatically inserted filters.</dd>
            </dl>
            <p>The argument is always needed. E.g. in case of <tt class=3D"=
docutils literal">clr</tt> use <tt class=3D"docutils literal">vf clr ""</tt=
>.</p>
            <p>You can assign labels to filter by prefixing them with <tt c=
lass=3D"docutils literal">@name:</tt> (where
            <tt class=3D"docutils literal">name</tt> is a user-chosen arbit=
rary identifier). Labels can be used to
            refer to filters by name in all of the filter chain modificatio=
n commands.
            For <tt class=3D"docutils literal">add</tt>, using an already u=
sed label will replace the existing filter.</p>
            <p>The <tt class=3D"docutils literal">vf</tt> command shows the=
 list of requested filters on the OSD after
            changing the filter chain. This is roughly equivalent to
            <tt class=3D"docutils literal"><span class=3D"pre">show-text</s=
pan> ${vf}</tt>. Note that auto-inserted filters for format conversion
            are not shown on the list, only what was requested by the user.=
</p>
            <p>Normally, the commands will check whether the video chain is=
 recreated
            successfully, and will undo the operation on failure. If the co=
mmand is run
            before video is configured (can happen if the command is run im=
mediately
            after opening a file and before a video frame is decoded), this=
 check can't
            be run. Then it can happen that creating the video chain fails.=
</p>
            <div class=3D"admonition admonition-example-for-input-conf">
            <p class=3D"first admonition-title">Example for input.conf</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal">a vf set vflip</tt> turn the=
 video upside-down on the <tt class=3D"docutils literal">a</tt> key</li>
            <li><tt class=3D"docutils literal">b vf set ""</tt> remove all =
video filters on <tt class=3D"docutils literal">b</tt></li>
            <li><tt class=3D"docutils literal">c vf toggle gradfun</tt> tog=
gle debanding on <tt class=3D"docutils literal">c</tt></li>
            </ul>
            </div>
            <div class=3D"admonition admonition-example-how-to-toggle-disab=
led-filters-at-runtime last">
            <p class=3D"first admonition-title">Example how to toggle disab=
led filters at runtime</p>
            <ul class=3D"last simple">
            <li>Add something like <tt class=3D"docutils literal"><span cla=
ss=3D"pre">vf-add=3D@deband:!gradfun</span></tt> to <tt class=3D"docutils l=
iteral">mpv.conf</tt>.
            The <tt class=3D"docutils literal">@deband:</tt> is the label, =
an arbitrary, user-given name for this
            filter entry. The <tt class=3D"docutils literal">!</tt> before =
the filter name disables the filter by
            default. Everything after this is the normal filter name and po=
ssibly
            filter parameters, like in the normal <tt class=3D"docutils lit=
eral"><span class=3D"pre">--vf</span></tt> syntax.</li>
            <li>Add <tt class=3D"docutils literal">a vf toggle @deband</tt>=
 to <tt class=3D"docutils literal">input.conf</tt>. This toggles the
            "disabled" flag for the filter with the label <tt class=3D"docu=
tils literal">deband</tt> when the
            <tt class=3D"docutils literal">a</tt> key is hit.</li>
            </ul>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-cycl=
e-values"><span class=3D"pre">cycle-values</span> <span class=3D"pre">[&lt;=
"!reverse"&gt;]</span> &lt;property&gt; &lt;value1&gt; [&lt;value2&gt; <spa=
n class=3D"pre">[...]]</span><a href=3D"https://mpv.io/manual/master/#comma=
nd-interface-cycle-values" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Cycle through a list of values. Each inv=
ocation of the command will set the
            given property to the next value in the list. The command will =
use the
            current value of the property/option, and use it to determine t=
he current
            position in the list of values. Once it has found it, it will s=
et the
            next value in the list (wrapping around to the first item if ne=
eded).</p>
            <p>This command has a variable number of arguments, and cannot =
be used with
            named arguments.</p>
            <p class=3D"last">The special argument <tt class=3D"docutils li=
teral">!reverse</tt> can be used to cycle the value list in
            reverse. The only advantage is that you don't need to reverse t=
he value
            list yourself when adding a second key binding for cycling back=
wards.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-enab=
le-section"><span class=3D"pre">enable-section</span> &lt;name&gt; [&lt;fla=
gs&gt;]<a href=3D"https://mpv.io/manual/master/#command-interface-enable-se=
ction" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This command is deprecated, except for m=
pv-internal uses.</p>
            <p>Enable all key bindings in the named input section.</p>
            <p>The enabled input sections form a stack. Bindings in section=
s on the top of
            the stack are preferred to lower sections. This command puts th=
e section
            on top of the stack. If the section was already on the stack, i=
t is
            implicitly removed beforehand. (A section cannot be on the stac=
k more than
            once.)</p>
            <p>The <tt class=3D"docutils literal">flags</tt> parameter can =
be a combination (separated by <tt class=3D"docutils literal">+</tt>) of th=
e
            following flags:</p>
            <dl class=3D"last docutils">
            <dt>&lt;exclusive&gt;</dt>
            <dd>All sections enabled before the newly enabled section are d=
isabled.
            They will be re-enabled as soon as all exclusive sections above=
 them
            are removed. In other words, the new section shadows all previo=
us
            sections.</dd>
            <dt>&lt;allow-hide-cursor&gt;</dt>
            <dd>This feature can't be used through the public API.</dd>
            <dt>&lt;allow-vo-dragging&gt;</dt>
            <dd>Same.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-disa=
ble-section"><span class=3D"pre">disable-section</span> &lt;name&gt;<a href=
=3D"https://mpv.io/manual/master/#command-interface-disable-section" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This command is deprecated, except for m=
pv-internal uses.</p>
            <p class=3D"last">Disable the named input section. Undoes <tt c=
lass=3D"docutils literal"><span class=3D"pre">enable-section</span></tt>.</=
p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-defi=
ne-section"><span class=3D"pre">define-section</span> &lt;name&gt; &lt;cont=
ents&gt; [&lt;flags&gt;]<a href=3D"https://mpv.io/manual/master/#command-in=
terface-define-section" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This command is deprecated, except for m=
pv-internal uses.</p>
            <p>Create a named input section, or replace the contents of an =
already existing
            input section. The <tt class=3D"docutils literal">contents</tt>=
 parameter uses the same syntax as the
            <tt class=3D"docutils literal">input.conf</tt> file (except tha=
t using the section syntax in it is not
            allowed), including the need to separate bindings with a newlin=
e character.</p>
            <p>If the <tt class=3D"docutils literal">contents</tt> paramete=
r is an empty string, the section is removed.</p>
            <p>The section with the name <tt class=3D"docutils literal">def=
ault</tt> is the normal input section.</p>
            <p>In general, input sections have to be enabled with the <tt c=
lass=3D"docutils literal"><span class=3D"pre">enable-section</span></tt>
            command, or they are ignored.</p>
            <p>The last parameter has the following meaning:</p>
            <dl class=3D"docutils">
            <dt>&lt;default&gt; (also used if parameter omitted)</dt>
            <dd>Use a key binding defined by this section only if the user =
hasn't
            already bound this key to a command.</dd>
            <dt>&lt;force&gt;</dt>
            <dd>Always bind a key. (The input section that was made active =
most recently
            wins if there are ambiguities.)</dd>
            </dl>
            <p class=3D"last">This command can be used to dispatch arbitrar=
y keys to a script or a client
            API user. If the input section defines <tt class=3D"docutils li=
teral"><span class=3D"pre">script-binding</span></tt> commands, it is
            also possible to get separate events on key up/down, and relati=
vely detailed
            information about the key state. The special key name <tt class=
=3D"docutils literal">unmapped</tt> can be
            used to match any unmapped key.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-over=
lay-add"><span class=3D"pre">overlay-add</span> &lt;id&gt; &lt;x&gt; &lt;y&=
gt; &lt;file&gt; &lt;offset&gt; &lt;fmt&gt; &lt;w&gt; &lt;h&gt; &lt;stride&=
gt;<a href=3D"https://mpv.io/manual/master/#command-interface-overlay-add" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Add an OSD overlay sourced from raw data=
. This might be useful for scripts
            and applications controlling mpv, and which want to display thi=
ngs on top
            of the video window.</p>
            <p>Overlays are usually displayed in screen resolution, but wit=
h some VOs,
            the resolution is reduced to that of the video's. You can read =
the
            <tt class=3D"docutils literal"><span class=3D"pre">osd-width</s=
pan></tt> and <tt class=3D"docutils literal"><span class=3D"pre">osd-height=
</span></tt> properties. At least with <tt class=3D"docutils literal"><span=
 class=3D"pre">--vo-xv</span></tt> and
            anamorphic video (such as DVD), <tt class=3D"docutils literal">=
<span class=3D"pre">osd-par</span></tt> should be read as well, and the
            overlay should be aspect-compensated.</p>
            <p>This has the following named arguments. The order of them is=
 not guaranteed,
            so you should always call them with named arguments, see <a cla=
ss=3D"reference internal" href=3D"https://mpv.io/manual/master/#named-argum=
ents">Named arguments</a>.</p>
            <p><tt class=3D"docutils literal">id</tt> is an integer between=
 0 and 63 identifying the overlay element. The
            ID can be used to add multiple overlay parts, update a part by =
using this
            command with an already existing ID, or to remove a part with
            <tt class=3D"docutils literal"><span class=3D"pre">overlay-remo=
ve</span></tt>. Using a previously unused ID will add a new overlay,
            while reusing an ID will update it.</p>
            <p><tt class=3D"docutils literal">x</tt> and <tt class=3D"docut=
ils literal">y</tt> specify the position where the OSD should be displayed.=
</p>
            <p><tt class=3D"docutils literal">file</tt> specifies the file =
the raw image data is read from. It can be
            either a numeric UNIX file descriptor prefixed with <tt class=
=3D"docutils literal">@</tt> (e.g. <tt class=3D"docutils literal">@4</tt>),
            or a filename. The file will be mapped into memory with <tt cla=
ss=3D"docutils literal">mmap()</tt>,
            copied, and unmapped before the command returns (changed in mpv=
 0.18.1).</p>
            <p>It is also possible to pass a raw memory address for use as =
bitmap memory
            by passing a memory address as integer prefixed with an <tt cla=
ss=3D"docutils literal">&amp;</tt> character.
            Passing the wrong thing here will crash the player. This mode m=
ight be
            useful for use with libmpv. The <tt class=3D"docutils literal">=
offset</tt> parameter is simply added to the
            memory address (since mpv 0.8.0, ignored before).</p>
            <p><tt class=3D"docutils literal">offset</tt> is the byte offse=
t of the first pixel in the source file.
            (The current implementation always mmap's the whole file from p=
osition 0 to
            the end of the image, so large offsets should be avoided. Befor=
e mpv 0.8.0,
            the offset was actually passed directly to <tt class=3D"docutil=
s literal">mmap</tt>, but it was changed to
            make using it easier.)</p>
            <p><tt class=3D"docutils literal">fmt</tt> is a string identify=
ing the image format. Currently, only <tt class=3D"docutils literal">bgra</=
tt>
            is defined. This format has 4 bytes per pixels, with 8 bits per=
 component.
            The least significant 8 bits are blue, and the most significant=
 8 bits
            are alpha (in little endian, the components are B-G-R-A, with B=
 as first
            byte). This uses premultiplied alpha: every color component is =
already
            multiplied with the alpha component. This means the numeric val=
ue of each
            component is equal to or smaller than the alpha component. (Vio=
lating this
            rule will lead to different results with different VOs: numeric=
 overflows
            resulting from blending broken alpha values is considered somet=
hing that
            shouldn't happen, and consequently implementations don't ensure=
 that you
            get predictable behavior in this case.)</p>
            <p><tt class=3D"docutils literal">w</tt>, <tt class=3D"docutils=
 literal">h</tt>, and <tt class=3D"docutils literal">stride</tt> specify th=
e size of the overlay. <tt class=3D"docutils literal">w</tt> is the
            visible width of the overlay, while <tt class=3D"docutils liter=
al">stride</tt> gives the width in bytes in
            memory. In the simple case, and with the <tt class=3D"docutils =
literal">bgra</tt> format, <tt class=3D"docutils literal"><span class=3D"pr=
e">stride=3D=3D4*w</span></tt>.
            In general, the total amount of memory accessed is <tt class=3D=
"docutils literal">stride * h</tt>.
            (Technically, the minimum size would be <tt class=3D"docutils l=
iteral">stride * (h - 1) + w * 4</tt>, but
            for simplicity, the player will access all <tt class=3D"docutil=
s literal">stride * h</tt> bytes.)</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Before mpv 0.18.1, you had to do manual "doub=
le buffering" when updating
            an overlay by replacing it with a different memory buffer. Sinc=
e mpv
            0.18.1, the memory is simply copied and doesn't reference any o=
f the
            memory indicated by the command's arguments after the command r=
eturns.
            If you want to use this command before mpv 0.18.1, reads the ol=
d docs
            to see how to handle this correctly.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-over=
lay-remove"><span class=3D"pre">overlay-remove</span> &lt;id&gt;<a href=3D"=
https://mpv.io/manual/master/#command-interface-overlay-remove" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>Remove an overlay added with <tt class=3D"docutils literal"=
><span class=3D"pre">overlay-add</span></tt> and the same ID. Does nothing
            if no overlay with this ID exists.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
overlay"><span class=3D"pre">osd-overlay</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-osd-overlay" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Add/update/remove an OSD overlay.</p>
            <p>(Although this sounds similar to <tt class=3D"docutils liter=
al"><span class=3D"pre">overlay-add</span></tt>, <tt class=3D"docutils lite=
ral"><span class=3D"pre">osd-overlay</span></tt> is for
            text overlays, while <tt class=3D"docutils literal"><span class=
=3D"pre">overlay-add</span></tt> is for bitmaps. Maybe <tt class=3D"docutil=
s literal"><span class=3D"pre">overlay-add</span></tt>
            will be merged into <tt class=3D"docutils literal"><span class=
=3D"pre">osd-overlay</span></tt> to remove this oddity.)</p>
            <p>You can use this to add text overlays in ASS format. ASS has=
 advanced
            positioning and rendering tags, which can be used to render alm=
ost any kind
            of vector graphics.</p>
            <p>This command accepts the following parameters:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-id">=
id<a href=3D"https://mpv.io/manual/master/#command-interface-id" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Arbitrary integer that identifies the ov=
erlay. Multiple overlays can be
            added by calling this command with different <tt class=3D"docut=
ils literal">id</tt> parameters. Calling
            this command with the same <tt class=3D"docutils literal">id</t=
t> replaces the previously set overlay.</p>
            <p>There is a separate namespace for each libmpv client (i.e. I=
PC
            connection, script), so IDs can be made up and assigned by the =
API user
            without conflicting with other API users.</p>
            <p class=3D"last">If the libmpv client is destroyed, all overla=
ys associated with it are
            also deleted. In particular, connecting via <tt class=3D"docuti=
ls literal"><span class=3D"pre">--input-ipc-server</span></tt>,
            adding an overlay, and disconnecting will remove the overlay im=
mediately
            again.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-form=
at">format<a href=3D"https://mpv.io/manual/master/#command-interface-format=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">String that gives the type of the overla=
y. Accepts the following values
            (HTML rendering of this is broken, view the generated manpage i=
nstead,
            or the raw RST source):</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-ass-=
events"><span class=3D"pre">ass-events</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-ass-events" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">The <tt class=3D"docutils literal">data<=
/tt> parameter is a string. The string is split on the
            newline character. Every line is turned into the <tt class=3D"d=
ocutils literal">Text</tt> part of
            a <tt class=3D"docutils literal">Dialogue</tt> ASS event. Timin=
g is unused (but behavior of timing
            dependent ASS tags may change in future mpv versions).</p>
            <p>Note that it's better to put multiple lines into <tt class=
=3D"docutils literal">data</tt>, instead
            of adding multiple OSD overlays.</p>
            <p>This provides 2 ASS <tt class=3D"docutils literal">Styles</t=
t>. <tt class=3D"docutils literal">OSD</tt> contains the text style as
            defined by the current <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--osd-...</span></tt> options. <tt class=3D"docutils literal">De=
fault</tt> is
            similar, and contains style that <tt class=3D"docutils literal"=
>OSD</tt> would have if all options
            were set to the default.</p>
            <p class=3D"last">In addition, the <tt class=3D"docutils litera=
l">res_x</tt> and <tt class=3D"docutils literal">res_y</tt> options specify=
 the value
            of the ASS <tt class=3D"docutils literal">PlayResX</tt> and <tt=
 class=3D"docutils literal">PlayResY</tt> header fields. If <tt class=3D"do=
cutils literal">res_y</tt>
            is set to 0, <tt class=3D"docutils literal">PlayResY</tt> is in=
itialized to an arbitrary default
            value (but note that the default for this command is 720, not 0=
).
            If <tt class=3D"docutils literal">res_x</tt> is set to 0, <tt c=
lass=3D"docutils literal">PlayResX</tt> is set based on <tt class=3D"docuti=
ls literal">res_y</tt>
            such that a virtual ASS pixel has a square pixel aspect ratio.<=
/p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-none=
">none<a href=3D"https://mpv.io/manual/master/#command-interface-none" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Special value that causes the overlay to be removed. Most p=
arameters
            other than <tt class=3D"docutils literal">id</tt> and <tt class=
=3D"docutils literal">format</tt> are mostly ignored.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-data=
">data<a href=3D"https://mpv.io/manual/master/#command-interface-data" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>String defining the overlay contents according to the <tt c=
lass=3D"docutils literal">format</tt>
            parameter.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-res-=
x">res_x<a href=3D"https://mpv.io/manual/master/#command-interface-res-x" c=
lass=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"=
command-interface-res-y">res_y<a href=3D"https://mpv.io/manual/master/#comm=
and-interface-res-y" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Used if <tt class=3D"docutils literal">format</tt> is set t=
o <tt class=3D"docutils literal"><span class=3D"pre">ass-events</span></tt>=
 (see description there).
            Optional, defaults to 0/720.</dd>
            <dt><tt class=3D"docutils literal">z</tt></dt>
            <dd><p class=3D"first">The Z order of the overlay. Optional, de=
faults to 0.</p>
            <p>Note that Z order between different overlays of different fo=
rmats is
            static, and cannot be changed (currently, this means that bitma=
p
            overlays added by <tt class=3D"docutils literal"><span class=3D=
"pre">overlay-add</span></tt> are always on top of the ASS overlays
            added by <tt class=3D"docutils literal"><span class=3D"pre">osd=
-overlay</span></tt>). In addition, the builtin OSD components are
            always below any of the custom OSD. (This includes subtitles of=
 any kind
            as well as text rendered by <tt class=3D"docutils literal"><spa=
n class=3D"pre">show-text</span></tt>.)</p>
            <p class=3D"last">It's possible that future mpv versions will r=
andomly change how Z order
            between different OSD formats and builtin OSD is handled.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-hidd=
en">hidden<a href=3D"https://mpv.io/manual/master/#command-interface-hidden=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If set to true, do not display this (default: false).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-comp=
ute-bounds">compute_bounds<a href=3D"https://mpv.io/manual/master/#command-=
interface-compute-bounds" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If set to true, attempt to determine bou=
nds and write them to the
            command's result value as <tt class=3D"docutils literal">x0</tt=
>, <tt class=3D"docutils literal">x1</tt>, <tt class=3D"docutils literal">y=
0</tt>, <tt class=3D"docutils literal">y1</tt> rectangle
            (default: false). If the rectangle is empty, not known, or some=
how
            degenerate, it is not set. <tt class=3D"docutils literal">x1</t=
t>/<tt class=3D"docutils literal">y1</tt> is the coordinate of the
            bottom exclusive corner of the rectangle.</p>
            <p>The result value may depend on the VO window size, and is ba=
sed on the
            last known window size at the time of the call. This means the =
results
            may be different from what is actually rendered.</p>
            <p>For <tt class=3D"docutils literal"><span class=3D"pre">ass-e=
vents</span></tt>, the result rectangle is recomputed to <tt class=3D"docut=
ils literal">PlayRes</tt>
            coordinates (<tt class=3D"docutils literal">res_x</tt>/<tt clas=
s=3D"docutils literal">res_y</tt>). If window size is not known, a
            fallback is chosen.</p>
            <p>You should be aware that this mechanism is very inefficient,=
 as it
            renders the full result, and then uses the bounding box of the =
rendered
            bitmap list (even if <tt class=3D"docutils literal">hidden</tt>=
 is set). It will flush various caches.
            Its results also depend on the used libass version.</p>
            <p class=3D"last">This feature is experimental, and may change =
in some way again.</p>
            </dd>
            </dl>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">Always use named arguments (<tt class=3D"docu=
tils literal">mpv_command_node()</tt>). Lua scripts should
            use the <tt class=3D"docutils literal">mp.create_osd_overlay()<=
/tt> helper instead of invoking this
            command directly.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-scri=
pt-message"><span class=3D"pre">script-message</span> [&lt;arg1&gt; [&lt;ar=
g2&gt; <span class=3D"pre">[...]]]</span><a href=3D"https://mpv.io/manual/m=
aster/#command-interface-script-message" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Send a message to all clients, and pass =
it the following list of arguments.
            What this message means, how many arguments it takes, and what =
the arguments
            mean is fully up to the receiver and the sender. Every client r=
eceives the
            message, so be careful about name clashes (or use <tt class=3D"=
docutils literal"><span class=3D"pre">script-message-to</span></tt>).</p>
            <p class=3D"last">This command has a variable number of argumen=
ts, and cannot be used with
            named arguments.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-scri=
pt-message-to"><span class=3D"pre">script-message-to</span> &lt;target&gt; =
[&lt;arg1&gt; [&lt;arg2&gt; <span class=3D"pre">[...]]]</span><a href=3D"ht=
tps://mpv.io/manual/master/#command-interface-script-message-to" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Same as <tt class=3D"docutils literal"><=
span class=3D"pre">script-message</span></tt>, but send it only to the clie=
nt named
            <tt class=3D"docutils literal">&lt;target&gt;</tt>. Each client=
 (scripts etc.) has a unique name. For example,
            Lua scripts can get their name via <tt class=3D"docutils litera=
l">mp.get_script_name()</tt>. Note that
            client names only consist of alphanumeric characters and <tt cl=
ass=3D"docutils literal">_</tt>.</p>
            <p class=3D"last">This command has a variable number of argumen=
ts, and cannot be used with
            named arguments.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-scri=
pt-binding"><span class=3D"pre">script-binding</span> &lt;name&gt;<a href=
=3D"https://mpv.io/manual/master/#command-interface-script-binding" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Invoke a script-provided key binding. Th=
is can be used to remap key
            bindings provided by external Lua scripts.</p>
            <p>The argument is the name of the binding.</p>
            <p>It can optionally be prefixed with the name of the script, u=
sing <tt class=3D"docutils literal">/</tt> as
            separator, e.g. <tt class=3D"docutils literal"><span class=3D"p=
re">script-binding</span> scriptname/bindingname</tt>. Note that script
            names only consist of alphanumeric characters and <tt class=3D"=
docutils literal">_</tt>.</p>
            <p>For completeness, here is how this command works internally.=
 The details
            could change any time. On any matching key event, <tt class=3D"=
docutils literal"><span class=3D"pre">script-message-to</span></tt>
            or <tt class=3D"docutils literal"><span class=3D"pre">script-me=
ssage</span></tt> is called (depending on whether the script name is
            included), with the following arguments:</p>
            <ol class=3D"arabic simple">
            <li>The string <tt class=3D"docutils literal"><span class=3D"pr=
e">key-binding</span></tt>.</li>
            <li>The name of the binding (as established above).</li>
            <li>The key state as string (see below).</li>
            <li>The key name (since mpv 0.15.0).</li>
            <li>The text the key would produce, or empty string if not appl=
icable.</li>
            </ol>
            <p>The 5th argument is only set if no modifiers are present (us=
ing the shift
            key with a letter is normally not emitted as having a modifier,=
 and results
            in upper case text instead, but some backends may mess up).</p>
            <p>The key state consists of 2 characters:</p>
            <ol class=3D"arabic simple">
            <li>One of <tt class=3D"docutils literal">d</tt> (key was press=
ed down), <tt class=3D"docutils literal">u</tt> (was released), <tt class=
=3D"docutils literal">r</tt> (key
            is still down, and was repeated; only if key repeat is enabled =
for this
            binding), <tt class=3D"docutils literal">p</tt> (key was presse=
d; happens if up/down can't be tracked).</li>
            <li>Whether the event originates from the mouse, either <tt cla=
ss=3D"docutils literal">m</tt> (mouse button)
            or <tt class=3D"docutils literal">-</tt> (something else).</li>
            </ol>
            <p class=3D"last">Future versions can add more arguments and mo=
re key state characters to
            support more input peculiarities.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-ab-l=
oop"><span class=3D"pre">ab-loop</span><a href=3D"https://mpv.io/manual/mas=
ter/#command-interface-ab-loop" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Cycle through A-B loop states. The first command will set t=
he <tt class=3D"docutils literal">A</tt> point
            (the <tt class=3D"docutils literal"><span class=3D"pre">ab-loop=
-a</span></tt> property); the second the <tt class=3D"docutils literal">B</=
tt> point, and the third
            will clear both points.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-drop=
-buffers"><span class=3D"pre">drop-buffers</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-drop-buffers" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Drop audio/video/demuxer buffers, and restart from fresh. M=
ight help with
            unseekable streams that are going out of sync.
            This command might be changed or removed in the future.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-scre=
enshot-raw"><span class=3D"pre">screenshot-raw</span> [&lt;flags&gt;]<a hre=
f=3D"https://mpv.io/manual/master/#command-interface-screenshot-raw" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Return a screenshot in memory. This can =
be used only through the client
            API. The MPV_FORMAT_NODE_MAP returned by this command has the <=
tt class=3D"docutils literal">w</tt>, <tt class=3D"docutils literal">h</tt>=
,
            <tt class=3D"docutils literal">stride</tt> fields set to obviou=
s contents. The <tt class=3D"docutils literal">format</tt> field is set to
            <tt class=3D"docutils literal">bgr0</tt> by default. This forma=
t is organized as <tt class=3D"docutils literal">B8G8R8X8</tt> (where <tt c=
lass=3D"docutils literal">B</tt>
            is the LSB). The contents of the padding <tt class=3D"docutils =
literal">X</tt> are undefined. The <tt class=3D"docutils literal">data</tt>
            field is of type MPV_FORMAT_BYTE_ARRAY with the actual image da=
ta. The image
            is freed as soon as the result mpv_node is freed. As usual with=
 client API
            semantics, you are not allowed to write to the image data.</p>
            <p>The <tt class=3D"docutils literal">stride</tt> is the number=
 of bytes from a pixel at <tt class=3D"docutils literal">(x0, y0)</tt> to t=
he
            pixel at <tt class=3D"docutils literal">(x0, y0 + 1)</tt>. This=
 can be larger than <tt class=3D"docutils literal">w * 4</tt> if the image
            was cropped, or if there is padding. This number can be negativ=
e as well.
            You access a pixel with <tt class=3D"docutils literal">byte_ind=
ex =3D y * stride + x * 4</tt> (assuming the
            <tt class=3D"docutils literal">bgr0</tt> format).</p>
            <p class=3D"last">The <tt class=3D"docutils literal">flags</tt>=
 argument is like the first argument to <tt class=3D"docutils literal">scre=
enshot</tt> and
            supports <tt class=3D"docutils literal">subtitles</tt>, <tt cla=
ss=3D"docutils literal">video</tt>, <tt class=3D"docutils literal">window</=
tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vf-c=
ommand"><span class=3D"pre">vf-command</span> &lt;label&gt; &lt;command&gt;=
 &lt;argument&gt;<a href=3D"https://mpv.io/manual/master/#command-interface=
-vf-command" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Send a command to the filter with the gi=
ven <tt class=3D"docutils literal">&lt;label&gt;</tt>. Use <tt class=3D"doc=
utils literal">all</tt> to send
            it to all filters at once. The command and argument string is f=
ilter
            specific. Currently, this only works with the <tt class=3D"docu=
tils literal">lavfi</tt> filter - see
            the libavfilter documentation for which commands a filter suppo=
rts.</p>
            <p class=3D"last">Note that the <tt class=3D"docutils literal">=
&lt;label&gt;</tt> is a mpv filter label, not a libavfilter filter
            name.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-af-c=
ommand"><span class=3D"pre">af-command</span> &lt;label&gt; &lt;command&gt;=
 &lt;argument&gt;<a href=3D"https://mpv.io/manual/master/#command-interface=
-af-command" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
vf-command</span></tt>, but for audio filters.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-appl=
y-profile"><span class=3D"pre">apply-profile</span> &lt;name&gt; [&lt;mode&=
gt;]<a href=3D"https://mpv.io/manual/master/#command-interface-apply-profil=
e" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Apply the contents of a named profile. T=
his is like using <tt class=3D"docutils literal">profile=3Dname</tt>
            in a config file, except you can map it to a key binding to cha=
nge it at
            runtime.</p>
            <p>The mode argument:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-defa=
ult">default<a href=3D"https://mpv.io/manual/master/#command-interface-defa=
ult" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Apply the profile. Default if the argument is omitted.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-rest=
ore">restore<a href=3D"https://mpv.io/manual/master/#command-interface-rest=
ore" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Restore options set by a previous <tt class=3D"docutils lit=
eral"><span class=3D"pre">apply-profile</span></tt> command for this
            profile. Only works if the profile has <tt class=3D"docutils li=
teral"><span class=3D"pre">profile-restore</span></tt> set to a
            relevant mode. Prints a warning if nothing could be done. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#runtime-profiles">Runtime profiles</a> for details.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-load=
-script"><span class=3D"pre">load-script</span> &lt;filename&gt;<a href=3D"=
https://mpv.io/manual/master/#command-interface-load-script" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Load a script, similar to the <tt class=
=3D"docutils literal"><span class=3D"pre">--script</span></tt> option. Whet=
her this waits for
            the script to finish initialization or not changed multiple tim=
es, and the
            future behavior is left undefined.</p>
            <p class=3D"last">On success, returns a <tt class=3D"docutils l=
iteral">mpv_node</tt> with a <tt class=3D"docutils literal">client_id</tt> =
field set to the
            return value of the <tt class=3D"docutils literal">mpv_client_i=
d()</tt> API call of the newly created script
            handle.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chan=
ge-list"><span class=3D"pre">change-list</span> &lt;name&gt; &lt;operation&=
gt; &lt;value&gt;<a href=3D"https://mpv.io/manual/master/#command-interface=
-change-list" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This command changes list options as des=
cribed in <a class=3D"reference internal" href=3D"https://mpv.io/manual/mas=
ter/#list-options">List Options</a>. The
            <tt class=3D"docutils literal">&lt;name&gt;</tt> parameter is t=
he normal option name, while <tt class=3D"docutils literal">&lt;operation&g=
t;</tt> is
            the suffix or action used on the option.</p>
            <p>Some operations take no value, but the command still require=
s the value
            parameter. In these cases, the value must be an empty string.</=
p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">change-li=
st</span> <span class=3D"pre">glsl-shaders</span> append file.glsl</tt></p>
            <p class=3D"last">Add a filename to the <tt class=3D"docutils l=
iteral"><span class=3D"pre">glsl-shaders</span></tt> list. The command line
            equivalent is <tt class=3D"docutils literal"><span class=3D"pre=
">--glsl-shaders-append=3Dfile.glsl</span></tt> or alternatively
            <tt class=3D"docutils literal"><span class=3D"pre">--glsl-shade=
r=3Dfile.glsl</span></tt>.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-dump=
-cache"><span class=3D"pre">dump-cache</span> &lt;start&gt; &lt;end&gt; &lt=
;filename&gt;<a href=3D"https://mpv.io/manual/master/#command-interface-dum=
p-cache" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Dump the current cache to the given file=
name. The <tt class=3D"docutils literal">&lt;filename&gt;</tt> file is
            overwritten if it already exists. <tt class=3D"docutils literal=
">&lt;start&gt;</tt> and <tt class=3D"docutils literal">&lt;end&gt;</tt> gi=
ve the
            time range of what to dump. If no data is cached at the given t=
ime range,
            nothing may be dumped (creating a file with no packets).</p>
            <p>Dumping a larger part of the cache will freeze the player. N=
o effort was
            made to fix this, as this feature was meant mostly for creating=
 small
            excerpts.</p>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">--str=
eam-record</span></tt> for various caveats that mostly apply to this
            command too, as both use the same underlying code for writing t=
he output
            file.</p>
            <p>If <tt class=3D"docutils literal">&lt;filename&gt;</tt> is a=
n empty string, an ongoing <tt class=3D"docutils literal"><span class=3D"pr=
e">dump-cache</span></tt> is stopped.</p>
            <p>If <tt class=3D"docutils literal">&lt;end&gt;</tt> is <tt cl=
ass=3D"docutils literal">no</tt>, then continuous dumping is enabled. Then,=
 after
            dumping the existing parts of the cache, anything read from net=
work is
            appended to the cache as well. This behaves similar to <tt clas=
s=3D"docutils literal"><span class=3D"pre">--stream-record</span></tt>
            (although it does not conflict with that option, and they can b=
e both active
            at the same time).</p>
            <p>If the <tt class=3D"docutils literal">&lt;end&gt;</tt> time =
is after the cache, the command will _not_ wait and
            write newly received data to it.</p>
            <p>The end of the resulting file may be slightly damaged or inc=
omplete at the
            end. (Not enough effort was made to ensure that the end lines u=
p properly.)</p>
            <p>Note that this command will finish only once dumping ends. T=
hat means it
            works similar to the <tt class=3D"docutils literal">screenshot<=
/tt> command, just that it can block much
            longer. If continuous dumping is used, the command will not fin=
ish until
            playback is stopped, an error happens, another <tt class=3D"doc=
utils literal"><span class=3D"pre">dump-cache</span></tt> command is
            run, or an API like <tt class=3D"docutils literal">mp.abort_asy=
nc_command</tt> was called to explicitly stop
            the command. See <a class=3D"reference internal" href=3D"https:=
//mpv.io/manual/master/#synchronous-vs-asynchronous">Synchronous vs. Asynch=
ronous</a>.</p>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This was mostly created for network streams. =
For local files, there may
            be much better methods to create excerpts and such. There are t=
ons of
            much more user-friendly Lua scripts, that will re-encode parts =
of a file
            by spawning a separate instance of <tt class=3D"docutils litera=
l">ffmpeg</tt>. With network streams,
            this is not that easily possible, as the stream would have to b=
e
            downloaded again. Even if <tt class=3D"docutils literal"><span =
class=3D"pre">--stream-record</span></tt> is used to record the
            stream to the local filesystem, there may be problems, because =
the
            recorded file is still written to.</p>
            </div>
            <p class=3D"last">This command is experimental, and all details=
 about it may change in the
            future.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-ab-l=
oop-dump-cache"><span class=3D"pre">ab-loop-dump-cache</span> &lt;filename&=
gt;<a href=3D"https://mpv.io/manual/master/#command-interface-ab-loop-dump-=
cache" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Essentially calls <tt class=3D"docutils =
literal"><span class=3D"pre">dump-cache</span></tt> with the current AB-loo=
p points as
            arguments. Like <tt class=3D"docutils literal"><span class=3D"p=
re">dump-cache</span></tt>, this will overwrite the file at
            <tt class=3D"docutils literal">&lt;filename&gt;</tt>. Likewise,=
 if the B point is set to <tt class=3D"docutils literal">no</tt>, it will e=
nter
            continuous dumping after the existing cache was dumped.</p>
            <p class=3D"last">The author reserves the right to remove this =
command if enough motivation
            is found to move this functionality to a trivial Lua script.</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-ab-l=
oop-align-cache"><span class=3D"pre">ab-loop-align-cache</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-ab-loop-align-cache" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Re-adjust the A/B loop points to the sta=
rt and end within the cache the
            <tt class=3D"docutils literal"><span class=3D"pre">ab-loop-dump=
-cache</span></tt> command will (probably) dump. Basically, it aligns
            the times on keyframes. The guess might be off especially at th=
e end (due to
            granularity issues due to remuxing). If the cache shrinks in th=
e meantime,
            the points set by the command will not be the effective paramet=
ers either.</p>
            <p class=3D"last">This command has an even more uncertain futur=
e than <tt class=3D"docutils literal"><span class=3D"pre">ab-loop-dump-cach=
e</span></tt>
            and might disappear without replacement if the author decides i=
t's useless.</p>
            </dd>
            </dl>
            <p>Undocumented commands: <tt class=3D"docutils literal"><span =
class=3D"pre">ao-reload</span></tt> (experimental/internal).</p>
            <div class=3D"section" id=3D"list-of-events">
            <h3>List of events</h3>
            <p>This is a partial list of events. This section describes wha=
t
            <tt class=3D"docutils literal">mpv_event_to_node()</tt> returns=
, and which is what scripting APIs and the JSON
            IPC sees. Note that the C API has separate C-level declarations=
 with
            <tt class=3D"docutils literal">mpv_event</tt>, which may be sli=
ghtly different.</p>
            <p>Note that events are asynchronous: the player core continues=
 running while
            events are delivered to scripts and other clients. In some case=
s, you can use
            hooks to enforce synchronous execution.</p>
            <p>All events can have the following fields:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-even=
t">event<a href=3D"https://mpv.io/manual/master/#command-interface-event" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Name as the event (as returned by <tt class=3D"docutils lit=
eral">mpv_event_name()</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-id">=
id<a href=3D"https://mpv.io/manual/master/#command-interface-id" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>The <tt class=3D"docutils literal">reply_userdata</tt> fiel=
d (opaque user value). If <tt class=3D"docutils literal">reply_userdata</tt=
> is 0,
            the field is not added.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-erro=
r">error<a href=3D"https://mpv.io/manual/master/#command-interface-error" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set to an error string (as returned by <tt class=3D"docutil=
s literal">mpv_error_string()</tt>). This field
            is missing if no error happened, or the event type does not rep=
ort error.
            Most events leave this unset.</dd>
            </dl>
            <p>This list uses the event name field value, and the C API sym=
bol in brackets:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-star=
t-file"><span class=3D"pre">start-file</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-start-file" class=3D"anchor fa fa-link"></a></=
tt> (<tt class=3D"docutils literal" id=3D"command-interface-mpv-event-start=
-file">MPV_EVENT_START_FILE<a href=3D"https://mpv.io/manual/master/#command=
-interface-mpv-event-start-file" class=3D"anchor fa fa-link"></a></tt>)</dt=
>
            <dd><p class=3D"first">Happens right before a new file is loade=
d. When you receive this, the
            player is loading the file (or possibly already done with it).<=
/p>
            <p>This has the following fields:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-entry-id">playlist_entry_id<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-playlist-entry-id" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Playlist entry ID of the file being loaded now.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-end-=
file"><span class=3D"pre">end-file</span><a href=3D"https://mpv.io/manual/m=
aster/#command-interface-end-file" class=3D"anchor fa fa-link"></a></tt> (<=
tt class=3D"docutils literal" id=3D"command-interface-mpv-event-end-file">M=
PV_EVENT_END_FILE<a href=3D"https://mpv.io/manual/master/#command-interface=
-mpv-event-end-file" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd><p class=3D"first">Happens after a file was unloaded. Typic=
ally, the player will load the
            next file right away, or quit if this was the last file.</p>
            <p>The event has the following fields:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-reas=
on">reason<a href=3D"https://mpv.io/manual/master/#command-interface-reason=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Has one of these values:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-eof"=
>eof<a href=3D"https://mpv.io/manual/master/#command-interface-eof" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The file has ended. This can (but doesn't have to) include
            incomplete files or broken network connections under
            circumstances.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stop=
">stop<a href=3D"https://mpv.io/manual/master/#command-interface-stop" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Playback was ended by a command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-quit=
">quit<a href=3D"https://mpv.io/manual/master/#command-interface-quit" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Playback was ended by sending the quit command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-erro=
r">error<a href=3D"https://mpv.io/manual/master/#command-interface-error" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>An error happened. In this case, an <tt class=3D"docutils l=
iteral">error</tt> field is present with
            the error string.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-redi=
rect">redirect<a href=3D"https://mpv.io/manual/master/#command-interface-re=
direct" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Happens with playlists and similar. Details see
            <tt class=3D"docutils literal">MPV_END_FILE_REASON_REDIRECT</tt=
> in the C API.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-unkn=
own">unknown<a href=3D"https://mpv.io/manual/master/#command-interface-unkn=
own" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Unknown. Normally doesn't happen, unless the Lua API is out=
 of sync
            with the C API. (Likewise, it could happen that your script get=
s
            reason strings that did not exist yet at the time your script w=
as
            written.)</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-entry-id">playlist_entry_id<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-playlist-entry-id" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Playlist entry ID of the file that was being played or atte=
mpted to be
            played. This has the same value as the <tt class=3D"docutils li=
teral">playlist_entry_id</tt> field in the
            corresponding <tt class=3D"docutils literal"><span class=3D"pre=
">start-file</span></tt> event.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-file=
-error">file_error<a href=3D"https://mpv.io/manual/master/#command-interfac=
e-file-error" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Set to mpv error string describing the approximate reason w=
hy playback
            failed. Unset if no error known. (In Lua scripting, this value =
was set
            on the <tt class=3D"docutils literal">error</tt> field directly=
. This is deprecated since mpv 0.33.0.
            In the future, this <tt class=3D"docutils literal">error</tt> f=
ield will be unset for this specific
            event.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-insert-id">playlist_insert_id<a href=3D"https://mpv.io/manual/master/#=
command-interface-playlist-insert-id" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>If loading ended, because the playlist entry to be played w=
as for example
            a playlist, and the current playlist entry is replaced with a n=
umber of
            other entries. This may happen at least with MPV_END_FILE_REASO=
N_REDIRECT
            (other event types may use this for similar but different purpo=
ses in the
            future). In this case, playlist_insert_id will be set to the pl=
aylist
            entry ID of the first inserted entry, and playlist_insert_num_e=
ntries to
            the total number of inserted playlist entries. Note this in thi=
s specific
            case, the ID of the last inserted entry is playlist_insert_id+n=
um-1.
            Beware that depending on circumstances, you may observe the new=
 playlist
            entries before seeing the event (e.g. reading the "playlist" pr=
operty or
            getting a property change notification before receiving the eve=
nt).
            If this is 0 in the C API, this field isn't added.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-insert-num-entries">playlist_insert_num_entries<a href=3D"https://mpv.=
io/manual/master/#command-interface-playlist-insert-num-entries" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>See playlist_insert_id. Only present if playlist_insert_id =
is present.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-file=
-loaded"><span class=3D"pre">file-loaded</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-file-loaded" class=3D"anchor fa fa-link"></a=
></tt>  (<tt class=3D"docutils literal" id=3D"command-interface-mpv-event-f=
ile-loaded">MPV_EVENT_FILE_LOADED<a href=3D"https://mpv.io/manual/master/#c=
ommand-interface-mpv-event-file-loaded" class=3D"anchor fa fa-link"></a></t=
t>)</dt>
            <dd>Happens after a file was loaded and begins playback.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-seek=
">seek<a href=3D"https://mpv.io/manual/master/#command-interface-seek" clas=
s=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=3D"com=
mand-interface-mpv-event-seek">MPV_EVENT_SEEK<a href=3D"https://mpv.io/manu=
al/master/#command-interface-mpv-event-seek" class=3D"anchor fa fa-link"></=
a></tt>)</dt>
            <dd>Happens on seeking. (This might include cases when the play=
er seeks
            internally, even without user interaction. This includes e.g. s=
egment
            changes when playing ordered chapters Matroska files.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
back-restart"><span class=3D"pre">playback-restart</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-playback-restart" class=3D"anchor =
fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=3D"command-interfa=
ce-mpv-event-playback-restart">MPV_EVENT_PLAYBACK_RESTART<a href=3D"https:/=
/mpv.io/manual/master/#command-interface-mpv-event-playback-restart" class=
=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Start of playback after seek or after file was loaded.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-shut=
down">shutdown<a href=3D"https://mpv.io/manual/master/#command-interface-sh=
utdown" class=3D"anchor fa fa-link"></a></tt> (<tt class=3D"docutils litera=
l" id=3D"command-interface-mpv-event-shutdown">MPV_EVENT_SHUTDOWN<a href=3D=
"https://mpv.io/manual/master/#command-interface-mpv-event-shutdown" class=
=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Sent when the player quits, and the script should terminate=
. Normally
            handled automatically. See <a class=3D"reference internal" href=
=3D"https://mpv.io/manual/master/#details-on-the-script-initialization-and-=
lifecycle">Details on the script initialization and lifecycle</a>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-log-=
message"><span class=3D"pre">log-message</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-log-message" class=3D"anchor fa fa-link"></a=
></tt> (<tt class=3D"docutils literal" id=3D"command-interface-mpv-event-lo=
g-message">MPV_EVENT_LOG_MESSAGE<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-mpv-event-log-message" class=3D"anchor fa fa-link"></a></tt=
>)</dt>
            <dd><p class=3D"first">Receives messages enabled with <tt class=
=3D"docutils literal">mpv_request_log_messages()</tt> (Lua:
            <tt class=3D"docutils literal">mp.enable_messages</tt>).</p>
            <p>This contains, in addition to the default event fields, the =
following
            fields:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-pref=
ix">prefix<a href=3D"https://mpv.io/manual/master/#command-interface-prefix=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The module prefix, identifies the sender of the message. Th=
is is what
            the terminal player puts in front of the message text when usin=
g the
            <tt class=3D"docutils literal"><span class=3D"pre">--v</span></=
tt> option, and is also what is used for <tt class=3D"docutils literal"><sp=
an class=3D"pre">--msg-level</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-leve=
l">level<a href=3D"https://mpv.io/manual/master/#command-interface-level" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The log level as string. See <tt class=3D"docutils literal"=
>msg.log</tt> for possible log level names.
            Note that later versions of mpv might add new levels or remove
            (undocumented) existing ones.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-text=
">text<a href=3D"https://mpv.io/manual/master/#command-interface-text" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The log message. The text will end with a newline character=
. Sometimes
            it can contain multiple lines.</dd>
            </dl>
            <p class=3D"last">Keep in mind that these messages are meant to=
 be hints for humans. You
            should not parse them, and prefix/level/text of messages might =
change
            any time.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-hook=
">hook<a href=3D"https://mpv.io/manual/master/#command-interface-hook" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The event has the following fields:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-hook=
-id">hook_id<a href=3D"https://mpv.io/manual/master/#command-interface-hook=
-id" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>ID to pass to <tt class=3D"docutils literal">mpv_hook_conti=
nue()</tt>. The Lua scripting wrapper
            provides a better API around this with <tt class=3D"docutils li=
teral">mp.add_hook()</tt>.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-get-=
property-reply"><span class=3D"pre">get-property-reply</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-get-property-reply" class=3D"a=
nchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=3D"command-i=
nterface-mpv-event-get-property-reply">MPV_EVENT_GET_PROPERTY_REPLY<a href=
=3D"https://mpv.io/manual/master/#command-interface-mpv-event-get-property-=
reply" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>See C API.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-set-=
property-reply"><span class=3D"pre">set-property-reply</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-set-property-reply" class=3D"a=
nchor fa fa-link"></a></tt> (<tt class=3D"docutils literal" id=3D"command-i=
nterface-mpv-event-set-property-reply">MPV_EVENT_SET_PROPERTY_REPLY<a href=
=3D"https://mpv.io/manual/master/#command-interface-mpv-event-set-property-=
reply" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>See C API.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-comm=
and-reply"><span class=3D"pre">command-reply</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-command-reply" class=3D"anchor fa fa-lin=
k"></a></tt> (<tt class=3D"docutils literal" id=3D"command-interface-mpv-ev=
ent-command-reply">MPV_EVENT_COMMAND_REPLY<a href=3D"https://mpv.io/manual/=
master/#command-interface-mpv-event-command-reply" class=3D"anchor fa fa-li=
nk"></a></tt>)</dt>
            <dd><p class=3D"first">This is one of the commands for which th=
e <tt class=3D"docutils literal">`error</tt> field is meaningful.</p>
            <p>JSON IPC and Lua and possibly other backends treat this spec=
ially and may
            not pass the actual event to the user. See C API.</p>
            <p>The event has the following fields:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-resu=
lt">result<a href=3D"https://mpv.io/manual/master/#command-interface-result=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The result (on success) of any <tt class=3D"docutils litera=
l">mpv_node</tt> type, if any.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-clie=
nt-message"><span class=3D"pre">client-message</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-client-message" class=3D"anchor fa fa-=
link"></a></tt> (<tt class=3D"docutils literal" id=3D"command-interface-mpv=
-event-client-message">MPV_EVENT_CLIENT_MESSAGE<a href=3D"https://mpv.io/ma=
nual/master/#command-interface-mpv-event-client-message" class=3D"anchor fa=
 fa-link"></a></tt>)</dt>
            <dd><p class=3D"first">Lua and possibly other backends treat th=
is specially and may not pass the
            actual event to the user.</p>
            <p>The event has the following fields:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-args=
">args<a href=3D"https://mpv.io/manual/master/#command-interface-args" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Array of strings with the message data.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-reconfig"><span class=3D"pre">video-reconfig</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-video-reconfig" class=3D"anchor fa fa-=
link"></a></tt> (<tt class=3D"docutils literal" id=3D"command-interface-mpv=
-event-video-reconfig">MPV_EVENT_VIDEO_RECONFIG<a href=3D"https://mpv.io/ma=
nual/master/#command-interface-mpv-event-video-reconfig" class=3D"anchor fa=
 fa-link"></a></tt>)</dt>
            <dd>Happens on video output or filter reconfig.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-reconfig"><span class=3D"pre">audio-reconfig</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-audio-reconfig" class=3D"anchor fa fa-=
link"></a></tt> (<tt class=3D"docutils literal" id=3D"command-interface-mpv=
-event-audio-reconfig">MPV_EVENT_AUDIO_RECONFIG<a href=3D"https://mpv.io/ma=
nual/master/#command-interface-mpv-event-audio-reconfig" class=3D"anchor fa=
 fa-link"></a></tt>)</dt>
            <dd>Happens on audio output or filter reconfig.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-prop=
erty-change"><span class=3D"pre">property-change</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-property-change" class=3D"anchor fa =
fa-link"></a></tt> (<tt class=3D"docutils literal" id=3D"command-interface-=
mpv-event-property-change">MPV_EVENT_PROPERTY_CHANGE<a href=3D"https://mpv.=
io/manual/master/#command-interface-mpv-event-property-change" class=3D"anc=
hor fa fa-link"></a></tt>)</dt>
            <dd><p class=3D"first">Happens when a property that is being ob=
served changes value.</p>
            <p>The event has the following fields:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-name=
">name<a href=3D"https://mpv.io/manual/master/#command-interface-name" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The name of the property.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-data=
">data<a href=3D"https://mpv.io/manual/master/#command-interface-data" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The new value of the property.</dd>
            </dl>
            </dd>
            </dl>
            <p>The following events also happen, but are deprecated: <tt cl=
ass=3D"docutils literal">idle</tt>, <tt class=3D"docutils literal">tick</tt=
>
            Use <tt class=3D"docutils literal">mpv_observe_property()</tt> =
(Lua: <tt class=3D"docutils literal">mp.observe_property()</tt>) instead.</=
p>
            </div>
            <div class=3D"section" id=3D"hooks">
            <h3>Hooks</h3>
            <p>Hooks are synchronous events between player core and a scrip=
t or similar. This
            applies to client API (including the Lua scripting interface). =
Normally,
            events are supposed to be asynchronous, and the hook API provid=
es an awkward
            and obscure way to handle events that require stricter coordina=
tion. There are
            no API stability guarantees made. Not following the protocol ex=
actly can make
            the player freeze randomly. Basically, nobody should use this A=
PI.</p>
            <p>The C API is described in the header files. The Lua API is d=
escribed in the
            Lua section.</p>
            <p>Before a hook is actually invoked on an API clients, it will=
 attempt to return
            new values for all observed properties that were changed before=
 the hook. This
            may make it easier for an application to set defined "barriers"=
 between property
            change notifications by registering hooks. (That means these ho=
oks will have an
            effect, even if you do nothing and make them continue immediate=
ly.)</p>
            <p>The following hooks are currently defined:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-on-l=
oad">on_load<a href=3D"https://mpv.io/manual/master/#command-interface-on-l=
oad" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Called when a file is to be opened, befo=
re anything is actually done.
            For example, you could read and write the <tt class=3D"docutils=
 literal"><span class=3D"pre">stream-open-filename</span></tt>
            property to redirect an URL to something else (consider support=
 for
            streaming sites which rarely give the user a direct media URL),=
 or
            you could set per-file options with by setting the property
            <tt class=3D"docutils literal"><span class=3D"pre">file-local-o=
ptions/&lt;option</span> name&gt;</tt>. The player will wait until all
            hooks are run.</p>
            <p class=3D"last">Ordered after <tt class=3D"docutils literal">=
<span class=3D"pre">start-file</span></tt> and before <tt class=3D"docutils=
 literal"><span class=3D"pre">playback-restart</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-on-l=
oad-fail">on_load_fail<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-on-load-fail" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Called after after a file has been opene=
d, but failed to. This can be
            used to provide a fallback in case native demuxers failed to re=
cognize
            the file, instead of always running before the native demuxers =
like
            <tt class=3D"docutils literal">on_load</tt>. Demux will only be=
 retried if <tt class=3D"docutils literal"><span class=3D"pre">stream-open-=
filename</span></tt>
            was changed. If it fails again, this hook is _not_ called again=
, and
            loading definitely fails.</p>
            <p class=3D"last">Ordered after <tt class=3D"docutils literal">=
on_load</tt>, and before <tt class=3D"docutils literal"><span class=3D"pre"=
>playback-restart</span></tt> and <tt class=3D"docutils literal"><span clas=
s=3D"pre">end-file</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-on-p=
reloaded">on_preloaded<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-on-preloaded" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Called after a file has been opened, and=
 before tracks are selected and
            decoders are created. This has some usefulness if an API users =
wants
            to select tracks manually, based on the set of available tracks=
. It's
            also useful to initialize <tt class=3D"docutils literal"><span =
class=3D"pre">--lavfi-complex</span></tt> in a specific way by API,
            without having to "probe" the available streams at first.</p>
            <p>Note that this does not yet apply default track selection. W=
hich operations
            exactly can be done and not be done, and what information is av=
ailable and
            what is not yet available yet, is all subject to change.</p>
            <p class=3D"last">Ordered after <tt class=3D"docutils literal">=
on_load_fail</tt> etc. and before <tt class=3D"docutils literal"><span clas=
s=3D"pre">playback-restart</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-on-u=
nload">on_unload<a href=3D"https://mpv.io/manual/master/#command-interface-=
on-unload" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Run before closing a file, and before ac=
tually uninitializing
            everything. It's not possible to resume playback in this state.=
</p>
            <p class=3D"last">Ordered before <tt class=3D"docutils literal"=
><span class=3D"pre">end-file</span></tt>. Will also happen in the error ca=
se (then after
            <tt class=3D"docutils literal">on_load_fail</tt>).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-on-b=
efore-start-file">on_before_start_file<a href=3D"https://mpv.io/manual/mast=
er/#command-interface-on-before-start-file" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Run before a <tt class=3D"docutils literal"><span class=3D"=
pre">start-file</span></tt> event is sent. (If any client changes the
            current playlist entry, or sends a quit command to the player, =
the
            corresponding event will not actually happen after the hook ret=
urns.)
            Useful to drain property changes before a new file is loaded.</=
dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-on-a=
fter-end-file">on_after_end_file<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-on-after-end-file" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Run after an <tt class=3D"docutils literal"><span class=3D"=
pre">end-file</span></tt> event. Useful to drain property changes after a
            file has finished.</dd>
            </dl>
            </div>
            </div>
            <div class=3D"section" id=3D"input-command-prefixes">
            <h2>Input Command Prefixes</h2>
            <p>These prefixes are placed between key name and the actual co=
mmand. Multiple
            prefixes can be specified. They are separated by whitespace.</p=
>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
auto"><span class=3D"pre">osd-auto</span><a href=3D"https://mpv.io/manual/m=
aster/#command-interface-osd-auto" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>Use the default behavior for this command. This is the defa=
ult for
            <tt class=3D"docutils literal">input.conf</tt> commands. Some l=
ibmpv/scripting/IPC APIs do not use this as
            default, but use <tt class=3D"docutils literal"><span class=3D"=
pre">no-osd</span></tt> instead.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-no-o=
sd"><span class=3D"pre">no-osd</span><a href=3D"https://mpv.io/manual/maste=
r/#command-interface-no-osd" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Do not use any OSD for this command.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
bar"><span class=3D"pre">osd-bar</span><a href=3D"https://mpv.io/manual/mas=
ter/#command-interface-osd-bar" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If possible, show a bar with this command. Seek commands wi=
ll show the
            progress bar, property changing commands may show the newly set=
 value.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
msg"><span class=3D"pre">osd-msg</span><a href=3D"https://mpv.io/manual/mas=
ter/#command-interface-osd-msg" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If possible, show an OSD message with this command. Seek co=
mmand show
            the current playback time, property changing commands show the =
newly set
            value as text.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
msg-bar"><span class=3D"pre">osd-msg-bar</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-osd-msg-bar" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Combine osd-bar and osd-msg.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-raw"=
>raw<a href=3D"https://mpv.io/manual/master/#command-interface-raw" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Do not expand properties in string arguments. (Like <tt cla=
ss=3D"docutils literal"><span class=3D"pre">"${property-name}"</span></tt>.=
)
            This is the default for some libmpv/scripting/IPC APIs.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-expa=
nd-properties"><span class=3D"pre">expand-properties</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-expand-properties" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>All string arguments are expanded as described in <a class=
=3D"reference internal" href=3D"https://mpv.io/manual/master/#property-expa=
nsion">Property Expansion</a>.
            This is the default for <tt class=3D"docutils literal">input.co=
nf</tt> commands.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-repe=
atable">repeatable<a href=3D"https://mpv.io/manual/master/#command-interfac=
e-repeatable" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>For some commands, keeping a key pressed doesn't run the co=
mmand repeatedly.
            This prefix forces enabling key repeat in any case. For a list =
of commands:
            the first command determines the repeatability of the whole lis=
t (up to and
            including version 0.33 - a list was always repeatable).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-asyn=
c">async<a href=3D"https://mpv.io/manual/master/#command-interface-async" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Allow asynchronous execution (if possible). Note that only =
a few commands
            will support this (usually this is explicitly documented). Some=
 commands
            are asynchronous by default (or rather, their effects might man=
ifest
            after completion of the command). The semantics of this flag mi=
ght change
            in the future. Set it only if you don't rely on the effects of =
this command
            being fully realized when it returns. See <a class=3D"reference=
 internal" href=3D"https://mpv.io/manual/master/#synchronous-vs-asynchronou=
s">Synchronous vs. Asynchronous</a>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sync=
">sync<a href=3D"https://mpv.io/manual/master/#command-interface-sync" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Allow synchronous execution (if possible). Normally, all co=
mmands are
            synchronous by default, but some are asynchronous by default fo=
r
            compatibility with older behavior.</dd>
            </dl>
            <p>All of the osd prefixes are still overridden by the global <=
tt class=3D"docutils literal"><span class=3D"pre">--osd-level</span></tt>
            settings.</p>
            </div>
            <div class=3D"section" id=3D"synchronous-vs-asynchronous">
            <h2>Synchronous vs. Asynchronous</h2>
            <p>The <tt class=3D"docutils literal">async</tt> and <tt class=
=3D"docutils literal">sync</tt> prefix matter only for how the issuer of th=
e command
            waits on the completion of the command. Normally it does not af=
fect how the
            command behaves by itself. There are the following cases:</p>
            <ul class=3D"simple">
            <li>Normal input.conf commands are always run asynchronously. S=
low running
            commands are queued up or run in parallel.</li>
            <li>"Multi" input.conf commands (1 key binding, concatenated wi=
th <tt class=3D"docutils literal">;</tt>) will be
            executed in order, except for commands that are async (either p=
refixed with
            <tt class=3D"docutils literal">async</tt>, or async by default =
for some commands). The async commands are
            run in a detached manner, possibly in parallel to the remaining=
 sync commands
            in the list.</li>
            <li>Normal Lua and libmpv commands (e.g. <tt class=3D"docutils =
literal">mpv_command()</tt>) are run in a blocking
            manner, unless the <tt class=3D"docutils literal">async</tt> pr=
efix is used, or the command is async by
            default. This means in the sync case the caller will block, eve=
n if the core
            continues playback. Async mode runs the command in a detached m=
anner.</li>
            <li>Async libmpv command API (e.g. <tt class=3D"docutils litera=
l">mpv_command_async()</tt>) never blocks the
            caller, and always notify their completion with a message. The =
<tt class=3D"docutils literal">sync</tt> and
            <tt class=3D"docutils literal">async</tt> prefixes make no diff=
erence.</li>
            <li>Lua also provides APIs for running async commands, which be=
have similar to the
            C counterparts.</li>
            <li>In all cases, async mode can still run commands in a synchr=
onous manner, even
            in detached mode. This can for example happen in cases when a c=
ommand does not
            have an  asynchronous implementation. The async libmpv API stil=
l never blocks
            the caller in these cases.</li>
            </ul>
            <p>Before mpv 0.29.0, the <tt class=3D"docutils literal">async<=
/tt> prefix was only used by screenshot commands,
            and made them run the file saving code in a detached manner. Th=
is is the
            default now, and <tt class=3D"docutils literal">async</tt> chan=
ges behavior only in the ways mentioned above.</p>
            <p>Currently the following commands have different waiting char=
acteristics with
            sync vs. async: sub-add, audio-add, sub-reload, audio-reload,
            rescan-external-files, screenshot, screenshot-to-file, dump-cac=
he,
            ab-loop-dump-cache.</p>
            </div>
            <div class=3D"section" id=3D"asynchronous-command-details">
            <h2>Asynchronous command details</h2>
            <p>On the API level, every asynchronous command is bound to the=
 context which
            started it. For example, an asynchronous command started by <tt=
 class=3D"docutils literal">mpv_command_async</tt>
            is bound to the <tt class=3D"docutils literal">mpv_handle</tt> =
passed to the function. Only this <tt class=3D"docutils literal">mpv_handle=
</tt>
            receives the completion notification (<tt class=3D"docutils lit=
eral">MPV_EVENT_COMMAND_REPLY</tt>), and only
            this handle can abort a still running command directly. If the =
<tt class=3D"docutils literal">mpv_handle</tt> is
            destroyed, any still running async. commands started by it are =
terminated.</p>
            <p>The scripting APIs and JSON IPC give each script/connection =
its own implicit
            <tt class=3D"docutils literal">mpv_handle</tt>.</p>
            <p>If the player is closed, the core may abort all pending asyn=
c. commands on its
            own (like a forced <tt class=3D"docutils literal">mpv_abort_asy=
nc_command()</tt> call for each pending command
            on behalf of the API user). This happens at the same time <tt c=
lass=3D"docutils literal">MPV_EVENT_SHUTDOWN</tt>
            is sent, and there is no way to prevent this.</p>
            </div>
            <div class=3D"section" id=3D"input-sections">
            <h2>Input Sections</h2>
            <p>Input sections group a set of bindings, and enable or disabl=
e them at once.
            In <tt class=3D"docutils literal">input.conf</tt>, each key bin=
ding is assigned to an input section, rather
            than actually having explicit text sections.</p>
            <p>See also: <tt class=3D"docutils literal"><span class=3D"pre"=
>enable-section</span></tt> and <tt class=3D"docutils literal"><span class=
=3D"pre">disable-section</span></tt> commands.</p>
            <p>Predefined bindings:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-defa=
ult">default<a href=3D"https://mpv.io/manual/master/#command-interface-defa=
ult" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Bindings without input section are implicitly assigned to t=
his section. It
            is enabled by default during normal playback.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-enco=
de">encode<a href=3D"https://mpv.io/manual/master/#command-interface-encode=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Section which is active in encoding mode. It is enabled exc=
lusively, so
            that bindings in the <tt class=3D"docutils literal">default</tt=
> sections are ignored.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"properties">
            <h2>Properties</h2>
            <p>Properties are used to set mpv options during runtime, or to=
 query arbitrary
            information. They can be manipulated with the <tt class=3D"docu=
tils literal">set</tt>/<tt class=3D"docutils literal">add</tt>/<tt class=3D=
"docutils literal">cycle</tt>
            commands, and retrieved with <tt class=3D"docutils literal"><sp=
an class=3D"pre">show-text</span></tt>, or anything else that uses property
            expansion. (See <a class=3D"reference internal" href=3D"https:/=
/mpv.io/manual/master/#property-expansion">Property Expansion</a>.)</p>
            <p>The property name is annotated with RW to indicate whether t=
he property is
            generally writable.</p>
            <p>If an option is referenced, the property will normally take/=
return exactly the
            same values as the option. In these cases, properties are merel=
y a way to change
            an option at runtime.</p>
            </div>
            <div class=3D"section" id=3D"property-list">
            <h2>Property list</h2>
            <div class=3D"admonition note">
            <p class=3D"first admonition-title">Note</p>
            <p>Most options can be set at runtime via properties as well. J=
ust remove the
            leading <tt class=3D"docutils literal"><span class=3D"pre">--</=
span></tt> from the option name. These are not documented below, see
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#options">OPTIONS</a> instead. Only properties which do not exist as =
option with the
            same name, or which have very different behavior from the optio=
ns are
            documented below.</p>
            <p class=3D"last">Properties marked as (RW) are writeable, whil=
e those that aren't are
            read-only.</p>
            </div>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-speed-correction"><span class=3D"pre">audio-speed-correction</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-audio-speed-correction=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"command-interface-video-speed-correction"><span class=3D"pre">video-spe=
ed-correction</span><a href=3D"https://mpv.io/manual/master/#command-interf=
ace-video-speed-correction" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Factor multiplied with <tt class=3D"docu=
tils literal">speed</tt> at which the player attempts to play the
            file. Usually it's exactly 1. (Display sync mode will make this=
 useful.)</p>
            <p class=3D"last">OSD formatting will display it in the form of=
 <tt class=3D"docutils literal">+1.23456%</tt>, with the number
            being <tt class=3D"docutils literal">(raw - 1) * 100</tt> for t=
he given raw property value.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-disp=
lay-sync-active"><span class=3D"pre">display-sync-active</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-display-sync-active" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether <tt class=3D"docutils literal"><span class=3D"pre">=
--video-sync=3Ddisplay</span></tt> is actually active.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-file=
name">filename<a href=3D"https://mpv.io/manual/master/#command-interface-fi=
lename" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Currently played file, with path strippe=
d. If this is an URL, try to undo
            percent encoding as well. (The result is not necessarily correc=
t, but
            looks better for display purposes. Use the <tt class=3D"docutil=
s literal">path</tt> property to get an
            unmodified filename.)</p>
            <p>This has a sub-property:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-file=
name/no-ext"><span class=3D"pre">filename/no-ext</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-filename/no-ext" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>Like the <tt class=3D"docutils literal">filename</tt> prope=
rty, but if the text contains a <tt class=3D"docutils literal">.</tt>, stri=
p
            all text after the last <tt class=3D"docutils literal">.</tt>. =
Usually this removes the file extension.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-file=
-size"><span class=3D"pre">file-size</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-file-size" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Length in bytes of the source file/stream. (This is the sam=
e as
            <tt class=3D"docutils literal"><span class=3D"pre">${stream-end=
}</span></tt>. For segmented/multi-part files, this will return the
            size of the main or manifest file, whatever it is.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-esti=
mated-frame-count"><span class=3D"pre">estimated-frame-count</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-estimated-frame-count" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Total number of frames in current file.<=
/p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This is only an estimate. (It's computed from=
 two unreliable
            quantities: fps and stream length.)</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-esti=
mated-frame-number"><span class=3D"pre">estimated-frame-number</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-estimated-frame-number=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Number of current frame in current strea=
m.</p>
            <div class=3D"admonition note last">
            <p class=3D"first admonition-title">Note</p>
            <p class=3D"last">This is only an estimate. (It's computed from=
 two unreliable
            quantities: fps and possibly rounded timestamps.)</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-pid"=
>pid<a href=3D"https://mpv.io/manual/master/#command-interface-pid" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Process-id of mpv.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-path=
">path<a href=3D"https://mpv.io/manual/master/#command-interface-path" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Full path of the currently played file. Usually this is exa=
ctly the same
            string you pass on the mpv command line or the <tt class=3D"doc=
utils literal">loadfile</tt> command, even
            if it's a relative path. If you expect an absolute path, you wi=
ll have to
            determine it yourself, for example by using the <tt class=3D"do=
cutils literal"><span class=3D"pre">working-directory</span></tt>
            property.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stre=
am-open-filename"><span class=3D"pre">stream-open-filename</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-stream-open-filename" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The full path to the currently played media. This is differ=
ent from
            <tt class=3D"docutils literal">path</tt> only in special cases.=
 In particular, if <tt class=3D"docutils literal"><span class=3D"pre">--ytd=
l=3Dyes</span></tt> is used,
            and the URL is detected by <tt class=3D"docutils literal"><span=
 class=3D"pre">youtube-dl</span></tt>, then the script will set this
            property to the actual media URL. This property should be set o=
nly during
            the <tt class=3D"docutils literal">on_load</tt> or <tt class=3D=
"docutils literal">on_load_fail</tt> hooks, otherwise it will have no effec=
t
            (or may do something implementation defined in the future). The=
 property is
            reset if playback of the current media ends.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-medi=
a-title"><span class=3D"pre">media-title</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-media-title" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">If the currently played file has a <tt c=
lass=3D"docutils literal">title</tt> tag, use that.</p>
            <p class=3D"last">Otherwise, return the <tt class=3D"docutils l=
iteral">filename</tt> property.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-file=
-format"><span class=3D"pre">file-format</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-file-format" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Symbolic name of the file format. In some cases, this is a =
comma-separated
            list of format names, e.g. mp4 is <tt class=3D"docutils literal=
">mov,mp4,m4a,3gp,3g2,mj2</tt> (the list
            may grow in the future for any format).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-curr=
ent-demuxer"><span class=3D"pre">current-demuxer</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-current-demuxer" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd><p class=3D"first">Name of the current demuxer. (This is us=
eless.)</p>
            <p class=3D"last">(Renamed from <tt class=3D"docutils literal">=
demuxer</tt>.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stre=
am-path"><span class=3D"pre">stream-path</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-stream-path" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Filename (full path) of the stream layer filename. (This is=
 probably
            useless and is almost never different from <tt class=3D"docutil=
s literal">path</tt>.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stre=
am-pos"><span class=3D"pre">stream-pos</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-stream-pos" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Raw byte position in source stream. Technically, this retur=
ns the position
            of the most recent packet passed to a decoder.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-stre=
am-end"><span class=3D"pre">stream-end</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-stream-end" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Raw end position in bytes in source stream.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-dura=
tion">duration<a href=3D"https://mpv.io/manual/master/#command-interface-du=
ration" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Duration of the current file in seconds.=
 If the duration is unknown, the
            property is unavailable. Note that the file duration is not alw=
ays exactly
            known, so this is an estimate.</p>
            <p class=3D"last">This replaces the <tt class=3D"docutils liter=
al">length</tt> property, which was deprecated after the
            mpv 0.9 release. (The semantics are the same.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-avsy=
nc">avsync<a href=3D"https://mpv.io/manual/master/#command-interface-avsync=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Last A/V synchronization difference. Unavailable if audio o=
r video is
            disabled.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-tota=
l-avsync-change"><span class=3D"pre">total-avsync-change</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-total-avsync-change" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Total A-V sync correction done. Unavailable if audio or vid=
eo is
            disabled.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-deco=
der-frame-drop-count"><span class=3D"pre">decoder-frame-drop-count</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-decoder-frame-drop=
-count" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Video frames dropped by decoder, because=
 video is too far behind audio (when
            using <tt class=3D"docutils literal"><span class=3D"pre">--fram=
edrop=3Ddecoder</span></tt>). Sometimes, this may be incremented in other
            situations, e.g. when video packets are damaged, or the decoder=
 doesn't
            follow the usual rules. Unavailable if video is disabled.</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">drop-frame-count</span></tt> is a deprecated alias.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-fram=
e-drop-count"><span class=3D"pre">frame-drop-count</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-frame-drop-count" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Frames dropped by VO (when using <tt cla=
ss=3D"docutils literal"><span class=3D"pre">--framedrop=3Dvo</span></tt>).<=
/p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">vo-drop-frame-count</span></tt> is a deprecated alias.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mist=
imed-frame-count"><span class=3D"pre">mistimed-frame-count</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-mistimed-frame-count" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of video frames that were not timed correctly in dis=
play-sync mode
            for the sake of keeping A/V sync. This does not include externa=
l
            circumstances, such as video rendering being too slow or the gr=
aphics
            driver somehow skipping a vsync. It does not include rounding e=
rrors either
            (which can happen especially with bad source timestamps). For e=
xample,
            using the <tt class=3D"docutils literal"><span class=3D"pre">di=
splay-desync</span></tt> mode should never change this value from 0.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vsyn=
c-ratio"><span class=3D"pre">vsync-ratio</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-vsync-ratio" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>For how many vsyncs a frame is displayed on average. This i=
s available if
            display-sync is active only. For 30 FPS video on a 60 Hz screen=
, this will
            be 2. This is the moving average of what actually has been sche=
duled, so
            24 FPS on 60 Hz will never remain exactly on 2.5, but jitter de=
pending on
            the last frame displayed.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-d=
elayed-frame-count"><span class=3D"pre">vo-delayed-frame-count</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-vo-delayed-frame-count=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Estimated number of frames delayed due to external circumst=
ances in
            display-sync mode. Note that in general, mpv has to guess that =
this is
            happening, and the guess can be inaccurate.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-perc=
ent-pos"><span class=3D"pre">percent-pos</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-percent-pos" class=3D"anchor fa fa-link"></a=
></tt> (RW)</dt>
            <dd>Position in current file (0-100). The advantage over using =
this instead of
            calculating it out of other properties is that it properly fall=
s back to
            estimating the playback position from the byte position, if the=
 file
            duration is not known.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-time=
-pos"><span class=3D"pre">time-pos</span><a href=3D"https://mpv.io/manual/m=
aster/#command-interface-time-pos" class=3D"anchor fa fa-link"></a></tt> (R=
W)</dt>
            <dd>Position in current file in seconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-time=
-start"><span class=3D"pre">time-start</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-time-start" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Deprecated. Always returns 0. Before mpv 0.14, this used to=
 return the start
            time of the file (could affect e.g. transport streams). See
            <tt class=3D"docutils literal"><span class=3D"pre">--rebase-sta=
rt-time</span></tt> option.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-time=
-remaining"><span class=3D"pre">time-remaining</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-time-remaining" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Remaining length of the file in seconds. Note that the file=
 duration is not
            always exactly known, so this is an estimate.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-pts"><span class=3D"pre">audio-pts</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-audio-pts" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Current audio playback position in current file in seconds.=
 Unlike time-pos,
            this updates more often than once per frame. For audio-only fil=
es, it is
            mostly equivalent to time-pos, while for video-only files this =
property is
            not available.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
time-remaining"><span class=3D"pre">playtime-remaining</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-playtime-remaining" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal"><span class=3D"pre">time-rem=
aining</span></tt> scaled by the current <tt class=3D"docutils literal">spe=
ed</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
back-time"><span class=3D"pre">playback-time</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-playback-time" class=3D"anchor fa fa-lin=
k"></a></tt> (RW)</dt>
            <dd>Position in current file in seconds. Unlike <tt class=3D"do=
cutils literal"><span class=3D"pre">time-pos</span></tt>, the time is
            clamped to the range of the file. (Inaccurate file durations et=
c. could
            make it go out of range. Useful on attempts to seek outside of =
the file,
            as the seek target time is considered the current position duri=
ng seeking.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chap=
ter">chapter<a href=3D"https://mpv.io/manual/master/#command-interface-chap=
ter" class=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd>Current chapter number. The number of the first chapter is =
0.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-edit=
ion">edition<a href=3D"https://mpv.io/manual/master/#command-interface-edit=
ion" class=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">Current MKV edition number. Setting this=
 property to a different value will
            restart playback. The number of the first edition is 0.</p>
            <p class=3D"last">Before mpv 0.31.0, this showed the actual edi=
tion selected at runtime, if
            you didn't set the option or property manually. With mpv 0.31.0=
 and later,
            this strictly returns the user-set option or property value, an=
d the
            <tt class=3D"docutils literal"><span class=3D"pre">current-edit=
ion</span></tt> property was added to return the runtime selected
            edition (this matters with <tt class=3D"docutils literal"><span=
 class=3D"pre">--edition=3Dauto</span></tt>, the default).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-curr=
ent-edition"><span class=3D"pre">current-edition</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-current-edition" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>Currently selected edition. This property is unavailable if=
 no file is
            loaded, or the file has no editions. (Matroska files make a dif=
ference
            between having no editions and a single edition, which will be =
reflected by
            the property, although in practice it does not matter.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chap=
ters">chapters<a href=3D"https://mpv.io/manual/master/#command-interface-ch=
apters" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of chapters.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-edit=
ions">editions<a href=3D"https://mpv.io/manual/master/#command-interface-ed=
itions" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of MKV editions.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-edit=
ion-list"><span class=3D"pre">edition-list</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-edition-list" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">List of editions, current entry marked. =
Currently, the raw property value
            is useless.</p>
            <p>This has a number of sub-properties. Replace <tt class=3D"do=
cutils literal">N</tt> with the 0-based edition
            index.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-edit=
ion-list/count"><span class=3D"pre">edition-list/count</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-edition-list/count" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Number of editions. If there are no editions, this can be 0=
 or 1 (1
            if there's a useless dummy edition).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-edit=
ion-list/n/id"><span class=3D"pre">edition-list/N/id</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-edition-list/n/id" class=3D"anch=
or fa fa-link"></a></tt> (RW)</dt>
            <dd>Edition ID as integer. Use this to set the <tt class=3D"doc=
utils literal">edition</tt> property.
            Currently, this is the same as the edition index.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-edit=
ion-list/n/default"><span class=3D"pre">edition-list/N/default</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-edition-list/n/default=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether this is the default edition.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-edit=
ion-list/n/title"><span class=3D"pre">edition-list/N/title</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-edition-list/n/title" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Edition title as stored in the file. Not always available.<=
/dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP (for each edition)
        "id"                MPV_FORMAT_INT64
        "title"             MPV_FORMAT_STRING
        "default"           MPV_FORMAT_FLAG
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-meta=
data">metadata<a href=3D"https://mpv.io/manual/master/#command-interface-me=
tadata" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Metadata key/value pairs.</p>
            <p>If the property is accessed with Lua's <tt class=3D"docutils=
 literal">mp.get_property_native</tt>, this
            returns a table with metadata keys mapping to metadata values. =
If it is
            accessed with the client API, this returns a <tt class=3D"docut=
ils literal">MPV_FORMAT_NODE_MAP</tt>,
            with tag keys mapping to tag values.</p>
            <p>For OSD, it returns a formatted list. Trying to retrieve thi=
s property as
            a raw string doesn't work.</p>
            <p>This has a number of sub-properties:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-meta=
data/by-key/<key>"><span class=3D"pre">metadata/by-key/&lt;key&gt;</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-metadata/by-key/%3=
Ckey%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Value of metadata entry <tt class=3D"docutils literal">&lt;=
key&gt;</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-meta=
data/list/count">metadata/list/count<a href=3D"https://mpv.io/manual/master=
/#command-interface-metadata/list/count" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Number of metadata entries.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-meta=
data/list/n/key">metadata/list/N/key<a href=3D"https://mpv.io/manual/master=
/#command-interface-metadata/list/n/key" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Key name of the Nth metadata entry. (The first entry is <tt=
 class=3D"docutils literal">0</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-meta=
data/list/n/value">metadata/list/N/value<a href=3D"https://mpv.io/manual/ma=
ster/#command-interface-metadata/list/n/value" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Value of the Nth metadata entry.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-meta=
data/<key>"><span class=3D"pre">metadata/&lt;key&gt;</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-metadata/%3Ckey%3E" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Old version of <tt class=3D"docutils literal"><span class=
=3D"pre">metadata/by-key/&lt;key&gt;</span></tt>. Use is discouraged, becau=
se
            the metadata key string could conflict with other sub-propertie=
s.</dd>
            </dl>
            <p>The layout of this property might be subject to change. Sugg=
estions are
            welcome how exactly this property should work.</p>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_MAP
    (key and string value for each metadata entry)
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-filt=
ered-metadata"><span class=3D"pre">filtered-metadata</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-filtered-metadata" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>Like <tt class=3D"docutils literal">metadata</tt>, but incl=
udes only fields listed in the <tt class=3D"docutils literal"><span class=
=3D"pre">--display-tags</span></tt>
            option. This is the same set of tags that is printed to the ter=
minal.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chap=
ter-metadata"><span class=3D"pre">chapter-metadata</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-chapter-metadata" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Metadata of current chapter. Works simil=
ar to <tt class=3D"docutils literal">metadata</tt> property. It
            also allows the same access methods (using sub-properties).</p>
            <p>Per-chapter metadata is very rare. Usually, only the chapter=
 name
            (<tt class=3D"docutils literal">title</tt>) is set.</p>
            <p class=3D"last">For accessing other information, like chapter=
 start, see the
            <tt class=3D"docutils literal"><span class=3D"pre">chapter-list=
</span></tt> property.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vf-m=
etadata/<filter-label>"><span class=3D"pre">vf-metadata/&lt;filter-label&gt=
;</span><a href=3D"https://mpv.io/manual/master/#command-interface-vf-metad=
ata/%3Cfilter-label%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Metadata added by video filters. Accesse=
d by the filter label,
            which, if not explicitly specified using the <tt class=3D"docut=
ils literal"><span class=3D"pre">@filter-label:</span></tt> syntax,
            will be <tt class=3D"docutils literal"><span class=3D"pre">&lt;=
filter-name&gt;NN</span></tt>.</p>
            <p>Works similar to <tt class=3D"docutils literal">metadata</tt=
> property. It allows the same access
            methods (using sub-properties).</p>
            <p class=3D"last">An example of this kind of metadata are the c=
ropping parameters
            added by <tt class=3D"docutils literal"><span class=3D"pre">--v=
f=3Dlavfi=3Dcropdetect</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-af-m=
etadata/<filter-label>"><span class=3D"pre">af-metadata/&lt;filter-label&gt=
;</span><a href=3D"https://mpv.io/manual/master/#command-interface-af-metad=
ata/%3Cfilter-label%3E" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Equivalent to <tt class=3D"docutils literal"><span class=3D=
"pre">vf-metadata/&lt;filter-label&gt;</span></tt>, but for audio filters.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-idle=
-active"><span class=3D"pre">idle-active</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-idle-active" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Returns <tt class=3D"docutils literal">y=
es</tt>/true if no file is loaded, but the player is staying around
            because of the <tt class=3D"docutils literal"><span class=3D"pr=
e">--idle</span></tt> option.</p>
            <p class=3D"last">(Renamed from <tt class=3D"docutils literal">=
idle</tt>.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-core=
-idle"><span class=3D"pre">core-idle</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-core-idle" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Whether the playback core is paused. Thi=
s can differ from <tt class=3D"docutils literal">pause</tt> in
            special situations, such as when the player pauses itself due t=
o low
            network cache.</p>
            <p class=3D"last">This also returns <tt class=3D"docutils liter=
al">yes</tt>/true if playback is restarting or if nothing is
            playing at all. In other words, it's only <tt class=3D"docutils=
 literal">no</tt>/false if there's actually
            video playing. (Behavior since mpv 0.7.0.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-cach=
e-speed"><span class=3D"pre">cache-speed</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-cache-speed" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">Current I/O read speed between the cache=
 and the lower layer (like network).
            This gives the number bytes per seconds over a 1 second window =
(using
            the type <tt class=3D"docutils literal">MPV_FORMAT_INT64</tt> f=
or the client API).</p>
            <p class=3D"last">This is the same as <tt class=3D"docutils lit=
eral"><span class=3D"pre">demuxer-cache-state/raw-input-rate</span></tt>.</=
p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-demu=
xer-cache-duration"><span class=3D"pre">demuxer-cache-duration</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-demuxer-cache-duration=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Approximate duration of video buffered in the demuxer, in s=
econds. The
            guess is very unreliable, and often the property will not be av=
ailable
            at all, even if data is buffered.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-demu=
xer-cache-time"><span class=3D"pre">demuxer-cache-time</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-demuxer-cache-time" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Approximate time of video buffered in the demuxer, in secon=
ds. Same as
            <tt class=3D"docutils literal"><span class=3D"pre">demuxer-cach=
e-duration</span></tt> but returns the last timestamp of buffered
            data in demuxer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-demu=
xer-cache-idle"><span class=3D"pre">demuxer-cache-idle</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-demuxer-cache-idle" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Whether the demuxer is idle, which means that the demuxer c=
ache is filled
            to the requested amount, and is currently not reading more data=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-demu=
xer-cache-state"><span class=3D"pre">demuxer-cache-state</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-demuxer-cache-state" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Each entry in <tt class=3D"docutils lite=
ral"><span class=3D"pre">seekable-ranges</span></tt> represents a region in=
 the demuxer cache
            that can be seeked to, with a <tt class=3D"docutils literal">st=
art</tt> and <tt class=3D"docutils literal">end</tt> fields containing the
            respective timestamps. If there are multiple demuxers active, t=
his only
            returns information about the "main" demuxer, but might be chan=
ged in
            future to return unified information about all demuxers. The ra=
nges are in
            arbitrary order. Often, ranges will overlap for a bit, before b=
eing joined.
            In broken corner cases, ranges may overlap all over the place.<=
/p>
            <p>The end of a seek range is usually smaller than the value re=
turned by the
            <tt class=3D"docutils literal"><span class=3D"pre">demuxer-cach=
e-time</span></tt> property, because that property returns the guessed
            buffering amount, while the seek ranges represent the buffered =
data that
            can actually be used for cached seeking.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">bof-cache=
d</span></tt> indicates whether the seek range with the lowest timestamp
            points to the beginning of the stream (BOF). This implies you c=
annot seek
            before this position at all. <tt class=3D"docutils literal"><sp=
an class=3D"pre">eof-cached</span></tt> indicates whether the seek range
            with the highest timestamp points to the end of the stream (EOF=
). If both
            <tt class=3D"docutils literal"><span class=3D"pre">bof-cached</=
span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">eof-cache=
d</span></tt> are true, and there's only 1 cache range,
            the entire stream is cached.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">fw-bytes<=
/span></tt> is the number of bytes of packets buffered in the range
            starting from the current decoding position. This is a rough es=
timate
            (may not account correctly for various overhead), and stops at =
the
            demuxer position (it ignores seek ranges after it).</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">file-cach=
e-bytes</span></tt> is the number of bytes stored in the file cache. This
            includes all overhead, and possibly unused data (like pruned da=
ta). This
            member is missing if the file cache wasn't enabled with
            <tt class=3D"docutils literal"><span class=3D"pre">--cache-on-d=
isk=3Dyes</span></tt>.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">cache-end=
</span></tt> is <tt class=3D"docutils literal"><span class=3D"pre">demuxer-=
cache-time</span></tt>. Missing if unavailable.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">reader-pt=
s</span></tt> is the approximate timestamp of the start of the buffered
            range. Missing if unavailable.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">cache-dur=
ation</span></tt> is <tt class=3D"docutils literal"><span class=3D"pre">dem=
uxer-cache-duration</span></tt>. Missing if unavailable.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">raw-input=
-rate</span></tt> is the estimated input rate of the network layer (or any
            other byte-oriented input layer) in bytes per second. May be in=
accurate or
            missing.</p>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"literal-block">MPV_FORMAT_NODE_MAP
    "seekable-ranges"   MPV_FORMAT_NODE_ARRAY
        MPV_FORMAT_NODE_MAP
            "start"             MPV_FORMAT_DOUBLE
            "end"               MPV_FORMAT_DOUBLE
    "bof-cached"        MPV_FORMAT_FLAG
    "eof-cached"        MPV_FORMAT_FLAG
    "fw-bytes"          MPV_FORMAT_INT64
    "file-cache-bytes"  MPV_FORMAT_INT64
    "cache-end"         MPV_FORMAT_DOUBLE
    "reader-pts"        MPV_FORMAT_DOUBLE
    "cache-duration"    MPV_FORMAT_DOUBLE
    "raw-input-rate"    MPV_FORMAT_INT64
</pre>
            <p>Other fields (might be changed or removed in the future):</p=
>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-eof"=
>eof<a href=3D"https://mpv.io/manual/master/#command-interface-eof" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the reader thread has hit the end of the file.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-unde=
rrun">underrun<a href=3D"https://mpv.io/manual/master/#command-interface-un=
derrun" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the reader thread could not satisfy a decoder's req=
uest for a
            new packet.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-idle=
">idle<a href=3D"https://mpv.io/manual/master/#command-interface-idle" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the thread is currently not reading.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-tota=
l-bytes"><span class=3D"pre">total-bytes</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-total-bytes" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Sum of packet bytes (plus some overhead estimation) of the =
entire packet
            queue, including cached seekable ranges.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-demu=
xer-via-network"><span class=3D"pre">demuxer-via-network</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-demuxer-via-network" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the stream demuxed via the main demuxer is most lik=
ely played via
            network. What constitutes "network" is not always clear, might =
be used for
            other types of untrusted streams, could be wrong in certain cas=
es, and its
            definition might be changing. Also, external files (like separa=
te audio
            files or streams) do not influence the value of this property (=
currently).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-demu=
xer-start-time"><span class=3D"pre">demuxer-start-time</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-demuxer-start-time" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>The start time reported by the demuxer in fractional second=
s.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-paus=
ed-for-cache"><span class=3D"pre">paused-for-cache</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-paused-for-cache" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Whether playback is paused because of waiting for the cache=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-cach=
e-buffering-state"><span class=3D"pre">cache-buffering-state</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-cache-buffering-state" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The percentage (0-100) of the cache fill status until the p=
layer will
            unpause (related to <tt class=3D"docutils literal"><span class=
=3D"pre">paused-for-cache</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-eof-=
reached"><span class=3D"pre">eof-reached</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-eof-reached" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Whether the end of playback was reached. Note that this is =
usually
            interesting only if <tt class=3D"docutils literal"><span class=
=3D"pre">--keep-open</span></tt> is enabled, since otherwise the player
            will immediately play the next file (or exit or enter idle mode=
), and in
            these cases the <tt class=3D"docutils literal"><span class=3D"p=
re">eof-reached</span></tt> property will logically be cleared
            immediately after it's set.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-seek=
ing">seeking<a href=3D"https://mpv.io/manual/master/#command-interface-seek=
ing" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the player is currently seeking, or otherwise tryin=
g to restart
            playback. (It's possible that it returns <tt class=3D"docutils =
literal">yes</tt>/true while a file is
            loaded. This is because the same underlying code is used for se=
eking and
            resyncing.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mixe=
r-active"><span class=3D"pre">mixer-active</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-mixer-active" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Whether the audio mixer is active.</p>
            <p class=3D"last">This option is relatively useless. Before mpv=
 0.18.1, it could be used to
            infer behavior of the <tt class=3D"docutils literal">volume</tt=
> property.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-ao-v=
olume"><span class=3D"pre">ao-volume</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-ao-volume" class=3D"anchor fa fa-link"></a></tt>=
 (RW)</dt>
            <dd>System volume. This property is available only if mpv audio=
 output is
            currently active, and only if the underlying implementation sup=
ports volume
            control. What this option does depends on the API. For example,=
 on ALSA
            this usually changes system-wide audio, while with PulseAudio t=
his controls
            per-application volume.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-ao-m=
ute"><span class=3D"pre">ao-mute</span><a href=3D"https://mpv.io/manual/mas=
ter/#command-interface-ao-mute" class=3D"anchor fa fa-link"></a></tt> (RW)<=
/dt>
            <dd>Similar to <tt class=3D"docutils literal"><span class=3D"pr=
e">ao-volume</span></tt>, but controls the mute state. May be unimplemented
            even if <tt class=3D"docutils literal"><span class=3D"pre">ao-v=
olume</span></tt> works.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-codec"><span class=3D"pre">audio-codec</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-audio-codec" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Audio codec selected for decoding.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-codec-name"><span class=3D"pre">audio-codec-name</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-audio-codec-name" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Audio codec.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-params"><span class=3D"pre">audio-params</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-audio-params" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Audio format as output by the audio deco=
der.
            This has a number of sub-properties:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-params/format"><span class=3D"pre">audio-params/format</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-audio-params/format" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The sample format as string. This uses the same names as us=
ed in other
            places of mpv.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-params/samplerate"><span class=3D"pre">audio-params/samplerate</span><a h=
ref=3D"https://mpv.io/manual/master/#command-interface-audio-params/sampler=
ate" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Samplerate.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-params/channels"><span class=3D"pre">audio-params/channels</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-audio-params/channels" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The channel layout as a string. This is similar to what the
            <tt class=3D"docutils literal"><span class=3D"pre">--audio-chan=
nels</span></tt> accepts.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-params/hr-channels"><span class=3D"pre">audio-params/hr-channels</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-audio-params/hr-ch=
annels" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>As <tt class=3D"docutils literal">channels</tt>, but instea=
d of the possibly cryptic actual layout
            sent to the audio device, return a hopefully more human readabl=
e form.
            (Usually only <tt class=3D"docutils literal"><span class=3D"pre=
">audio-out-params/hr-channels</span></tt> makes sense.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-params/channel-count"><span class=3D"pre">audio-params/channel-count</spa=
n><a href=3D"https://mpv.io/manual/master/#command-interface-audio-params/c=
hannel-count" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of audio channels. This is redundant to the <tt clas=
s=3D"docutils literal">channels</tt> field
            described above.</dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_MAP
    "format"            MPV_FORMAT_STRING
    "samplerate"        MPV_FORMAT_INT64
    "channels"          MPV_FORMAT_STRING
    "channel-count"     MPV_FORMAT_INT64
    "hr-channels"       MPV_FORMAT_STRING
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-out-params"><span class=3D"pre">audio-out-params</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-audio-out-params" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
audio-params</span></tt>, but the format of the data written to the audio
            API.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-colo=
rmatrix">colormatrix<a href=3D"https://mpv.io/manual/master/#command-interf=
ace-colormatrix" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Redirects to <tt class=3D"docutils literal"><span class=3D"=
pre">video-params/colormatrix</span></tt>. This parameter (as well as
            similar ones) can be overridden with the <tt class=3D"docutils =
literal">format</tt> video filter.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-colo=
rmatrix-input-range"><span class=3D"pre">colormatrix-input-range</span><a h=
ref=3D"https://mpv.io/manual/master/#command-interface-colormatrix-input-ra=
nge" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal">colormatrix</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-colo=
rmatrix-primaries"><span class=3D"pre">colormatrix-primaries</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-colormatrix-primaries" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>See <tt class=3D"docutils literal">colormatrix</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-hwde=
c">hwdec<a href=3D"https://mpv.io/manual/master/#command-interface-hwdec" c=
lass=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">Reflects the <tt class=3D"docutils liter=
al"><span class=3D"pre">--hwdec</span></tt> option.</p>
            <p>Writing to it may change the currently used hardware decoder=
, if possible.
            (Internally, the player may reinitialize the decoder, and will =
perform a
            seek to refresh the video properly.) You can watch the other hw=
dec
            properties to see whether this was successful.</p>
            <p class=3D"last">Unlike in mpv 0.9.x and before, this does not=
 return the currently active
            hardware decoder. Since mpv 0.18.0, <tt class=3D"docutils liter=
al"><span class=3D"pre">hwdec-current</span></tt> is available for
            this purpose.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-hwde=
c-current"><span class=3D"pre">hwdec-current</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-hwdec-current" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>The current hardware decoding in use. If decoding is active=
, return one of
            the values used by the <tt class=3D"docutils literal">hwdec</tt=
> option/property. <tt class=3D"docutils literal">no</tt>/false indicates
            software decoding. If no decoder is loaded, the property is una=
vailable.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-hwde=
c-interop"><span class=3D"pre">hwdec-interop</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-hwdec-interop" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd><p class=3D"first">This returns the currently loaded hardwa=
re decoding/output interop driver.
            This is known only once the VO has opened (and possibly later).=
 With some
            VOs (like <tt class=3D"docutils literal">gpu</tt>), this might =
be never known in advance, but only when
            the decoder attempted to create the hw decoder successfully. (U=
sing
            <tt class=3D"docutils literal"><span class=3D"pre">--gpu-hwdec-=
interop</span></tt> can load it eagerly.) If there are multiple
            drivers loaded, they will be separated by <tt class=3D"docutils=
 literal">,</tt>.</p>
            <p>If no VO is active or no interop driver is known, this prope=
rty is
            unavailable.</p>
            <p class=3D"last">This does not necessarily use the same values=
 as <tt class=3D"docutils literal">hwdec</tt>. There can be
            multiple interop drivers for the same hardware decoder, dependi=
ng on
            platform and VO.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-format"><span class=3D"pre">video-format</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-video-format" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Video format as string.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-codec"><span class=3D"pre">video-codec</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-video-codec" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>Video codec selected for decoding.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-widt=
h">width<a href=3D"https://mpv.io/manual/master/#command-interface-width" c=
lass=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"=
command-interface-height">height<a href=3D"https://mpv.io/manual/master/#co=
mmand-interface-height" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Video size. This uses the size of the video as decoded, or =
if no video
            frame has been decoded yet, the (possibly incorrect) container =
indicated
            size.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params"><span class=3D"pre">video-params</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-video-params" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Video parameters, as output by the decod=
er (with overrides like aspect
            etc. applied). This has a number of sub-properties:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/pixelformat"><span class=3D"pre">video-params/pixelformat</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-video-params/pixel=
format" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The pixel format as string. This uses the same names as use=
d in other
            places of mpv.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/hw-pixelformat"><span class=3D"pre">video-params/hw-pixelformat</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-video-params=
/hw-pixelformat" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The underlying pixel format as string. This is relevant for=
 some cases
            of hardware decoding and unavailable otherwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/average-bpp"><span class=3D"pre">video-params/average-bpp</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-video-params/avera=
ge-bpp" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Average bits-per-pixel as integer. Subsampled planar format=
s use a
            different resolution, which is the reason this value can someti=
mes be
            odd or confusing. Can be unavailable with some formats.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/w"><span class=3D"pre">video-params/w</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-video-params/w" class=3D"anchor fa fa-=
link"></a></tt>, <tt class=3D"docutils literal" id=3D"command-interface-vid=
eo-params/h"><span class=3D"pre">video-params/h</span><a href=3D"https://mp=
v.io/manual/master/#command-interface-video-params/h" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Video size as integers, with no aspect correction applied.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/dw"><span class=3D"pre">video-params/dw</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-video-params/dw" class=3D"anchor fa =
fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"command-interface-=
video-params/dh"><span class=3D"pre">video-params/dh</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-video-params/dh" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>Video size as integers, scaled for correct aspect ratio.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/aspect"><span class=3D"pre">video-params/aspect</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-video-params/aspect" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Display aspect ratio as float.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/par"><span class=3D"pre">video-params/par</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-video-params/par" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Pixel aspect ratio.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/colormatrix"><span class=3D"pre">video-params/colormatrix</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-video-params/color=
matrix" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The colormatrix in use as string. (Exact values subject to =
change.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/colorlevels"><span class=3D"pre">video-params/colorlevels</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-video-params/color=
levels" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The colorlevels as string. (Exact values subject to change.=
)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/primaries"><span class=3D"pre">video-params/primaries</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-video-params/primaries=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The primaries in use as string. (Exact values subject to ch=
ange.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/gamma"><span class=3D"pre">video-params/gamma</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-video-params/gamma" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>The gamma function in use as string. (Exact values subject =
to change.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/sig-peak"><span class=3D"pre">video-params/sig-peak</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-video-params/sig-peak" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The video file's tagged signal peak as float.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/light"><span class=3D"pre">video-params/light</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-video-params/light" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>The light type in use as a string. (Exact values subject to=
 change.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/chroma-location"><span class=3D"pre">video-params/chroma-location<=
/span><a href=3D"https://mpv.io/manual/master/#command-interface-video-para=
ms/chroma-location" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Chroma location as string. (Exact values subject to change.=
)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/rotate"><span class=3D"pre">video-params/rotate</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-video-params/rotate" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Intended display rotation in degrees (clockwise).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/stereo-in"><span class=3D"pre">video-params/stereo-in</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-video-params/stereo-in=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Source file stereo 3D mode. (See the <tt class=3D"docutils =
literal">format</tt> video filter's
            <tt class=3D"docutils literal"><span class=3D"pre">stereo-in</s=
pan></tt> option.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-params/alpha"><span class=3D"pre">video-params/alpha</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-video-params/alpha" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Alpha type. If the format has no alpha channel, this will b=
e unavailable
            (but in future releases, it could change to <tt class=3D"docuti=
ls literal">no</tt>). If alpha is
            present, this is set to <tt class=3D"docutils literal">straight=
</tt> or <tt class=3D"docutils literal">premul</tt>.</dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_MAP
    "pixelformat"       MPV_FORMAT_STRING
    "hw-pixelformat"    MPV_FORMAT_STRING
    "w"                 MPV_FORMAT_INT64
    "h"                 MPV_FORMAT_INT64
    "dw"                MPV_FORMAT_INT64
    "dh"                MPV_FORMAT_INT64
    "aspect"            MPV_FORMAT_DOUBLE
    "par"               MPV_FORMAT_DOUBLE
    "colormatrix"       MPV_FORMAT_STRING
    "colorlevels"       MPV_FORMAT_STRING
    "primaries"         MPV_FORMAT_STRING
    "gamma"             MPV_FORMAT_STRING
    "sig-peak"          MPV_FORMAT_DOUBLE
    "light"             MPV_FORMAT_STRING
    "chroma-location"   MPV_FORMAT_STRING
    "rotate"            MPV_FORMAT_INT64
    "stereo-in"         MPV_FORMAT_STRING
    "average-bpp"       MPV_FORMAT_INT64
    "alpha"             MPV_FORMAT_STRING
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-dwid=
th">dwidth<a href=3D"https://mpv.io/manual/master/#command-interface-dwidth=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"command-interface-dheight">dheight<a href=3D"https://mpv.io/manual/mast=
er/#command-interface-dheight" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Video display size. This is the video si=
ze after filters and aspect scaling
            have been applied. The actual video window size can still be di=
fferent
            from this, e.g. if the user resized the video window manually.<=
/p>
            <p class=3D"last">These have the same values as <tt class=3D"do=
cutils literal"><span class=3D"pre">video-out-params/dw</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">video-out-pa=
rams/dh</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-dec-params"><span class=3D"pre">video-dec-params</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-video-dec-params" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Exactly like <tt class=3D"docutils literal"><span class=3D"=
pre">video-params</span></tt>, but no overrides applied.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-out-params"><span class=3D"pre">video-out-params</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-video-out-params" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Same as <tt class=3D"docutils literal"><=
span class=3D"pre">video-params</span></tt>, but after video filters have b=
een applied. If
            there are no video filters in use, this will contain the same v=
alues as
            <tt class=3D"docutils literal"><span class=3D"pre">video-params=
</span></tt>. Note that this is still not necessarily what the video
            window uses, since the user can change the window size, and all=
 real VOs
            do their own scaling independently from the filter chain.</p>
            <p class=3D"last">Has the same sub-properties as <tt class=3D"d=
ocutils literal"><span class=3D"pre">video-params</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-frame-info"><span class=3D"pre">video-frame-info</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-video-frame-info" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Approximate information of the current f=
rame. Note that if any of these
            are used on OSD, the information might be off by a few frames d=
ue to OSD
            redrawing and frame display being somewhat disconnected, and yo=
u might
            have to pause and force a redraw.</p>
            <p>This has a number of sub-properties:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-frame-info/picture-type"><span class=3D"pre">video-frame-info/picture-typ=
e</span><a href=3D"https://mpv.io/manual/master/#command-interface-video-fr=
ame-info/picture-type" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The type of the picture. It can be "I" (intra), "P" (predic=
ted), "B"
            (bi-dir predicted) or unavailable.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-frame-info/interlaced"><span class=3D"pre">video-frame-info/interlaced</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-video-frame-=
info/interlaced" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the content of the frame is interlaced.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-frame-info/tff"><span class=3D"pre">video-frame-info/tff</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-video-frame-info/tff" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If the content is interlaced, whether the top field is disp=
layed first.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-frame-info/repeat"><span class=3D"pre">video-frame-info/repeat</span><a h=
ref=3D"https://mpv.io/manual/master/#command-interface-video-frame-info/rep=
eat" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the frame must be delayed when decoding.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-cont=
ainer-fps"><span class=3D"pre">container-fps</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-container-fps" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd><p class=3D"first">Container FPS. This can easily contain b=
ogus values. For videos that use
            modern container formats or video codecs, this will often be in=
correct.</p>
            <p class=3D"last">(Renamed from <tt class=3D"docutils literal">=
fps</tt>.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-esti=
mated-vf-fps"><span class=3D"pre">estimated-vf-fps</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-estimated-vf-fps" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Estimated/measured FPS of the video filter chain output. (I=
f no filters
            are used, this corresponds to decoder output.) This uses the av=
erage of
            the 10 past frame durations to calculate the FPS. It will be in=
accurate
            if frame-dropping is involved (such as when framedrop is explic=
itly
            enabled, or after precise seeking). Files with imprecise timest=
amps (such
            as Matroska) might lead to unstable results.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-wind=
ow-scale"><span class=3D"pre">window-scale</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-window-scale" class=3D"anchor fa fa-link">=
</a></tt> (RW)</dt>
            <dd><p class=3D"first">Window size multiplier. Setting this wil=
l resize the video window to the
            values contained in <tt class=3D"docutils literal">dwidth</tt> =
and <tt class=3D"docutils literal">dheight</tt> multiplied with the value
            set with this property. Setting <tt class=3D"docutils literal">=
1</tt> will resize to original video size
            (or to be exact, the size the video filters output). <tt class=
=3D"docutils literal">2</tt> will set the
            double size, <tt class=3D"docutils literal">0.5</tt> halves the=
 size.</p>
            <p>Note that setting a value identical to its previous value wi=
ll not resize
            the window. That's because this property mirrors the <tt class=
=3D"docutils literal"><span class=3D"pre">window-scale</span></tt>
            option, and setting an option to its previous value is ignored.=
 If this
            value is set while the window is in a fullscreen, the multiplie=
r is not
            applied until the window is taken out of that state. Writing th=
is property
            to a maximized window can unmaximize the window depending on th=
e OS and
            window manager. If the window does not unmaximize, the multipli=
er will be
            applied if the user unmaximizes the window later.</p>
            <p>See <tt class=3D"docutils literal"><span class=3D"pre">curre=
nt-window-scale</span></tt> for the value derived from the actual window
            size.</p>
            <p class=3D"last">Since mpv 0.31.0, this always returns the pre=
viously set value (or the
            default value), instead of the value implied by the actual wind=
ow size.
            Before mpv 0.31.0, this returned what <tt class=3D"docutils lit=
eral"><span class=3D"pre">current-window-scale</span></tt> returns now,
            after the window was created.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-curr=
ent-window-scale"><span class=3D"pre">current-window-scale</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-current-window-scale" clas=
s=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">The <tt class=3D"docutils literal"><span=
 class=3D"pre">window-scale</span></tt> value calculated from the current w=
indow size. This
            has the same value as <tt class=3D"docutils literal"><span clas=
s=3D"pre">window-scale</span></tt> if the window size was not changed
            since setting the option, and the window size was not restricte=
d in other
            ways. If the window is fullscreened, this will return the scale=
 value
            calculated from the last non-fullscreen size of the window. The=
 property
            is unavailable if no video is active.</p>
            <p class=3D"last">When setting this property in the fullscreen =
or maximized state, the behavior
            is the same as window-scale. In all other cases, setting the va=
lue of this
            property will always resize the window. This does not affect th=
e value of
            <tt class=3D"docutils literal"><span class=3D"pre">window-scale=
</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-focu=
sed">focused<a href=3D"https://mpv.io/manual/master/#command-interface-focu=
sed" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the window has focus. Might not be supported by all=
 VOs.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-disp=
lay-names"><span class=3D"pre">display-names</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-display-names" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Names of the displays that the mpv window covers. On X11, t=
hese
            are the xrandr names (LVDS1, HDMI1, DP1, VGA1, etc.). On Window=
s, these
            are the GDI names (\.DISPLAY1, \.DISPLAY2, etc.) and the first =
display
            in the list will be the one that Windows considers associated w=
ith the
            window (as determined by the MonitorFromWindow API.) On macOS t=
hese are the
            Display Product Names as used in the System Information and onl=
y one display
            name is returned since a window can only be on one screen.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-disp=
lay-fps"><span class=3D"pre">display-fps</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-display-fps" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd><p class=3D"first">The refresh rate of the current display.=
 Currently, this is the lowest FPS
            of any display covered by the video, as retrieved by the underl=
ying system
            APIs (e.g. xrandr on X11). It is not the measured FPS. It's not=
 necessarily
            available on all platforms. Note that any of the listed facts m=
ay change
            any time without a warning.</p>
            <p class=3D"last">Writing to this property is deprecated. It ha=
s the same effect as writing to
            <tt class=3D"docutils literal"><span class=3D"pre">override-dis=
play-fps</span></tt>. Since mpv 0.31.0, this property is unavailable
            if no display FPS was reported (e.g. if no video is active), wh=
ile in older
            versions, it returned the <tt class=3D"docutils literal"><span =
class=3D"pre">--display-fps</span></tt> option value.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-esti=
mated-display-fps"><span class=3D"pre">estimated-display-fps</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-estimated-display-fps" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The actual rate at which display refreshes seem to occur, m=
easured by
            system time. Only available if display-sync mode (as selected b=
y
            <tt class=3D"docutils literal"><span class=3D"pre">--video-sync=
</span></tt>) is active.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vsyn=
c-jitter"><span class=3D"pre">vsync-jitter</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-vsync-jitter" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Estimated deviation factor of the vsync duration.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-disp=
lay-width"><span class=3D"pre">display-width</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-display-width" class=3D"anchor fa fa-lin=
k"></a></tt>, <tt class=3D"docutils literal" id=3D"command-interface-displa=
y-height"><span class=3D"pre">display-height</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-display-height" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>The current display's horizontal and vertical resolution in=
 pixels. Whether
            or not these values update as the mpv window changes displays d=
epends on
            the windowing backend. It may not be available on all platforms=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-disp=
lay-hidpi-scale"><span class=3D"pre">display-hidpi-scale</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-display-hidpi-scale" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The HiDPI scale factor as reported by the windowing backend=
. If no VO is
            active, or if the VO does not report a value, this property is =
unavailable.
            It may be saner to report an absolute DPI, however, this is the=
 way HiDPI
            support is implemented on most OS APIs. See also <tt class=3D"d=
ocutils literal"><span class=3D"pre">--hidpi-window-scale</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-aspect"><span class=3D"pre">video-aspect</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-video-aspect" class=3D"anchor fa fa-link">=
</a></tt> (RW)</dt>
            <dd><p class=3D"first">Deprecated. This is tied to <tt class=3D=
"docutils literal"><span class=3D"pre">--video-aspect-override</span></tt>,=
 but always
            reports the current video aspect if video is active.</p>
            <p class=3D"last">The read and write components of this option =
can be split up into
            <tt class=3D"docutils literal"><span class=3D"pre">video-params=
/aspect</span></tt> and <tt class=3D"docutils literal"><span class=3D"pre">=
video-aspect-override</span></tt> respectively.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
width"><span class=3D"pre">osd-width</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-osd-width" class=3D"anchor fa fa-link"></a></tt>=
, <tt class=3D"docutils literal" id=3D"command-interface-osd-height"><span =
class=3D"pre">osd-height</span><a href=3D"https://mpv.io/manual/master/#com=
mand-interface-osd-height" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Last known OSD width (can be 0). This is=
 needed if you want to use the
            <tt class=3D"docutils literal"><span class=3D"pre">overlay-add<=
/span></tt> command. It gives you the actual OSD/window size (not
            including decorations drawn by the OS window manager).</p>
            <p class=3D"last">Alias to <tt class=3D"docutils literal"><span=
 class=3D"pre">osd-dimensions/w</span></tt> and <tt class=3D"docutils liter=
al"><span class=3D"pre">osd-dimensions/h</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
par"><span class=3D"pre">osd-par</span><a href=3D"https://mpv.io/manual/mas=
ter/#command-interface-osd-par" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Last known OSD display pixel aspect (can=
 be 0).</p>
            <p class=3D"last">Alias to <tt class=3D"docutils literal"><span=
 class=3D"pre">osd-dimensions/osd-par</span></tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
dimensions"><span class=3D"pre">osd-dimensions</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-osd-dimensions" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">Last known OSD dimensions.</p>
            <p>Has the following sub-properties (which can be read as <tt c=
lass=3D"docutils literal">MPV_FORMAT_NODE</tt>
            or Lua table with <tt class=3D"docutils literal">mp.get_propert=
y_native</tt>):</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
dimensions/w"><span class=3D"pre">osd-dimensions/w</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-osd-dimensions/w" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Size of the VO window in OSD render units (usually pixels, =
but may be
            scaled pixels with VOs like <tt class=3D"docutils literal">xv</=
tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
dimensions/h"><span class=3D"pre">osd-dimensions/h</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-osd-dimensions/h" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Size of the VO window in OSD render units,</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
dimensions/par"><span class=3D"pre">osd-dimensions/par</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-osd-dimensions/par" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Pixel aspect ratio of the OSD (usually 1).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
dimensions/aspect"><span class=3D"pre">osd-dimensions/aspect</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-osd-dimensions/aspect" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Display aspect ratio of the VO window. (Computing from the =
properties
            above.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
dimensions/mt"><span class=3D"pre">osd-dimensions/mt</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-osd-dimensions/mt" class=3D"anch=
or fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"command-inte=
rface-osd-dimensions/mb"><span class=3D"pre">osd-dimensions/mb</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-osd-dimensions/mb" cla=
ss=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"co=
mmand-interface-osd-dimensions/ml"><span class=3D"pre">osd-dimensions/ml</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-osd-dimensio=
ns/ml" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal=
" id=3D"command-interface-osd-dimensions/mr"><span class=3D"pre">osd-dimens=
ions/mr</span><a href=3D"https://mpv.io/manual/master/#command-interface-os=
d-dimensions/mr" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>OSD to video margins (top, bottom, left, right). This descr=
ibes the
            area into which the video is rendered.</dd>
            </dl>
            <p class=3D"last">Any of these properties may be unavailable or=
 set to dummy values if the
            VO window is not created or visible.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-wind=
ow-id"><span class=3D"pre">window-id</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-window-id" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Read-only - mpv's window id. May not always be available, i=
.e due to window
            not being opened yet or not being supported by the VO.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mous=
e-pos"><span class=3D"pre">mouse-pos</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-mouse-pos" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Read-only - last known mouse position, n=
ormalizd to OSD dimensions.</p>
            <p>Has the following sub-properties (which can be read as <tt c=
lass=3D"docutils literal">MPV_FORMAT_NODE</tt>
            or Lua table with <tt class=3D"docutils literal">mp.get_propert=
y_native</tt>):</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mous=
e-pos/x"><span class=3D"pre">mouse-pos/x</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-mouse-pos/x" class=3D"anchor fa fa-link"></a=
></tt>, <tt class=3D"docutils literal" id=3D"command-interface-mouse-pos/y"=
><span class=3D"pre">mouse-pos/y</span><a href=3D"https://mpv.io/manual/mas=
ter/#command-interface-mouse-pos/y" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Last known coordinates of the mouse pointer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mous=
e-pos/hover"><span class=3D"pre">mouse-pos/hover</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-mouse-pos/hover" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>Boolean - whether the mouse pointer hovers the video window=
. The
            coordinates should be ignored when this value is false, because=
 the
            video backends update them only when the pointer hovers the win=
dow.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
text"><span class=3D"pre">sub-text</span><a href=3D"https://mpv.io/manual/m=
aster/#command-interface-sub-text" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd>The current subtitle text regardless of sub visibility. For=
matting is
            stripped. If the subtitle is not text-based (i.e. DVD/BD subtit=
les), an
            empty string is returned.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
text-ass"><span class=3D"pre">sub-text-ass</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-sub-text-ass" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Like <tt class=3D"docutils literal"><spa=
n class=3D"pre">sub-text</span></tt>, but return the text in ASS format. Te=
xt subtitles in
            other formats are converted. For native ASS subtitles, events t=
hat do
            not contain any text (but vector drawings etc.) are not filtere=
d out. If
            multiple events match with the current playback time, they are =
concatenated
            with line breaks. Contains only the "Text" part of the events.<=
/p>
            <p class=3D"last">This property is not enough to render ASS sub=
titles correctly, because ASS
            header and per-event metadata are not returned. You likely need=
 to do
            further filtering on the returned string to make it useful.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-seco=
ndary-sub-text"><span class=3D"pre">secondary-sub-text</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-secondary-sub-text" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
sub-text</span></tt>, but for the secondary subtitles.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
start"><span class=3D"pre">sub-start</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-sub-start" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>The current subtitle start time (in seconds). If there's mu=
ltiple current
            subtitles, returns the first start time. If no current subtitle=
 is present
            null is returned instead.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-seco=
ndary-sub-start"><span class=3D"pre">secondary-sub-start</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-secondary-sub-start" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
sub-start</span></tt>, but for the secondary subtitles.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
end"><span class=3D"pre">sub-end</span><a href=3D"https://mpv.io/manual/mas=
ter/#command-interface-sub-end" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The current subtitle end time (in seconds). If there's mult=
iple current
            subtitles, return the last end time. If no current subtitle is =
present, or
            if it's present but has unknown or incorrect duration, null is =
returned
            instead.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-seco=
ndary-sub-end"><span class=3D"pre">secondary-sub-end</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-secondary-sub-end" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
sub-end</span></tt>, but for the secondary subtitles.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sub-=
forced-only-cur"><span class=3D"pre">sub-forced-only-cur</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-sub-forced-only-cur" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Read-only - whether the current subtitle track is being sho=
wn in forced-only mode.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-pos"><span class=3D"pre">playlist-pos</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-playlist-pos" class=3D"anchor fa fa-link">=
</a></tt> (RW)</dt>
            <dd><p class=3D"first">Current position on playlist. The first =
entry is on position 0. Writing to
            this property may start playback at the new position.</p>
            <p>In some cases, this is not necessarily the currently playing=
 file. See
            explanation of <tt class=3D"docutils literal">current</tt> and =
<tt class=3D"docutils literal">playing</tt> flags in <tt class=3D"docutils =
literal">playlist</tt>.</p>
            <p>If there the playlist is empty, or if it's non-empty, but no=
 entry is
            "current", this property returns -1. Likewise, writing -1 will =
put the
            player into idle mode (or exit playback if idle mode is not ena=
bled). If an
            out of range index is written to the property, this behaves as =
if writing -1.
            (Before mpv 0.33.0, instead of returning -1, this property was =
unavailable
            if no playlist entry was current.)</p>
            <p class=3D"last">Writing the current value back to the propert=
y is subject to change.
            Currently, it will restart playback of the playlist entry. But =
in the
            future, writing the current value will be ignored. Use the
            <tt class=3D"docutils literal"><span class=3D"pre">playlist-pla=
y-index</span></tt> command to get guaranteed behavior.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-pos-1"><span class=3D"pre">playlist-pos-1</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-playlist-pos-1" class=3D"anchor fa fa-=
link"></a></tt> (RW)</dt>
            <dd>Same as <tt class=3D"docutils literal"><span class=3D"pre">=
playlist-pos</span></tt>, but 1-based.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-current-pos"><span class=3D"pre">playlist-current-pos</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-playlist-current-pos" clas=
s=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">Index of the "current" item on playlist.=
 This usually, but not necessarily,
            the currently playing item (see <tt class=3D"docutils literal">=
<span class=3D"pre">playlist-playing-pos</span></tt>). Depending on the
            exact internal state of the player, it may refer to the playlis=
t item to
            play next, or the playlist item used to determine what to play =
next.</p>
            <p>For reading, this is exactly the same as <tt class=3D"docuti=
ls literal"><span class=3D"pre">playlist-pos</span></tt>.</p>
            <p>For writing, this <em>only</em> sets the position of the "cu=
rrent" item, without
            stopping playback of the current file (or starting playback, if=
 this is done
            in idle mode). Use -1 to remove the current flag.</p>
            <p class=3D"last">This property is only vaguely useful. If set =
during playback, it will
            typically cause the playlist entry <em>after</em> it to be play=
ed next. Another
            possibly odd observable state is that if <tt class=3D"docutils =
literal"><span class=3D"pre">playlist-next</span></tt> is run during
            playback, this property is set to the playlist entry to play ne=
xt (unlike
            the previous case). There is an internal flag that decides whet=
her the
            current playlist entry or the next one should be played, and th=
is flag is
            currently inaccessible for API users. (Whether this behavior wi=
ll kept is
            possibly subject to change.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-playing-pos"><span class=3D"pre">playlist-playing-pos</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-playlist-playing-pos" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Index of the "playing" item on playlist.=
 A playlist item is "playing" if
            it's being loaded, actually playing, or being unloaded. This pr=
operty is set
            during the <tt class=3D"docutils literal">MPV_EVENT_START_FILE<=
/tt> (<tt class=3D"docutils literal"><span class=3D"pre">start-file</span><=
/tt>) and the
            <tt class=3D"docutils literal">MPV_EVENT_START_END</tt> (<tt cl=
ass=3D"docutils literal"><span class=3D"pre">end-file</span></tt>) events. =
Outside of that, it returns
            -1. If the playlist entry was somehow removed during playback, =
but playback
            hasn't stopped yet, or is in progress of being stopped, it also=
 returns -1.
            (This can happen at least during state transitions.)</p>
            <p class=3D"last">In the "playing" state, this is usually the s=
ame as <tt class=3D"docutils literal"><span class=3D"pre">playlist-pos</spa=
n></tt>, except
            during state changes, or if <tt class=3D"docutils literal"><spa=
n class=3D"pre">playlist-current-pos</span></tt> was written explicitly.</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list-count"><span class=3D"pre">playlist-count</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-playlist-count" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Number of total playlist entries.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list">playlist<a href=3D"https://mpv.io/manual/master/#command-interface-pl=
aylist" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Playlist, current entry marked. Currentl=
y, the raw property value is
            useless.</p>
            <p>This has a number of sub-properties. Replace <tt class=3D"do=
cutils literal">N</tt> with the 0-based playlist
            entry index.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list/count">playlist/count<a href=3D"https://mpv.io/manual/master/#command-=
interface-playlist/count" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of playlist entries (same as <tt class=3D"docutils l=
iteral"><span class=3D"pre">playlist-count</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list/n/filename">playlist/N/filename<a href=3D"https://mpv.io/manual/master=
/#command-interface-playlist/n/filename" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Filename of the Nth entry.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list/n/playing">playlist/N/playing<a href=3D"https://mpv.io/manual/master/#=
command-interface-playlist/n/playing" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if the <tt cla=
ss=3D"docutils literal"><span class=3D"pre">playlist-playing-pos</span></tt=
> property points to this
            entry, <tt class=3D"docutils literal">no</tt>/false or unavaila=
ble otherwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list/n/current">playlist/N/current<a href=3D"https://mpv.io/manual/master/#=
command-interface-playlist/n/current" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if the <tt cla=
ss=3D"docutils literal"><span class=3D"pre">playlist-current-pos</span></tt=
> property points to this
            entry, <tt class=3D"docutils literal">no</tt>/false or unavaila=
ble otherwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list/n/title">playlist/N/title<a href=3D"https://mpv.io/manual/master/#comm=
and-interface-playlist/n/title" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Name of the Nth entry. Available if the playlist file conta=
ins
            such fields and mpv's parser supports it for the given
            playlist format, or if the playlist entry has been opened befor=
e and a
            media-title other then then filename has been acquired.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list/n/id">playlist/N/id<a href=3D"https://mpv.io/manual/master/#command-in=
terface-playlist/n/id" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Unique ID for this entry. This is an automatically assigned=
 integer ID
            that is unique for the entire life time of the current mpv core
            instance. Other commands, events, etc. use this as <tt class=3D=
"docutils literal">playlist_entry_id</tt>
            fields.</dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP (for each playlist entry)
        "filename"  MPV_FORMAT_STRING
        "current"   MPV_FORMAT_FLAG (might be missing; since mpv 0.7.0)
        "playing"   MPV_FORMAT_FLAG (same)
        "title"     MPV_FORMAT_STRING (optional)
        "id"        MPV_FORMAT_INT64
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list"><span class=3D"pre">track-list</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-track-list" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">List of audio/video/sub tracks, current =
entry marked. Currently, the raw
            property value is useless.</p>
            <p>This has a number of sub-properties. Replace <tt class=3D"do=
cutils literal">N</tt> with the 0-based track
            index.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/count"><span class=3D"pre">track-list/count</span><a href=3D"https:/=
/mpv.io/manual/master/#command-interface-track-list/count" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Total number of tracks.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/id"><span class=3D"pre">track-list/N/id</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-track-list/n/id" class=3D"anchor fa =
fa-link"></a></tt></dt>
            <dd>The ID as it's used for <tt class=3D"docutils literal"><spa=
n class=3D"pre">-sid</span></tt>/<tt class=3D"docutils literal"><span class=
=3D"pre">--aid</span></tt>/<tt class=3D"docutils literal"><span class=3D"pr=
e">--vid</span></tt>. This is unique
            within tracks of the same type (sub/audio/video), but otherwise=
 not.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/type"><span class=3D"pre">track-list/N/type</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-track-list/n/type" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>String describing the media type. One of <tt class=3D"docut=
ils literal">audio</tt>, <tt class=3D"docutils literal">video</tt>, <tt cla=
ss=3D"docutils literal">sub</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/src-id"><span class=3D"pre">track-list/N/src-id</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-track-list/n/src-id" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Track ID as used in the source file. Not always available. =
(It is
            missing if the format has no native ID, if the track is a pseud=
o-track
            that does not exist in this way in the actual file, or if the f=
ormat
            is handled by libavformat, and the format was not whitelisted a=
s having
            track IDs.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/title"><span class=3D"pre">track-list/N/title</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-track-list/n/title" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Track title as it is stored in the file. Not always availab=
le.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/lang"><span class=3D"pre">track-list/N/lang</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-track-list/n/lang" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>Track language as identified by the file. Not always availa=
ble.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/image"><span class=3D"pre">track-list/N/image</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-track-list/n/image" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if this is a v=
ideo track that consists of a single
            picture, <tt class=3D"docutils literal">no</tt>/false or unavai=
lable otherwise. The heuristic used to
            determine if a stream is an image doesn't attempt to detect ima=
ges in
            codecs normally used for videos. Otherwise, it is reliable.</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/albumart"><span class=3D"pre">track-list/N/albumart</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-track-list/n/albumart" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if this is an =
image embedded in an audio file or external
            cover art, <tt class=3D"docutils literal">no</tt>/false or unav=
ailable otherwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/default"><span class=3D"pre">track-list/N/default</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-track-list/n/default" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if the track h=
as the default flag set in the file,
            <tt class=3D"docutils literal">no</tt>/false or unavailable oth=
erwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/forced"><span class=3D"pre">track-list/N/forced</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-track-list/n/forced" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if the track h=
as the forced flag set in the file,
            <tt class=3D"docutils literal">no</tt>/false or unavailable oth=
erwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/auto-forced-only"><span class=3D"pre">track-list/N/auto-forced-onl=
y</span><a href=3D"https://mpv.io/manual/master/#command-interface-track-li=
st/n/auto-forced-only" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if the track w=
as autoselected in forced-only mode,
            <tt class=3D"docutils literal">no</tt>/false or unavailable oth=
erwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/codec"><span class=3D"pre">track-list/N/codec</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-track-list/n/codec" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>The codec name used by this track, for example <tt class=3D=
"docutils literal">h264</tt>. Unavailable
            in some rare cases.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/external"><span class=3D"pre">track-list/N/external</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-track-list/n/external" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if the track i=
s an external file, <tt class=3D"docutils literal">no</tt>/false or
            unavailable otherwise. This is set for separate subtitle files.=
</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/external-filename"><span class=3D"pre">track-list/N/external-filen=
ame</span><a href=3D"https://mpv.io/manual/master/#command-interface-track-=
list/n/external-filename" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The filename if the track is from an external file, unavail=
able
            otherwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/selected"><span class=3D"pre">track-list/N/selected</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-track-list/n/selected" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><tt class=3D"docutils literal">yes</tt>/true if the track i=
s currently decoded, <tt class=3D"docutils literal">no</tt>/false or
            unavailable otherwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/main-selection"><span class=3D"pre">track-list/N/main-selection</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n=
/main-selection" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>It indicates the selection order of tracks for the same typ=
e.
            If a track is not selected, or is selected by the <tt class=3D"=
docutils literal"><span class=3D"pre">--lavfi-complex</span></tt>,
            it is not available. For subtitle tracks, <tt class=3D"docutils=
 literal">0</tt> represents the <tt class=3D"docutils literal">sid</tt>,
            and <tt class=3D"docutils literal">1</tt> represents the <tt cl=
ass=3D"docutils literal"><span class=3D"pre">secondary-sid</span></tt>.</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/ff-index"><span class=3D"pre">track-list/N/ff-index</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-track-list/n/ff-index" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The stream index as usually used by the FFmpeg utilities. N=
ote that
            this can be potentially wrong if a demuxer other than libavform=
at
            (<tt class=3D"docutils literal"><span class=3D"pre">--demuxer=
=3Dlavf</span></tt>) is used. For mkv files, the index will usually
            match even if the default (builtin) demuxer is used, but there =
is
            no hard guarantee.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/decoder-desc"><span class=3D"pre">track-list/N/decoder-desc</span>=
<a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n/dec=
oder-desc" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If this track is being decoded, the human-readable decoder =
name,</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-w"><span class=3D"pre">track-list/N/demux-w</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-track-list/n/demux-w" clas=
s=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"com=
mand-interface-track-list/n/demux-h"><span class=3D"pre">track-list/N/demux=
-h</span><a href=3D"https://mpv.io/manual/master/#command-interface-track-l=
ist/n/demux-h" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Video size hint as indicated by the container. (Not always =
accurate.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-channel-count"><span class=3D"pre">track-list/N/demux-channe=
l-count</span><a href=3D"https://mpv.io/manual/master/#command-interface-tr=
ack-list/n/demux-channel-count" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of audio channels as indicated by the container. (No=
t always
            accurate - in particular, the track could be decoded as a diffe=
rent
            number of channels.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-channels"><span class=3D"pre">track-list/N/demux-channels</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n=
/demux-channels" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Channel layout as indicated by the container. (Not always a=
ccurate.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-samplerate"><span class=3D"pre">track-list/N/demux-samplerat=
e</span><a href=3D"https://mpv.io/manual/master/#command-interface-track-li=
st/n/demux-samplerate" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Audio sample rate as indicated by the container. (Not alway=
s accurate.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-fps"><span class=3D"pre">track-list/N/demux-fps</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-track-list/n/demux-fps=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Video FPS as indicated by the container. (Not always accura=
te.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-bitrate"><span class=3D"pre">track-list/N/demux-bitrate</spa=
n><a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n/d=
emux-bitrate" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Audio average bitrate, in bits per second. (Not always accu=
rate.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-rotation"><span class=3D"pre">track-list/N/demux-rotation</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n=
/demux-rotation" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Video clockwise rotation metadata, in degrees.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/demux-par"><span class=3D"pre">track-list/N/demux-par</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-track-list/n/demux-par=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Pixel aspect ratio.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/audio-channels"><span class=3D"pre">track-list/N/audio-channels</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n=
/audio-channels" class=3D"anchor fa fa-link"></a></tt> (deprecated)</dt>
            <dd>Deprecated alias for <tt class=3D"docutils literal"><span c=
lass=3D"pre">track-list/N/demux-channel-count</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/replaygain-track-peak"><span class=3D"pre">track-list/N/replaygain=
-track-peak</span><a href=3D"https://mpv.io/manual/master/#command-interfac=
e-track-list/n/replaygain-track-peak" class=3D"anchor fa fa-link"></a></tt>=
, <tt class=3D"docutils literal" id=3D"command-interface-track-list/n/repla=
ygain-track-gain"><span class=3D"pre">track-list/N/replaygain-track-gain</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n=
/replaygain-track-gain" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Per-track replaygain values. Only available for audio track=
s with
            corresponding information stored in the source file.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-trac=
k-list/n/replaygain-album-peak"><span class=3D"pre">track-list/N/replaygain=
-album-peak</span><a href=3D"https://mpv.io/manual/master/#command-interfac=
e-track-list/n/replaygain-album-peak" class=3D"anchor fa fa-link"></a></tt>=
, <tt class=3D"docutils literal" id=3D"command-interface-track-list/n/repla=
ygain-album-gain"><span class=3D"pre">track-list/N/replaygain-album-gain</s=
pan><a href=3D"https://mpv.io/manual/master/#command-interface-track-list/n=
/replaygain-album-gain" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Per-album replaygain values. If the file has per-track but =
no per-album
            information, the per-album values will be copied from the per-t=
rack
            values currently. It's possible that future mpv versions will m=
ake
            these properties unavailable instead in this case.</dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP (for each track)
        "id"                MPV_FORMAT_INT64
        "type"              MPV_FORMAT_STRING
        "src-id"            MPV_FORMAT_INT64
        "title"             MPV_FORMAT_STRING
        "lang"              MPV_FORMAT_STRING
        "image"             MPV_FORMAT_FLAG
        "albumart"          MPV_FORMAT_FLAG
        "default"           MPV_FORMAT_FLAG
        "forced"            MPV_FORMAT_FLAG
        "selected"          MPV_FORMAT_FLAG
        "main-selection"    MPV_FORMAT_INT64
        "external"          MPV_FORMAT_FLAG
        "external-filename" MPV_FORMAT_STRING
        "codec"             MPV_FORMAT_STRING
        "ff-index"          MPV_FORMAT_INT64
        "decoder-desc"      MPV_FORMAT_STRING
        "demux-w"           MPV_FORMAT_INT64
        "demux-h"           MPV_FORMAT_INT64
        "demux-channel-count" MPV_FORMAT_INT64
        "demux-channels"    MPV_FORMAT_STRING
        "demux-samplerate"  MPV_FORMAT_INT64
        "demux-fps"         MPV_FORMAT_DOUBLE
        "demux-bitrate"     MPV_FORMAT_INT64
        "demux-rotation"    MPV_FORMAT_INT64
        "demux-par"         MPV_FORMAT_DOUBLE
        "audio-channels"    MPV_FORMAT_INT64
        "replaygain-track-peak" MPV_FORMAT_DOUBLE
        "replaygain-track-gain" MPV_FORMAT_DOUBLE
        "replaygain-album-peak" MPV_FORMAT_DOUBLE
        "replaygain-album-gain" MPV_FORMAT_DOUBLE
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-curr=
ent-tracks/-"><span class=3D"pre">current-tracks/...</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-current-tracks/-" class=3D"ancho=
r fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This gives access to currently selected =
tracks. It redirects to the correct
            entry in <tt class=3D"docutils literal"><span class=3D"pre">tra=
ck-list</span></tt>.</p>
            <p>The following sub-entries are defined: <tt class=3D"docutils=
 literal">video</tt>, <tt class=3D"docutils literal">audio</tt>, <tt class=
=3D"docutils literal">sub</tt>,
            <tt class=3D"docutils literal">sub2</tt></p>
            <p>For example, <tt class=3D"docutils literal"><span class=3D"p=
re">current-tracks/audio/lang</span></tt> returns the current audio track's
            language field (the same value as <tt class=3D"docutils literal=
"><span class=3D"pre">track-list/N/lang</span></tt>).</p>
            <p class=3D"last">If tracks of the requested type are selected =
via <tt class=3D"docutils literal"><span class=3D"pre">--lavfi-complex</spa=
n></tt>, the
            first one is returned.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chap=
ter-list"><span class=3D"pre">chapter-list</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-chapter-list" class=3D"anchor fa fa-link">=
</a></tt> (RW)</dt>
            <dd><p class=3D"first">List of chapters, current entry marked. =
Currently, the raw property value
            is useless.</p>
            <p>This has a number of sub-properties. Replace <tt class=3D"do=
cutils literal">N</tt> with the 0-based chapter
            index.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chap=
ter-list/count"><span class=3D"pre">chapter-list/count</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-chapter-list/count" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Number of chapters.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chap=
ter-list/n/title"><span class=3D"pre">chapter-list/N/title</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-chapter-list/n/title" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Chapter title as stored in the file. Not always available.<=
/dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-chap=
ter-list/n/time"><span class=3D"pre">chapter-list/N/time</span><a href=3D"h=
ttps://mpv.io/manual/master/#command-interface-chapter-list/n/time" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Chapter start time in seconds as float.</dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP (for each chapter)
        "title" MPV_FORMAT_STRING
        "time"  MPV_FORMAT_DOUBLE
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-af">=
af<a href=3D"https://mpv.io/manual/master/#command-interface-af" class=3D"a=
nchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"command-i=
nterface-vf">vf<a href=3D"https://mpv.io/manual/master/#command-interface-v=
f" class=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">See <tt class=3D"docutils literal"><span=
 class=3D"pre">--vf</span></tt>/<tt class=3D"docutils literal"><span class=
=3D"pre">--af</span></tt> and the <tt class=3D"docutils literal">vf</tt>/<t=
t class=3D"docutils literal">af</tt> command.</p>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"literal-block">MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP (for each filter entry)
        "name"      MPV_FORMAT_STRING
        "label"     MPV_FORMAT_STRING [optional]
        "enabled"   MPV_FORMAT_FLAG [optional]
        "params"    MPV_FORMAT_NODE_MAP [optional]
            "key"   MPV_FORMAT_STRING
            "value" MPV_FORMAT_STRING
</pre>
            <p class=3D"last">It's also possible to write the property usin=
g this format.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-seek=
able">seekable<a href=3D"https://mpv.io/manual/master/#command-interface-se=
ekable" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether it's generally possible to seek in the current file=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-part=
ially-seekable"><span class=3D"pre">partially-seekable</span><a href=3D"htt=
ps://mpv.io/manual/master/#command-interface-partially-seekable" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Whether the current file is considered s=
eekable, but only because the cache
            is active. This means small relative seeks may be fine, but lar=
ger seeks
            may fail anyway. Whether a seek will succeed or not is generall=
y not known
            in advance.</p>
            <p class=3D"last">If this property returns <tt class=3D"docutil=
s literal">yes</tt>/true, so will <tt class=3D"docutils literal">seekable</=
tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
back-abort"><span class=3D"pre">playback-abort</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-playback-abort" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>Whether playback is stopped or is to be stopped. (Useful in=
 obscure
            situations like during <tt class=3D"docutils literal">on_load</=
tt> hook processing, when the user can stop
            playback, but the script has to explicitly end processing.)</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-curs=
or-autohide"><span class=3D"pre">cursor-autohide</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-cursor-autohide" class=3D"anchor fa =
fa-link"></a></tt> (RW)</dt>
            <dd>See <tt class=3D"docutils literal"><span class=3D"pre">--cu=
rsor-autohide</span></tt>. Setting this to a new value will always update
            the cursor, and reset the internal timer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
sym-cc"><span class=3D"pre">osd-sym-cc</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-osd-sym-cc" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Inserts the current OSD symbol as opaque OSD control code (=
cc). This makes
            sense only with the <tt class=3D"docutils literal"><span class=
=3D"pre">show-text</span></tt> command or options which set OSD messages.
            The control code is implementation specific and is useless for =
anything else.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-osd-=
ass-cc"><span class=3D"pre">osd-ass-cc</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-osd-ass-cc" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first"><tt class=3D"docutils literal"><span cla=
ss=3D"pre">${osd-ass-cc/0}</span></tt> disables escaping ASS sequences of t=
ext in OSD,
            <tt class=3D"docutils literal"><span class=3D"pre">${osd-ass-cc=
/1}</span></tt> enables it again. By default, ASS sequences are
            escaped to avoid accidental formatting, and this property can d=
isable
            this behavior. Note that the properties return an opaque OSD co=
ntrol
            code, which only makes sense for the <tt class=3D"docutils lite=
ral"><span class=3D"pre">show-text</span></tt> command or options
            which set OSD messages.</p>
            <div class=3D"admonition admonition-example">
            <p class=3D"first admonition-title">Example</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">--osd-ms=
g3=3D'This</span> is <span class=3D"pre">${osd-ass-cc/0}{\\b1}bold</span> t=
ext'</tt></li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">show-tex=
t</span> "This is <span class=3D"pre">${osd-ass-cc/0}{\\b1}bold</span> text=
"</tt></li>
            </ul>
            </div>
            <p>Any ASS override tags as understood by libass can be used.</=
p>
            <p>Note that you need to escape the <tt class=3D"docutils liter=
al">\</tt> character, because the string is
            processed for C escape sequences before passing it to the OSD c=
ode. See
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#flat-command-syntax">Flat command syntax</a> for details.</p>
            <p class=3D"last">A list of tags can be found here:
            <a class=3D"reference external" href=3D"https://aeg-dev.github.=
io/AegiSite/docs/3.2/ass_tags/">https://aeg-dev.github.io/AegiSite/docs/3.2=
/ass_tags/</a></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-c=
onfigured"><span class=3D"pre">vo-configured</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-vo-configured" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Whether the VO is configured right now. Usually this corres=
ponds to whether
            the video window is visible. If the <tt class=3D"docutils liter=
al"><span class=3D"pre">--force-window</span></tt> option is used, this
            usually always returns <tt class=3D"docutils literal">yes</tt>/=
true.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses"><span class=3D"pre">vo-passes</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-vo-passes" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Contains introspection about the VO's ac=
tive render passes and their
            execution times. Not implemented by all VOs.</p>
            <p>This is further subdivided into two frame types, <tt class=
=3D"docutils literal"><span class=3D"pre">vo-passes/fresh</span></tt> for
            fresh frames (which have to be uploaded, scaled, etc.) and
            <tt class=3D"docutils literal"><span class=3D"pre">vo-passes/re=
draw</span></tt> for redrawn frames (which only have to be re-painted).
            The number of passes for any given subtype can change from fram=
e to frame,
            and should not be relied upon.</p>
            <p>Each frame type has a number of further sub-properties. Repl=
ace <tt class=3D"docutils literal">TYPE</tt>
            with the frame type, <tt class=3D"docutils literal">N</tt> with=
 the 0-based pass index, and <tt class=3D"docutils literal">M</tt> with the
            0-based sample index.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses/type/count"><span class=3D"pre">vo-passes/TYPE/count</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-vo-passes/type/count" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Number of passes.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses/type/n/desc"><span class=3D"pre">vo-passes/TYPE/N/desc</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-vo-passes/type/n/desc" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Human-friendy description of the pass.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses/type/n/last"><span class=3D"pre">vo-passes/TYPE/N/last</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-vo-passes/type/n/last" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Last measured execution time, in nanoseconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses/type/n/avg"><span class=3D"pre">vo-passes/TYPE/N/avg</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-vo-passes/type/n/avg" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Average execution time of this pass, in nanoseconds. The ex=
act
            timeframe varies, but it should generally be a handful of secon=
ds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses/type/n/peak"><span class=3D"pre">vo-passes/TYPE/N/peak</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-vo-passes/type/n/peak" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The peak execution time (highest value) within this averagi=
ng range, in
            nanoseconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses/type/n/count"><span class=3D"pre">vo-passes/TYPE/N/count</span><a hre=
f=3D"https://mpv.io/manual/master/#command-interface-vo-passes/type/n/count=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The number of samples for this pass.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vo-p=
asses/type/n/samples/m"><span class=3D"pre">vo-passes/TYPE/N/samples/M</spa=
n><a href=3D"https://mpv.io/manual/master/#command-interface-vo-passes/type=
/n/samples/m" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The raw execution time of a specific sample for this pass, =
in
            nanoseconds.</dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"literal-block">MPV_FORMAT_NODE_MAP
"TYPE" MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP
        "desc"    MPV_FORMAT_STRING
        "last"    MPV_FORMAT_INT64
        "avg"     MPV_FORMAT_INT64
        "peak"    MPV_FORMAT_INT64
        "count"   MPV_FORMAT_INT64
        "samples" MPV_FORMAT_NODE_ARRAY
             MP_FORMAT_INT64
</pre>
            <p class=3D"last">Note that directly accessing this structure v=
ia subkeys is not supported,
            the only access is through aforementioned <tt class=3D"docutils=
 literal">MPV_FORMAT_NODE</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-perf=
-info"><span class=3D"pre">perf-info</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-perf-info" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd>Further performance data. Querying this property triggers i=
nternal
            collection of some data, and may slow down the player. Each que=
ry will reset
            some internal state. Property change notification doesn't and w=
on't work.
            All of this may change in the future, so don't use this. The bu=
iltin
            <tt class=3D"docutils literal">stats</tt> script is supposed to=
 be the only user; since it's bundled and
            built with the source code, it can use knowledge of mpv interna=
l to render
            the information properly. See <tt class=3D"docutils literal">st=
ats</tt> script description for some details.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vide=
o-bitrate"><span class=3D"pre">video-bitrate</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-video-bitrate" class=3D"anchor fa fa-lin=
k"></a></tt>, <tt class=3D"docutils literal" id=3D"command-interface-audio-=
bitrate"><span class=3D"pre">audio-bitrate</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-audio-bitrate" class=3D"anchor fa fa-link"=
></a></tt>, <tt class=3D"docutils literal" id=3D"command-interface-sub-bitr=
ate"><span class=3D"pre">sub-bitrate</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-sub-bitrate" class=3D"anchor fa fa-link"></a></t=
t></dt>
            <dd><p class=3D"first">Bitrate values calculated on the packet =
level. This works by dividing the
            bit size of all packets between two keyframes by their presenta=
tion
            timestamp distance. (This uses the timestamps are stored in the=
 file, so
            e.g. playback speed does not influence the returned values.) In=
 particular,
            the video bitrate will update only per keyframe, and show the "=
past"
            bitrate. To make the property more UI friendly, updates to thes=
e properties
            are throttled in a certain way.</p>
            <p>The unit is bits per second. OSD formatting turns these valu=
es in kilobits
            (or megabits, if appropriate), which can be prevented by using =
the
            raw property value, e.g. with <tt class=3D"docutils literal"><s=
pan class=3D"pre">${=3Dvideo-bitrate}</span></tt>.</p>
            <p>Note that the accuracy of these properties is influenced by =
a few factors.
            If the underlying demuxer rewrites the packets on demuxing (don=
e for some
            file formats), the bitrate might be slightly off. If timestamps=
 are bad
            or jittery (like in Matroska), even constant bitrate streams mi=
ght show
            fluctuating bitrate.</p>
            <p>How exactly these values are calculated might change in the =
future.</p>
            <p class=3D"last">In earlier versions of mpv, these properties =
returned a static (but bad)
            guess using a completely different method.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-pack=
et-video-bitrate"><span class=3D"pre">packet-video-bitrate</span><a href=3D=
"https://mpv.io/manual/master/#command-interface-packet-video-bitrate" clas=
s=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"com=
mand-interface-packet-audio-bitrate"><span class=3D"pre">packet-audio-bitra=
te</span><a href=3D"https://mpv.io/manual/master/#command-interface-packet-=
audio-bitrate" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils=
 literal" id=3D"command-interface-packet-sub-bitrate"><span class=3D"pre">p=
acket-sub-bitrate</span><a href=3D"https://mpv.io/manual/master/#command-in=
terface-packet-sub-bitrate" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Old and deprecated properties for <tt cl=
ass=3D"docutils literal"><span class=3D"pre">video-bitrate</span></tt>, <tt=
 class=3D"docutils literal"><span class=3D"pre">audio-bitrate</span></tt>,
            <tt class=3D"docutils literal"><span class=3D"pre">sub-bitrate<=
/span></tt>. They behave exactly the same, but return a value in
            kilobits. Also, they don't have any OSD formatting, though the =
same can be
            achieved with e.g. <tt class=3D"docutils literal"><span class=
=3D"pre">${=3Dvideo-bitrate}</span></tt>.</p>
            <p class=3D"last">These properties shouldn't be used anymore.</=
p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-device-list"><span class=3D"pre">audio-device-list</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-audio-device-list" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The list of discovered audio devices. Th=
is is mostly for use with the
            client API, and reflects what <tt class=3D"docutils literal"><s=
pan class=3D"pre">--audio-device=3Dhelp</span></tt> with the command line
            player returns.</p>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"literal-block">MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP (for each device entry)
        "name"          MPV_FORMAT_STRING
        "description"   MPV_FORMAT_STRING
</pre>
            <p>The <tt class=3D"docutils literal">name</tt> is what is to b=
e passed to the <tt class=3D"docutils literal"><span class=3D"pre">--audio-=
device</span></tt> option (and
            often a rather cryptic audio API-specific ID), while <tt class=
=3D"docutils literal">description</tt> is
            human readable free form text. The description is set to the de=
vice name
            (minus mpv-specific <tt class=3D"docutils literal">&lt;driver&g=
t;/</tt> prefix) if no description is available
            or the description would have been an empty string.</p>
            <p>The special entry with the name set to <tt class=3D"docutils=
 literal">auto</tt> selects the default audio
            output driver and the default device.</p>
            <p class=3D"last">The property can be watched with the property=
 observation mechanism in
            the client API and in Lua scripts. (Technically, change notific=
ation is
            enabled the first time this property is read.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-audi=
o-device"><span class=3D"pre">audio-device</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-audio-device" class=3D"anchor fa fa-link">=
</a></tt> (RW)</dt>
            <dd><p class=3D"first">Set the audio device. This directly read=
s/writes the <tt class=3D"docutils literal"><span class=3D"pre">--audio-dev=
ice</span></tt>
            option, but on write accesses, the audio output will be schedul=
ed for
            reloading.</p>
            <p>Writing this property while no audio output is active will n=
ot automatically
            enable audio. (This is also true in the case when audio was dis=
abled due to
            reinitialization failure after a previous write access to <tt c=
lass=3D"docutils literal"><span class=3D"pre">audio-device</span></tt>.)</p=
>
            <p>This property also doesn't tell you which audio device is ac=
tually in use.</p>
            <p class=3D"last">How these details are handled may change in t=
he future.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-curr=
ent-vo"><span class=3D"pre">current-vo</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-current-vo" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Current video output driver (name as used with <tt class=3D=
"docutils literal"><span class=3D"pre">--vo</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-curr=
ent-ao"><span class=3D"pre">current-ao</span><a href=3D"https://mpv.io/manu=
al/master/#command-interface-current-ao" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>Current audio output driver (name as used with <tt class=3D=
"docutils literal"><span class=3D"pre">--ao</span></tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-shar=
ed-script-properties"><span class=3D"pre">shared-script-properties</span><a=
 href=3D"https://mpv.io/manual/master/#command-interface-shared-script-prop=
erties" class=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">This is a key/value map of arbitrary str=
ings shared between scripts for
            general use. The player itself does not use any data in it (alt=
hough some
            builtin scripts may). The property is not preserved across play=
er restarts.</p>
            <p>This is very primitive, inefficient, and annoying to use. It=
's a makeshift
            solution which could go away any time (for example, when a bett=
er solution
            becomes available). This is also why this property has an annoy=
ing name. You
            should avoid using it, unless you absolutely have to.</p>
            <p>Lua scripting has helpers starting with <tt class=3D"docutil=
s literal">utils.shared_script_property_</tt>.
            They are undocumented because you should not use this property.=
 If you still
            think you must, you should use the helpers instead of the prope=
rty directly.</p>
            <p>You are supposed to use the <tt class=3D"docutils literal"><=
span class=3D"pre">change-list</span></tt> command to modify the contents.
            Reading, modifying, and writing the property manually could dat=
a loss if two
            scripts update different keys at the same time due to lack of
            synchronization. The Lua helpers take care of this.</p>
            <p class=3D"last">(There is no way to ensure synchronization if=
 two scripts try to update the
            same key at the same time.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-user=
-data"><span class=3D"pre">user-data</span><a href=3D"https://mpv.io/manual=
/master/#command-interface-user-data" class=3D"anchor fa fa-link"></a></tt>=
 (RW)</dt>
            <dd><p class=3D"first">This is a recursive key/value map of arb=
itrary nodes shared between clients for
            general use (i.e. scripts, IPC clients, host applications, etc)=
.
            The player itself does not use any data in it (although some bu=
iltin scripts may).
            The property is not preserved across player restarts.</p>
            <p>This is a more powerful replacement for <tt class=3D"docutil=
s literal"><span class=3D"pre">shared-script-properties</span></tt>.</p>
            <p>Sub-paths can be accessed directly; e.g. <tt class=3D"docuti=
ls literal"><span class=3D"pre">user-data/my-script/state/a</span></tt> can=
 be
            read, written, or observed.</p>
            <p>The top-level object itself cannot be written directly; writ=
e to sub-paths instead.</p>
            <p class=3D"last">Converting this property or its sub-propertie=
s to strings will give a JSON
            representation. If converting a leaf-level object (i.e. not a m=
ap or array)
            and not using raw mode, the underlying content will be given (e=
.g. strings will be
            printed directly, rather than quoted and JSON-escaped).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-work=
ing-directory"><span class=3D"pre">working-directory</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-working-directory" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>The working directory of the mpv process. Can be useful for=
 JSON IPC users,
            because the command line player usually works with relative pat=
hs.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-prot=
ocol-list"><span class=3D"pre">protocol-list</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-protocol-list" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>List of protocol prefixes potentially recognized by the pla=
yer. They are
            returned without trailing <tt class=3D"docutils literal">://</t=
t> suffix (which is still always required).
            In some cases, the protocol will not actually be supported (con=
sider
            <tt class=3D"docutils literal">https</tt> if ffmpeg is not comp=
iled with TLS support).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-deco=
der-list"><span class=3D"pre">decoder-list</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-decoder-list" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">List of decoders supported. This lists d=
ecoders which can be passed to
            <tt class=3D"docutils literal"><span class=3D"pre">--vd</span><=
/tt> and <tt class=3D"docutils literal"><span class=3D"pre">--ad</span></tt=
>.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-code=
c">codec<a href=3D"https://mpv.io/manual/master/#command-interface-codec" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Canonical codec name, which identifies the format the decod=
er can
            handle.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-driv=
er">driver<a href=3D"https://mpv.io/manual/master/#command-interface-driver=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The name of the decoder itself. Often, this is the same as =
<tt class=3D"docutils literal">codec</tt>.
            Sometimes it can be different. It is used to distinguish multip=
le
            decoders for the same codec.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-desc=
ription">description<a href=3D"https://mpv.io/manual/master/#command-interf=
ace-description" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Human readable description of the decoder and codec.</dd>
            </dl>
            <p>When querying the property with the client API using <tt cla=
ss=3D"docutils literal">MPV_FORMAT_NODE</tt>,
            or with Lua <tt class=3D"docutils literal">mp.get_property_nati=
ve</tt>, this will return a mpv_node with
            the following contents:</p>
            <pre class=3D"last literal-block">MPV_FORMAT_NODE_ARRAY
    MPV_FORMAT_NODE_MAP (for each decoder entry)
        "codec"         MPV_FORMAT_STRING
        "driver"        MPV_FORMAT_STRING
        "description"   MPV_FORMAT_STRING
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-enco=
der-list"><span class=3D"pre">encoder-list</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-encoder-list" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>List of libavcodec encoders. This has the same format as <t=
t class=3D"docutils literal"><span class=3D"pre">decoder-list</span></tt>.
            The encoder names (<tt class=3D"docutils literal">driver</tt> e=
ntries) can be passed to <tt class=3D"docutils literal"><span class=3D"pre"=
>--ovc</span></tt> and
            <tt class=3D"docutils literal"><span class=3D"pre">--oac</span>=
</tt> (without the <tt class=3D"docutils literal">lavc:</tt> prefix require=
d by <tt class=3D"docutils literal"><span class=3D"pre">--vd</span></tt> an=
d <tt class=3D"docutils literal"><span class=3D"pre">--ad</span></tt>).</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-demu=
xer-lavf-list"><span class=3D"pre">demuxer-lavf-list</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-demuxer-lavf-list" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>List of available libavformat demuxers' names. This can be =
used to check
            for support for a specific format or use with <tt class=3D"docu=
tils literal"><span class=3D"pre">--demuxer-lavf-format</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-inpu=
t-key-list"><span class=3D"pre">input-key-list</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-input-key-list" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>List of <a class=3D"reference internal" href=3D"https://mpv=
.io/manual/master/#key-names">Key names</a>, same as output by <tt class=3D=
"docutils literal"><span class=3D"pre">--input-keylist</span></tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mpv-=
version"><span class=3D"pre">mpv-version</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-mpv-version" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>The mpv version/copyright string. Depending on how the bina=
ry was built, it
            might contain either a release version, or just a git hash.</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-mpv-=
configuration"><span class=3D"pre">mpv-configuration</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-mpv-configuration" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>The configuration arguments that were passed to the build s=
ystem. If the
            meson version used to compile mpv is older than 1.1.0, then a h=
ardcoded
            string of a few, arbitrary options is displayed instead.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-ffmp=
eg-version"><span class=3D"pre">ffmpeg-version</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-ffmpeg-version" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>The contents of the <tt class=3D"docutils literal">av_versi=
on_info()</tt> API call. This is a string which
            identifies the build in some way, either through a release vers=
ion number,
            or a git hash. This applies to Libav as well (the property is s=
till named
            the same.) This property is unavailable if mpv is linked agains=
t older
            FFmpeg and Libav versions.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-liba=
ss-version"><span class=3D"pre">libass-version</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-libass-version" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>The value of <tt class=3D"docutils literal">ass_library_ver=
sion()</tt>. This is an integer, encoded in a
            somewhat weird form (apparently "hex BCD"), indicating the rele=
ase version
            of the libass library linked to mpv.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-plat=
form">platform<a href=3D"https://mpv.io/manual/master/#command-interface-pl=
atform" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Returns a string describing what target platform mpv was bu=
ilt for. The value
            of this is dependent on what the underlying build system detect=
s. Some of the
            most common values are: <tt class=3D"docutils literal">windows<=
/tt>, <tt class=3D"docutils literal">darwin</tt> (macos or ios), <tt class=
=3D"docutils literal">linux</tt>,
            <tt class=3D"docutils literal">android</tt>, and <tt class=3D"d=
ocutils literal">freebsd</tt>. Note that this is not a complete listing.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
ons/<name>"><span class=3D"pre">options/&lt;name&gt;</span><a href=3D"https=
://mpv.io/manual/master/#command-interface-options/%3Cname%3E" class=3D"anc=
hor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">The value of option <tt class=3D"docutil=
s literal"><span class=3D"pre">--&lt;name&gt;</span></tt>. Most options can=
 be changed at runtime by
            writing to this property. Note that many options require reload=
ing the file
            for changes to take effect. If there is an equivalent property,=
 prefer
            setting the property instead.</p>
            <p class=3D"last">There shouldn't be any reason to access <tt c=
lass=3D"docutils literal"><span class=3D"pre">options/&lt;name&gt;</span></=
tt> instead of
            <tt class=3D"docutils literal">&lt;name&gt;</tt>, except in sit=
uations in which the properties have different
            behavior or conflicting semantics.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-file=
-local-options/<name>"><span class=3D"pre">file-local-options/&lt;name&gt;<=
/span><a href=3D"https://mpv.io/manual/master/#command-interface-file-local=
-options/%3Cname%3E" class=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
"><span class=3D"pre">options/&lt;name&gt;</span></tt>, but when setting an=
 option through this
            property, the option is reset to its old value once the current=
 file has
            stopped playing. Trying to write an option while no file is pla=
ying (or
            is being loaded) results in an error.</p>
            <p class=3D"last">(Note that if an option is marked as file-loc=
al, even <tt class=3D"docutils literal">options/</tt> will
            access the local value, and the <tt class=3D"docutils literal">=
old</tt> value, which will be restored on
            end of playback, cannot be read or written until end of playbac=
k.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>"><span class=3D"pre">option-info/&lt;name&gt;</span><a href=
=3D"https://mpv.io/manual/master/#command-interface-option-info/%3Cname%3E"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Additional per-option information.</p>
            <p>This has a number of sub-properties. Replace <tt class=3D"do=
cutils literal">&lt;name&gt;</tt> with the name of
            a top-level option. No guarantee of stability is given to any o=
f these
            sub-properties - they may change radically in the feature.</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>/name"><span class=3D"pre">option-info/&lt;name&gt;/name</spa=
n><a href=3D"https://mpv.io/manual/master/#command-interface-option-info/%3=
Cname%3E/name" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The name of the option.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>/type"><span class=3D"pre">option-info/&lt;name&gt;/type</spa=
n><a href=3D"https://mpv.io/manual/master/#command-interface-option-info/%3=
Cname%3E/type" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The name of the option type, like <tt class=3D"docutils lit=
eral">String</tt> or <tt class=3D"docutils literal">Integer</tt>. For many
            complex types, this isn't very accurate.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>/set-from-commandline"><span class=3D"pre">option-info/&lt;na=
me&gt;/set-from-commandline</span><a href=3D"https://mpv.io/manual/master/#=
command-interface-option-info/%3Cname%3E/set-from-commandline" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Whether the option was set from the mpv command line. What =
this is set
            to if the option is e.g. changed at runtime is left undefined (=
meaning
            it could change in the future).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>/set-locally"><span class=3D"pre">option-info/&lt;name&gt;/se=
t-locally</span><a href=3D"https://mpv.io/manual/master/#command-interface-=
option-info/%3Cname%3E/set-locally" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Whether the option was set per-file. This is the case with
            automatically loaded profiles, file-dir configs, and other case=
s. It
            means the option value will be restored to the value before pla=
yback
            start when playback ends.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>/default-value"><span class=3D"pre">option-info/&lt;name&gt;/=
default-value</span><a href=3D"https://mpv.io/manual/master/#command-interf=
ace-option-info/%3Cname%3E/default-value" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>The default value of the option. May not always be availabl=
e.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>/min"><span class=3D"pre">option-info/&lt;name&gt;/min</span>=
<a href=3D"https://mpv.io/manual/master/#command-interface-option-info/%3Cn=
ame%3E/min" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils li=
teral" id=3D"command-interface-option-info/<name>/max"><span class=3D"pre">=
option-info/&lt;name&gt;/max</span><a href=3D"https://mpv.io/manual/master/=
#command-interface-option-info/%3Cname%3E/max" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Integer minimum and maximum values allowed for the option. =
Only
            available if the options are numeric, and the minimum/maximum h=
as been
            set internally. It's also possible that only one of these is se=
t.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-opti=
on-info/<name>/choices"><span class=3D"pre">option-info/&lt;name&gt;/choice=
s</span><a href=3D"https://mpv.io/manual/master/#command-interface-option-i=
nfo/%3Cname%3E/choices" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If the option is a choice option, the possible choices. Cho=
ices that
            are integers may or may not be included (they can be implied by=
 <tt class=3D"docutils literal">min</tt>
            and <tt class=3D"docutils literal">max</tt>). Note that options=
 which behave like choice options, but
            are not actual choice options internally, may not have this inf=
o
            available.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-prop=
erty-list"><span class=3D"pre">property-list</span><a href=3D"https://mpv.i=
o/manual/master/#command-interface-property-list" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>The list of top-level properties.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-prof=
ile-list"><span class=3D"pre">profile-list</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-profile-list" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">The list of profiles and their contents.=
 This is highly
            implementation-specific, and may change any time. Currently, it=
 returns an
            array of options for each profile. Each option has a name and a=
 value, with
            the value currently always being a string. Note that the option=
s array is
            not a map, as order matters and duplicate entries are possible.=
 Recursive
            profiles are not expanded, and show up as special <tt class=3D"=
docutils literal">profile</tt> options.</p>
            <p class=3D"last">The <tt class=3D"docutils literal"><span clas=
s=3D"pre">profile-restore</span></tt> field is currently missing if it hold=
s the default
            value (either because it was not set, or set explicitly to <tt =
class=3D"docutils literal">default</tt>),
            but in the future it might hold the value <tt class=3D"docutils=
 literal">default</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-comm=
and-list"><span class=3D"pre">command-list</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-command-list" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>The list of input commands. This returns an array of maps, =
where each map
            node represents a command. This map currently only has a single=
 entry:
            <tt class=3D"docutils literal">name</tt> for the name of the co=
mmand. (This property is supposed to be a
            replacement for <tt class=3D"docutils literal"><span class=3D"p=
re">--input-cmdlist</span></tt>. The option dumps some more
            information, but it's a valid feature request to extend this pr=
operty if
            needed.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-inpu=
t-bindings"><span class=3D"pre">input-bindings</span><a href=3D"https://mpv=
.io/manual/master/#command-interface-input-bindings" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">The list of current input key bindings. =
This returns an array of maps,
            where each map node represents a binding for a single key/comma=
nd. This map
            has the following entries:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-key"=
>key<a href=3D"https://mpv.io/manual/master/#command-interface-key" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The key name. This is normalized and may look slightly diff=
erent from
            how it was specified in the source (e.g. in input.conf).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-cmd"=
>cmd<a href=3D"https://mpv.io/manual/master/#command-interface-cmd" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The command mapped to the key. (Currently, this is exactly =
the same
            string as specified in the source, other than stripping whitesp=
ace and
            comments. It's possible that it will be normalized in the futur=
e.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-is-w=
eak">is_weak<a href=3D"https://mpv.io/manual/master/#command-interface-is-w=
eak" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If set to true, any existing and active user bindings will =
take priority.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-owne=
r">owner<a href=3D"https://mpv.io/manual/master/#command-interface-owner" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If this entry exists, the name of the script (or similar) w=
hich added
            this binding.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-sect=
ion">section<a href=3D"https://mpv.io/manual/master/#command-interface-sect=
ion" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Name of the section this binding is part of. This is a rare=
ly used
            mechanism. This entry may be removed or change meaning in the f=
uture.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-prio=
rity">priority<a href=3D"https://mpv.io/manual/master/#command-interface-pr=
iority" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>A number. Bindings with a higher value are preferred over b=
indings
            with a lower value. If the value is negative, this binding is i=
nactive
            and will not be triggered by input. Note that mpv does not use =
this
            value internally, and matching of bindings may work slightly di=
fferently
            in some cases. In addition, this value is dynamic and can chang=
e around
            at runtime.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-comm=
ent">comment<a href=3D"https://mpv.io/manual/master/#command-interface-comm=
ent" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If available, the comment following the command on the same=
 line. (For
            example, the input.conf entry <tt class=3D"docutils literal">f =
cycle bla # toggle bla</tt> would
            result in an entry with <tt class=3D"docutils literal">comment =
=3D "toggle bla", cmd =3D "cycle bla"</tt>.)</dd>
            </dl>
            <p class=3D"last">This property is read-only, and change notifi=
cation is not supported.
            Currently, there is no mechanism to change key bindings at runt=
ime, other
            than scripts adding or removing their own bindings.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"inconsistencies-between-options-an=
d-properties">
            <h2>Inconsistencies between options and properties</h2>
            <p>You can access (almost) all options as properties, though th=
ere are some
            caveats with some properties (due to historical reasons):</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vid"=
>vid<a href=3D"https://mpv.io/manual/master/#command-interface-vid" class=
=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"comm=
and-interface-aid">aid<a href=3D"https://mpv.io/manual/master/#command-inte=
rface-aid" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils lit=
eral" id=3D"command-interface-sid">sid<a href=3D"https://mpv.io/manual/mast=
er/#command-interface-sid" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">While playback is active, these return t=
he actually active tracks. For
            example, if you set <tt class=3D"docutils literal">aid=3D5</tt>=
, and the currently played file contains no
            audio track with ID 5, the <tt class=3D"docutils literal">aid</=
tt> property will return <tt class=3D"docutils literal">no</tt>.</p>
            <p class=3D"last">Before mpv 0.31.0, you could set existing tra=
cks at runtime only.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-disp=
lay-fps"><span class=3D"pre">display-fps</span><a href=3D"https://mpv.io/ma=
nual/master/#command-interface-display-fps" class=3D"anchor fa fa-link"></a=
></tt></dt>
            <dd>This inconsistent behavior is deprecated. Post-deprecation,=
 the reported
            value and the option value are cleanly separated (<tt class=3D"=
docutils literal"><span class=3D"pre">override-display-fps</span></tt>
            for the option value).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-vf">=
vf<a href=3D"https://mpv.io/manual/master/#command-interface-vf" class=3D"a=
nchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"command-i=
nterface-af">af<a href=3D"https://mpv.io/manual/master/#command-interface-a=
f" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If you set the properties during playbac=
k, and the filter chain fails to
            reinitialize, the option will be set, but the runtime filter ch=
ain does not
            change. On the other hand, the next video to be played will fai=
l, because
            the initial filter chain cannot be created.</p>
            <p class=3D"last">This behavior changed in mpv 0.31.0. Before t=
his, the new value was rejected
            <em>iff</em> a video (for <tt class=3D"docutils literal">vf</tt=
>) or an audio (for <tt class=3D"docutils literal">af</tt>) track was activ=
e. If
            playback was not active, the behavior was the same as the curre=
nt one.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-play=
list">playlist<a href=3D"https://mpv.io/manual/master/#command-interface-pl=
aylist" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The property is read-only and returns the current internal =
playlist. The
            option is for loading playlist during command line parsing. For=
 client API
            uses, you should use the <tt class=3D"docutils literal">loadlis=
t</tt> command instead.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-prof=
ile">profile<a href=3D"https://mpv.io/manual/master/#command-interface-prof=
ile" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" =
id=3D"command-interface-include">include<a href=3D"https://mpv.io/manual/ma=
ster/#command-interface-include" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>These are write-only, and will perform actions as they are =
written to,
            exactly as if they were used on the mpv CLI commandline. Their =
only use is
            when using libmpv before <tt class=3D"docutils literal">mpv_ini=
tialize()</tt>, which in turn is probably
            only useful in encoding mode. Normal libmpv users should use ot=
her
            mechanisms, such as the <tt class=3D"docutils literal"><span cl=
ass=3D"pre">apply-profile</span></tt> command, and the
            <tt class=3D"docutils literal">mpv_load_config_file</tt> API fu=
nction. Avoid these properties.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"property-expansion">
            <h2>Property Expansion</h2>
            <p>All string arguments to input commands as well as certain op=
tions (like
            <tt class=3D"docutils literal"><span class=3D"pre">--term-playi=
ng-msg</span></tt>) are subject to property expansion. Note that property
            expansion does not work in places where e.g. numeric parameters=
 are expected.
            (For example, the <tt class=3D"docutils literal">add</tt> comma=
nd does not do property expansion. The <tt class=3D"docutils literal">set</=
tt>
            command is an exception and not a general rule.)</p>
            <div class=3D"admonition admonition-example-for-input-conf">
            <p class=3D"first admonition-title">Example for input.conf</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-show=
-text">i <span class=3D"pre">show-text</span> "Filename: ${filename}"<a hre=
f=3D"https://mpv.io/manual/master/#command-interface-show-text" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd>shows the filename of the current file when pressing the <t=
t class=3D"docutils literal">i</tt> key</dd>
            </dl>
            </div>
            <p>Whether property expansion is enabled by default depends on =
which API is used
            (see <a class=3D"reference internal" href=3D"https://mpv.io/man=
ual/master/#flat-command-syntax">Flat command syntax</a>, <a class=3D"refer=
ence internal" href=3D"https://mpv.io/manual/master/#commands-specified-as-=
arrays">Commands specified as arrays</a> and <a class=3D"reference internal=
" href=3D"https://mpv.io/manual/master/#named-arguments">Named
            arguments</a>), but it can always be enabled with the <tt class=
=3D"docutils literal"><span class=3D"pre">expand-properties</span></tt>
            prefix or disabled with the <tt class=3D"docutils literal">raw<=
/tt> prefix, as described in <a class=3D"reference internal" href=3D"https:=
//mpv.io/manual/master/#input-command-prefixes">Input Command
            Prefixes</a>.</p>
            <p>The following expansions are supported:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"command-interface-${na=
me}">${NAME}<a href=3D"https://mpv.io/manual/master/#command-interface-${na=
me}" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Expands to the value of the property <tt class=3D"docutils =
literal">NAME</tt>. If retrieving the property
            fails, expand to an error string. (Use <tt class=3D"docutils li=
teral">${NAME:}</tt> with a trailing
            <tt class=3D"docutils literal">:</tt> to expand to an empty str=
ing instead.)
            If <tt class=3D"docutils literal">NAME</tt> is prefixed with <t=
t class=3D"docutils literal">=3D</tt>, expand to the raw value of the prope=
rty
            (see section below).</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-${na=
me:str}">${NAME:STR}<a href=3D"https://mpv.io/manual/master/#command-interf=
ace-${name:str}" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Expands to the value of the property <tt class=3D"docutils =
literal">NAME</tt>, or <tt class=3D"docutils literal">STR</tt> if the
            property cannot be retrieved. <tt class=3D"docutils literal">ST=
R</tt> is expanded recursively.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-${?n=
ame:str}"><span class=3D"pre">${?NAME:STR}</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-${?name:str}" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Expands to <tt class=3D"docutils literal">STR</tt> (recursi=
vely) if the property <tt class=3D"docutils literal">NAME</tt> is available=
.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-${!n=
ame:str}"><span class=3D"pre">${!NAME:STR}</span><a href=3D"https://mpv.io/=
manual/master/#command-interface-${!name:str}" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Expands to <tt class=3D"docutils literal">STR</tt> (recursi=
vely) if the property <tt class=3D"docutils literal">NAME</tt> cannot be
            retrieved.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-${?n=
ame"><span class=3D"pre">${?NAME=3D=3DVALUE:STR}</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-${?name" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Expands to <tt class=3D"docutils literal">STR</tt> (recursi=
vely) if the property <tt class=3D"docutils literal">NAME</tt> expands to a
            string equal to <tt class=3D"docutils literal">VALUE</tt>. You =
can prefix <tt class=3D"docutils literal">NAME</tt> with <tt class=3D"docut=
ils literal">=3D</tt> in order to
            compare the raw value of a property (see section below). If the=
 property
            is unavailable, or other errors happen when retrieving it, the =
value is
            never considered equal.
            Note that <tt class=3D"docutils literal">VALUE</tt> can't conta=
in any of the characters <tt class=3D"docutils literal">:</tt> or <tt class=
=3D"docutils literal">}</tt>.
            Also, it is possible that escaping with <tt class=3D"docutils l=
iteral">"</tt> or <tt class=3D"docutils literal">%</tt> might be added in
            the future, should the need arise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-${!n=
ame"><span class=3D"pre">${!NAME=3D=3DVALUE:STR}</span><a href=3D"https://m=
pv.io/manual/master/#command-interface-${!name" class=3D"anchor fa fa-link"=
></a></tt></dt>
            <dd>Same as with the <tt class=3D"docutils literal">?</tt> vari=
ant, but <tt class=3D"docutils literal">STR</tt> is expanded if the value i=
s
            not equal. (Using the same semantics as with <tt class=3D"docut=
ils literal">?</tt>.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-$$">=
$$<a href=3D"https://mpv.io/manual/master/#command-interface-$$" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Expands to <tt class=3D"docutils literal">$</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-$}">=
$}<a href=3D"https://mpv.io/manual/master/#command-interface-$}" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Expands to <tt class=3D"docutils literal">}</tt>. (To produ=
ce this character inside recursive
            expansion.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"command-interface-$>">=
$&gt;<a href=3D"https://mpv.io/manual/master/#command-interface-$%3E" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Disable property expansion and special handling of <tt clas=
s=3D"docutils literal">$</tt> for the rest
            of the string.</dd>
            </dl>
            <p>In places where property expansion is allowed, C-style escap=
es are often
            accepted as well. Example:</p>
            <blockquote>
            <ul class=3D"simple">
            <li><tt class=3D"docutils literal">\n</tt> becomes a newline ch=
aracter</li>
            <li><tt class=3D"docutils literal">\\</tt> expands to <tt class=
=3D"docutils literal">\</tt></li>
            </ul>
            </blockquote>
            </div>
            <div class=3D"section" id=3D"raw-and-formatted-properties">
            <h2>Raw and Formatted Properties</h2>
            <p>Normally, properties are formatted as human-readable text, m=
eant to be
            displayed on OSD or on the terminal. It is possible to retrieve=
 an unformatted
            (raw) value from a property by prefixing its name with <tt clas=
s=3D"docutils literal">=3D</tt>. These raw values
            can be parsed by other programs and follow the same conventions=
 as the options
            associated with the properties.</p>
            <div class=3D"admonition admonition-examples">
            <p class=3D"first admonition-title">Examples</p>
            <ul class=3D"last simple">
            <li><tt class=3D"docutils literal"><span class=3D"pre">${time-p=
os}</span></tt> expands to <tt class=3D"docutils literal">00:14:23</tt> (if=
 playback position is at 14
            minutes 23 seconds)</li>
            <li><tt class=3D"docutils literal"><span class=3D"pre">${=3Dtim=
e-pos}</span></tt> expands to <tt class=3D"docutils literal">863.4</tt> (sa=
me time, plus 400 milliseconds -
            milliseconds are normally not shown in the formatted case)</li>
            </ul>
            </div>
            <p>Sometimes, the difference in amount of information carried b=
y raw and formatted
            property values can be rather big. In some cases, raw values ha=
ve more
            information, like higher precision than seconds with <tt class=
=3D"docutils literal"><span class=3D"pre">time-pos</span></tt>. Sometimes
            it is the other way around, e.g. <tt class=3D"docutils literal"=
>aid</tt> shows track title and language in the
            formatted case, but only the track number if it is raw.</p>
            </div>
            </div>
            <div class=3D"section" id=3D"on-screen-controller">
            <h1>ON SCREEN CONTROLLER</h1>
            <p>The On Screen Controller (short: OSC) is a minimal GUI integ=
rated with mpv to
            offer basic mouse-controllability. It is intended to make inter=
action easier
            for new users and to enable precise and direct seeking.</p>
            <p>The OSC is enabled by default if mpv was compiled with Lua s=
upport. It can be
            disabled entirely using the <tt class=3D"docutils literal"><spa=
n class=3D"pre">--osc=3Dno</span></tt> option.</p>
            <div class=3D"section" id=3D"using-the-osc">
            <h2>Using the OSC</h2>
            <p>By default, the OSC will show up whenever the mouse is moved=
 inside the
            player window and will hide if the mouse is not moved outside t=
he OSC for
            0.5 seconds or if the mouse leaves the window.</p>
            <div class=3D"section" id=3D"the-interface">
            <h3>The Interface</h3>
            <pre class=3D"literal-block">+---------+----------+------------=
------------------------------+----------+
| pl prev | pl next  |  title                                   |    cache =
|
+------+--+---+------+---------+-----------+------+-------+-----+-----+----=
+
| play | skip | skip | time    |  seekbar  | time | audio | sub | vol | fs =
|
|      | back | frwd | elapsed |           | left |       |     |     |    =
|
+------+------+------+---------+-----------+------+-------+-----+-----+----=
+
</pre>
            <dl class=3D"docutils">
            <dt>pl prev</dt>
            <dd><table border=3D"1" class=3D"first last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>play previous file in playlist</td>
            </tr>
            <tr><td>right-click</td>
            <td>show playlist</td>
            </tr>
            <tr><td>shift+L-click</td>
            <td>show playlist</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>pl next</dt>
            <dd><table border=3D"1" class=3D"first last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>play next file in playlist</td>
            </tr>
            <tr><td>right-click</td>
            <td>show playlist</td>
            </tr>
            <tr><td>shift+L-click</td>
            <td>show playlist</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>title</dt>
            <dd><div class=3D"first line-block">
            <div class=3D"line">Displays current media-title, filename, cus=
tom title, or target chapter
            name while hovering the seekbar.</div>
            </div>
            <table border=3D"1" class=3D"last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>show playlist position and length and full title</td>
            </tr>
            <tr><td>right-click</td>
            <td>show filename</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>cache</dt>
            <dd><div class=3D"first last line-block">
            <div class=3D"line">Shows current cache fill status</div>
            </div>
            </dd>
            <dt>play</dt>
            <dd><table border=3D"1" class=3D"first last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>toggle play/pause</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>skip back</dt>
            <dd><table border=3D"1" class=3D"first last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>go to beginning of chapter / previous chapter</td>
            </tr>
            <tr><td>right-click</td>
            <td>show chapters</td>
            </tr>
            <tr><td>shift+L-click</td>
            <td>show chapters</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>skip frwd</dt>
            <dd><table border=3D"1" class=3D"first last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>go to next chapter</td>
            </tr>
            <tr><td>right-click</td>
            <td>show chapters</td>
            </tr>
            <tr><td>shift+L-click</td>
            <td>show chapters</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>time elapsed</dt>
            <dd><div class=3D"first line-block">
            <div class=3D"line">Shows current playback position timestamp</=
div>
            </div>
            <table border=3D"1" class=3D"last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>toggle displaying timecodes with milliseconds</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>seekbar</dt>
            <dd><div class=3D"first line-block">
            <div class=3D"line">Indicates current playback position and pos=
ition of chapters</div>
            </div>
            <table border=3D"1" class=3D"last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>seek to position</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>time left</dt>
            <dd><div class=3D"first line-block">
            <div class=3D"line">Shows remaining playback time timestamp</di=
v>
            </div>
            <table border=3D"1" class=3D"last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>toggle between total and remaining time</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>audio and sub</dt>
            <dd><div class=3D"first line-block">
            <div class=3D"line">Displays selected track and amount of avail=
able tracks</div>
            </div>
            <table border=3D"1" class=3D"last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>cycle audio/sub tracks forward</td>
            </tr>
            <tr><td>right-click</td>
            <td>cycle audio/sub tracks backwards</td>
            </tr>
            <tr><td>shift+L-click</td>
            <td>show available audio/sub tracks</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>vol</dt>
            <dd><table border=3D"1" class=3D"first last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>toggle mute</td>
            </tr>
            <tr><td>mouse wheel</td>
            <td>volume up/down</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt>fs</dt>
            <dd><table border=3D"1" class=3D"first last docutils">
            <colgroup>
            <col width=3D"21%">
            <col width=3D"79%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>left-click</td>
            <td>toggle fullscreen</td>
            </tr>
            </tbody>
            </table>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"key-bindings">
            <h3>Key Bindings</h3>
            <p>These key bindings are active by default if nothing else is =
already bound to
            these keys. In case of collision, the function needs to be boun=
d to a
            different key. See the <a class=3D"reference internal" href=3D"=
https://mpv.io/manual/master/#script-commands">Script Commands</a> section.=
</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"18%">
            <col width=3D"82%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>del</td>
            <td>Cycles visibility between never / auto (mouse-move) / alway=
s</td>
            </tr>
            </tbody>
            </table>
            </div>
            </div>
            <div class=3D"section" id=3D"configuration">
            <h2>Configuration</h2>
            <p>The OSC offers limited configuration through a config file
            <tt class=3D"docutils literal"><span class=3D"pre">script-opts/=
osc.conf</span></tt> placed in mpv's user dir and through the
            <tt class=3D"docutils literal"><span class=3D"pre">--script-opt=
s</span></tt> command-line option. Options provided through the command-lin=
e
            will override those from the config file.</p>
            <div class=3D"section" id=3D"config-syntax">
            <h3>Config Syntax</h3>
            <p>The config file must exactly follow the following syntax:</p=
>
            <pre class=3D"literal-block"># this is a comment
optionA=3Dvalue1
optionB=3Dvalue2
</pre>
            <p><tt class=3D"docutils literal">#</tt> can only be used at th=
e beginning of a line and there may be no
            spaces around the <tt class=3D"docutils literal">=3D</tt> or an=
ywhere else.</p>
            </div>
            <div class=3D"section" id=3D"command-line-syntax">
            <h3>Command-line Syntax</h3>
            <p>To avoid collisions with other scripts, all options need to =
be prefixed with
            <tt class=3D"docutils literal">osc-</tt>.</p>
            <p>Example:</p>
            <pre class=3D"literal-block">--script-opts=3Dosc-optionA=3Dvalu=
e1,osc-optionB=3Dvalue2
</pre>
            </div>
            <div class=3D"section" id=3D"configurable-options">
            <h3>Configurable Options</h3>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-l=
ayout">layout<a href=3D"https://mpv.io/manual/master/#on-screen-controller-=
layout" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: bottombar</p>
            <p class=3D"last">The layout for the OSC. Currently available a=
re: box, slimbox,
            bottombar and topbar. Default pre-0.21.0 was 'box'.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
eekbarstyle">seekbarstyle<a href=3D"https://mpv.io/manual/master/#on-screen=
-controller-seekbarstyle" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: bar</p>
            <p class=3D"last">Sets the style of the playback position marke=
r and overall shape
            of the seekbar: <tt class=3D"docutils literal">bar</tt>, <tt cl=
ass=3D"docutils literal">diamond</tt> or <tt class=3D"docutils literal">kno=
b</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
eekbarhandlesize">seekbarhandlesize<a href=3D"https://mpv.io/manual/master/=
#on-screen-controller-seekbarhandlesize" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Default: 0.6</p>
            <p class=3D"last">Size ratio of the seek handle if <tt class=3D=
"docutils literal">seekbarstyle</tt> is set to <tt class=3D"docutils litera=
l">diamond</tt>
            or <tt class=3D"docutils literal">knob</tt>. This is relative t=
o the full height of the seekbar.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
eekbarkeyframes">seekbarkeyframes<a href=3D"https://mpv.io/manual/master/#o=
n-screen-controller-seekbarkeyframes" class=3D"anchor fa fa-link"></a></tt>=
</dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Controls the mode used to seek when dragging =
the seekbar. If set to <tt class=3D"docutils literal">yes</tt>,
            default seeking mode is used (usually keyframes, but player def=
aults and
            heuristics can change it to exact). If set to <tt class=3D"docu=
tils literal">no</tt>, exact seeking on
            mouse drags will be used instead. Keyframes are preferred, but =
exact seeks
            may be useful in cases where keyframes cannot be found. Note th=
at using
            exact seeks can potentially make mouse dragging much slower.</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
eekrangestyle">seekrangestyle<a href=3D"https://mpv.io/manual/master/#on-sc=
reen-controller-seekrangestyle" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: inverted</p>
            <p class=3D"last">Display seekable ranges on the seekbar. <tt c=
lass=3D"docutils literal">bar</tt> shows them on the full
            height of the bar, <tt class=3D"docutils literal">line</tt> as =
a thick line and <tt class=3D"docutils literal">inverted</tt> as a thin
            line that is inverted over playback position markers. <tt class=
=3D"docutils literal">none</tt> will hide
            them. Additionally, <tt class=3D"docutils literal">slider</tt> =
will show a permanent handle inside the seekbar
            with cached ranges marked inside. Note that these will look dif=
ferently
            based on the seekbarstyle option. Also, <tt class=3D"docutils l=
iteral">slider</tt> does not work with
            <tt class=3D"docutils literal">seekbarstyle</tt> set to <tt cla=
ss=3D"docutils literal">bar</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
eekrangeseparate">seekrangeseparate<a href=3D"https://mpv.io/manual/master/=
#on-screen-controller-seekrangeseparate" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Controls whether to show line-style seekable =
ranges on top of the
            seekbar or separately if <tt class=3D"docutils literal">seekbar=
style</tt> is set to <tt class=3D"docutils literal">bar</tt>.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
eekrangealpha">seekrangealpha<a href=3D"https://mpv.io/manual/master/#on-sc=
reen-controller-seekrangealpha" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 200</p>
            <p class=3D"last">Alpha of the seekable ranges, 0 (opaque) to 2=
55 (fully transparent).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-d=
eadzonesize">deadzonesize<a href=3D"https://mpv.io/manual/master/#on-screen=
-controller-deadzonesize" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0.5</p>
            <p class=3D"last">Size of the deadzone. The deadzone is an area=
 that makes the mouse act
            like leaving the window. Movement there won't make the OSC show=
 up and
            it will hide immediately if the mouse enters it. The deadzone s=
tarts
            at the window border opposite to the OSC and the size controls =
how much
            of the window it will span. Values between 0.0 and 1.0, where 0=
 means the
            OSC will always popup with mouse movement in the window, and 1 =
means the
            OSC will only show up when the mouse hovers it. Default pre-0.2=
1.0 was 0.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-m=
inmousemove">minmousemove<a href=3D"https://mpv.io/manual/master/#on-screen=
-controller-minmousemove" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0</p>
            <p class=3D"last">Minimum amount of pixels the mouse has to mov=
e between ticks to make
            the OSC show up. Default pre-0.21.0 was 3.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
howwindowed">showwindowed<a href=3D"https://mpv.io/manual/master/#on-screen=
-controller-showwindowed" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Enable the OSC when windowed</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
howfullscreen">showfullscreen<a href=3D"https://mpv.io/manual/master/#on-sc=
reen-controller-showfullscreen" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Enable the OSC when fullscreen</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-i=
dlescreen">idlescreen<a href=3D"https://mpv.io/manual/master/#on-screen-con=
troller-idlescreen" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Show the mpv logo and message when idle</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
calewindowed">scalewindowed<a href=3D"https://mpv.io/manual/master/#on-scre=
en-controller-scalewindowed" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 1.0</p>
            <p class=3D"last">Scale factor of the OSC when windowed.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
calefullscreen">scalefullscreen<a href=3D"https://mpv.io/manual/master/#on-=
screen-controller-scalefullscreen" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Default: 1.0</p>
            <p class=3D"last">Scale factor of the OSC when fullscreen</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-s=
caleforcedwindow">scaleforcedwindow<a href=3D"https://mpv.io/manual/master/=
#on-screen-controller-scaleforcedwindow" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd><p class=3D"first">Default: 2.0</p>
            <p class=3D"last">Scale factor of the OSC when rendered on a fo=
rced (dummy) window</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-v=
idscale">vidscale<a href=3D"https://mpv.io/manual/master/#on-screen-control=
ler-vidscale" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Scale the OSC with the video
            <tt class=3D"docutils literal">no</tt> tries to keep the OSC si=
ze constant as much as the window size allows</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-v=
align">valign<a href=3D"https://mpv.io/manual/master/#on-screen-controller-=
valign" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0.8</p>
            <p class=3D"last">Vertical alignment, -1 (top) to 1 (bottom)</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-h=
align">halign<a href=3D"https://mpv.io/manual/master/#on-screen-controller-=
halign" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0.0</p>
            <p class=3D"last">Horizontal alignment, -1 (left) to 1 (right)<=
/p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-b=
armargin">barmargin<a href=3D"https://mpv.io/manual/master/#on-screen-contr=
oller-barmargin" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0</p>
            <p class=3D"last">Margin from bottom (bottombar) or top (topbar=
), in pixels</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-b=
oxalpha">boxalpha<a href=3D"https://mpv.io/manual/master/#on-screen-control=
ler-boxalpha" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 80</p>
            <p class=3D"last">Alpha of the background box, 0 (opaque) to 25=
5 (fully transparent)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-h=
idetimeout">hidetimeout<a href=3D"https://mpv.io/manual/master/#on-screen-c=
ontroller-hidetimeout" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 500</p>
            <p class=3D"last">Duration in ms until the OSC hides if no mous=
e movement, must not be
            negative</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-f=
adeduration">fadeduration<a href=3D"https://mpv.io/manual/master/#on-screen=
-controller-fadeduration" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 200</p>
            <p class=3D"last">Duration of fade out in ms, 0 =3D no fade</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-t=
itle">title<a href=3D"https://mpv.io/manual/master/#on-screen-controller-ti=
tle" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: ${media-title}</p>
            <p class=3D"last">String that supports property expansion that =
will be displayed as
            OSC title.
            ASS tags are escaped, and newlines and trailing slashes are str=
ipped.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-t=
ooltipborder">tooltipborder<a href=3D"https://mpv.io/manual/master/#on-scre=
en-controller-tooltipborder" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 1</p>
            <p class=3D"last">Size of the tooltip outline when using bottom=
bar or topbar layouts</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-t=
imetotal">timetotal<a href=3D"https://mpv.io/manual/master/#on-screen-contr=
oller-timetotal" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: no</p>
            <p class=3D"last">Show total time instead of time remaining</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-t=
imems">timems<a href=3D"https://mpv.io/manual/master/#on-screen-controller-=
timems" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: no</p>
            <p class=3D"last">Display timecodes with milliseconds</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-t=
cspace">tcspace<a href=3D"https://mpv.io/manual/master/#on-screen-controlle=
r-tcspace" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 100 (allowed: 50-200)</p>
            <p class=3D"last">Adjust space reserved for timecodes (current =
time and time remaining) in
            the <tt class=3D"docutils literal">bottombar</tt> and <tt class=
=3D"docutils literal">topbar</tt> layouts. The timecode width depends on th=
e
            font, and with some fonts the spacing near the timecodes become=
s too small.
            Use values above 100 to increase that spacing, or below 100 to =
decrease it.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-v=
isibility">visibility<a href=3D"https://mpv.io/manual/master/#on-screen-con=
troller-visibility" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: auto (auto hide/show on mouse m=
ove)</p>
            <p class=3D"last">Also supports <tt class=3D"docutils literal">=
never</tt> and <tt class=3D"docutils literal">always</tt></p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-b=
oxmaxchars">boxmaxchars<a href=3D"https://mpv.io/manual/master/#on-screen-c=
ontroller-boxmaxchars" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 80</p>
            <p class=3D"last">Max chars for the osc title at the box layout=
. mpv does not measure the
            text width on screen and so it needs to limit it by number of c=
hars. The
            default is conservative to allow wide fonts to be used without =
overflow.
            However, with many common fonts a bigger number can be used. YM=
MV.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-b=
oxvideo">boxvideo<a href=3D"https://mpv.io/manual/master/#on-screen-control=
ler-boxvideo" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: no</p>
            <p>Whether to overlay the osc over the video (<tt class=3D"docu=
tils literal">no</tt>), or to box the video
            within the areas not covered by the osc (<tt class=3D"docutils =
literal">yes</tt>). If this option is set,
            the osc may overwrite the <tt class=3D"docutils literal"><span =
class=3D"pre">--video-margin-ratio-*</span></tt> options, even if the
            user has set them. (It will not overwrite them if all of them a=
re set to
            default values.) Additionally, <tt class=3D"docutils literal">v=
isibility</tt> must be set to <tt class=3D"docutils literal">always</tt>.
            Otherwise, this option does nothing.</p>
            <p>Currently, this is supported for the <tt class=3D"docutils l=
iteral">bottombar</tt> and <tt class=3D"docutils literal">topbar</tt> layou=
t
            only. The other layouts do not change if this option is set. Se=
parately,
            if window controls are present (see below), they will be affect=
ed
            regardless of which osc layout is in use.</p>
            <p>The border is static and appears even if the OSC is configur=
ed to appear
            only on mouse interaction. If the OSC is invisible, the border =
is simply
            filled with the background color (black by default).</p>
            <p>This currently still makes the OSC overlap with subtitles (i=
f the
            <tt class=3D"docutils literal"><span class=3D"pre">--sub-use-ma=
rgins</span></tt> option is set to <tt class=3D"docutils literal">yes</tt>,=
 the default). This may be
            fixed later.</p>
            <p class=3D"last">This does not work correctly with video outpu=
ts like <tt class=3D"docutils literal"><span class=3D"pre">--vo=3Dxv</span>=
</tt>, which
            render OSD into the unscaled video.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-w=
indowcontrols">windowcontrols<a href=3D"https://mpv.io/manual/master/#on-sc=
reen-controller-windowcontrols" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: auto (Show window controls if t=
here is no window border)</p>
            <p>Whether to show window management controls over the video, a=
nd if so,
            which side of the window to place them. This may be desirable w=
hen the
            window has no decorations, either because they have been explic=
itly
            disabled (<tt class=3D"docutils literal">border=3Dno</tt>) or b=
ecause the current platform doesn't support
            them (eg: gnome-shell with wayland).</p>
            <p class=3D"last">The set of window controls is fixed, offering=
 <tt class=3D"docutils literal">minimize</tt>, <tt class=3D"docutils litera=
l">maximize</tt>,
            and <tt class=3D"docutils literal">quit</tt>. Not all platforms=
 implement <tt class=3D"docutils literal">minimize</tt> and <tt class=3D"do=
cutils literal">maximize</tt>,
            but <tt class=3D"docutils literal">quit</tt> will always work.<=
/p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-w=
indowcontrols-alignment">windowcontrols_alignment<a href=3D"https://mpv.io/=
manual/master/#on-screen-controller-windowcontrols-alignment" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: right</p>
            <p>If window controls are shown, indicates which side should th=
ey be aligned
            to.</p>
            <p class=3D"last">Supports <tt class=3D"docutils literal">left<=
/tt> and <tt class=3D"docutils literal">right</tt> which will place the con=
trols on those
            respective sides.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-g=
reenandgrumpy">greenandgrumpy<a href=3D"https://mpv.io/manual/master/#on-sc=
reen-controller-greenandgrumpy" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: no</p>
            <p class=3D"last">Set to <tt class=3D"docutils literal">yes</tt=
> to reduce festivity (i.e. disable santa hat in December.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-l=
ivemarkers">livemarkers<a href=3D"https://mpv.io/manual/master/#on-screen-c=
ontroller-livemarkers" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Update chapter markers positions on duration =
changes, e.g. live streams.
            The updates are unoptimized - consider disabling it on very low=
-end systems.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-c=
hapters-osd">chapters_osd<a href=3D"https://mpv.io/manual/master/#on-screen=
-controller-chapters-osd" class=3D"anchor fa fa-link"></a></tt>, <tt class=
=3D"docutils literal" id=3D"on-screen-controller-playlist-osd">playlist_osd=
<a href=3D"https://mpv.io/manual/master/#on-screen-controller-playlist-osd"=
 class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Whether to display the chapters/playlist at t=
he OSD when left-clicking the
            next/previous OSC buttons, respectively.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-c=
hapter-fmt">chapter_fmt<a href=3D"https://mpv.io/manual/master/#on-screen-c=
ontroller-chapter-fmt" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: <tt class=3D"docutils literal">=
Chapter: %s</tt></p>
            <p class=3D"last">Template for the chapter-name display when ho=
vering the seekbar.
            Use <tt class=3D"docutils literal">no</tt> to disable chapter d=
isplay on hover. Otherwise it's a lua
            <tt class=3D"docutils literal">string.format</tt> template and =
<tt class=3D"docutils literal">%s</tt> is replaced with the actual name.</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-u=
nicodeminus">unicodeminus<a href=3D"https://mpv.io/manual/master/#on-screen=
-controller-unicodeminus" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: no</p>
            <p class=3D"last">Use a Unicode minus sign instead of an ASCII =
hyphen when displaying
            the remaining playback time.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"script-commands">
            <h3>Script Commands</h3>
            <p>The OSC script listens to certain script commands. These com=
mands can bound
            in <tt class=3D"docutils literal">input.conf</tt>, or sent by o=
ther scripts.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-o=
sc-message"><span class=3D"pre">osc-message</span><a href=3D"https://mpv.io=
/manual/master/#on-screen-controller-osc-message" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd>Show a message on screen using the OSC. First argument is t=
he message,
            second the duration in seconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-o=
sc-visibility"><span class=3D"pre">osc-visibility</span><a href=3D"https://=
mpv.io/manual/master/#on-screen-controller-osc-visibility" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Controls visibility mode <tt class=3D"docutils literal">nev=
er</tt> / <tt class=3D"docutils literal">auto</tt> (on mouse move) / <tt cl=
ass=3D"docutils literal">always</tt>
            and also <tt class=3D"docutils literal">cycle</tt> to cycle bet=
ween the modes</dd>
            </dl>
            <p>Example</p>
            <p>You could put this into <tt class=3D"docutils literal">input=
.conf</tt> to hide the OSC with the <tt class=3D"docutils literal">a</tt> k=
ey and
            to set auto mode (the default) with <tt class=3D"docutils liter=
al">b</tt>:</p>
            <pre class=3D"literal-block">a script-message osc-visibility ne=
ver
b script-message osc-visibility auto
</pre>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-o=
sc-idlescreen"><span class=3D"pre">osc-idlescreen</span><a href=3D"https://=
mpv.io/manual/master/#on-screen-controller-osc-idlescreen" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>Controls the visibility of the mpv logo on idle. Valid argu=
ments are <tt class=3D"docutils literal">yes</tt>,
            <tt class=3D"docutils literal">no</tt>, and <tt class=3D"docuti=
ls literal">cycle</tt> to toggle between yes and no.</dd>
            <dt><tt class=3D"docutils literal" id=3D"on-screen-controller-o=
sc-playlist"><span class=3D"pre">osc-playlist</span><a href=3D"https://mpv.=
io/manual/master/#on-screen-controller-osc-playlist" class=3D"anchor fa fa-=
link"></a></tt>, <tt class=3D"docutils literal" id=3D"on-screen-controller-=
osc-chapterlist"><span class=3D"pre">osc-chapterlist</span><a href=3D"https=
://mpv.io/manual/master/#on-screen-controller-osc-chapterlist" class=3D"anc=
hor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"on-screen-c=
ontroller-osc-tracklist"><span class=3D"pre">osc-tracklist</span><a href=3D=
"https://mpv.io/manual/master/#on-screen-controller-osc-tracklist" class=3D=
"anchor fa fa-link"></a></tt></dt>
            <dd>Shows a limited view of the respective type of list using t=
he OSC. First
            argument is duration in seconds.</dd>
            </dl>
            </div>
            </div>
            </div>
            <div class=3D"section" id=3D"stats">
            <h1>STATS</h1>
            <p>This builtin script displays information and statistics for =
the currently
            played file. It is enabled by default if mpv was compiled with =
Lua support.
            It can be disabled entirely using the <tt class=3D"docutils lit=
eral"><span class=3D"pre">--load-stats-overlay=3Dno</span></tt> option.</p>
            <div class=3D"section" id=3D"id1">
            <h2>Usage</h2>
            <p>The following key bindings are active by default unless some=
thing else is
            already bound to them:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"8%">
            <col width=3D"92%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>i</td>
            <td>Show stats for a fixed duration</td>
            </tr>
            <tr><td>I</td>
            <td>Toggle stats (shown until toggled again)</td>
            </tr>
            </tbody>
            </table>
            <p>While the stats are visible on screen the following key bind=
ings are active,
            regardless of existing bindings. They allow you to switch betwe=
en <em>pages</em> of
            stats:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"13%">
            <col width=3D"88%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>1</td>
            <td>Show usual stats</td>
            </tr>
            <tr><td>2</td>
            <td>Show frame timings (scroll)</td>
            </tr>
            <tr><td>3</td>
            <td>Input cache stats</td>
            </tr>
            <tr><td>4</td>
            <td>Active key bindings (scroll)</td>
            </tr>
            <tr><td>0</td>
            <td>Internal stuff (scroll)</td>
            </tr>
            </tbody>
            </table>
            <p>On pages which support scroll, these key bindings are also a=
ctive:</p>
            <table border=3D"1" class=3D"docutils">
            <colgroup>
            <col width=3D"16%">
            <col width=3D"84%">
            </colgroup>
            <tbody valign=3D"top">
            <tr><td>UP</td>
            <td>Scroll one line up</td>
            </tr>
            <tr><td>DOWN</td>
            <td>Scroll one line down</td>
            </tr>
            </tbody>
            </table>
            </div>
            <div class=3D"section" id=3D"id2">
            <h2>Configuration</h2>
            <p>This script can be customized through a config file <tt clas=
s=3D"docutils literal"><span class=3D"pre">script-opts/stats.conf</span></t=
t>
            placed in mpv's user directory and through the <tt class=3D"doc=
utils literal"><span class=3D"pre">--script-opts</span></tt> command-line
            option. The configuration syntax is described in <a class=3D"re=
ference internal" href=3D"https://mpv.io/manual/master/#on-screen-controlle=
r">ON SCREEN CONTROLLER</a>.</p>
            <div class=3D"section" id=3D"id3">
            <h3>Configurable Options</h3>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"stats-key-page-1">key_=
page_1<a href=3D"https://mpv.io/manual/master/#stats-key-page-1" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Default: 1</dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-key-page-2">key_=
page_2<a href=3D"https://mpv.io/manual/master/#stats-key-page-2" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Default: 2</dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-key-page-3">key_=
page_3<a href=3D"https://mpv.io/manual/master/#stats-key-page-3" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Default: 3</dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-key-page-4">key_=
page_4<a href=3D"https://mpv.io/manual/master/#stats-key-page-4" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd>Default: 4</dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-key-page-0">key_=
page_0<a href=3D"https://mpv.io/manual/master/#stats-key-page-0" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0</p>
            <p class=3D"last">Key bindings for page switching while stats a=
re displayed.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-key-scroll-up">k=
ey_scroll_up<a href=3D"https://mpv.io/manual/master/#stats-key-scroll-up" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Default: UP</dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-key-scroll-down"=
>key_scroll_down<a href=3D"https://mpv.io/manual/master/#stats-key-scroll-d=
own" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Default: DOWN</dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-scroll-lines">sc=
roll_lines<a href=3D"https://mpv.io/manual/master/#stats-scroll-lines" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 1</p>
            <p class=3D"last">Scroll key bindings and number of lines to sc=
roll on pages which support it.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-duration">durati=
on<a href=3D"https://mpv.io/manual/master/#stats-duration" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 4</p>
            <p class=3D"last">How long the stats are shown in seconds (ones=
hot).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-redraw-delay">re=
draw_delay<a href=3D"https://mpv.io/manual/master/#stats-redraw-delay" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 1</p>
            <p class=3D"last">How long it takes to refresh the displayed st=
ats in seconds (toggling).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-persistent-overl=
ay">persistent_overlay<a href=3D"https://mpv.io/manual/master/#stats-persis=
tent-overlay" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: no</p>
            <p class=3D"last">When <cite>no</cite>, other scripts printing =
text to the screen can overwrite the
            displayed stats. When <cite>yes</cite>, displayed stats are per=
sistently shown for the
            respective duration. This can result in overlapping text when m=
ultiple
            scripts decide to print text at the same time.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-plot-perfdata">p=
lot_perfdata<a href=3D"https://mpv.io/manual/master/#stats-plot-perfdata" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Show graphs for performance data (page 2).</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-plot-vsync-ratio=
">plot_vsync_ratio<a href=3D"https://mpv.io/manual/master/#stats-plot-vsync=
-ratio" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Default: yes</dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-plot-vsync-jitte=
r">plot_vsync_jitter<a href=3D"https://mpv.io/manual/master/#stats-plot-vsy=
nc-jitter" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Show graphs for vsync and jitter values (page=
 1). Only when toggled.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-flush-graph-data=
">flush_graph_data<a href=3D"https://mpv.io/manual/master/#stats-flush-grap=
h-data" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: yes</p>
            <p class=3D"last">Clear data buffers used for drawing graphs wh=
en toggling.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-font">font<a hre=
f=3D"https://mpv.io/manual/master/#stats-font" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd><p class=3D"first">Default: sans-serif</p>
            <p class=3D"last">Font name. Should support as many font weight=
s as possible for optimal
            visual experience.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-font-mono">font_=
mono<a href=3D"https://mpv.io/manual/master/#stats-font-mono" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: monospace</p>
            <p class=3D"last">Font name for parts where monospaced characte=
rs are necessary to align
            text. Currently, monospaced digits are sufficient.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-font-size">font_=
size<a href=3D"https://mpv.io/manual/master/#stats-font-size" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 8</p>
            <p class=3D"last">Font size used to render text.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-font-color">font=
_color<a href=3D"https://mpv.io/manual/master/#stats-font-color" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: FFFFFF</p>
            <p class=3D"last">Font color.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-border-size">bor=
der_size<a href=3D"https://mpv.io/manual/master/#stats-border-size" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0.8</p>
            <p class=3D"last">Size of border drawn around the font.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-border-color">bo=
rder_color<a href=3D"https://mpv.io/manual/master/#stats-border-color" clas=
s=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 262626</p>
            <p class=3D"last">Color of drawn border.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-alpha">alpha<a h=
ref=3D"https://mpv.io/manual/master/#stats-alpha" class=3D"anchor fa fa-lin=
k"></a></tt></dt>
            <dd><p class=3D"first">Default: 11</p>
            <p class=3D"last">Transparency for drawn text.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-plot-bg-border-c=
olor">plot_bg_border_color<a href=3D"https://mpv.io/manual/master/#stats-pl=
ot-bg-border-color" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 0000FF</p>
            <p class=3D"last">Border color used for drawing graphs.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-plot-bg-color">p=
lot_bg_color<a href=3D"https://mpv.io/manual/master/#stats-plot-bg-color" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 262626</p>
            <p class=3D"last">Background color used for drawing graphs.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"stats-plot-color">plot=
_color<a href=3D"https://mpv.io/manual/master/#stats-plot-color" class=3D"a=
nchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: FFFFFF</p>
            <p class=3D"last">Color used for drawing graphs.</p>
            </dd>
            </dl>
            <p>Note: colors are given as hexadecimal values and use ASS tag=
 order: BBGGRR
            (blue green red).</p>
            </div>
            <div class=3D"section" id=3D"different-key-bindings">
            <h3>Different key bindings</h3>
            <p>Additional keys can be configured in <tt class=3D"docutils l=
iteral">input.conf</tt> to display the stats:</p>
            <pre class=3D"literal-block">e script-binding stats/display-sta=
ts
E script-binding stats/display-stats-toggle
</pre>
            <p>And to display a certain page directly:</p>
            <pre class=3D"literal-block">i script-binding stats/display-pag=
e-1
e script-binding stats/display-page-2
</pre>
            </div>
            <div class=3D"section" id=3D"active-key-bindings-page">
            <h3>Active key bindings page</h3>
            <p>Lists the active key bindings and the commands they're bound=
 to, excluding the
            interactive keys of the stats script itself. See also <tt class=
=3D"docutils literal"><span class=3D"pre">--input-test</span></tt> for more
            detailed view of each binding.</p>
            <p>The keys are grouped automatically using a simple analysis o=
f the command
            string, and one should not expect documentation-level grouping =
accuracy,
            however, it should still be reasonably useful.</p>
            <p>Using <tt class=3D"docutils literal"><span class=3D"pre">--i=
dle</span> <span class=3D"pre">--script-opts=3Dstats-bindlist=3Dyes</span><=
/tt> will print the list to the
            terminal and quit immediately. By default long lines are shorte=
ned to 79 chars,
            and terminal escape sequences are enabled. A different length l=
imit can be
            set by changing <tt class=3D"docutils literal">yes</tt> to a nu=
mber (at least 40), and escape sequences can be
            disabled by adding <tt class=3D"docutils literal">-</tt> before=
 the value, e.g. <tt class=3D"docutils literal"><span class=3D"pre">...=3D-=
yes</span></tt> or <tt class=3D"docutils literal"><span class=3D"pre">...=
=3D-120</span></tt>.</p>
            <p>Like with <tt class=3D"docutils literal"><span class=3D"pre"=
>--input-test</span></tt>, the list includes bindings from <tt class=3D"doc=
utils literal">input.conf</tt> and
            from user scripts. Use <tt class=3D"docutils literal"><span cla=
ss=3D"pre">--no-config</span></tt> to list only built-in bindings.</p>
            </div>
            <div class=3D"section" id=3D"internal-stuff-page">
            <h3>Internal stuff page</h3>
            <p>Most entries shown on this page have rather vague meaning. L=
ikely none of this
            is useful for you. Don't attempt to use it. Forget its existenc=
e.</p>
            <p>Selecting this for the first time will start collecting some=
 internal
            performance data. That means performance will be slightly lower=
 than normal for
            the rest of the time the player is running (even if the stats p=
age is closed).
            Note that the stats page itself uses a lot of CPU and even GPU =
resources, and
            may have a heavy impact on performance.</p>
            <p>The displayed information is accumulated over the redraw del=
ay (shown as
            <tt class=3D"docutils literal"><span class=3D"pre">poll-time</s=
pan></tt> field).</p>
            <p>This adds entries for each Lua script. If there are too many=
 scripts running,
            parts of the list will simply be out of the screen, but it can =
be scrolled.</p>
            <p>If the underlying platform does not support pthread per thre=
ad times, the
            displayed times will be 0 or something random (I suspect that a=
t time of this
            writing, only Linux provides the correct via pthread APIs for p=
er thread times).</p>
            <p>Most entries are added lazily and only during data collectio=
n, which is why
            entries may pop up randomly after some time. It's also why the =
memory usage
            entries for scripts that have been inactive since the start of =
data collection
            are missing.</p>
            <p>Memory usage is approximate and does not reflect internal fr=
agmentation.</p>
            <p>JS scripts memory reporting is disabled by default because c=
ollecting the data
            at the JS side has an overhead. It can be enabled by exporting =
the env var
            <tt class=3D"docutils literal">MPV_LEAK_REPORT=3D1</tt> before =
starting mpv, and will increase JS memory usage.</p>
            <p>If entries have <tt class=3D"docutils literal">/time</tt> an=
d <tt class=3D"docutils literal">/cpu</tt> variants, the former gives the r=
eal time
            (monotonic clock), while the latter the thread CPU time (only i=
f the
            corresponding pthread API works and is supported).</p>
            </div>
            </div>
            </div>
            <div class=3D"section" id=3D"console">
            <h1>CONSOLE</h1>
            <p>The console is a REPL for mpv input commands. It is displaye=
d on the video
            window. It also shows log messages. It can be disabled entirely=
 using the
            <tt class=3D"docutils literal"><span class=3D"pre">--load-osd-c=
onsole=3Dno</span></tt> option.</p>
            <div class=3D"section" id=3D"keybindings">
            <h2>Keybindings</h2>
            <dl class=3D"docutils">
            <dt>`</dt>
            <dd>Show the console.</dd>
            <dt>ESC</dt>
            <dd>Hide the console.</dd>
            <dt>ENTER, Ctrl+J and Ctrl+M</dt>
            <dd>Run the typed command.</dd>
            <dt>Shift+ENTER</dt>
            <dd>Type a literal newline character.</dd>
            <dt>LEFT and Ctrl+B</dt>
            <dd>Move the cursor to the previous character.</dd>
            <dt>RIGHT and Ctrl+F</dt>
            <dd>Move the cursor to the next character.</dd>
            <dt>Ctrl+LEFT and Alt+B</dt>
            <dd>Move the cursor to the beginning of the current word, or if=
 between words,
            to the beginning of the previous word.</dd>
            <dt>Ctrl+RIGHT and Alt+F</dt>
            <dd>Move the cursor to the end of the current word, or if betwe=
en words, to the
            end of the next word.</dd>
            <dt>HOME and Ctrl+A</dt>
            <dd>Move the cursor to the start of the current line.</dd>
            <dt>END and Ctrl+E</dt>
            <dd>Move the cursor to the end of the current line.</dd>
            <dt>BACKSPACE and Ctrl+H</dt>
            <dd>Delete the previous character.</dd>
            <dt>Ctrl+D</dt>
            <dd>Hide the console if the current line is empty, otherwise de=
lete the next
            character.</dd>
            <dt>Ctrl+BACKSPACE and Ctrl+W</dt>
            <dd>Delete text from the cursor to the beginning of the current=
 word, or if
            between words, to the beginning of the previous word.</dd>
            <dt>Ctrl+DEL and Alt+D</dt>
            <dd>Delete text from the cursor to the end of the current word,=
 or if between
            words, to the end of the next word.</dd>
            <dt>Ctrl+U</dt>
            <dd>Delete text from the cursor to the beginning of the current=
 line.</dd>
            <dt>Ctrl+K</dt>
            <dd>Delete text from the cursor to the end of the current line.=
</dd>
            <dt>Ctrl+C</dt>
            <dd>Clear the current line.</dd>
            <dt>UP and Ctrl+P</dt>
            <dd>Move back in the command history.</dd>
            <dt>DOWN and Ctrl+N</dt>
            <dd>Move forward in the command history.</dd>
            <dt>PGUP</dt>
            <dd>Go to the first command in the history.</dd>
            <dt>PGDN</dt>
            <dd>Stop navigating the command history.</dd>
            <dt>INSERT</dt>
            <dd>Toggle insert mode.</dd>
            <dt>Ctrl+V</dt>
            <dd>Paste text (uses the clipboard on X11 and Wayland).</dd>
            <dt>Shift+INSERT</dt>
            <dd>Paste text (uses the primary selection on X11 and Wayland).=
</dd>
            <dt>TAB and Ctrl+I</dt>
            <dd>Complete the command or property name at the cursor.</dd>
            <dt>Ctrl+L</dt>
            <dd>Clear all log messages from the console.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"commands">
            <h2>Commands</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"console-script-message=
-to"><span class=3D"pre">script-message-to</span> console type &lt;text&gt;=
 [&lt;cursor_pos&gt;]<a href=3D"https://mpv.io/manual/master/#console-scrip=
t-message-to" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Show the console and pre-fill it with th=
e provided text, optionally
            specifying the initial cursor position as a positive integer st=
arting from
            1.</p>
            <div class=3D"admonition admonition-example-for-input-conf last=
">
            <p class=3D"first admonition-title">Example for input.conf</p>
            <p class=3D"last"><tt class=3D"docutils literal">% <span class=
=3D"pre">script-message-to</span> console type "seek&nbsp; <span class=3D"p=
re">absolute-percent"</span> 6</tt></p>
            </div>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"known-issues">
            <h2>Known issues</h2>
            <ul class=3D"simple">
            <li>Pasting text is slow on Windows</li>
            <li>Non-ASCII keyboard input has restrictions</li>
            <li>The cursor keys move between Unicode code-points, not graph=
eme clusters</li>
            </ul>
            </div>
            <div class=3D"section" id=3D"id4">
            <h2>Configuration</h2>
            <p>This script can be customized through a config file <tt clas=
s=3D"docutils literal"><span class=3D"pre">script-opts/console.conf</span><=
/tt>
            placed in mpv's user directory and through the <tt class=3D"doc=
utils literal"><span class=3D"pre">--script-opts</span></tt> command-line
            option. The configuration syntax is described in <a class=3D"re=
ference internal" href=3D"https://mpv.io/manual/master/#on-screen-controlle=
r">ON SCREEN CONTROLLER</a>.</p>
            <p>Key bindings can be changed in a standard way, see for examp=
le stats.lua
            documentation.</p>
            <div class=3D"section" id=3D"id5">
            <h3>Configurable Options</h3>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"console-scale">scale<a=
 href=3D"https://mpv.io/manual/master/#console-scale" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 1</p>
            <p>All drawing is scaled by this value, including the text bord=
ers and the
            cursor.</p>
            <p class=3D"last">If the VO backend in use has HiDPI scale repo=
rting implemented, the option
            value is scaled with the reported HiDPI scale.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"console-font">font<a h=
ref=3D"https://mpv.io/manual/master/#console-font" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd><p class=3D"first">Default: unset (picks a hardcoded font d=
epending on detected platform)</p>
            <p class=3D"last">Set the font used for the REPL and the consol=
e. This probably doesn't
            have to be a monospaced font.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"console-font-size">fon=
t_size<a href=3D"https://mpv.io/manual/master/#console-font-size" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 16</p>
            <p class=3D"last">Set the font size used for the REPL and the c=
onsole. This will be
            multiplied by "scale".</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"console-border-size">b=
order_size<a href=3D"https://mpv.io/manual/master/#console-border-size" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: 1</p>
            <p class=3D"last">Set the font border size used for the REPL an=
d the console.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"console-history-dedup"=
>history_dedup<a href=3D"https://mpv.io/manual/master/#console-history-dedu=
p" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Default: true</p>
            <p class=3D"last">Remove duplicate entries in history as to onl=
y keep the latest one.</p>
            </dd>
            </dl>
            </div>
            </div>
            </div>
            <div class=3D"section" id=3D"lua-scripting">
            <h1>LUA SCRIPTING</h1>
            <p>mpv can load Lua scripts. (See <a class=3D"reference interna=
l" href=3D"https://mpv.io/manual/master/#script-location">Script location</=
a>.)</p>
            <p>mpv provides the built-in module <tt class=3D"docutils liter=
al">mp</tt>, which contains functions to send
            commands to the mpv core and to retrieve information about play=
back state, user
            settings, file information, and so on.</p>
            <p>These scripts can be used to control mpv in a similar way to=
 slave mode.
            Technically, the Lua code uses the client API internally.</p>
            <div class=3D"section" id=3D"example">
            <h2>Example</h2>
            <p>A script which leaves fullscreen mode when the player is pau=
sed:</p>
            <pre class=3D"literal-block">function on_pause_change(name, val=
ue)
    if value =3D=3D true then
        mp.set_property("fullscreen", "no")
    end
end
mp.observe_property("pause", "bool", on_pause_change)
</pre>
            </div>
            <div class=3D"section" id=3D"script-location">
            <h2>Script location</h2>
            <p>Scripts can be passed to the <tt class=3D"docutils literal">=
<span class=3D"pre">--script</span></tt> option, and are automatically load=
ed
            from the <tt class=3D"docutils literal">scripts</tt> subdirecto=
ry of the mpv configuration directory (usually
            <tt class=3D"docutils literal"><span class=3D"pre">~/.config/mp=
v/scripts/</span></tt>).</p>
            <p>A script can be a single file. The file extension is used to=
 select the
            scripting backend to use for it. For Lua, it is <tt class=3D"do=
cutils literal">.lua</tt>. If the extension is
            not recognized, an error is printed. (If an error happens, the =
extension is
            either mistyped, or the backend was not compiled into your mpv =
binary.)</p>
            <p>mpv internally loads the script's name by stripping the <tt =
class=3D"docutils literal">.lua</tt> extension and
            replacing all nonalphanumeric characters with <tt class=3D"docu=
tils literal">_</tt>. E.g., <tt class=3D"docutils literal"><span class=3D"p=
re">my-tools.lua</span></tt>
            becomes <tt class=3D"docutils literal">my_tools</tt>. If there =
are several scripts with the same name, it is
            made unique by appending a number. This is the name returned by
            <tt class=3D"docutils literal">mp.get_script_name()</tt>.</p>
            <p>Entries with <tt class=3D"docutils literal">.disable</tt> ex=
tension are always ignored.</p>
            <p>If a script is a directory (either if a directory is passed =
to <tt class=3D"docutils literal"><span class=3D"pre">--script</span></tt>,
            or any sub-directories in the script directory, such as for exa=
mple
            <tt class=3D"docutils literal"><span class=3D"pre">~/.config/mp=
v/scripts/something/</span></tt>), then the directory represents a single
            script. The player will try to load a file named <tt class=3D"d=
ocutils literal">main.x</tt>, where <tt class=3D"docutils literal">x</tt> i=
s
            replaced with the file extension. For example, if <tt class=3D"=
docutils literal">main.lua</tt> exists, it is
            loaded with the Lua scripting backend.</p>
            <p>You must not put any other files or directories that start w=
ith <tt class=3D"docutils literal">main.</tt> into
            the script's top level directory. If the script directory conta=
ins for example
            both <tt class=3D"docutils literal">main.lua</tt> and <tt class=
=3D"docutils literal">main.js</tt>, only one of them will be loaded (and wh=
ich
            one depends on mpv internals that may change any time). Likewis=
e, if there is
            for example <tt class=3D"docutils literal">main.foo</tt>, your =
script will break as soon as mpv adds a backend
            that uses the <tt class=3D"docutils literal">.foo</tt> file ext=
ension.</p>
            <p>mpv also appends the top level directory of the script to th=
e start of Lua's
            package path so you can import scripts from there too. Be aware=
 that this will
            shadow Lua libraries that use the same package path. (Single fi=
le scripts do not
            include mpv specific directory the Lua package path. This was s=
ilently changed
            in mpv 0.32.0.)</p>
            <p>Using a script directory is the recommended way to package a=
 script that
            consists of multiple source files, or requires other files (you=
 can use
            <tt class=3D"docutils literal">mp.get_script_directory()</tt> t=
o get the location and e.g. load data files).</p>
            <p>Making a script a git repository, basically a repository whi=
ch contains a
            <tt class=3D"docutils literal">main.lua</tt> file in the root d=
irectory, makes scripts easily updateable
            (without the dangers of auto-updates). Another suggestion is to=
 use git
            submodules to share common files or libraries.</p>
            </div>
            <div class=3D"section" id=3D"details-on-the-script-initializati=
on-and-lifecycle">
            <h2>Details on the script initialization and lifecycle</h2>
            <p>Your script will be loaded by the player at program start fr=
om the <tt class=3D"docutils literal">scripts</tt>
            configuration subdirectory, or from a path specified with the <=
tt class=3D"docutils literal"><span class=3D"pre">--script</span></tt>
            option. Some scripts are loaded internally (like <tt class=3D"d=
ocutils literal"><span class=3D"pre">--osc</span></tt>). Each script runs i=
n
            its own thread. Your script is first run "as is", and once that=
 is done, the event loop
            is entered. This event loop will dispatch events received by mp=
v and call your
            own event handlers which you have registered with <tt class=3D"=
docutils literal">mp.register_event</tt>, or
            timers added with <tt class=3D"docutils literal">mp.add_timeout=
</tt> or similar. Note that since the
            script starts execution concurrently with player initialization=
, some properties
            may not be populated with meaningful values until the relevant =
subsystems have
            initialized.</p>
            <p>When the player quits, all scripts will be asked to terminat=
e. This happens via
            a <tt class=3D"docutils literal">shutdown</tt> event, which by =
default will make the event loop return. If your
            script got into an endless loop, mpv will probably behave fine =
during playback,
            but it won't terminate when quitting, because it's waiting on y=
our script.</p>
            <p>Internally, the C code will call the Lua function <tt class=
=3D"docutils literal">mp_event_loop</tt> after
            loading a Lua script. This function is normally defined by the =
default prelude
            loaded before your script (see <tt class=3D"docutils literal">p=
layer/lua/defaults.lua</tt> in the mpv sources).
            The event loop will wait for events and dispatch events registe=
red with
            <tt class=3D"docutils literal">mp.register_event</tt>. It will =
also handle timers added with <tt class=3D"docutils literal">mp.add_timeout=
</tt>
            and similar (by waiting with a timeout).</p>
            <p>Since mpv 0.6.0, the player will wait until the script is fu=
lly loaded before
            continuing normal operation. The player considers a script as f=
ully loaded as
            soon as it starts waiting for mpv events (or it exits). In prac=
tice this means
            the player will more or less hang until the script returns from=
 the main chunk
            (and <tt class=3D"docutils literal">mp_event_loop</tt> is calle=
d), or the script calls <tt class=3D"docutils literal">mp_event_loop</tt> o=
r
            <tt class=3D"docutils literal">mp.dispatch_events</tt> directly=
. This is done to make it possible for a script
            to fully setup event handlers etc. before playback actually sta=
rts. In older
            mpv versions, this happened asynchronously. With mpv 0.29.0, th=
is changes
            slightly, and it merely waits for scripts to be loaded in this =
manner before
            starting playback as part of the player initialization phase. S=
cripts run though
            initialization in parallel. This might change again.</p>
            </div>
            <div class=3D"section" id=3D"mp-functions">
            <h2>mp functions</h2>
            <p>The <tt class=3D"docutils literal">mp</tt> module is preload=
ed, although it can be loaded manually with
            <tt class=3D"docutils literal">require 'mp'</tt>. It provides t=
he core client API.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-comma=
nd(string)">mp.command(string)<a href=3D"https://mpv.io/manual/master/#lua-=
scripting-mp-command(string)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Run the given command. This is similar t=
o the commands used in input.conf.
            See <a class=3D"reference internal" href=3D"https://mpv.io/manu=
al/master/#list-of-input-commands">List of Input Commands</a>.</p>
            <p>By default, this will show something on the OSD (depending o=
n the command),
            as if it was used in <tt class=3D"docutils literal">input.conf<=
/tt>. See <a class=3D"reference internal" href=3D"https://mpv.io/manual/mas=
ter/#input-command-prefixes">Input Command Prefixes</a> how
            to influence OSD usage per command.</p>
            <p class=3D"last">Returns <tt class=3D"docutils literal">true</=
tt> on success, or <tt class=3D"docutils literal">nil, error</tt> on error.=
</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-)">mp.co=
mmandv(arg1, arg2, <span class=3D"pre">...)</span><a href=3D"https://mpv.io=
/manual/master/#lua-scripting-)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.command</tt>, but pass each command argument as separate
            parameter. This has the advantage that you don't have to care a=
bout
            quoting and escaping in some cases.</p>
            <p>Example:</p>
            <pre class=3D"literal-block">mp.command("loadfile " .. filename=
 .. " append")
mp.commandv("loadfile", filename, "append")
</pre>
            <p>These two commands are equivalent, except that the first ver=
sion breaks
            if the filename contains spaces or certain special characters.<=
/p>
            <p>Note that properties are <em>not</em> expanded.  You can use=
 either <tt class=3D"docutils literal">mp.command</tt>,
            the <tt class=3D"docutils literal"><span class=3D"pre">expand-p=
roperties</span></tt> prefix, or the <tt class=3D"docutils literal">mp.get_=
property</tt> family of
            functions.</p>
            <p class=3D"last">Unlike <tt class=3D"docutils literal">mp.comm=
and</tt>, this will not use OSD by default either (except
            for some OSD-specific commands).</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-comma=
nd-native(table-[,def])">mp.command_native(table [,def])<a href=3D"https://=
mpv.io/manual/master/#lua-scripting-mp-command-native(table-[,def])" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.commandv</tt>, but pass the argument list as table. This has
            the advantage that in at least some cases, arguments can be pas=
sed as
            native types. It also allows you to use named argument.</p>
            <p>If the table is an array, each array item is like an argumen=
t in
            <tt class=3D"docutils literal">mp.commandv()</tt> (but can be a=
 native type instead of a string).</p>
            <p>If the table contains string keys, it's interpreted as comma=
nd with named
            arguments. This requires at least an entry with the key <tt cla=
ss=3D"docutils literal">name</tt> to be
            present, which must be a string, and contains the command name.=
 The special
            entry <tt class=3D"docutils literal">_flags</tt> is optional, a=
nd if present, must be an array of
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#input-command-prefixes">Input Command Prefixes</a> to apply. All oth=
er entries are interpreted as
            arguments.</p>
            <p class=3D"last">Returns a result table on success (usually em=
pty), or <tt class=3D"docutils literal">def, error</tt> on
            error. <tt class=3D"docutils literal">def</tt> is the second pa=
rameter provided to the function, and is
            nil if it's missing.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-comma=
nd-native-async(table-[,fn])">mp.command_native_async(table [,fn])<a href=
=3D"https://mpv.io/manual/master/#lua-scripting-mp-command-native-async(tab=
le-[,fn])" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Like <tt class=3D"docutils literal">mp.c=
ommand_native()</tt>, but the command is ran asynchronously (as far
            as possible), and upon completion, fn is called. fn has three a=
rguments:
            <tt class=3D"docutils literal">fn(success, result, error)</tt>:=
</p>
            <blockquote>
            <blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-success"=
>success<a href=3D"https://mpv.io/manual/master/#lua-scripting-success" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Always a Boolean and is true if the command was successful,
            otherwise false.</dd>
            </dl>
            </blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-result">=
result<a href=3D"https://mpv.io/manual/master/#lua-scripting-result" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The result value (can be nil) in case of success, nil other=
wise (as
            returned by <tt class=3D"docutils literal">mp.command_native()<=
/tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-error">e=
rror<a href=3D"https://mpv.io/manual/master/#lua-scripting-error" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>The error string in case of an error, nil otherwise.</dd>
            </dl>
            </blockquote>
            <p>Returns a table with undefined contents, which can be used a=
s argument for
            <tt class=3D"docutils literal">mp.abort_async_command</tt>.</p>
            <p>If starting the command failed for some reason, <tt class=3D=
"docutils literal">nil, error</tt> is returned,
            and <tt class=3D"docutils literal">fn</tt> is called indicating=
 failure, using the same error value.</p>
            <p class=3D"last"><tt class=3D"docutils literal">fn</tt> is alw=
ays called asynchronously, even if the command failed to start.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-abort=
-async-command(t)">mp.abort_async_command(t)<a href=3D"https://mpv.io/manua=
l/master/#lua-scripting-mp-abort-async-command(t)" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Abort a <tt class=3D"docutils literal">mp.command_native_as=
ync</tt> call. The argument is the return value
            of that command (which starts asynchronous execution of the com=
mand).
            Whether this works and how long it takes depends on the command=
 and the
            situation. The abort call itself is asynchronous. Does not retu=
rn anything.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-del-p=
roperty(name-[,def])">mp.del_property(name [,def])<a href=3D"https://mpv.io=
/manual/master/#lua-scripting-mp-del-property(name-[,def])" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Delete the given property. See <tt class=
=3D"docutils literal">mp.get_property</tt> and <a class=3D"reference intern=
al" href=3D"https://mpv.io/manual/master/#properties">Properties</a> for mo=
re
            information about properties. Most properties cannot be deleted=
.</p>
            <p class=3D"last">Returns true on success, or <tt class=3D"docu=
tils literal">nil, error</tt> on error.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-p=
roperty(name-[,def])">mp.get_property(name [,def])<a href=3D"https://mpv.io=
/manual/master/#lua-scripting-mp-get-property(name-[,def])" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Return the value of the given property a=
s string. These are the same
            properties as used in input.conf. See <a class=3D"reference int=
ernal" href=3D"https://mpv.io/manual/master/#properties">Properties</a> for=
 a list of
            properties. The returned string is formatted similar to <tt cla=
ss=3D"docutils literal"><span class=3D"pre">${=3Dname}</span></tt>
            (see <a class=3D"reference internal" href=3D"https://mpv.io/man=
ual/master/#property-expansion">Property Expansion</a>).</p>
            <p class=3D"last">Returns the string on success, or <tt class=
=3D"docutils literal">def, error</tt> on error. <tt class=3D"docutils liter=
al">def</tt> is the
            second parameter provided to the function, and is nil if it's m=
issing.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-p=
roperty-osd(name-[,def])">mp.get_property_osd(name [,def])<a href=3D"https:=
//mpv.io/manual/master/#lua-scripting-mp-get-property-osd(name-[,def])" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.get_property</tt>, but return the property value formatted for
            OSD. This is the same string as printed with <tt class=3D"docut=
ils literal">${name}</tt> when used in
            input.conf.</p>
            <p class=3D"last">Returns the string on success, or <tt class=
=3D"docutils literal">def, error</tt> on error. <tt class=3D"docutils liter=
al">def</tt> is the
            second parameter provided to the function, and is an empty stri=
ng if it's
            missing. Unlike <tt class=3D"docutils literal">get_property()</=
tt>, assigning the return value to a variable
            will always result in a string.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-p=
roperty-bool(name-[,def])">mp.get_property_bool(name [,def])<a href=3D"http=
s://mpv.io/manual/master/#lua-scripting-mp-get-property-bool(name-[,def])" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.get_property</tt>, but return the property value as Boolean.</p>
            <p class=3D"last">Returns a Boolean on success, or <tt class=3D=
"docutils literal">def, error</tt> on error.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-p=
roperty-number(name-[,def])">mp.get_property_number(name [,def])<a href=3D"=
https://mpv.io/manual/master/#lua-scripting-mp-get-property-number(name-[,d=
ef])" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.get_property</tt>, but return the property value as number.</p>
            <p>Note that while Lua does not distinguish between integers an=
d floats,
            mpv internals do. This function simply request a double float f=
rom mpv,
            and mpv will usually convert integer property values to float.<=
/p>
            <p class=3D"last">Returns a number on success, or <tt class=3D"=
docutils literal">def, error</tt> on error.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-p=
roperty-native(name-[,def])">mp.get_property_native(name [,def])<a href=3D"=
https://mpv.io/manual/master/#lua-scripting-mp-get-property-native(name-[,d=
ef])" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.get_property</tt>, but return the property value using the best
            Lua type for the property. Most time, this will return a string=
, Boolean,
            or number. Some properties (for example <tt class=3D"docutils l=
iteral"><span class=3D"pre">chapter-list</span></tt>) are returned as
            tables.</p>
            <p class=3D"last">Returns a value on success, or <tt class=3D"d=
ocutils literal">def, error</tt> on error. Note that <tt class=3D"docutils =
literal">nil</tt>
            might be a possible, valid value too in some corner cases.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-set-p=
roperty(name,-value)">mp.set_property(name, value)<a href=3D"https://mpv.io=
/manual/master/#lua-scripting-mp-set-property(name,-value)" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the given property to the given stri=
ng value. See <tt class=3D"docutils literal">mp.get_property</tt>
            and <a class=3D"reference internal" href=3D"https://mpv.io/manu=
al/master/#properties">Properties</a> for more information about properties=
.</p>
            <p class=3D"last">Returns true on success, or <tt class=3D"docu=
tils literal">nil, error</tt> on error.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-set-p=
roperty-bool(name,-value)">mp.set_property_bool(name, value)<a href=3D"http=
s://mpv.io/manual/master/#lua-scripting-mp-set-property-bool(name,-value)" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Similar to <tt class=3D"docutils literal">mp.set_property</=
tt>, but set the given property to the given
            Boolean value.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-set-p=
roperty-number(name,-value)">mp.set_property_number(name, value)<a href=3D"=
https://mpv.io/manual/master/#lua-scripting-mp-set-property-number(name,-va=
lue)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.set_property</tt>, but set the given property to the given
            numeric value.</p>
            <p class=3D"last">Note that while Lua does not distinguish betw=
een integers and floats,
            mpv internals do. This function will test whether the number ca=
n be
            represented as integer, and if so, it will pass an integer valu=
e to mpv,
            otherwise a double float.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-set-p=
roperty-native(name,-value)">mp.set_property_native(name, value)<a href=3D"=
https://mpv.io/manual/master/#lua-scripting-mp-set-property-native(name,-va=
lue)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Similar to <tt class=3D"docutils literal=
">mp.set_property</tt>, but set the given property using its native
            type.</p>
            <p class=3D"last">Since there are several data types which cann=
ot represented natively in
            Lua, this might not always work as expected. For example, while=
 the Lua
            wrapper can do some guesswork to decide whether a Lua table is =
an array
            or a map, this would fail with empty tables. Also, there are no=
t many
            properties for which it makes sense to use this, instead of
            <tt class=3D"docutils literal">set_property</tt>, <tt class=3D"=
docutils literal">set_property_bool</tt>, <tt class=3D"docutils literal">se=
t_property_number</tt>.
            For these reasons, this function should probably be avoided for=
 now, except
            for properties that use tables natively.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-t=
ime()">mp.get_time()<a href=3D"https://mpv.io/manual/master/#lua-scripting-=
mp-get-time()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Return the current mpv internal time in seconds as a number=
. This is
            basically the system time, with an arbitrary offset.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-[,flags]=
])">mp.add_key_binding(key, name|fn [,fn <span class=3D"pre">[,flags]])</sp=
an><a href=3D"https://mpv.io/manual/master/#lua-scripting-[,flags]])" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Register callback to be run on a key bin=
ding. The binding will be mapped to
            the given <tt class=3D"docutils literal">key</tt>, which is a s=
tring describing the physical key. This uses
            the same key names as in input.conf, and also allows combinatio=
ns
            (e.g. <tt class=3D"docutils literal">ctrl+a</tt>). If the key i=
s empty or <tt class=3D"docutils literal">nil</tt>, no physical key is
            registered, but the user still can create own bindings (see bel=
ow).</p>
            <p>After calling this function, key presses will cause the func=
tion <tt class=3D"docutils literal">fn</tt> to
            be called (unless the user remapped the key with another bindin=
g).</p>
            <p>The <tt class=3D"docutils literal">name</tt> argument should=
 be a short symbolic string. It allows the user
            to remap the key binding via input.conf using the <tt class=3D"=
docutils literal"><span class=3D"pre">script-message</span></tt>
            command, and the name of the key binding (see below for
            an example). The name should be unique across other bindings in=
 the same
            script - if not, the previous binding with the same name will b=
e
            overwritten. You can omit the name, in which case a random name=
 is generated
            internally. (Omitting works as follows: either pass <tt class=
=3D"docutils literal">nil</tt> for <tt class=3D"docutils literal">name</tt>=
,
            or pass the <tt class=3D"docutils literal">fn</tt> argument in =
place of the name. The latter is not
            recommended and is handled for compatibility only.)</p>
            <p>The last argument is used for optional flags. This is a tabl=
e, which can
            have the following entries:</p>
            <blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-repeatab=
le">repeatable<a href=3D"https://mpv.io/manual/master/#lua-scripting-repeat=
able" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If set to <tt class=3D"docutils literal">true</tt>, enables=
 key repeat for this specific binding.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-complex"=
>complex<a href=3D"https://mpv.io/manual/master/#lua-scripting-complex" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">If set to <tt class=3D"docutils literal"=
>true</tt>, then <tt class=3D"docutils literal">fn</tt> is called on both k=
ey up and down
            events (as well as key repeat, if enabled), with the first
            argument being a table. This table has the following entries (a=
nd
            may contain undocumented ones):</p>
            <blockquote class=3D"last">
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-event">e=
vent<a href=3D"https://mpv.io/manual/master/#lua-scripting-event" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>Set to one of the strings <tt class=3D"docutils literal">do=
wn</tt>, <tt class=3D"docutils literal">repeat</tt>, <tt class=3D"docutils =
literal">up</tt> or
            <tt class=3D"docutils literal">press</tt> (the latter if key up=
/down can't be tracked).</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-is-mouse=
">is_mouse<a href=3D"https://mpv.io/manual/master/#lua-scripting-is-mouse" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Boolean Whether the event was caused by a mouse button.</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-key-name=
">key_name<a href=3D"https://mpv.io/manual/master/#lua-scripting-key-name" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>The name of they key that triggered this, or <tt class=3D"d=
ocutils literal">nil</tt> if
            invoked artificially. If the key name is unknown, it's an
            empty string.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-key-text=
">key_text<a href=3D"https://mpv.io/manual/master/#lua-scripting-key-text" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Text if triggered by a text key, otherwise <tt class=3D"doc=
utils literal">nil</tt>. See
            description of <tt class=3D"docutils literal"><span class=3D"pr=
e">script-binding</span></tt> command for details (this
            field is equivalent to the 5th argument).</dd>
            </dl>
            </blockquote>
            </dd>
            </dl>
            </blockquote>
            <p>Internally, key bindings are dispatched via the <tt class=3D=
"docutils literal"><span class=3D"pre">script-message-to</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">script-bindi=
ng</span></tt> input commands and <tt class=3D"docutils literal">mp.registe=
r_script_message</tt>.</p>
            <p>Trying to map multiple commands to a key will essentially pr=
efer a random
            binding, while the other bindings are not called. It is guarant=
eed that
            user defined bindings in the central input.conf are preferred o=
ver bindings
            added with this function (but see <tt class=3D"docutils literal=
">mp.add_forced_key_binding</tt>).</p>
            <p>Example:</p>
            <pre class=3D"literal-block">function something_handler()
    print("the key was pressed")
end
mp.add_key_binding("x", "something", something_handler)
</pre>
            <p>This will print the message <tt class=3D"docutils literal">t=
he key was pressed</tt> when <tt class=3D"docutils literal">x</tt> was pres=
sed.</p>
            <p>The user can remap these key bindings. Then the user has to =
put the
            following into their input.conf to remap the command to the <tt=
 class=3D"docutils literal">y</tt> key:</p>
            <pre class=3D"literal-block">y script-binding something
</pre>
            <p>This will print the message when the key <tt class=3D"docuti=
ls literal">y</tt> is pressed. (<tt class=3D"docutils literal">x</tt> will
            still work, unless the user remaps it.)</p>
            <p>You can also explicitly send a message to a named script onl=
y. Assume the
            above script was using the filename <tt class=3D"docutils liter=
al">fooscript.lua</tt>:</p>
            <pre class=3D"last literal-block">y script-binding fooscript/so=
mething
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-add-f=
orced-key-binding(-)"><span class=3D"pre">mp.add_forced_key_binding(...)</s=
pan><a href=3D"https://mpv.io/manual/master/#lua-scripting-mp-add-forced-ke=
y-binding(-)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>This works almost the same as <tt class=3D"docutils literal=
">mp.add_key_binding</tt>, but registers the
            key binding in a way that will overwrite the user's custom bind=
ings in their
            input.conf. (<tt class=3D"docutils literal">mp.add_key_binding<=
/tt> overwrites default key bindings only,
            but not those by the user's input.conf.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-remov=
e-key-binding(name)">mp.remove_key_binding(name)<a href=3D"https://mpv.io/m=
anual/master/#lua-scripting-mp-remove-key-binding(name)" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd>Remove a key binding added with <tt class=3D"docutils liter=
al">mp.add_key_binding</tt> or
            <tt class=3D"docutils literal">mp.add_forced_key_binding</tt>. =
Use the same name as you used when adding
            the bindings. It's not possible to remove bindings for which yo=
u omitted
            the name.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-regis=
ter-event(name,-fn)">mp.register_event(name, fn)<a href=3D"https://mpv.io/m=
anual/master/#lua-scripting-mp-register-event(name,-fn)" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd><p class=3D"first">Call a specific function when an event h=
appens. The event name is a string,
            and the function fn is a Lua function value.</p>
            <p>Some events have associated data. This is put into a Lua tab=
le and passed
            as argument to fn. The Lua table by default contains a <tt clas=
s=3D"docutils literal">name</tt> field,
            which is a string containing the event name. If the event has a=
n error
            associated, the <tt class=3D"docutils literal">error</tt> field=
 is set to a string describing the error,
            on success it's not set.</p>
            <p>If multiple functions are registered for the same event, the=
y are run in
            registration order, which the first registered function running=
 before all
            the other ones.</p>
            <p>Returns true if such an event exists, false otherwise.</p>
            <p class=3D"last">See <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#events">Events</a> and <a class=3D"reference i=
nternal" href=3D"https://mpv.io/manual/master/#list-of-events">List of even=
ts</a> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-unreg=
ister-event(fn)">mp.unregister_event(fn)<a href=3D"https://mpv.io/manual/ma=
ster/#lua-scripting-mp-unregister-event(fn)" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Undo <tt class=3D"docutils literal"><span class=3D"pre">mp.=
register_event(...,</span> fn)</tt>. This removes all event handlers that
            are equal to the <tt class=3D"docutils literal">fn</tt> paramet=
er. This uses normal Lua <tt class=3D"docutils literal">=3D=3D</tt> compari=
son,
            so be careful when dealing with closures.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-obser=
ve-property(name,-type,-fn)">mp.observe_property(name, type, fn)<a href=3D"=
https://mpv.io/manual/master/#lua-scripting-mp-observe-property(name,-type,=
-fn)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Watch a property for changes. If the pro=
perty <tt class=3D"docutils literal">name</tt> is changed, then
            the function <tt class=3D"docutils literal">fn(name)</tt> will =
be called. <tt class=3D"docutils literal">type</tt> can be <tt class=3D"doc=
utils literal">nil</tt>, or be
            set to one of <tt class=3D"docutils literal">none</tt>, <tt cla=
ss=3D"docutils literal">native</tt>, <tt class=3D"docutils literal">bool</t=
t>, <tt class=3D"docutils literal">string</tt>, or <tt class=3D"docutils li=
teral">number</tt>.
            <tt class=3D"docutils literal">none</tt> is the same as <tt cla=
ss=3D"docutils literal">nil</tt>. For all other values, the new value of
            the property will be passed as second argument to <tt class=3D"=
docutils literal">fn</tt>, using
            <tt class=3D"docutils literal">mp.get_property_&lt;type&gt;</tt=
> to retrieve it. This means if <tt class=3D"docutils literal">type</tt> is=
 for
            example <tt class=3D"docutils literal">string</tt>, <tt class=
=3D"docutils literal">fn</tt> is roughly called as in
            <tt class=3D"docutils literal">fn(name, mp.get_property_string(=
name))</tt>.</p>
            <p>If possible, change events are coalesced. If a property is c=
hanged a bunch
            of times in a row, only the last change triggers the change fun=
ction. (The
            exact behavior depends on timing and other things.)</p>
            <p>If a property is unavailable, or on error, the value argumen=
t to <tt class=3D"docutils literal">fn</tt> is
            <tt class=3D"docutils literal">nil</tt>. (The <tt class=3D"docu=
tils literal">observe_property()</tt> call always succeeds, even if a
            property does not exist.)</p>
            <p>In some cases the function is not called even if the propert=
y changes.
            This depends on the property, and it's a valid feature request =
to ask for
            better update handling of a specific property.</p>
            <p>If the <tt class=3D"docutils literal">type</tt> is <tt class=
=3D"docutils literal">none</tt> or <tt class=3D"docutils literal">nil</tt>,=
 sporadic property change events are
            possible. This means the change function <tt class=3D"docutils =
literal">fn</tt> can be called even if the
            property doesn't actually change.</p>
            <p class=3D"last">You always get an initial change notification=
. This is meant to initialize
            the user's state to the current value of the property.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-unobs=
erve-property(fn)">mp.unobserve_property(fn)<a href=3D"https://mpv.io/manua=
l/master/#lua-scripting-mp-unobserve-property(fn)" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Undo <tt class=3D"docutils literal"><span class=3D"pre">mp.=
observe_property(...,</span> fn)</tt>. This removes all property handlers
            that are equal to the <tt class=3D"docutils literal">fn</tt> pa=
rameter. This uses normal Lua <tt class=3D"docutils literal">=3D=3D</tt>
            comparison, so be careful when dealing with closures.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-add-t=
imeout(seconds,-fn)">mp.add_timeout(seconds, fn)<a href=3D"https://mpv.io/m=
anual/master/#lua-scripting-mp-add-timeout(seconds,-fn)" class=3D"anchor fa=
 fa-link"></a></tt></dt>
            <dd><p class=3D"first">Call the given function fn when the give=
n number of seconds has elapsed.
            Note that the number of seconds can be fractional. For now, the=
 timer's
            resolution may be as low as 50 ms, although this will be improv=
ed in the
            future.</p>
            <p>This is a one-shot timer: it will be removed when it's fired=
.</p>
            <p class=3D"last">Returns a timer object. See <tt class=3D"docu=
tils literal">mp.add_periodic_timer</tt> for details.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-add-p=
eriodic-timer(seconds,-fn)">mp.add_periodic_timer(seconds, fn)<a href=3D"ht=
tps://mpv.io/manual/master/#lua-scripting-mp-add-periodic-timer(seconds,-fn=
)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Call the given function periodically. Th=
is is like <tt class=3D"docutils literal">mp.add_timeout</tt>, but
            the timer is re-added after the function fn is run.</p>
            <dl class=3D"docutils">
            <dt>Returns a timer object. The timer object provides the follo=
wing methods:</dt>
            <dd><dl class=3D"first last docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-stop()">=
stop()<a href=3D"https://mpv.io/manual/master/#lua-scripting-stop()" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Disable the timer. Does nothing if the timer is already dis=
abled.
            This will remember the current elapsed time when stopping, so t=
hat
            <tt class=3D"docutils literal">resume()</tt> essentially unpaus=
es the timer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-kill()">=
kill()<a href=3D"https://mpv.io/manual/master/#lua-scripting-kill()" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Disable the timer. Resets the elapsed time. <tt class=3D"do=
cutils literal">resume()</tt> will
            restart the timer.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-resume()=
">resume()<a href=3D"https://mpv.io/manual/master/#lua-scripting-resume()" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Restart the timer. If the timer was disabled with <tt class=
=3D"docutils literal">stop()</tt>, this
            will resume at the time it was stopped. If the timer was disabl=
ed
            with <tt class=3D"docutils literal">kill()</tt>, or if it's a p=
reviously fired one-shot timer (added
            with <tt class=3D"docutils literal">add_timeout()</tt>), this s=
tarts the timer from the beginning,
            using the initially configured timeout.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-is-enabl=
ed()">is_enabled()<a href=3D"https://mpv.io/manual/master/#lua-scripting-is=
-enabled()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether the timer is currently enabled or was previously di=
sabled
            (e.g. by <tt class=3D"docutils literal">stop()</tt> or <tt clas=
s=3D"docutils literal">kill()</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-timeout"=
>timeout<a href=3D"https://mpv.io/manual/master/#lua-scripting-timeout" cla=
ss=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd><p class=3D"first">This field contains the current timeout =
period. This value is not
            updated as time progresses. It's only used to calculate when th=
e
            timer should fire next when the timer expires.</p>
            <p class=3D"last">If you write this, you can call <tt class=3D"=
docutils literal">t:kill() ; t:resume()</tt> to reset
            the current timeout to the new one. (<tt class=3D"docutils lite=
ral">t:stop()</tt> won't use the
            new timeout.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-oneshot"=
>oneshot<a href=3D"https://mpv.io/manual/master/#lua-scripting-oneshot" cla=
ss=3D"anchor fa fa-link"></a></tt> (RW)</dt>
            <dd>Whether the timer is periodic (<tt class=3D"docutils litera=
l">false</tt>) or fires just once
            (<tt class=3D"docutils literal">true</tt>). This value is used =
when the timer expires (but before
            the timer callback function fn is run).</dd>
            </dl>
            </dd>
            </dl>
            <p>Note that these are methods, and you have to call them using=
 <tt class=3D"docutils literal">:</tt> instead
            of <tt class=3D"docutils literal">.</tt> (Refer to <a class=3D"=
reference external" href=3D"https://www.lua.org/manual/5.2/manual.html#3.4.=
9">https://www.lua.org/manual/5.2/manual.html#3.4.9</a> .)</p>
            <p>Example:</p>
            <pre class=3D"last literal-block">seconds =3D 0
timer =3D mp.add_periodic_timer(1, function()
    print("called every second")
    # stop it after 10 seconds
    seconds =3D seconds + 1
    if seconds &gt;=3D 10 then
        timer:kill()
    end
end)
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-o=
pt(key)">mp.get_opt(key)<a href=3D"https://mpv.io/manual/master/#lua-script=
ing-mp-get-opt(key)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Return a setting from the <tt class=3D"docutils literal"><s=
pan class=3D"pre">--script-opts</span></tt> option. It's up to the user and
            the script how this mechanism is used. Currently, all scripts c=
an access
            this equally, so you should be careful about collisions.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-s=
cript-name()">mp.get_script_name()<a href=3D"https://mpv.io/manual/master/#=
lua-scripting-mp-get-script-name()" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Return the name of the current script. T=
he name is usually made of the
            filename of the script, with directory and file extension remov=
ed. If
            there are several scripts which would have the same name, it's =
made unique
            by appending a number. Any nonalphanumeric characters are repla=
ced with <tt class=3D"docutils literal">_</tt>.</p>
            <div class=3D"admonition admonition-example last">
            <p class=3D"first admonition-title">Example</p>
            <p class=3D"last">The script <tt class=3D"docutils literal"><sp=
an class=3D"pre">/path/to/foo-script.lua</span></tt> becomes <tt class=3D"d=
ocutils literal">foo_script</tt>.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-s=
cript-directory()">mp.get_script_directory()<a href=3D"https://mpv.io/manua=
l/master/#lua-scripting-mp-get-script-directory()" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Return the directory if this is a script packaged as direct=
ory (see
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#script-location">Script location</a> for a description). Return noth=
ing if this is a single
            file script.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-osd-m=
essage(text-[,duration])">mp.osd_message(text [,duration])<a href=3D"https:=
//mpv.io/manual/master/#lua-scripting-mp-osd-message(text-[,duration])" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Show an OSD message on the screen. <tt class=3D"docutils li=
teral">duration</tt> is in seconds, and is
            optional (uses <tt class=3D"docutils literal"><span class=3D"pr=
e">--osd-duration</span></tt> by default).</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"advanced-mp-functions">
            <h2>Advanced mp functions</h2>
            <p>These also live in the <tt class=3D"docutils literal">mp</tt=
> module, but are documented separately as they
            are useful only in special situations.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-w=
akeup-pipe()">mp.get_wakeup_pipe()<a href=3D"https://mpv.io/manual/master/#=
lua-scripting-mp-get-wakeup-pipe()" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Calls <tt class=3D"docutils literal">mpv_get_wakeup_pipe()<=
/tt> and returns the read end of the wakeup
            pipe. This is deprecated, but still works. (See <tt class=3D"do=
cutils literal">client.h</tt> for details.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-n=
ext-timeout()">mp.get_next_timeout()<a href=3D"https://mpv.io/manual/master=
/#lua-scripting-mp-get-next-timeout()" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd>Return the relative time in seconds when the next timer (<t=
t class=3D"docutils literal">mp.add_timeout</tt>
            and similar) expires. If there is no timer, return <tt class=3D=
"docutils literal">nil</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-dispa=
tch-events([allow-wait])"><span class=3D"pre">mp.dispatch_events([allow_wai=
t])</span><a href=3D"https://mpv.io/manual/master/#lua-scripting-mp-dispatc=
h-events([allow-wait])" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This can be used to run custom event loo=
ps. If you want to have direct
            control what the Lua script does (instead of being called by th=
e default
            event loop), you can set the global variable <tt class=3D"docut=
ils literal">mp_event_loop</tt> to your
            own function running the event loop. From your event loop, you =
should call
            <tt class=3D"docutils literal">mp.dispatch_events()</tt> to deq=
ueue and dispatch mpv events.</p>
            <p class=3D"last">If the <tt class=3D"docutils literal">allow_w=
ait</tt> parameter is set to <tt class=3D"docutils literal">true</tt>, the =
function will block
            until the next event is received or the next timer expires. Oth=
erwise (and
            this is the default behavior), it returns as soon as the event =
loop is
            emptied. It's strongly recommended to use <tt class=3D"docutils=
 literal">mp.get_next_timeout()</tt> and
            <tt class=3D"docutils literal">mp.get_wakeup_pipe()</tt> if you=
're interested in properly working
            notification of new events and working timers.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-regis=
ter-idle(fn)">mp.register_idle(fn)<a href=3D"https://mpv.io/manual/master/#=
lua-scripting-mp-register-idle(fn)" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Register an event loop idle handler. Idle handlers are call=
ed before the
            script goes to sleep after handling all new events. This can be=
 used for
            example to delay processing of property change events: if you'r=
e observing
            multiple properties at once, you might not want to act on each =
property
            change, but only when all change notifications have been receiv=
ed.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-unreg=
ister-idle(fn)">mp.unregister_idle(fn)<a href=3D"https://mpv.io/manual/mast=
er/#lua-scripting-mp-unregister-idle(fn)" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Undo <tt class=3D"docutils literal">mp.register_idle(fn)</t=
t>. This removes all idle handlers that
            are equal to the <tt class=3D"docutils literal">fn</tt> paramet=
er. This uses normal Lua <tt class=3D"docutils literal">=3D=3D</tt> compari=
son,
            so be careful when dealing with closures.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-enabl=
e-messages(level)">mp.enable_messages(level)<a href=3D"https://mpv.io/manua=
l/master/#lua-scripting-mp-enable-messages(level)" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>Set the minimum log level of which mpv message output to re=
ceive. These
            messages are normally printed to the terminal. By calling this =
function,
            you can set the minimum log level of messages which should be r=
eceived with
            the <tt class=3D"docutils literal"><span class=3D"pre">log-mess=
age</span></tt> event. See the description of this event for details.
            The level is a string, see <tt class=3D"docutils literal">msg.l=
og</tt> for allowed log levels.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-regis=
ter-script-message(name,-fn)">mp.register_script_message(name, fn)<a href=
=3D"https://mpv.io/manual/master/#lua-scripting-mp-register-script-message(=
name,-fn)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This is a helper to dispatch <tt class=
=3D"docutils literal"><span class=3D"pre">script-message</span></tt> or <tt=
 class=3D"docutils literal"><span class=3D"pre">script-message-to</span></t=
t>
            invocations to Lua functions. <tt class=3D"docutils literal">fn=
</tt> is called if <tt class=3D"docutils literal"><span class=3D"pre">scrip=
t-message</span></tt> or
            <tt class=3D"docutils literal"><span class=3D"pre">script-messa=
ge-to</span></tt> (with this script as destination) is run
            with <tt class=3D"docutils literal">name</tt> as first paramete=
r. The other parameters are passed to <tt class=3D"docutils literal">fn</tt=
>.
            If a message with the given name is already registered, it's ov=
erwritten.</p>
            <p class=3D"last">Used by <tt class=3D"docutils literal">mp.add=
_key_binding</tt>, so be careful about name collisions.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-unreg=
ister-script-message(name)">mp.unregister_script_message(name)<a href=3D"ht=
tps://mpv.io/manual/master/#lua-scripting-mp-unregister-script-message(name=
)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Undo a previous registration with <tt class=3D"docutils lit=
eral">mp.register_script_message</tt>. Does
            nothing if the <tt class=3D"docutils literal">name</tt> wasn't =
registered.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-creat=
e-osd-overlay(format)">mp.create_osd_overlay(format)<a href=3D"https://mpv.=
io/manual/master/#lua-scripting-mp-create-osd-overlay(format)" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Create an OSD overlay. This is a very th=
in wrapper around the <tt class=3D"docutils literal"><span class=3D"pre">os=
d-overlay</span></tt>
            command. The function returns a table, which mostly contains fi=
elds that
            will be passed to <tt class=3D"docutils literal"><span class=3D=
"pre">osd-overlay</span></tt>. The <tt class=3D"docutils literal">format</t=
t> parameter is used to
            initialize the <tt class=3D"docutils literal">format</tt> field=
. The <tt class=3D"docutils literal">data</tt> field contains the text to
            be used as overlay. For details, see the <tt class=3D"docutils =
literal"><span class=3D"pre">osd-overlay</span></tt> command.</p>
            <p>In addition, it provides the following methods:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-update()=
">update()<a href=3D"https://mpv.io/manual/master/#lua-scripting-update()" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Commit the OSD overlay to the screen, or in other words, ru=
n the
            <tt class=3D"docutils literal"><span class=3D"pre">osd-overlay<=
/span></tt> command with the current fields of the overlay table.
            Returns the result of the <tt class=3D"docutils literal"><span =
class=3D"pre">osd-overlay</span></tt> command itself.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-remove()=
">remove()<a href=3D"https://mpv.io/manual/master/#lua-scripting-remove()" =
class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Remove the overlay from the screen. A <tt class=3D"docutils=
 literal">update()</tt> call will add it
            again.</dd>
            </dl>
            <p>Example:</p>
            <pre class=3D"literal-block">ov =3D mp.create_osd_overlay("ass-=
events")
ov.data =3D "{\\an5}{\\b1}hello world!"
ov:update()
</pre>
            <p class=3D"last">The advantage of using this wrapper (as oppos=
ed to running <tt class=3D"docutils literal"><span class=3D"pre">osd-overla=
y</span></tt>
            directly) is that the <tt class=3D"docutils literal">id</tt> fi=
eld is allocated automatically.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-get-o=
sd-size()">mp.get_osd_size()<a href=3D"https://mpv.io/manual/master/#lua-sc=
ripting-mp-get-osd-size()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Returns a tuple of <tt class=3D"docutils=
 literal">osd_width, osd_height, osd_par</tt>. The first two give
            the size of the OSD in pixels (for video outputs like <tt class=
=3D"docutils literal"><span class=3D"pre">--vo=3Dxv</span></tt>, this may
            be "scaled" pixels). The third is the display pixel aspect rati=
o.</p>
            <p class=3D"last">May return invalid/nonsense values if OSD is =
not initialized yet.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"mp-msg-functions">
            <h2>mp.msg functions</h2>
            <p>This module allows outputting messages to the terminal, and =
can be loaded
            with <tt class=3D"docutils literal">require 'mp.msg'</tt>.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-)">msg.l=
og(level, <span class=3D"pre">...)</span><a href=3D"https://mpv.io/manual/m=
aster/#lua-scripting-)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The level parameter is the message prior=
ity. It's a string and one of
            <tt class=3D"docutils literal">fatal</tt>, <tt class=3D"docutil=
s literal">error</tt>, <tt class=3D"docutils literal">warn</tt>, <tt class=
=3D"docutils literal">info</tt>, <tt class=3D"docutils literal">v</tt>, <tt=
 class=3D"docutils literal">debug</tt>, <tt class=3D"docutils literal">trac=
e</tt>. The
            user's settings will determine which of these messages will be
            visible. Normally, all messages are visible, except <tt class=
=3D"docutils literal">v</tt>, <tt class=3D"docutils literal">debug</tt> and
            <tt class=3D"docutils literal">trace</tt>.</p>
            <p>The parameters after that are all converted to strings. Spac=
es are inserted
            to separate multiple parameters.</p>
            <p class=3D"last">You don't need to add newlines.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-msg-fata=
l(-)"><span class=3D"pre">msg.fatal(...)</span><a href=3D"https://mpv.io/ma=
nual/master/#lua-scripting-msg-fatal(-)" class=3D"anchor fa fa-link"></a></=
tt>, <tt class=3D"docutils literal" id=3D"lua-scripting-msg-error(-)"><span=
 class=3D"pre">msg.error(...)</span><a href=3D"https://mpv.io/manual/master=
/#lua-scripting-msg-error(-)" class=3D"anchor fa fa-link"></a></tt>, <tt cl=
ass=3D"docutils literal" id=3D"lua-scripting-msg-warn(-)"><span class=3D"pr=
e">msg.warn(...)</span><a href=3D"https://mpv.io/manual/master/#lua-scripti=
ng-msg-warn(-)" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutil=
s literal" id=3D"lua-scripting-msg-info(-)"><span class=3D"pre">msg.info(..=
.)</span><a href=3D"https://mpv.io/manual/master/#lua-scripting-msg-info(-)=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"lua-scripting-msg-verbose(-)"><span class=3D"pre">msg.verbose(...)</spa=
n><a href=3D"https://mpv.io/manual/master/#lua-scripting-msg-verbose(-)" cl=
ass=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"l=
ua-scripting-msg-debug(-)"><span class=3D"pre">msg.debug(...)</span><a href=
=3D"https://mpv.io/manual/master/#lua-scripting-msg-debug(-)" class=3D"anch=
or fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=3D"lua-scriptin=
g-msg-trace(-)"><span class=3D"pre">msg.trace(...)</span><a href=3D"https:/=
/mpv.io/manual/master/#lua-scripting-msg-trace(-)" class=3D"anchor fa fa-li=
nk"></a></tt></dt>
            <dd>All of these are shortcuts and equivalent to the correspond=
ing
            <tt class=3D"docutils literal">msg.log(level, <span class=3D"pr=
e">...)</span></tt> call.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"mp-options-functions">
            <h2>mp.options functions</h2>
            <p>mpv comes with a built-in module to manage options from conf=
ig-files and the
            command-line. All you have to do is to supply a table with defa=
ult options to
            the read_options function. The function will overwrite the defa=
ult values
            with values found in the config-file and the command-line (in t=
hat order).</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-on-updat=
e]])">options.read_options(table [, identifier [, <span class=3D"pre">on_up=
date]])</span><a href=3D"https://mpv.io/manual/master/#lua-scripting-on-upd=
ate]])" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">A <tt class=3D"docutils literal">table</=
tt> with key-value pairs. The type of the default values is
            important for converting the values read from the config file o=
r
            command-line back. Do not use <tt class=3D"docutils literal">ni=
l</tt> as a default value!</p>
            <p>The <tt class=3D"docutils literal">identifier</tt> is used t=
o identify the config-file and the command-line
            options. These needs to unique to avoid collisions with other s=
cripts.
            Defaults to <tt class=3D"docutils literal">mp.get_script_name()=
</tt> if the parameter is <tt class=3D"docutils literal">nil</tt> or missin=
g.</p>
            <p class=3D"last">The <tt class=3D"docutils literal">on_update<=
/tt> parameter enables run-time updates of all matching option
            values via the <tt class=3D"docutils literal"><span class=3D"pr=
e">script-opts</span></tt> option/property. If any of the matching
            options changes, the values in the <tt class=3D"docutils litera=
l">table</tt> (which was originally passed to
            the function) are changed, and <tt class=3D"docutils literal">o=
n_update(list)</tt> is called. <tt class=3D"docutils literal">list</tt> is
            a table where each updated option has a <tt class=3D"docutils l=
iteral">list[option_name] =3D true</tt> entry.
            There is no initial <tt class=3D"docutils literal">on_update()<=
/tt> call. This never re-reads the config file.
            <tt class=3D"docutils literal"><span class=3D"pre">script-opts<=
/span></tt> is always applied on the original config file, ignoring
            previous <tt class=3D"docutils literal"><span class=3D"pre">scr=
ipt-opts</span></tt> values (for example, if an option is removed from
            <tt class=3D"docutils literal"><span class=3D"pre">script-opts<=
/span></tt> at runtime, the option will have the value in the config
            file). <tt class=3D"docutils literal">table</tt> entries are on=
ly written for option values whose values
            effectively change (this is important if the script changes <tt=
 class=3D"docutils literal">table</tt>
            entries independently).</p>
            </dd>
            </dl>
            <p>Example implementation:</p>
            <pre class=3D"literal-block">require 'mp.options'
local options =3D {
    optionA =3D "defaultvalueA",
    optionB =3D -0.5,
    optionC =3D true,
}
read_options(options, "myscript")
print(options.optionA)
</pre>
            <p>The config file will be stored in <tt class=3D"docutils lite=
ral"><span class=3D"pre">script-opts/identifier.conf</span></tt> in mpv's u=
ser
            folder. Comment lines can be started with # and stray spaces ar=
e not removed.
            Boolean values will be represented with yes/no.</p>
            <p>Example config:</p>
            <pre class=3D"literal-block"># comment
optionA=3DHello World
optionB=3D9999
optionC=3Dno
</pre>
            <p>Command-line options are read from the <tt class=3D"docutils=
 literal"><span class=3D"pre">--script-opts</span></tt> parameter. To avoid
            collisions, all keys have to be prefixed with <tt class=3D"docu=
tils literal">identifier-</tt>.</p>
            <p>Example command-line:</p>
            <pre class=3D"literal-block">--script-opts=3Dmyscript-optionA=
=3DTEST,myscript-optionB=3D0,myscript-optionC=3Dyes
</pre>
            </div>
            <div class=3D"section" id=3D"mp-utils-functions">
            <h2>mp.utils functions</h2>
            <p>This built-in module provides generic helper functions for L=
ua, and have
            strictly speaking nothing to do with mpv or video/audio playbac=
k. They are
            provided for convenience. Most compensate for Lua's scarce stan=
dard library.</p>
            <p>Be warned that any of these functions might disappear any ti=
me. They are not
            strictly part of the guaranteed API.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-ge=
tcwd()">utils.getcwd()<a href=3D"https://mpv.io/manual/master/#lua-scriptin=
g-utils-getcwd()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Returns the directory that mpv was launched from. On error,=
 <tt class=3D"docutils literal">nil, error</tt>
            is returned.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-re=
addir(path-[,-filter])">utils.readdir(path [, filter])<a href=3D"https://mp=
v.io/manual/master/#lua-scripting-utils-readdir(path-[,-filter])" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enumerate all entries at the given path =
on the filesystem, and return them
            as array. Each entry is a directory entry (without the path).
            The list is unsorted (in whatever order the operating system re=
turns it).</p>
            <p>If the <tt class=3D"docutils literal">filter</tt> argument i=
s given, it must be one of the following
            strings:</p>
            <blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-files">f=
iles<a href=3D"https://mpv.io/manual/master/#lua-scripting-files" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>List regular files only. This excludes directories, special=
 files
            (like UNIX device files or FIFOs), and dead symlinks. It includ=
es
            UNIX symlinks to regular files.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-dirs">di=
rs<a href=3D"https://mpv.io/manual/master/#lua-scripting-dirs" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>List directories only, or symlinks to directories. <tt clas=
s=3D"docutils literal">.</tt> and <tt class=3D"docutils literal">..</tt>
            are not included.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-normal">=
normal<a href=3D"https://mpv.io/manual/master/#lua-scripting-normal" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Include the results of both <tt class=3D"docutils literal">=
files</tt> and <tt class=3D"docutils literal">dirs</tt>. (This is the
            default.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-all">all=
<a href=3D"https://mpv.io/manual/master/#lua-scripting-all" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd>List all entries, even device files, dead symlinks, FIFOs, =
and the
            <tt class=3D"docutils literal">.</tt> and <tt class=3D"docutils=
 literal">..</tt> entries.</dd>
            </dl>
            </blockquote>
            <p class=3D"last">On error, <tt class=3D"docutils literal">nil,=
 error</tt> is returned.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-fi=
le-info(path)">utils.file_info(path)<a href=3D"https://mpv.io/manual/master=
/#lua-scripting-utils-file-info(path)" class=3D"anchor fa fa-link"></a></tt=
></dt>
            <dd><p class=3D"first">Stats the given path for information and=
 returns a table with the
            following entries:</p>
            <blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mode">mo=
de<a href=3D"https://mpv.io/manual/master/#lua-scripting-mode" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>protection bits (on Windows, always 755 (octal) for directo=
ries
            and 644 (octal) for files)</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-size">si=
ze<a href=3D"https://mpv.io/manual/master/#lua-scripting-size" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>size in bytes</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-atime">a=
time<a href=3D"https://mpv.io/manual/master/#lua-scripting-atime" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>time of last access</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mtime">m=
time<a href=3D"https://mpv.io/manual/master/#lua-scripting-mtime" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>time of last modification</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-ctime">c=
time<a href=3D"https://mpv.io/manual/master/#lua-scripting-ctime" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>time of last metadata change</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-is-file"=
>is_file<a href=3D"https://mpv.io/manual/master/#lua-scripting-is-file" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether <tt class=3D"docutils literal">path</tt> is a regul=
ar file (boolean)</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-is-dir">=
is_dir<a href=3D"https://mpv.io/manual/master/#lua-scripting-is-dir" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Whether <tt class=3D"docutils literal">path</tt> is a direc=
tory (boolean)</dd>
            </dl>
            </blockquote>
            <p><tt class=3D"docutils literal">mode</tt> and <tt class=3D"do=
cutils literal">size</tt> are integers.
            Timestamps (<tt class=3D"docutils literal">atime</tt>, <tt clas=
s=3D"docutils literal">mtime</tt> and <tt class=3D"docutils literal">ctime<=
/tt>) are integer seconds since
            the Unix epoch (Unix time).
            The booleans <tt class=3D"docutils literal">is_file</tt> and <t=
t class=3D"docutils literal">is_dir</tt> are provided as a convenience;
            they can be and are derived from <tt class=3D"docutils literal"=
>mode</tt>.</p>
            <p class=3D"last">On error (e.g. path does not exist), <tt clas=
s=3D"docutils literal">nil, error</tt> is returned.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-sp=
lit-path(path)">utils.split_path(path)<a href=3D"https://mpv.io/manual/mast=
er/#lua-scripting-utils-split-path(path)" class=3D"anchor fa fa-link"></a><=
/tt></dt>
            <dd>Split a path into directory component and filename componen=
t, and return
            them. The first return value is always the directory. The secon=
d return
            value is the trailing part of the path, the directory entry.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-jo=
in-path(p1,-p2)">utils.join_path(p1, p2)<a href=3D"https://mpv.io/manual/ma=
ster/#lua-scripting-utils-join-path(p1,-p2)" class=3D"anchor fa fa-link"></=
a></tt></dt>
            <dd>Return the concatenation of the 2 paths. Tries to be clever=
. For example,
            if <tt class=3D"docutils literal">p2</tt> is an absolute path, =
<tt class=3D"docutils literal">p2</tt> is returned without change.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-su=
bprocess(t)">utils.subprocess(t)<a href=3D"https://mpv.io/manual/master/#lu=
a-scripting-utils-subprocess(t)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Runs an external process and waits until=
 it exits. Returns process status
            and the captured output. This is a legacy wrapper around callin=
g the
            <tt class=3D"docutils literal">subprocess</tt> command with <tt=
 class=3D"docutils literal">mp.command_native</tt>. It does the following
            things:</p>
            <ul class=3D"simple">
            <li>copy the table <tt class=3D"docutils literal">t</tt></li>
            <li>rename <tt class=3D"docutils literal">cancellable</tt> fiel=
d to <tt class=3D"docutils literal">playback_only</tt></li>
            <li>rename <tt class=3D"docutils literal">max_size</tt> to <tt =
class=3D"docutils literal">capture_size</tt></li>
            <li>set <tt class=3D"docutils literal">capture_stdout</tt> fiel=
d to <tt class=3D"docutils literal">true</tt> if unset</li>
            <li>set <tt class=3D"docutils literal">name</tt> field to <tt c=
lass=3D"docutils literal">subprocess</tt></li>
            <li>call <tt class=3D"docutils literal">mp.command_native(copie=
d_t)</tt></li>
            <li>if the command failed, create a dummy result table</li>
            <li>copy <tt class=3D"docutils literal">error_string</tt> to <t=
t class=3D"docutils literal">error</tt> field if the string is non-empty</l=
i>
            <li>return the result table</li>
            </ul>
            <p>It is recommended to use <tt class=3D"docutils literal">mp.c=
ommand_native</tt> or <tt class=3D"docutils literal">mp.command_native_asyn=
c</tt>
            directly, instead of calling this legacy wrapper. It is for com=
patibility
            only.</p>
            <p class=3D"last">See the <tt class=3D"docutils literal">subpro=
cess</tt> documentation for semantics and further parameters.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-su=
bprocess-detached(t)">utils.subprocess_detached(t)<a href=3D"https://mpv.io=
/manual/master/#lua-scripting-utils-subprocess-detached(t)" class=3D"anchor=
 fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Runs an external process and detaches it=
 from mpv's control.</p>
            <p>The parameter <tt class=3D"docutils literal">t</tt> is a tab=
le. The function reads the following entries:</p>
            <blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-args">ar=
gs<a href=3D"https://mpv.io/manual/master/#lua-scripting-args" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>Array of strings of the same semantics as the <tt class=3D"=
docutils literal">args</tt> used in the
            <tt class=3D"docutils literal">subprocess</tt> function.</dd>
            </dl>
            </blockquote>
            <p>The function returns <tt class=3D"docutils literal">nil</tt>=
.</p>
            <p class=3D"last">This is a legacy wrapper around calling the <=
tt class=3D"docutils literal">run</tt> command with
            <tt class=3D"docutils literal">mp.commandv</tt> and other funct=
ions.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-ge=
tpid()">utils.getpid()<a href=3D"https://mpv.io/manual/master/#lua-scriptin=
g-utils-getpid()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Returns the process ID of the running mpv process. This can=
 be used to identify
            the calling mpv when launching (detached) subprocesses.</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-ge=
t-env-list()">utils.get_env_list()<a href=3D"https://mpv.io/manual/master/#=
lua-scripting-utils-get-env-list()" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd>Returns the C environment as a list of strings. (Do not con=
fuse this with
            the Lua "environment", which is an unrelated concept.)</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-pa=
rse-json(str-[,-trail])">utils.parse_json(str [, trail])<a href=3D"https://=
mpv.io/manual/master/#lua-scripting-utils-parse-json(str-[,-trail])" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Parses the given string argument as JSON=
, and returns it as a Lua table. On
            error, returns <tt class=3D"docutils literal">nil, error</tt>. =
(Currently, <tt class=3D"docutils literal">error</tt> is just a string
            reading <tt class=3D"docutils literal">error</tt>, because ther=
e is no fine-grained error reporting of any
            kind.)</p>
            <p>The returned value uses similar conventions as <tt class=3D"=
docutils literal">mp.get_property_native()</tt>
            to distinguish empty objects and arrays.</p>
            <p class=3D"last">If the <tt class=3D"docutils literal">trail</=
tt> parameter is <tt class=3D"docutils literal">true</tt> (or any value equ=
al to <tt class=3D"docutils literal">true</tt>),
            then trailing non-whitespace text is tolerated by the function,=
 and the
            trailing text is returned as 3rd return value. (The 3rd return =
value is
            always there, but with <tt class=3D"docutils literal">trail</tt=
> set, no error is raised.)</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-fo=
rmat-json(v)">utils.format_json(v)<a href=3D"https://mpv.io/manual/master/#=
lua-scripting-utils-format-json(v)" class=3D"anchor fa fa-link"></a></tt></=
dt>
            <dd><p class=3D"first">Format the given Lua table (or value) as=
 a JSON string and return it. On
            error, returns <tt class=3D"docutils literal">nil, error</tt>. =
(Errors usually only happen on value types
            incompatible with JSON.)</p>
            <p class=3D"last">The argument value uses similar conventions a=
s <tt class=3D"docutils literal">mp.set_property_native()</tt>
            to distinguish empty objects and arrays.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-utils-to=
-string(v)">utils.to_string(v)<a href=3D"https://mpv.io/manual/master/#lua-=
scripting-utils-to-string(v)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Turn the given value into a string. Formats tables and thei=
r contents. This
            doesn't do anything special; it is only needed because Lua is t=
errible.</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"events">
            <h2>Events</h2>
            <p>Events are notifications from player core to scripts. You ca=
n register an
            event handler with <tt class=3D"docutils literal">mp.register_e=
vent</tt>.</p>
            <p>Note that all scripts (and other parts of the player) receiv=
e events equally,
            and there's no such thing as blocking other scripts from receiv=
ing events.</p>
            <p>Example:</p>
            <pre class=3D"literal-block">function my_fn(event)
    print("start of playback!")
end

mp.register_event("file-loaded", my_fn)
</pre>
            <p>For the existing event types, see <a class=3D"reference inte=
rnal" href=3D"https://mpv.io/manual/master/#list-of-events">List of events<=
/a>.</p>
            </div>
            <div class=3D"section" id=3D"extras">
            <h2>Extras</h2>
            <p>This documents experimental features, or features that are "=
too special" to
            guarantee a stable interface.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-mp-add-h=
ook(type,-priority,-fn)">mp.add_hook(type, priority, fn)<a href=3D"https://=
mpv.io/manual/master/#lua-scripting-mp-add-hook(type,-priority,-fn)" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Add a hook callback for <tt class=3D"doc=
utils literal">type</tt> (a string identifying a certain kind of
            hook). These hooks allow the player to call script functions an=
d wait for
            their result (normally, the Lua scripting interface is asynchro=
nous from
            the point of view of the player core). <tt class=3D"docutils li=
teral">priority</tt> is an arbitrary integer
            that allows ordering among hooks of the same kind. Using the va=
lue 50 is
            recommended as neutral default value.</p>
            <p><tt class=3D"docutils literal">fn(hook)</tt> is the function=
 that will be called during execution of the
            hook. The parameter passed to it (<tt class=3D"docutils literal=
">hook</tt>) is a Lua object that can control
            further aspects about the currently invoked hook. It provides t=
he following
            methods:</p>
            <blockquote>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-defer()"=
>defer()<a href=3D"https://mpv.io/manual/master/#lua-scripting-defer()" cla=
ss=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Returning from the hook function should not automatically c=
ontinue
            the hook. Instead, the API user wants to call <tt class=3D"docu=
tils literal">hook:cont()</tt> on its
            own at a later point in time (before or after the function has
            returned).</dd>
            <dt><tt class=3D"docutils literal" id=3D"lua-scripting-cont()">=
cont()<a href=3D"https://mpv.io/manual/master/#lua-scripting-cont()" class=
=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Continue the hook. Doesn't need to be called unless <tt cla=
ss=3D"docutils literal">defer()</tt> was
            called.</dd>
            </dl>
            </blockquote>
            <p class=3D"last">See <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#hooks">Hooks</a> for currently existing hooks =
and what they do - only the hook
            list is interesting; handling hook execution is done by the Lua=
 script
            function automatically.</p>
            </dd>
            </dl>
            </div>
            </div>
            <div class=3D"section" id=3D"javascript">
            <h1>JAVASCRIPT</h1>
            <p>JavaScript support in mpv is near identical to its Lua suppo=
rt. Use this section
            as reference on differences and availability of APIs, but other=
wise you should
            refer to the Lua documentation for API details and general scri=
pting in mpv.</p>
            <div class=3D"section" id=3D"id6">
            <h2>Example</h2>
            <p>JavaScript code which leaves fullscreen mode when the player=
 is paused:</p>
            <pre class=3D"literal-block">function on_pause_change(name, val=
ue) {
    if (value =3D=3D true)
        mp.set_property("fullscreen", "no");
}
mp.observe_property("pause", "bool", on_pause_change);
</pre>
            </div>
            <div class=3D"section" id=3D"similarities-with-lua">
            <h2>Similarities with Lua</h2>
            <p>mpv tries to load a script file as JavaScript if it has a <t=
t class=3D"docutils literal">.js</tt> extension, but
            otherwise, the documented Lua options, script directories, load=
ing, etc apply to
            JavaScript files too.</p>
            <p>Script initialization and lifecycle is the same as with Lua,=
 and most of the Lua
            functions at the modules <tt class=3D"docutils literal">mp</tt>=
, <tt class=3D"docutils literal">mp.utils</tt>, <tt class=3D"docutils liter=
al">mp.msg</tt> and <tt class=3D"docutils literal">mp.options</tt> are
            available to JavaScript with identical APIs - including running=
 commands,
            getting/setting properties, registering events/key-bindings/hoo=
ks, etc.</p>
            </div>
            <div class=3D"section" id=3D"differences-from-lua">
            <h2>Differences from Lua</h2>
            <p>No need to load modules. <tt class=3D"docutils literal">mp</=
tt>, <tt class=3D"docutils literal">mp.utils</tt>,  <tt class=3D"docutils l=
iteral">mp.msg</tt> and <tt class=3D"docutils literal">mp.options</tt>
            are preloaded, and you can use e.g. <tt class=3D"docutils liter=
al">var cwd =3D <span class=3D"pre">mp.utils.getcwd();</span></tt> without
            prior setup.</p>
            <p>Errors are slightly different. Where the Lua APIs return <tt=
 class=3D"docutils literal">nil</tt> for error,
            the JavaScript ones return <tt class=3D"docutils literal">undef=
ined</tt>. Where Lua returns <tt class=3D"docutils literal">something, erro=
r</tt>
            JavaScript returns only <tt class=3D"docutils literal">somethin=
g</tt> - and makes <tt class=3D"docutils literal">error</tt> available via
            <tt class=3D"docutils literal">mp.last_error()</tt>. Note that =
only some of the functions have this additional
            <tt class=3D"docutils literal">error</tt> value - typically the=
 same ones which have it in Lua.</p>
            <p>Standard APIs are preferred. For instance <tt class=3D"docut=
ils literal">setTimeout</tt> and <tt class=3D"docutils literal">JSON.string=
ify</tt>
            are available, but <tt class=3D"docutils literal">mp.add_timeou=
t</tt> and <tt class=3D"docutils literal">mp.utils.format_json</tt> are not=
.</p>
            <p>No standard library. This means that interaction with anythi=
ng outside of mpv is
            limited to the available APIs, typically via <tt class=3D"docut=
ils literal">mp.utils</tt>. However, some file
            functions were added, and CommonJS <tt class=3D"docutils litera=
l">require</tt> is available too - where the
            loaded modules have the same privileges as normal scripts.</p>
            </div>
            <div class=3D"section" id=3D"language-features-ecmascript-5">
            <h2>Language features - ECMAScript 5</h2>
            <p>The scripting backend which mpv currently uses is MuJS - a c=
ompatible minimal
            ES5 interpreter. As such, <tt class=3D"docutils literal">String=
.substring</tt> is implemented for instance,
            while the common but non-standard <tt class=3D"docutils literal=
">String.substr</tt> is not. Please consult the
            MuJS pages on language features and platform support - <a class=
=3D"reference external" href=3D"https://mujs.com/">https://mujs.com</a> .</=
p>
            </div>
            <div class=3D"section" id=3D"unsupported-lua-apis-and-their-js-=
alternatives">
            <h2>Unsupported Lua APIs and their JS alternatives</h2>
            <p><tt class=3D"docutils literal">mp.add_timeout(seconds, fn)</=
tt>  JS: <tt class=3D"docutils literal">id =3D setTimeout(fn, ms)</tt></p>
            <p><tt class=3D"docutils literal">mp.add_periodic_timer(seconds=
, fn)</tt>  JS: <tt class=3D"docutils literal">id =3D setInterval(fn, ms)</=
tt></p>
            <p><tt class=3D"docutils literal">utils.parse_json(str [, trail=
])</tt>  JS: <tt class=3D"docutils literal">JSON.parse(str)</tt></p>
            <p><tt class=3D"docutils literal">utils.format_json(v)</tt>  JS=
: <tt class=3D"docutils literal">JSON.stringify(v)</tt></p>
            <p><tt class=3D"docutils literal">utils.to_string(v)</tt>  see =
<tt class=3D"docutils literal">dump</tt> below.</p>
            <p><tt class=3D"docutils literal">mp.get_next_timeout()</tt> se=
e event loop below.</p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.dispat=
ch_events([allow_wait])</span></tt> see event loop below.</p>
            </div>
            <div class=3D"section" id=3D"scripting-apis-identical-to-lua">
            <h2>Scripting APIs - identical to Lua</h2>
            <p>(LE) - Last-Error, indicates that <tt class=3D"docutils lite=
ral">mp.last_error()</tt> can be used after the
            call to test for success (empty string) or failure (non empty r=
eason string).
            Where the Lua APIs use <tt class=3D"docutils literal">nil</tt> =
to indicate error, JS APIs use <tt class=3D"docutils literal">undefined</tt=
>.</p>
            <p><tt class=3D"docutils literal">mp.command(string)</tt> (LE)<=
/p>
            <p><tt class=3D"docutils literal">mp.commandv(arg1, arg2, <span=
 class=3D"pre">...)</span></tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.command_native(table [,def=
])</tt> (LE)</p>
            <p><tt class=3D"docutils literal">id =3D mp.command_native_asyn=
c(table [,fn])</tt> (LE) Notes: <tt class=3D"docutils literal">id</tt> is t=
rue-thy on
            success, <tt class=3D"docutils literal">error</tt> is empty str=
ing on success.</p>
            <p><tt class=3D"docutils literal">mp.abort_async_command(id)</t=
t></p>
            <p><tt class=3D"docutils literal">mp.del_property(name)</tt> (L=
E)</p>
            <p><tt class=3D"docutils literal">mp.get_property(name [,def])<=
/tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.get_property_osd(name [,de=
f])</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.get_property_bool(name [,d=
ef])</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.get_property_number(name [=
,def])</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.get_property_native(name [=
,def])</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.set_property(name, value)<=
/tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.set_property_bool(name, va=
lue)</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.set_property_number(name, =
value)</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.set_property_native(name, =
value)</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.get_time()</tt></p>
            <p><tt class=3D"docutils literal">mp.add_key_binding(key, name|=
fn [,fn <span class=3D"pre">[,flags]])</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.add_fo=
rced_key_binding(...)</span></tt></p>
            <p><tt class=3D"docutils literal">mp.remove_key_binding(name)</=
tt></p>
            <p><tt class=3D"docutils literal">mp.register_event(name, fn)</=
tt></p>
            <p><tt class=3D"docutils literal">mp.unregister_event(fn)</tt><=
/p>
            <p><tt class=3D"docutils literal">mp.observe_property(name, typ=
e, fn)</tt></p>
            <p><tt class=3D"docutils literal">mp.unobserve_property(fn)</tt=
></p>
            <p><tt class=3D"docutils literal">mp.get_opt(key)</tt></p>
            <p><tt class=3D"docutils literal">mp.get_script_name()</tt></p>
            <p><tt class=3D"docutils literal">mp.get_script_directory()</tt=
></p>
            <p><tt class=3D"docutils literal">mp.osd_message(text [,duratio=
n])</tt></p>
            <p><tt class=3D"docutils literal">mp.get_wakeup_pipe()</tt></p>
            <p><tt class=3D"docutils literal">mp.register_idle(fn)</tt></p>
            <p><tt class=3D"docutils literal">mp.unregister_idle(fn)</tt></=
p>
            <p><tt class=3D"docutils literal">mp.enable_messages(level)</tt=
></p>
            <p><tt class=3D"docutils literal">mp.register_script_message(na=
me, fn)</tt></p>
            <p><tt class=3D"docutils literal">mp.unregister_script_message(=
name)</tt></p>
            <p><tt class=3D"docutils literal">mp.create_osd_overlay(format)=
</tt></p>
            <p><tt class=3D"docutils literal">mp.get_osd_size()</tt>  (retu=
rned object has properties: width, height, aspect)</p>
            <p><tt class=3D"docutils literal">mp.msg.log(level, <span class=
=3D"pre">...)</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.msg.fa=
tal(...)</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.msg.er=
ror(...)</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.msg.wa=
rn(...)</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.msg.in=
fo(...)</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.msg.ve=
rbose(...)</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.msg.de=
bug(...)</span></tt></p>
            <p><tt class=3D"docutils literal"><span class=3D"pre">mp.msg.tr=
ace(...)</span></tt></p>
            <p><tt class=3D"docutils literal">mp.utils.getcwd()</tt> (LE)</=
p>
            <p><tt class=3D"docutils literal">mp.utils.readdir(path [, filt=
er])</tt> (LE)</p>
            <p><tt class=3D"docutils literal">mp.utils.file_info(path)</tt>=
 (LE) Note: like lua - this does NOT expand
            meta-paths like <tt class=3D"docutils literal"><span class=3D"p=
re">~~/foo</span></tt> (other JS file functions do expand meta paths).</p>
            <p><tt class=3D"docutils literal">mp.utils.split_path(path)</tt=
></p>
            <p><tt class=3D"docutils literal">mp.utils.join_path(p1, p2)</t=
t></p>
            <p><tt class=3D"docutils literal">mp.utils.subprocess(t)</tt></=
p>
            <p><tt class=3D"docutils literal">mp.utils.subprocess_detached(=
t)</tt></p>
            <p><tt class=3D"docutils literal">mp.utils.get_env_list()</tt><=
/p>
            <p><tt class=3D"docutils literal">mp.utils.getpid()</tt> (LE)</=
p>
            <p><tt class=3D"docutils literal">mp.add_hook(type, priority, f=
n(hook))</tt></p>
            <p><tt class=3D"docutils literal">mp.options.read_options(obj [=
, identifier [, <span class=3D"pre">on_update]])</span></tt> (types:
            string/boolean/number)</p>
            </div>
            <div class=3D"section" id=3D"additional-utilities">
            <h2>Additional utilities</h2>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-last-err=
or()">mp.last_error()<a href=3D"https://mpv.io/manual/master/#javascript-mp=
-last-error()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>If used after an API call which updates last error, returns=
 an empty string
            if the API call succeeded, or a non-empty error reason string o=
therwise.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-error-stack=
">Error.stack<a href=3D"https://mpv.io/manual/master/#javascript-error-stac=
k" class=3D"anchor fa fa-link"></a></tt> (string)</dt>
            <dd>When using <tt class=3D"docutils literal">try { ... } catch=
(e) { ... }</tt>, then <tt class=3D"docutils literal">e.stack</tt> is the s=
tack
            trace of the error - if it was created using the <tt class=3D"d=
ocutils literal"><span class=3D"pre">Error(...)</span></tt> constructor.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"javascript-print">prin=
t<a href=3D"https://mpv.io/manual/master/#javascript-print" class=3D"anchor=
 fa fa-link"></a></tt> (global)</dt>
            <dd>A convenient alias to <tt class=3D"docutils literal">mp.msg=
.info</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-dump">dump<=
a href=3D"https://mpv.io/manual/master/#javascript-dump" class=3D"anchor fa=
 fa-link"></a></tt> (global)</dt>
            <dd>Like <tt class=3D"docutils literal">print</tt> but also exp=
ands objects and arrays recursively.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-utils-ge=
tenv(name)">mp.utils.getenv(name)<a href=3D"https://mpv.io/manual/master/#j=
avascript-mp-utils-getenv(name)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Returns the value of the host environment variable <tt clas=
s=3D"docutils literal">name</tt>, or
            <tt class=3D"docutils literal">undefined</tt> if the variable i=
s not defined.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-utils-ge=
t-user-path(path)">mp.utils.get_user_path(path)<a href=3D"https://mpv.io/ma=
nual/master/#javascript-mp-utils-get-user-path(path)" class=3D"anchor fa fa=
-link"></a></tt></dt>
            <dd>Trivial wrapper of the <tt class=3D"docutils literal"><span=
 class=3D"pre">expand-path</span></tt> mpv command, returns a string.
            <tt class=3D"docutils literal">read_file</tt>, <tt class=3D"doc=
utils literal">write_file</tt>, <tt class=3D"docutils literal">append_file<=
/tt> and <tt class=3D"docutils literal">require</tt> already
            expand the path internally and accept mpv meta-paths like <tt c=
lass=3D"docutils literal">~~desktop/foo</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-utils-re=
ad-file(fname-[,max])">mp.utils.read_file(fname [,max])<a href=3D"https://m=
pv.io/manual/master/#javascript-mp-utils-read-file(fname-[,max])" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>Returns the content of file <tt class=3D"docutils literal">=
fname</tt> as string. If <tt class=3D"docutils literal">max</tt> is provide=
d and
            not negative, limit the read to <tt class=3D"docutils literal">=
max</tt> bytes.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-utils-wr=
ite-file(fname,-str)">mp.utils.write_file(fname, str)<a href=3D"https://mpv=
.io/manual/master/#javascript-mp-utils-write-file(fname,-str)" class=3D"anc=
hor fa fa-link"></a></tt></dt>
            <dd>(Over)write file <tt class=3D"docutils literal">fname</tt> =
with text content <tt class=3D"docutils literal">str</tt>. <tt class=3D"doc=
utils literal">fname</tt> must be
            prefixed with <tt class=3D"docutils literal"><span class=3D"pre=
">file://</span></tt> as simple protection against accidental arguments
            switch, e.g. <tt class=3D"docutils literal"><span class=3D"pre"=
>mp.utils.write_file("file://~/abc.txt",</span> "hello world")</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-utils-ap=
pend-file(fname,-str)">mp.utils.append_file(fname, str)<a href=3D"https://m=
pv.io/manual/master/#javascript-mp-utils-append-file(fname,-str)" class=3D"=
anchor fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal">mp.utils.write_file<=
/tt> if the file <tt class=3D"docutils literal">fname</tt> does not exist. =
If it
            does exist then append instead of overwrite.</dd>
            </dl>
            <p>Note: <tt class=3D"docutils literal">read_file</tt>, <tt cla=
ss=3D"docutils literal">write_file</tt> and <tt class=3D"docutils literal">=
append_file</tt> throw on errors, allow
            text content only.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-get-time=
-ms()">mp.get_time_ms()<a href=3D"https://mpv.io/manual/master/#javascript-=
mp-get-time-ms()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Same as <tt class=3D"docutils literal">mp.get_time()</tt> b=
ut in ms instead of seconds.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-get-scri=
pt-file()">mp.get_script_file()<a href=3D"https://mpv.io/manual/master/#jav=
ascript-mp-get-script-file()" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Returns the file name of the current script.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-exit()">exi=
t()<a href=3D"https://mpv.io/manual/master/#javascript-exit()" class=3D"anc=
hor fa fa-link"></a></tt> (global)</dt>
            <dd>Make the script exit at the end of the current event loop i=
teration.
            Note: please remove added key bindings before calling <tt class=
=3D"docutils literal">exit()</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-utils-co=
mpile-js(fname,-content-str)">mp.utils.compile_js(fname, content_str)<a hre=
f=3D"https://mpv.io/manual/master/#javascript-mp-utils-compile-js(fname,-co=
ntent-str)" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Compiles the JS code <tt class=3D"docutils literal">content=
_str</tt> as file name <tt class=3D"docutils literal">fname</tt> (without l=
oading
            anything from the filesystem), and returns it as a function. Ve=
ry similar
            to a <tt class=3D"docutils literal">Function</tt> constructor, =
but shows at stack traces as <tt class=3D"docutils literal">fname</tt>.</dd=
>
            <dt><tt class=3D"docutils literal" id=3D"javascript-mp-module-p=
aths">mp.module_paths<a href=3D"https://mpv.io/manual/master/#javascript-mp=
-module-paths" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Global modules search paths array for the <tt class=3D"docu=
tils literal">require</tt> function (see below).</dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"timers-global">
            <h2>Timers (global)</h2>
            <p>The standard HTML/node.js timers are available:</p>
            <p><tt class=3D"docutils literal">id =3D setTimeout(fn [,durati=
on [,arg1 <span class=3D"pre">[,arg2...]]])</span></tt></p>
            <p><tt class=3D"docutils literal">id =3D setTimeout(code_string=
 [,duration])</tt></p>
            <p><tt class=3D"docutils literal">clearTimeout(id)</tt></p>
            <p><tt class=3D"docutils literal">id =3D setInterval(fn [,durat=
ion [,arg1 <span class=3D"pre">[,arg2...]]])</span></tt></p>
            <p><tt class=3D"docutils literal">id =3D setInterval(code_strin=
g [,duration])</tt></p>
            <p><tt class=3D"docutils literal">clearInterval(id)</tt></p>
            <p><tt class=3D"docutils literal">setTimeout</tt> and <tt class=
=3D"docutils literal">setInterval</tt> return id, and later call <tt class=
=3D"docutils literal">fn</tt> (or execute
            <tt class=3D"docutils literal">code_string</tt>) after <tt clas=
s=3D"docutils literal">duration</tt> ms. Interval also repeat every <tt cla=
ss=3D"docutils literal">duration</tt>.</p>
            <p><tt class=3D"docutils literal">duration</tt> has a minimum a=
nd default value of 0, <tt class=3D"docutils literal">code_string</tt> is
            a plain string which is evaluated as JS code, and <tt class=3D"=
docutils literal">[,arg1 <span class=3D"pre">[,arg2..]]</span></tt> are use=
d
            as arguments (if provided) when calling back <tt class=3D"docut=
ils literal">fn</tt>.</p>
            <p>The <tt class=3D"docutils literal"><span class=3D"pre">clear=
...(id)</span></tt> functions cancel timer <tt class=3D"docutils literal">i=
d</tt>, and are irreversible.</p>
            <p>Note: timers always call back asynchronously, e.g. <tt class=
=3D"docutils literal">setTimeout(fn)</tt> will never
            call <tt class=3D"docutils literal">fn</tt> before returning. <=
tt class=3D"docutils literal">fn</tt> will be called either at the end of t=
his
            event loop iteration or at a later event loop iteration. This i=
s true also for
            intervals - which also never call back twice at the same event =
loop iteration.</p>
            <p>Additionally, timers are processed after the event queue is =
empty, so it's valid
            to use <tt class=3D"docutils literal">setTimeout(fn)</tt> as a =
one-time idle observer.</p>
            </div>
            <div class=3D"section" id=3D"commonjs-modules-and-require-id">
            <h2>CommonJS modules and <tt class=3D"docutils literal">require=
(id)</tt></h2>
            <p>CommonJS Modules are a standard system where scripts can exp=
ort common functions
            for use by other scripts. Specifically, a module is a script wh=
ich adds
            properties (functions, etc) to its pre-existing <tt class=3D"do=
cutils literal">exports</tt> object, which
            another script can access with <tt class=3D"docutils literal"><=
span class=3D"pre">require(module-id)</span></tt>. This runs the module and
            returns its <tt class=3D"docutils literal">exports</tt> object.=
 Further calls to <tt class=3D"docutils literal">require</tt> for the same =
module
            will return its cached <tt class=3D"docutils literal">exports</=
tt> object without running the module again.</p>
            <p>Modules and <tt class=3D"docutils literal">require</tt> are =
supported, standard compliant, and generally similar
            to node.js. However, most node.js modules won't run due to miss=
ing modules such
            as <tt class=3D"docutils literal">fs</tt>, <tt class=3D"docutil=
s literal">process</tt>, etc, but some node.js modules with minimal depende=
ncies
            do work. In general, this is for mpv modules and not a node.js =
replacement.</p>
            <p>A <tt class=3D"docutils literal">.js</tt> file extension is =
always added to <tt class=3D"docutils literal">id</tt>, e.g. <tt class=3D"d=
ocutils literal"><span class=3D"pre">require("./foo")</span></tt>
            will load the file <tt class=3D"docutils literal">./foo.js</tt>=
 and return its <tt class=3D"docutils literal">exports</tt> object.</p>
            <p>An id which starts with <tt class=3D"docutils literal">./</t=
t> or <tt class=3D"docutils literal">../</tt> is relative to the script or =
module
            which <tt class=3D"docutils literal">require</tt> it. Otherwise=
 it's considered a top-level id (CommonJS term).</p>
            <p>Top-level id is evaluated as absolute filesystem path if pos=
sible, e.g. <tt class=3D"docutils literal">/x/y</tt>
            or <tt class=3D"docutils literal">~/x</tt>. Otherwise it's cons=
idered a global module id and searched according
            to <tt class=3D"docutils literal">mp.module_paths</tt> in norma=
l array order, e.g. <tt class=3D"docutils literal"><span class=3D"pre">requ=
ire("x")</span></tt> tries to
            load <tt class=3D"docutils literal">x.js</tt> at one of the arr=
ay paths, and id <tt class=3D"docutils literal">foo/x</tt> tries to load <t=
t class=3D"docutils literal">x.js</tt>
            inside dir <tt class=3D"docutils literal">foo</tt> at one of th=
e paths.</p>
            <p>The <tt class=3D"docutils literal">mp.module_paths</tt> arra=
y is empty by default except for scripts which are
            loaded as a directory where it contains one item - <tt class=3D=
"docutils literal"><span class=3D"pre">&lt;directory&gt;/modules/</span></t=
t> .
            The array may be updated from a script (or using custom init - =
see below) which
            will affect future calls to <tt class=3D"docutils literal">requ=
ire</tt> for global module id's which are not
            already loaded/cached.</p>
            <p>No <tt class=3D"docutils literal">global</tt> variable, but =
a module's <tt class=3D"docutils literal">this</tt> at its top lexical scop=
e is the
            global object - also in strict mode. If you have a module which=
 needs <tt class=3D"docutils literal">global</tt>
            as the global object, you could do <tt class=3D"docutils litera=
l">this.global =3D this;</tt> before <tt class=3D"docutils literal">require=
</tt>.</p>
            <p>Functions and variables declared at a module don't pollute t=
he global object.</p>
            </div>
            <div class=3D"section" id=3D"custom-initialization">
            <h2>Custom initialization</h2>
            <p>After mpv initializes the JavaScript environment for a scrip=
t but before it
            loads the script - it tries to run the file <tt class=3D"docuti=
ls literal">init.js</tt> at the root of the mpv
            configuration directory. Code at this file can update the envir=
onment further
            for all scripts. E.g. if it contains <tt class=3D"docutils lite=
ral"><span class=3D"pre">mp.module_paths.push("/foo")</span></tt> then
            <tt class=3D"docutils literal">require</tt> at all scripts will=
 search global module id's also at <tt class=3D"docutils literal">/foo</tt>
            (do NOT do <tt class=3D"docutils literal">mp.module_paths =3D <=
span class=3D"pre">["/foo"];</span></tt> because this will remove existing
            paths - like <tt class=3D"docutils literal"><span class=3D"pre"=
>&lt;script-dir&gt;/modules</span></tt> for scripts which load from a direc=
tory).</p>
            <p>The custom-init file is ignored if mpv is invoked with <tt c=
lass=3D"docutils literal"><span class=3D"pre">--no-config</span></tt>.</p>
            <p>Before mpv 0.34, the file name was <tt class=3D"docutils lit=
eral">.init.js</tt> (with dot) at the same dir.</p>
            </div>
            <div class=3D"section" id=3D"the-event-loop">
            <h2>The event loop</h2>
            <p>The event loop poll/dispatch mpv events as long as the queue=
 is not empty, then
            processes the timers, then waits for the next event, and repeat=
s this forever.</p>
            <p>You could put this code at your script to replace the built-=
in event loop, and
            also print every event which mpv sends to your script:</p>
            <pre class=3D"literal-block">function mp_event_loop() {
    var wait =3D 0;
    do {
        var e =3D mp.wait_event(wait);
        dump(e);  // there could be a lot of prints...
        if (e.event !=3D "none") {
            mp.dispatch_event(e);
            wait =3D 0;
        } else {
            wait =3D mp.process_timers() / 1000;
            if (wait !=3D 0) {
                mp.notify_idle_observers();
                wait =3D mp.peek_timers_wait() / 1000;
            }
        }
    } while (mp.keep_running);
}
</pre>
            <p><tt class=3D"docutils literal">mp_event_loop</tt> is a name =
which mpv tries to call after the script loads.
            The internal implementation is similar to this (without <tt cla=
ss=3D"docutils literal">dump</tt> though..).</p>
            <p><tt class=3D"docutils literal">e =3D mp.wait_event(wait)</tt=
> returns when the next mpv event arrives, or after
            <tt class=3D"docutils literal">wait</tt> seconds if positive an=
d no mpv events arrived. <tt class=3D"docutils literal">wait</tt> value of =
0
            returns immediately (with <tt class=3D"docutils literal">e.even=
t =3D=3D "none"</tt> if the queue is empty).</p>
            <p><tt class=3D"docutils literal">mp.dispatch_event(e)</tt> cal=
ls back the handlers registered for <tt class=3D"docutils literal">e.event<=
/tt>,
            if there are such (event handlers, property observers, script m=
essages, etc).</p>
            <p><tt class=3D"docutils literal">mp.process_timers()</tt> call=
s back the already-added, non-canceled due timers,
            and returns the duration in ms till the next due timer (possibl=
y 0), or -1 if
            there are no pending timers. Must not be called recursively.</p=
>
            <p><tt class=3D"docutils literal">mp.notify_idle_observers()</t=
t> calls back the idle observers, which we do when
            we're about to sleep (wait !=3D 0), but the observers may add t=
imers or take
            non-negligible duration to complete, so we re-calculate <tt cla=
ss=3D"docutils literal">wait</tt> afterwards.</p>
            <p><tt class=3D"docutils literal">mp.peek_timers_wait()</tt> re=
turns the same values as <tt class=3D"docutils literal">mp.process_timers()=
</tt>
            but without doing anything. Invalid result if called from a tim=
er callback.</p>
            <p>Note: <tt class=3D"docutils literal">exit()</tt> is also reg=
istered for the <tt class=3D"docutils literal">shutdown</tt> event, and its
            implementation is a simple <tt class=3D"docutils literal">mp.ke=
ep_running =3D false</tt>.</p>
            </div>
            </div>
            <div class=3D"section" id=3D"json-ipc">
            <h1>JSON IPC</h1>
            <p>mpv can be controlled by external programs using the JSON-ba=
sed IPC protocol.
            It can be enabled by specifying the path to a unix socket or a =
named pipe using
            the option <tt class=3D"docutils literal"><span class=3D"pre">-=
-input-ipc-server</span></tt>. Clients can connect to this socket and send
            commands to the player or receive events from it.</p>
            <div class=3D"admonition warning">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">This is not intended to be a secure network p=
rotocol. It is explicitly
            insecure: there is no authentication, no encryption, and the co=
mmands
            themselves are insecure too. For example, the <tt class=3D"docu=
tils literal">run</tt> command is exposed,
            which can run arbitrary system commands. The use-case is contro=
lling the
            player locally. This is not different from the MPlayer slave pr=
otocol.</p>
            </div>
            <div class=3D"section" id=3D"socat-example">
            <h2>Socat example</h2>
            <p>You can use the <tt class=3D"docutils literal">socat</tt> to=
ol to send commands (and receive replies) from the
            shell. Assuming mpv was started with:</p>
            <pre class=3D"literal-block">mpv file.mkv --input-ipc-server=3D=
/tmp/mpvsocket
</pre>
            <p>Then you can control it using socat:</p>
            <pre class=3D"literal-block">&gt; echo '{ "command": ["get_prop=
erty", "playback-time"] }' | socat - /tmp/mpvsocket
{"data":190.482000,"error":"success"}
</pre>
            <p>In this case, socat copies data between stdin/stdout and the=
 mpv socket
            connection.</p>
            <p>See the <tt class=3D"docutils literal"><span class=3D"pre">-=
-idle</span></tt> option how to make mpv start without exiting immediately =
or
            playing a file.</p>
            <p>It's also possible to send input.conf style text-only comman=
ds:</p>
            <pre class=3D"literal-block">&gt; echo 'show-text ${playback-ti=
me}' | socat - /tmp/mpvsocket
</pre>
            <p>But you won't get a reply over the socket. (This particular =
command shows the
            playback time on the player's OSD.)</p>
            </div>
            <div class=3D"section" id=3D"command-prompt-example">
            <h2>Command Prompt example</h2>
            <p>Unfortunately, it's not as easy to test the IPC protocol on =
Windows, since
            Windows ports of socat (in Cygwin and MSYS2) don't understand n=
amed pipes. In
            the absence of a simple tool to send and receive from bidirecti=
onal pipes, the
            <tt class=3D"docutils literal">echo</tt> command can be used to=
 send commands, but not receive replies from the
            command prompt.</p>
            <p>Assuming mpv was started with:</p>
            <pre class=3D"literal-block">mpv file.mkv --input-ipc-server=3D=
\\.\pipe\mpvsocket
</pre>
            <p>You can send commands from a command prompt:</p>
            <pre class=3D"literal-block">echo show-text ${playback-time} &g=
t;\\.\pipe\mpvsocket
</pre>
            <p>To be able to simultaneously read and write from the IPC pip=
e, like on Linux,
            it's necessary to write an external program that uses overlappe=
d file I/O (or
            some wrapper like .NET's NamedPipeClientStream.)</p>
            <p>You can open the pipe in PuTTY as "serial" device. This is n=
ot very
            comfortable, but gives a way to test interactively without havi=
ng to write code.</p>
            </div>
            <div class=3D"section" id=3D"protocol">
            <h2>Protocol</h2>
            <p>The protocol uses UTF-8-only JSON as defined by RFC-8259. Un=
like standard JSON,
            "u" escape sequences are not allowed to construct surrogate pai=
rs. To avoid
            getting conflicts, encode all text characters including and abo=
ve codepoint
            U+0020 as UTF-8. mpv might output broken UTF-8 in corner cases =
(see "UTF-8"
            section below).</p>
            <p>Clients can execute commands on the player by sending JSON m=
essages of the
            following form:</p>
            <pre class=3D"literal-block">{ "command": ["command_name", "par=
am1", "param2", ...] }
</pre>
            <p>where <tt class=3D"docutils literal">command_name</tt> is th=
e name of the command to be executed, followed by a
            list of parameters. Parameters must be formatted as native JSON=
 values
            (integers, strings, booleans, ...). Every message <strong>must<=
/strong> be terminated with
            <tt class=3D"docutils literal">\n</tt>. Additionally, <tt class=
=3D"docutils literal">\n</tt> must not appear anywhere inside the message. =
In
            practice this means that messages should be minified before bei=
ng sent to mpv.</p>
            <p>mpv will then send back a reply indicating whether the comma=
nd was run
            correctly, and an additional field holding the command-specific=
 return data (it
            can also be null).</p>
            <pre class=3D"literal-block">{ "error": "success", "data": null=
 }
</pre>
            <p>mpv will also send events to clients with JSON messages of t=
he following form:</p>
            <pre class=3D"literal-block">{ "event": "event_name" }
</pre>
            <p>where <tt class=3D"docutils literal">event_name</tt> is the =
name of the event. Additional event-specific fields
            can also be present. See <a class=3D"reference internal" href=
=3D"https://mpv.io/manual/master/#list-of-events">List of events</a> for a =
list of all supported events.</p>
            <p>Because events can occur at any time, it may be difficult at=
 times to determine
            which response goes with which command. Commands may optionally=
 include a
            <tt class=3D"docutils literal">request_id</tt> which, if provid=
ed in the command request, will be copied
            verbatim into the response. mpv does not interpret the <tt clas=
s=3D"docutils literal">request_id</tt> in any
            way; it is solely for the use of the requester. The only requir=
ement is that
            the <tt class=3D"docutils literal">request_id</tt> field must b=
e an integer (a number without fractional parts
            in the range <tt class=3D"docutils literal"><span class=3D"pre"=
>-2^63..2^63-1</span></tt>). Using other types is deprecated and will
            currently show a warning. In the future, this will raise an err=
or.</p>
            <p>For example, this request:</p>
            <pre class=3D"literal-block">{ "command": ["get_property", "tim=
e-pos"], "request_id": 100 }
</pre>
            <p>Would generate this response:</p>
            <pre class=3D"literal-block">{ "error": "success", "data": 1.46=
8135, "request_id": 100 }
</pre>
            <p>If you don't specify a <tt class=3D"docutils literal">reques=
t_id</tt>, command replies will set it to 0.</p>
            <p>All commands, replies, and events are separated from each ot=
her with a line
            break character (<tt class=3D"docutils literal">\n</tt>).</p>
            <p>If the first character (after skipping whitespace) is not <t=
t class=3D"docutils literal">{</tt>, the command
            will be interpreted as non-JSON text command, as they are used =
in input.conf
            (or <tt class=3D"docutils literal">mpv_command_string()</tt> in=
 the client API). Additionally, lines starting
            with <tt class=3D"docutils literal">#</tt> and empty lines are =
ignored.</p>
            <p>Currently, embedded 0 bytes terminate the current line, but =
you should not
            rely on this.</p>
            </div>
            <div class=3D"section" id=3D"data-flow">
            <h2>Data flow</h2>
            <p>Currently, the mpv-side IPC implementation does not service =
the socket while a
            command is executed and the reply is written. It is for example=
 not possible
            that other events, that happened during the execution of the co=
mmand, are
            written to the socket before the reply is written.</p>
            <p>This might change in the future. The only guarantee is that =
replies to IPC
            messages are sent in sequence.</p>
            <p>Also, since socket I/O is inherently asynchronous, it is pos=
sible that you read
            unrelated event messages from the socket, before you read the r=
eply to the
            previous command you sent. In this case, these events were queu=
ed by the mpv
            side before it read and started processing your command message=
.</p>
            <p>If the mpv-side IPC implementation switches away from blocki=
ng writes and
            blocking command execution, it may attempt to send events at an=
y time.</p>
            <p>You can also use asynchronous commands, which can return in =
any order, and
            which do not block IPC protocol interaction at all while the co=
mmand is
            executed in the background.</p>
            </div>
            <div class=3D"section" id=3D"asynchronous-commands">
            <h2>Asynchronous commands</h2>
            <p>Command can be run asynchronously. This behaves exactly as w=
ith normal command
            execution, except that execution is not blocking. Other command=
s can be sent
            while it's executing, and command completion can be arbitrarily=
 reordered.</p>
            <p>The <tt class=3D"docutils literal">async</tt> field controls=
 this. If present, it must be a boolean. If missing,
            <tt class=3D"docutils literal">false</tt> is assumed.</p>
            <p>For example, this initiates an asynchronous command:</p>
            <pre class=3D"literal-block">{ "command": ["screenshot"], "requ=
est_id": 123, "async": true }
</pre>
            <p>And this is the completion:</p>
            <pre class=3D"literal-block">{"request_id":123,"error":"success=
","data":null}
</pre>
            <p>By design, you will not get a confirmation that the command =
was started. If a
            command is long running, sending the message will not lead to a=
ny reply until
            much later when the command finishes.</p>
            <p>Some commands execute synchronously, but these will behave l=
ike asynchronous
            commands that finished execution immediately.</p>
            <p>Cancellation of asynchronous commands is available in the li=
bmpv API, but has
            not yet been implemented in the IPC protocol.</p>
            </div>
            <div class=3D"section" id=3D"commands-with-named-arguments">
            <h2>Commands with named arguments</h2>
            <p>If the <tt class=3D"docutils literal">command</tt> field is =
a JSON object, named arguments are expected. This
            is described in the C API <tt class=3D"docutils literal">mpv_co=
mmand_node()</tt> documentation (the
            <tt class=3D"docutils literal">MPV_FORMAT_NODE_MAP</tt> case). =
In some cases, this may make commands more
            readable, while some obscure commands basically require using n=
amed arguments.</p>
            <p>Currently, only "proper" commands (as listed by <a class=3D"=
reference internal" href=3D"https://mpv.io/manual/master/#list-of-input-com=
mands">List of Input Commands</a>)
            support named arguments.</p>
            </div>
            <div class=3D"section" id=3D"id7">
            <h2>Commands</h2>
            <p>In addition to the commands described in <a class=3D"referen=
ce internal" href=3D"https://mpv.io/manual/master/#list-of-input-commands">=
List of Input Commands</a>, a few
            extra commands can also be used as part of the protocol:</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-client-name">=
client_name<a href=3D"https://mpv.io/manual/master/#json-ipc-client-name" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Return the name of the client as string. This is the string=
 <tt class=3D"docutils literal"><span class=3D"pre">ipc-N</span></tt> with
            N being an integer number.</dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-get-time-us">=
get_time_us<a href=3D"https://mpv.io/manual/master/#json-ipc-get-time-us" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Return the current mpv internal time in microseconds as a n=
umber. This is
            basically the system time, with an arbitrary offset.</dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-get-property"=
>get_property<a href=3D"https://mpv.io/manual/master/#json-ipc-get-property=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Return the value of the given property. =
The value will be sent in the data
            field of the replay message.</p>
            <p>Example:</p>
            <pre class=3D"last literal-block">{ "command": ["get_property",=
 "volume"] }
{ "data": 50.0, "error": "success" }
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-get-property-=
string">get_property_string<a href=3D"https://mpv.io/manual/master/#json-ip=
c-get-property-string" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Like <tt class=3D"docutils literal">get_=
property</tt>, but the resulting data will always be a string.</p>
            <p>Example:</p>
            <pre class=3D"last literal-block">{ "command": ["get_property_s=
tring", "volume"] }
{ "data": "50.000000", "error": "success" }
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-set-property"=
>set_property<a href=3D"https://mpv.io/manual/master/#json-ipc-set-property=
" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Set the given property to the given valu=
e. See <a class=3D"reference internal" href=3D"https://mpv.io/manual/master=
/#properties">Properties</a> for more
            information about properties.</p>
            <p>Example:</p>
            <pre class=3D"last literal-block">{ "command": ["set_property",=
 "pause", true] }
{ "error": "success" }
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-set-property-=
string">set_property_string<a href=3D"https://mpv.io/manual/master/#json-ip=
c-set-property-string" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Alias for <tt class=3D"docutils literal">set_property</tt>.=
 Both commands accept native values and strings.</dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-observe-prope=
rty">observe_property<a href=3D"https://mpv.io/manual/master/#json-ipc-obse=
rve-property" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Watch a property for changes. If the giv=
en property is changed, then an
            event of type <tt class=3D"docutils literal"><span class=3D"pre=
">property-change</span></tt> will be generated</p>
            <p>Example:</p>
            <pre class=3D"literal-block">{ "command": ["observe_property", =
1, "volume"] }
{ "error": "success" }
{ "event": "property-change", "id": 1, "data": 52.0, "name": "volume" }
</pre>
            <div class=3D"admonition warning last">
            <p class=3D"first admonition-title">Warning</p>
            <p class=3D"last">If the connection is closed, the IPC client i=
s destroyed internally,
            and the observed properties are unregistered. This happens for =
example
            when sending commands to a socket with separate <tt class=3D"do=
cutils literal">socat</tt> invocations.
            This can make it seem like property observation does not work. =
You must
            keep the IPC connection open to make it work.</p>
            </div>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-observe-prope=
rty-string">observe_property_string<a href=3D"https://mpv.io/manual/master/=
#json-ipc-observe-property-string" class=3D"anchor fa fa-link"></a></tt></d=
t>
            <dd><p class=3D"first">Like <tt class=3D"docutils literal">obse=
rve_property</tt>, but the resulting data will always be a string.</p>
            <p>Example:</p>
            <pre class=3D"last literal-block">{ "command": ["observe_proper=
ty_string", 1, "volume"] }
{ "error": "success" }
{ "event": "property-change", "id": 1, "data": "52.000000", "name": "volume=
" }
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-unobserve-pro=
perty">unobserve_property<a href=3D"https://mpv.io/manual/master/#json-ipc-=
unobserve-property" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Undo <tt class=3D"docutils literal">obse=
rve_property</tt> or <tt class=3D"docutils literal">observe_property_string=
</tt>. This requires the
            numeric id passed to the observed command as argument.</p>
            <p>Example:</p>
            <pre class=3D"last literal-block">{ "command": ["unobserve_prop=
erty", 1] }
{ "error": "success" }
</pre>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-request-log-m=
essages">request_log_messages<a href=3D"https://mpv.io/manual/master/#json-=
ipc-request-log-messages" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enable output of mpv log messages. They =
will be received as events. The
            parameter to this command is the log-level (see <tt class=3D"do=
cutils literal">mpv_request_log_messages</tt>
            C API function).</p>
            <p class=3D"last">Log message output is meant for humans only (=
mostly for debugging).
            Attempting to retrieve information by parsing these messages wi=
ll just
            lead to breakages with future mpv releases. Instead, make a fea=
ture request,
            and ask for a proper event that returns the information you nee=
d.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-enable-event"=
>enable_event<a href=3D"https://mpv.io/manual/master/#json-ipc-enable-event=
" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" id=
=3D"json-ipc-disable-event">disable_event<a href=3D"https://mpv.io/manual/m=
aster/#json-ipc-disable-event" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Enables or disables the named event. Mir=
rors the <tt class=3D"docutils literal">mpv_request_event</tt> C
            API function. If the string <tt class=3D"docutils literal">all<=
/tt> is used instead of an event name, all
            events are enabled or disabled.</p>
            <p class=3D"last">By default, most events are enabled, and ther=
e is not much use for this
            command.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"json-ipc-get-version">=
get_version<a href=3D"https://mpv.io/manual/master/#json-ipc-get-version" c=
lass=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Returns the client API version the C API=
 of the remote mpv instance
            provides.</p>
            <p class=3D"last">See also: <tt class=3D"docutils literal"><spa=
n class=3D"pre">DOCS/client-api-changes.rst</span></tt>.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"utf-8">
            <h2>UTF-8</h2>
            <p>Normally, all strings are in UTF-8. Sometimes it can happen =
that strings are
            in some broken encoding (often happens with file tags and such,=
 and filenames
            on many Unixes are not required to be in UTF-8 either). This me=
ans that mpv
            sometimes sends invalid JSON. If that is a problem for the clie=
nt application's
            parser, it should filter the raw data for invalid UTF-8 sequenc=
es and perform
            the desired replacement, before feeding the data to its JSON pa=
rser.</p>
            <p>mpv will not attempt to construct invalid UTF-8 with broken =
"u" escape
            sequences. This includes surrogate pairs.</p>
            </div>
            <div class=3D"section" id=3D"json-extensions">
            <h2>JSON extensions</h2>
            <p>The following non-standard extensions are supported:</p>
            <blockquote>
            <ul class=3D"simple">
            <li>a list or object item can have a trailing ","</li>
            <li>object syntax accepts "=3D" in addition of ":"</li>
            <li>object keys can be unquoted, if they start with a character=
 in "A-Za-z_"
            and contain only characters in "A-Za-z0-9_"</li>
            <li>byte escapes with "xAB" are allowed (with AB being a 2 digi=
t hex number)</li>
            </ul>
            </blockquote>
            <p>Example:</p>
            <pre class=3D"literal-block">{ objkey =3D "value\x0A" }
</pre>
            <p>Is equivalent to:</p>
            <pre class=3D"literal-block">{ "objkey": "value\n" }
</pre>
            </div>
            <div class=3D"section" id=3D"alternative-ways-of-starting-clien=
ts">
            <h2>Alternative ways of starting clients</h2>
            <p>You can create an anonymous IPC connection without having to=
 set
            <tt class=3D"docutils literal"><span class=3D"pre">--input-ipc-=
server</span></tt>. This is achieved through a mpv pseudo scripting backend
            that starts processes.</p>
            <p>You can put <tt class=3D"docutils literal">.run</tt> file ex=
tension in the mpv scripts directory in its  config
            directory (see the <a class=3D"reference internal" href=3D"http=
s://mpv.io/manual/master/#files">FILES</a> section for details), or load th=
em through other
            means (see <a class=3D"reference internal" href=3D"https://mpv.=
io/manual/master/#script-location">Script location</a>). These scripts are =
simply executed with the OS
            native mechanism (as if you ran them in the shell). They must h=
ave a proper
            shebang and have the executable bit set.</p>
            <p>When executed, a socket (the IPC connection) is passed to th=
em through file
            descriptor inheritance. The file descriptor is indicated as the=
 special command
            line argument <tt class=3D"docutils literal"><span class=3D"pre=
">--mpv-ipc-fd=3DN</span></tt>, where <tt class=3D"docutils literal">N</tt>=
 is the numeric file descriptor.</p>
            <p>The rest is the same as with a normal <tt class=3D"docutils =
literal"><span class=3D"pre">--input-ipc-server</span></tt> IPC connection.=
 mpv
            does not attempt to observe or other interact with the started =
script process.</p>
            <p>This does not work in Windows yet.</p>
            </div>
            </div>
            <div class=3D"section" id=3D"changelog">
            <h1>CHANGELOG</h1>
            <p>There is no real changelog, but you can look at the followin=
g things:</p>
            <ul>
            <li><p class=3D"first">The release changelog, which should cont=
ain most user-visible changes,
            including new features and bug fixes:</p>
            <p><a class=3D"reference external" href=3D"https://github.com/m=
pv-player/mpv/releases">https://github.com/mpv-player/mpv/releases</a></p>
            </li>
            <li><p class=3D"first">The git log, which is the "real" changel=
og</p>
            </li>
            <li><p class=3D"first">The file <a class=3D"reference external"=
 href=3D"https://github.com/mpv-player/mpv/blob/master/DOCS/interface-chang=
es.rst">https://github.com/mpv-player/mpv/blob/master/DOCS/interface-change=
s.rst</a>
            documents changes to the command and user interface, such as op=
tions and
            properties. (It usually documents breaking changes only, additi=
ons and
            enhancements are often not listed.)</p>
            </li>
            <li><p class=3D"first">C API changes are listed in
            <a class=3D"reference external" href=3D"https://github.com/mpv-=
player/mpv/blob/master/DOCS/client-api-changes.rst">https://github.com/mpv-=
player/mpv/blob/master/DOCS/client-api-changes.rst</a></p>
            </li>
            <li><p class=3D"first">The file <tt class=3D"docutils literal">=
<span class=3D"pre">mplayer-changes.rst</span></tt> in the <tt class=3D"doc=
utils literal">DOCS</tt> sub directory on the git
            repository, which used to be in place of this section. It docum=
ents some
            changes that happened since mplayer2 forked off MPlayer. (Not u=
pdated
            anymore.)</p>
            </li>
            </ul>
            </div>
            <div class=3D"section" id=3D"embedding-into-other-programs-libm=
pv">
            <h1>EMBEDDING INTO OTHER PROGRAMS (LIBMPV)</h1>
            <p>mpv can be embedded into other programs as video/audio playb=
ack backend. The
            recommended way to do so is using libmpv. See <tt class=3D"docu=
tils literal">libmpv/client.h</tt> in the mpv
            source code repository. This provides a C API. Bindings for oth=
er languages
            might be available (see wiki).</p>
            <p>Since libmpv merely allows access to underlying mechanisms t=
hat can control
            mpv, further documentation is spread over a few places:</p>
            <ul class=3D"simple">
            <li><a class=3D"reference external" href=3D"https://github.com/=
mpv-player/mpv/blob/master/libmpv/client.h">https://github.com/mpv-player/m=
pv/blob/master/libmpv/client.h</a></li>
            <li><a class=3D"reference external" href=3D"https://mpv.io/manu=
al/master/#options">https://mpv.io/manual/master/#options</a></li>
            <li><a class=3D"reference external" href=3D"https://mpv.io/manu=
al/master/#list-of-input-commands">https://mpv.io/manual/master/#list-of-in=
put-commands</a></li>
            <li><a class=3D"reference external" href=3D"https://mpv.io/manu=
al/master/#properties">https://mpv.io/manual/master/#properties</a></li>
            <li><a class=3D"reference external" href=3D"https://github.com/=
mpv-player/mpv-examples/tree/master/libmpv">https://github.com/mpv-player/m=
pv-examples/tree/master/libmpv</a></li>
            </ul>
            </div>
            <div class=3D"section" id=3D"c-plugins">
            <h1>C PLUGINS</h1>
            <p>You can write C plugins for mpv. These use the libmpv API, a=
lthough they do not
            use the libmpv library itself.</p>
            <p>They are available on Linux/BSD platforms only and enabled b=
y default if the
            compiler supports linking with the <tt class=3D"docutils litera=
l"><span class=3D"pre">-rdynamic</span></tt> flag.</p>
            <div class=3D"section" id=3D"c-plugins-location">
            <h2>C plugins location</h2>
            <p>C plugins are put into the mpv scripts directory in its conf=
ig directory
            (see the <a class=3D"reference internal" href=3D"https://mpv.io=
/manual/master/#files">FILES</a> section for details). They must have a <tt=
 class=3D"docutils literal">.so</tt> file extension.
            They can also be explicitly loaded with the <tt class=3D"docuti=
ls literal"><span class=3D"pre">--script</span></tt> option.</p>
            </div>
            <div class=3D"section" id=3D"api">
            <h2>API</h2>
            <p>A C plugin must export the following function:</p>
            <pre class=3D"literal-block">int mpv_open_cplugin(mpv_handle *h=
andle)
</pre>
            <p>The plugin function will be called on loading time. This fun=
ction does not
            return as long as your plugin is loaded (it runs in its own thr=
ead). The
            <tt class=3D"docutils literal">handle</tt> will be deallocated =
as soon as the plugin function returns.</p>
            <p>The return value is interpreted as error status. A value of =
<tt class=3D"docutils literal">0</tt> is
            interpreted as success, while <tt class=3D"docutils literal"><s=
pan class=3D"pre">-1</span></tt> signals an error. In the latter case,
            the player prints an uninformative error message that loading f=
ailed.</p>
            <p>Return values other than <tt class=3D"docutils literal">0</t=
t> and <tt class=3D"docutils literal"><span class=3D"pre">-1</span></tt> ar=
e reserved, and trigger undefined
            behavior.</p>
            <p>Within the plugin function, you can call libmpv API function=
s. The <tt class=3D"docutils literal">handle</tt>
            is created by <tt class=3D"docutils literal">mpv_create_client(=
)</tt> (or actually an internal equivalent),
            and belongs to you. You can call <tt class=3D"docutils literal"=
>mpv_wait_event()</tt> to wait for things
            happening, and so on.</p>
            <p>Note that the player might block until your plugin calls <tt=
 class=3D"docutils literal">mpv_wait_event()</tt>
            for the first time. This gives you a chance to install initial =
hooks etc.
            before playback begins.</p>
            <p>The details are quite similar to Lua scripts.</p>
            </div>
            <div class=3D"section" id=3D"linkage-to-libmpv">
            <h2>Linkage to libmpv</h2>
            <p>The current implementation requires that your plugins are <s=
trong>not</strong> linked against
            libmpv. What your plugins use are not symbols from a libmpv bin=
ary, but
            symbols from the mpv host binary.</p>
            </div>
            <div class=3D"section" id=3D"examples">
            <h2>Examples</h2>
            <p>See:</p>
            <ul class=3D"simple">
            <li><a class=3D"reference external" href=3D"https://github.com/=
mpv-player/mpv-examples/tree/master/cplugins">https://github.com/mpv-player=
/mpv-examples/tree/master/cplugins</a></li>
            </ul>
            </div>
            </div>
            <div class=3D"section" id=3D"environment-variables">
            <h1>ENVIRONMENT VARIABLES</h1>
            <p>There are a number of environment variables that can be used=
 to control the
            behavior of mpv.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
home">HOME<a href=3D"https://mpv.io/manual/master/#environment-variables-ho=
me" class=3D"anchor fa fa-link"></a></tt>, <tt class=3D"docutils literal" i=
d=3D"environment-variables-xdg-config-home">XDG_CONFIG_HOME<a href=3D"https=
://mpv.io/manual/master/#environment-variables-xdg-config-home" class=3D"an=
chor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Used to determine mpv config directory. =
If <tt class=3D"docutils literal">XDG_CONFIG_HOME</tt> is not set,
            <tt class=3D"docutils literal"><span class=3D"pre">$HOME/.confi=
g/mpv</span></tt> is used.</p>
            <p class=3D"last"><tt class=3D"docutils literal"><span class=3D=
"pre">$HOME/.mpv</span></tt> is always added to the list of config search p=
aths with a
            lower priority.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
mpv-home">MPV_HOME<a href=3D"https://mpv.io/manual/master/#environment-vari=
ables-mpv-home" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Directory where mpv looks for user settings. Overrides <tt =
class=3D"docutils literal">HOME</tt>, and mpv
            will try to load the config file as <tt class=3D"docutils liter=
al">$MPV_HOME/mpv.conf</tt>.</dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
mpv-verbose">MPV_VERBOSE<a href=3D"https://mpv.io/manual/master/#environmen=
t-variables-mpv-verbose" class=3D"anchor fa fa-link"></a></tt> (see also <t=
t class=3D"docutils literal" id=3D"environment-variables-v"><span class=3D"=
pre">-v</span><a href=3D"https://mpv.io/manual/master/#environment-variable=
s-v" class=3D"anchor fa fa-link"></a></tt> and <tt class=3D"docutils litera=
l" id=3D"environment-variables-msg-level"><span class=3D"pre">--msg-level</=
span><a href=3D"https://mpv.io/manual/master/#environment-variables-msg-lev=
el" class=3D"anchor fa fa-link"></a></tt>)</dt>
            <dd>Set the initial verbosity level across all message modules =
(default: 0).
            This is an integer, and the resulting verbosity corresponds to =
the number
            of <tt class=3D"docutils literal"><span class=3D"pre">--v</span=
></tt> options passed to the command line.</dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
mpv-leak-report">MPV_LEAK_REPORT<a href=3D"https://mpv.io/manual/master/#en=
vironment-variables-mpv-leak-report" class=3D"anchor fa fa-link"></a></tt><=
/dt>
            <dd>If set to <tt class=3D"docutils literal">1</tt>, enable int=
ernal talloc leak reporting. If set to another
            value, disable leak reporting. If unset, use the default, which=
 normally is
            <tt class=3D"docutils literal">0</tt>. If mpv was built with <t=
t class=3D"docutils literal"><span class=3D"pre">--enable-ta-leak-report</s=
pan></tt>, the default is
            <tt class=3D"docutils literal">1</tt>. If leak reporting was di=
sabled at compile time (<tt class=3D"docutils literal">NDEBUG</tt> in
            custom <tt class=3D"docutils literal">CFLAGS</tt>), this enviro=
nment variable is ignored.</dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
ladspa-path">LADSPA_PATH<a href=3D"https://mpv.io/manual/master/#environmen=
t-variables-ladspa-path" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specifies the search path for LADSPA plugins. If it is unse=
t, fully
            qualified path names must be used.</dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
display">DISPLAY<a href=3D"https://mpv.io/manual/master/#environment-variab=
les-display" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Standard X11 display name to use.</dd>
            <dt>FFmpeg/Libav:</dt>
            <dd><p class=3D"first">This library accesses various environmen=
t variables. However, they are not
            centrally documented, and documenting them is not our job. Ther=
efore, this
            list is incomplete.</p>
            <p>Notable environment variables:</p>
            <dl class=3D"last docutils">
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
http-proxy">http_proxy<a href=3D"https://mpv.io/manual/master/#environment-=
variables-http-proxy" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>URL to proxy for <tt class=3D"docutils literal"><span class=
=3D"pre">http://</span></tt> and <tt class=3D"docutils literal"><span class=
=3D"pre">https://</span></tt> URLs.</dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
no-proxy">no_proxy<a href=3D"https://mpv.io/manual/master/#environment-vari=
ables-no-proxy" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>List of domain patterns for which no proxy should be used.
            List entries are separated by <tt class=3D"docutils literal">,<=
/tt>. Patterns can include <tt class=3D"docutils literal">*</tt>.</dd>
            </dl>
            </dd>
            <dt>libdvdcss:</dt>
            <dd><dl class=3D"first last docutils">
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
dvdcss-cache">DVDCSS_CACHE<a href=3D"https://mpv.io/manual/master/#environm=
ent-variables-dvdcss-cache" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>Specify a directory in which to store title key values. Thi=
s will
            speed up descrambling of DVDs which are in the cache. The
            <tt class=3D"docutils literal">DVDCSS_CACHE</tt> directory is c=
reated if it does not exist, and a
            subdirectory is created named after the DVD's title or manufact=
uring
            date. If <tt class=3D"docutils literal">DVDCSS_CACHE</tt> is no=
t set or is empty, libdvdcss will use
            the default value which is <tt class=3D"docutils literal"><span=
 class=3D"pre">${HOME}/.dvdcss/</span></tt> under Unix and
            the roaming application data directory (<tt class=3D"docutils l=
iteral">%APPDATA%</tt>) under
            Windows. The special value "off" disables caching.</dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
dvdcss-method">DVDCSS_METHOD<a href=3D"https://mpv.io/manual/master/#enviro=
nment-variables-dvdcss-method" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Sets the authentication and decryption m=
ethod that libdvdcss will use
            to read scrambled discs. Can be one of <tt class=3D"docutils li=
teral">title</tt>, <tt class=3D"docutils literal">key</tt> or <tt class=3D"=
docutils literal">disc</tt>.</p>
            <dl class=3D"last docutils">
            <dt>key</dt>
            <dd>is the default method. libdvdcss will use a set of calculat=
ed
            player keys to try to get the disc key. This can fail if the dr=
ive
            does not recognize any of the player keys.</dd>
            <dt>disc</dt>
            <dd>is a fallback method when key has failed. Instead of using =
player
            keys, libdvdcss will crack the disc key using a brute force
            algorithm. This process is CPU intensive and requires 64 MB of
            memory to store temporary data.</dd>
            <dt>title</dt>
            <dd>is the fallback when all other methods have failed. It does=
 not
            rely on a key exchange with the DVD drive, but rather uses a cr=
ypto
            attack to guess the title key. On rare cases this may fail beca=
use
            there is not enough encrypted data on the disc to perform a
            statistical attack, but on the other hand it is the only way to
            decrypt a DVD stored on a hard disc, or a DVD with the wrong re=
gion
            on an RPC2 drive.</dd>
            </dl>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
dvdcss-raw-device">DVDCSS_RAW_DEVICE<a href=3D"https://mpv.io/manual/master=
/#environment-variables-dvdcss-raw-device" class=3D"anchor fa fa-link"></a>=
</tt></dt>
            <dd>Specify the raw device to use. Exact usage will depend on y=
our
            operating system, the Linux utility to set up raw devices is ra=
w(8)
            for instance. Please note that on most operating systems, using=
 a raw
            device requires highly aligned buffers: Linux requires a 2048 b=
ytes
            alignment (which is the size of a DVD sector).</dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
dvdcss-verbose">DVDCSS_VERBOSE<a href=3D"https://mpv.io/manual/master/#envi=
ronment-variables-dvdcss-verbose" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd><p class=3D"first">Sets the libdvdcss verbosity level.</p>
            <table class=3D"last docutils field-list" frame=3D"void" rules=
=3D"none">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">0:</th><td class=
=3D"field-body">Outputs no messages at all.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">1:</th><td class=
=3D"field-body">Outputs error messages to stderr.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2:</th><td class=
=3D"field-body">Outputs error messages and debug messages to stderr.</td>
            </tr>
            </tbody>
            </table>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
dvdread-nokeys">DVDREAD_NOKEYS<a href=3D"https://mpv.io/manual/master/#envi=
ronment-variables-dvdread-nokeys" class=3D"anchor fa fa-link"></a></tt></dt=
>
            <dd>Skip retrieving all keys on startup. Currently disabled.</d=
d>
            <dt><tt class=3D"docutils literal" id=3D"environment-variables-=
home">HOME<a href=3D"https://mpv.io/manual/master/#environment-variables-ho=
me" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd>FIXME: Document this.</dd>
            </dl>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"exit-codes">
            <h1>EXIT CODES</h1>
            <p>Normally <strong>mpv</strong> returns 0 as exit code after f=
inishing playback successfully.
            If errors happen, the following exit codes can be returned:</p>
            <blockquote>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">1:</th><td class=
=3D"field-body">Error initializing mpv. This is also returned if unknown op=
tions are
            passed to mpv.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2:</th><td class=
=3D"field-body">The file passed to mpv couldn't be played. This is somewhat=
 fuzzy:
            currently, playback of a file is considered to be successful if
            initialization was mostly successful, even if playback fails
            immediately after initialization.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">3:</th><td class=
=3D"field-body">There were some files that could be played, and some files =
which
            couldn't (using the definition of success from above).</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">4:</th><td class=
=3D"field-body">Quit due to a signal, Ctrl+c in a VO window (by default), o=
r from the
            default quit key bindings in encoding mode.</td>
            </tr>
            </tbody>
            </table>
            </blockquote>
            <p>Note that quitting the player manually will always lead to e=
xit code 0,
            overriding the exit code that would be returned normally. Also,=
 the <tt class=3D"docutils literal">quit</tt>
            input command can take an exit code: in this case, that exit co=
de is returned.</p>
            </div>
            <div class=3D"section" id=3D"files">
            <h1>FILES</h1>
            <p>Note that this section assumes Linux/BSD. On other platforms=
 the paths may be different.
            For Windows-specifics, see <a class=3D"reference internal" href=
=3D"https://mpv.io/manual/master/#files-on-windows">FILES ON WINDOWS</a> se=
ction.</p>
            <dl class=3D"docutils">
            <dt><tt class=3D"docutils literal" id=3D"files-/usr/local/etc/m=
pv/mpv-conf">/usr/local/etc/mpv/mpv.conf<a href=3D"https://mpv.io/manual/ma=
ster/#files-/usr/local/etc/mpv/mpv-conf" class=3D"anchor fa fa-link"></a></=
tt></dt>
            <dd>mpv system-wide settings (depends on <tt class=3D"docutils =
literal"><span class=3D"pre">--prefix</span></tt> passed to configure - mpv
            in default configuration will use <tt class=3D"docutils literal=
">/usr/local/etc/mpv/</tt> as config
            directory, while most Linux distributions will set it to <tt cl=
ass=3D"docutils literal">/etc/mpv/</tt>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-cache/mpv"><s=
pan class=3D"pre">~/.cache/mpv</span><a href=3D"https://mpv.io/manual/maste=
r/#files-~/-cache/mpv" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The standard cache directory. Certain op=
tions within mpv may cause it to write
            cache files to disk. This can be overridden by environment vari=
ables, in
            ascending order:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">1:</th><td class=
=3D"field-body">If <tt class=3D"docutils literal">$XDG_CACHE_HOME</tt> is s=
et, then the derived cache directory
            will be <tt class=3D"docutils literal">$XDG_CACHE_HOME/mpv</tt>=
.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2:</th><td class=
=3D"field-body">If <tt class=3D"docutils literal">$MPV_HOME</tt> is set, th=
en the derived cache directory will be
            <tt class=3D"docutils literal">$MPV_HOME</tt>.</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">If the directory does not exist, mpv will try=
 to create it automatically.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv"><=
span class=3D"pre">~/.config/mpv</span><a href=3D"https://mpv.io/manual/mas=
ter/#files-~/-config/mpv" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The standard configuration directory. Th=
is can be overridden by environment
            variables, in ascending order:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">1:</th><td class=
=3D"field-body">If <tt class=3D"docutils literal">$XDG_CONFIG_HOME</tt> is =
set, then the derived configuration directory
            will be <tt class=3D"docutils literal">$XDG_CONFIG_HOME/mpv</tt=
>.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2:</th><td class=
=3D"field-body">If <tt class=3D"docutils literal">$MPV_HOME</tt> is set, th=
en the derived configuration directory will be
            <tt class=3D"docutils literal">$MPV_HOME</tt>.</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">If this directory, nor the original configura=
tion directory (see below) do
            not exist, mpv tries to create this directory automatically.</p=
>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-mpv/"><span c=
lass=3D"pre">~/.mpv/</span><a href=3D"https://mpv.io/manual/master/#files-~=
/-mpv/" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">The original (pre 0.5.0) configuration d=
irectory. It will continue to be
            read if present. If this directory is present and the standard =
configuration
            directory is not present, then cache files and watch later conf=
ig files will
            also be written to this directory.</p>
            <p class=3D"last">If both this directory and the standard confi=
guration directory are
            present, configuration will be read from both with the standard
            configuration directory content taking precedence. However, you=
 should
            fully migrate to the standard directory and a warning will be s=
hown in
            this situation.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv/mp=
v-conf"><span class=3D"pre">~/.config/mpv/mpv.conf</span><a href=3D"https:/=
/mpv.io/manual/master/#files-~/-config/mpv/mpv-conf" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd>mpv user settings (see <a class=3D"reference internal" href=
=3D"https://mpv.io/manual/master/#configuration-files">CONFIGURATION FILES<=
/a> section)</dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv/in=
put-conf"><span class=3D"pre">~/.config/mpv/input.conf</span><a href=3D"htt=
ps://mpv.io/manual/master/#files-~/-config/mpv/input-conf" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd>key bindings (see <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#input-conf">INPUT.CONF</a> section)</dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv/fo=
nts-conf"><span class=3D"pre">~/.config/mpv/fonts.conf</span><a href=3D"htt=
ps://mpv.io/manual/master/#files-~/-config/mpv/fonts-conf" class=3D"anchor =
fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Fontconfig fonts.conf that is customized=
 for mpv. You should include system
            fonts.conf in this file or mpv would not know about fonts that =
you already
            have in the system.</p>
            <p class=3D"last">Only available when libass is built with font=
config.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv/su=
bfont-ttf"><span class=3D"pre">~/.config/mpv/subfont.ttf</span><a href=3D"h=
ttps://mpv.io/manual/master/#files-~/-config/mpv/subfont-ttf" class=3D"anch=
or fa fa-link"></a></tt></dt>
            <dd>fallback subtitle font</dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv/fo=
nts/"><span class=3D"pre">~/.config/mpv/fonts/</span><a href=3D"https://mpv=
.io/manual/master/#files-~/-config/mpv/fonts/" class=3D"anchor fa fa-link">=
</a></tt></dt>
            <dd>Default location for <tt class=3D"docutils literal"><span c=
lass=3D"pre">--sub-fonts-dir</span></tt> (see <a class=3D"reference interna=
l" href=3D"https://mpv.io/manual/master/#subtitles">Subtitles</a>) and
            <tt class=3D"docutils literal"><span class=3D"pre">--osd-fonts-=
dir</span></tt> (see <a class=3D"reference internal" href=3D"https://mpv.io=
/manual/master/#osd">OSD</a>).</dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv/sc=
ripts/"><span class=3D"pre">~/.config/mpv/scripts/</span><a href=3D"https:/=
/mpv.io/manual/master/#files-~/-config/mpv/scripts/" class=3D"anchor fa fa-=
link"></a></tt></dt>
            <dd><p class=3D"first">All files in this directory are loaded a=
s if they were passed to the
            <tt class=3D"docutils literal"><span class=3D"pre">--script</sp=
an></tt> option. They are loaded in alphabetical order.</p>
            <p>The <tt class=3D"docutils literal"><span class=3D"pre">--loa=
d-scripts=3Dno</span></tt> option disables loading these files.</p>
            <p class=3D"last">See <a class=3D"reference internal" href=3D"h=
ttps://mpv.io/manual/master/#script-location">Script location</a> for detai=
ls.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-local/state/m=
pv/watch-later/"><span class=3D"pre">~/.local/state/mpv/watch_later/</span>=
<a href=3D"https://mpv.io/manual/master/#files-~/-local/state/mpv/watch-lat=
er/" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">Contains temporary config files needed f=
or resuming playback of files with
            the watch later feature. See for example the <tt class=3D"docut=
ils literal">Q</tt> key binding, or the
            <tt class=3D"docutils literal"><span class=3D"pre">quit-watch-l=
ater</span></tt> input command.</p>
            <p>This can be overridden by environment variables, in ascendin=
g order:</p>
            <table class=3D"docutils field-list" frame=3D"void" rules=3D"no=
ne">
            <colgroup><col class=3D"field-name">
            <col class=3D"field-body">
            </colgroup><tbody valign=3D"top">
            <tr class=3D"field"><th class=3D"field-name">1:</th><td class=
=3D"field-body">If <tt class=3D"docutils literal">$XDG_STATE_HOME</tt> is s=
et, then the derived watch later directory
            will be <tt class=3D"docutils literal">$XDG_STATE_HOME/mpv/watc=
h_later</tt>.</td>
            </tr>
            <tr class=3D"field"><th class=3D"field-name">2:</th><td class=
=3D"field-body">If <tt class=3D"docutils literal">$MPV_HOME</tt> is set, th=
en the derived watch later directory will be
            <tt class=3D"docutils literal">$MPV_HOME/watch_later</tt>.</td>
            </tr>
            </tbody>
            </table>
            <p class=3D"last">Each file is a small config file which is loa=
ded if the corresponding media
            file is loaded. It contains the playback position and some (not=
 necessarily
            all) settings that were changed during playback. The filenames =
are hashed
            from the full paths of the media files. It's in general not pos=
sible to
            extract the media filename from this hash. However, you can set=
 the
            <tt class=3D"docutils literal"><span class=3D"pre">--write-file=
name-in-watch-later-config</span></tt> option, and the player will
            add the media filename to the contents of the resume config fil=
e.</p>
            </dd>
            <dt><tt class=3D"docutils literal" id=3D"files-~/-config/mpv/sc=
ript-opts/osc-conf"><span class=3D"pre">~/.config/mpv/script-opts/osc.conf<=
/span><a href=3D"https://mpv.io/manual/master/#files-~/-config/mpv/script-o=
pts/osc-conf" class=3D"anchor fa fa-link"></a></tt></dt>
            <dd><p class=3D"first">This is loaded by the OSC script. See th=
e <a class=3D"reference internal" href=3D"https://mpv.io/manual/master/#on-=
screen-controller">ON SCREEN CONTROLLER</a> docs
            for details.</p>
            <p class=3D"last">Other files in this directory are specific to=
 the corresponding scripts
            as well, and the mpv core doesn't touch them.</p>
            </dd>
            </dl>
            </div>
            <div class=3D"section" id=3D"files-on-windows">
            <h1>FILES ON WINDOWS</h1>
            <p>On win32 (if compiled with MinGW, but not Cygwin), the defau=
lt config file
            locations are different. They are generally located under <tt c=
lass=3D"docutils literal"><span class=3D"pre">%APPDATA%/mpv/</span></tt>.
            For example, the path to mpv.conf is <tt class=3D"docutils lite=
ral"><span class=3D"pre">%APPDATA%/mpv/mpv.conf</span></tt>, which maps to
            a system and user-specific path, for example</p>
            <blockquote>
            <tt class=3D"docutils literal"><span class=3D"pre">C:\users\USE=
RNAME\AppData\Roaming\mpv\mpv.conf</span></tt></blockquote>
            <p>You can find the exact path by running <tt class=3D"docutils=
 literal">echo <span class=3D"pre">%APPDATA%\mpv\mpv.conf</span></tt> in cm=
d.exe.</p>
            <p>Other config files (such as <tt class=3D"docutils literal">i=
nput.conf</tt>) are in the same directory. See the
            <a class=3D"reference internal" href=3D"https://mpv.io/manual/m=
aster/#files">FILES</a> section above.</p>
            <p>The cache directory is located at <tt class=3D"docutils lite=
ral"><span class=3D"pre">%LOCALAPPDATA%/mpv</span></tt>.</p>
            <p>The environment variable <tt class=3D"docutils literal">$MPV=
_HOME</tt> completely overrides these, like on
            UNIX.</p>
            <p>If a directory named <tt class=3D"docutils literal">portable=
_config</tt> next to the mpv.exe exists, all
            config will be loaded from this directory only. Watch later con=
fig files and
            cache files are written to this directory as well. (This exists=
 on Windows
            only and is redundant with <tt class=3D"docutils literal">$MPV_=
HOME</tt>. However, since Windows is very
            scripting unfriendly, a wrapper script just setting <tt class=
=3D"docutils literal">$MPV_HOME</tt>, like you
            could do it on other systems, won't work. <tt class=3D"docutils=
 literal">portable_config</tt> is provided for
            convenience to get around this restriction.)</p>
            <p>Config files located in the same directory as <tt class=3D"d=
ocutils literal">mpv.exe</tt> are loaded with
            lower priority. Some config files are loaded only once, which m=
eans that
            e.g. of 2 <tt class=3D"docutils literal">input.conf</tt> files =
located in two config directories, only the
            one from the directory with higher priority will be loaded.</p>
            <p>A third config directory with the lowest priority is the dir=
ectory named <tt class=3D"docutils literal">mpv</tt>
            in the same directory as <tt class=3D"docutils literal">mpv.exe=
</tt>. This used to be the directory with the
            highest priority, but is now discouraged to use and might be re=
moved in the
            future.</p>
            <p>Note that mpv likes to mix <tt class=3D"docutils literal">/<=
/tt> and <tt class=3D"docutils literal">\</tt> path separators for simplici=
ty.
            kernel32.dll accepts this, but cmd.exe does not.</p>
            </div>
            <div class=3D"section" id=3D"files-on-macos">
            <h1>FILES ON MACOS</h1>
            <p>On macOS the watch later directory is located at <tt class=
=3D"docutils literal"><span class=3D"pre">~/.config/mpv/watch_later/</span>=
</tt>
            and the cache directory is set to <tt class=3D"docutils literal=
">~/Library/Caches/io.mpv/</tt>. These directories
            can't be overwritten by enviroment variables.
            Everything else is the same as <a class=3D"reference internal" =
href=3D"https://mpv.io/manual/master/#files">FILES</a>.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <footer>
      <div class=3D"container">
        <small class=3D"pull-left text-muted copyright">
          =C2=A9 2012-2023 mpv.io
        </small>
        <div class=3D"social-icons pull-right">
                    <a target=3D"_blank" href=3D"https://github.com/mpv-pla=
yer/mpv"><i class=3D"fa fa-github-alt"></i>
          </a>

                    <a target=3D"_blank" href=3D"https://twitter.com/mpv_pl=
ayer"><i class=3D"fa fa-twitter"></i>
          </a>

        </div>
      </div>
    </footer>
 =20

</body></html>
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-e288c0f2-6a4c-461d-9c20-804adb2b6bd8@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-b399d2c4-f67e-4bdd-8d72-8707bd9f94cc@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4a1ffbfc-6543-4566-9a45-ea2a0a54c447@mhtml.blink

@charset "utf-8";

.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_=
text > img[src^=3D"https://www.gstatic.com/images/branding/googlelogo"], sp=
an[data-href^=3D"https://www.hcaptcha.com/"] > #icon, #bit-notification-bar=
-iframe, ::-webkit-calendar-picker-indicator { filter: invert(100%) hue-rot=
ate(180deg) contrast(90%) !important; }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-1b29a736-06f7-4095-be78-ff221b5a9fb2@mhtml.blink

@charset "utf-8";

[data-darkreader-inline-bgcolor] { background-color: var(--darkreader-inlin=
e-bgcolor) !important; }

[data-darkreader-inline-bgimage] { background-image: var(--darkreader-inlin=
e-bgimage) !important; }

[data-darkreader-inline-border] { border-color: var(--darkreader-inline-bor=
der) !important; }

[data-darkreader-inline-border-bottom] { border-bottom-color: var(--darkrea=
der-inline-border-bottom) !important; }

[data-darkreader-inline-border-left] { border-left-color: var(--darkreader-=
inline-border-left) !important; }

[data-darkreader-inline-border-right] { border-right-color: var(--darkreade=
r-inline-border-right) !important; }

[data-darkreader-inline-border-top] { border-top-color: var(--darkreader-in=
line-border-top) !important; }

[data-darkreader-inline-boxshadow] { box-shadow: var(--darkreader-inline-bo=
xshadow) !important; }

[data-darkreader-inline-color] { color: var(--darkreader-inline-color) !imp=
ortant; }

[data-darkreader-inline-fill] { fill: var(--darkreader-inline-fill) !import=
ant; }

[data-darkreader-inline-stroke] { stroke: var(--darkreader-inline-stroke) !=
important; }

[data-darkreader-inline-outline] { outline-color: var(--darkreader-inline-o=
utline) !important; }

[data-darkreader-inline-stopcolor] { stop-color: var(--darkreader-inline-st=
opcolor) !important; }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-461f4be5-5974-46c1-b3dd-9c884c6c5f5d@mhtml.blink

@charset "utf-8";

:root { --darkreader-neutral-background: #131516; --darkreader-neutral-text=
: #d8d4cf; --darkreader-selection-background: #004daa; --darkreader-selecti=
on-text: #e8e6e3; }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-3fafb683-0642-4413-8947-7f5958eae0fe@mhtml.blink

@charset "utf-8";

:root { }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-1aa10db8-ae72-4357-8606-dfaccdf551e5@mhtml.blink

@charset "utf-8";

html { background-color: rgb(24, 26, 27) !important; }

html { color-scheme: dark !important; }

html, body { background-color: rgb(24, 26, 27); }

html, body { border-color: rgb(115, 107, 94); color: rgb(232, 230, 227); }

a { color: rgb(51, 145, 255); }

table { border-color: rgb(84, 91, 94); }

::placeholder { color: rgb(178, 171, 161); }

input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill =
{ background-color: rgb(64, 68, 0) !important; color: rgb(232, 230, 227) !i=
mportant; }

::-webkit-scrollbar { background-color: rgb(32, 35, 36); color: rgb(171, 16=
4, 153); }

::-webkit-scrollbar-thumb { background-color: rgb(69, 74, 77); }

::-webkit-scrollbar-thumb:hover { background-color: rgb(87, 94, 98); }

::-webkit-scrollbar-thumb:active { background-color: rgb(72, 78, 81); }

::-webkit-scrollbar-corner { background-color: rgb(24, 26, 27); }

::selection { background-color: rgb(0, 77, 170) !important; color: rgb(232,=
 230, 227) !important; }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-3fd5201c-e0ab-4078-8c82-94b84c2f5ef6@mhtml.blink

@charset "utf-8";

a { background-image: initial; background-color: transparent; }

a:focus { outline-color: initial; }

a:active, a:hover { outline-color: initial; }

abbr[title] { border-bottom-color: initial; }

mark { background-image: initial; background-color: rgb(153, 153, 0); color=
: rgb(232, 230, 227); }

img { border-color: initial; }

fieldset { border-color: rgb(66, 71, 74); }

legend { border-color: initial; }

html { -webkit-tap-highlight-color: transparent; }

body { color: rgb(192, 187, 179); background-color: rgb(24, 26, 27); }

a { color: rgb(211, 138, 211); text-decoration-color: initial; }

a:hover, a:focus { color: rgb(207, 203, 196); text-decoration-color: initia=
l; }

a:focus { outline-color: rgb(186, 123, 0); }

.img-thumbnail { background-color: rgb(24, 26, 27); border-color: rgb(58, 6=
2, 65); }

hr { border-right-color: initial; border-bottom-color: initial; border-left=
-color: initial; border-top-color: rgb(53, 57, 59); }

.sr-only { border-color: initial; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 { color: rgb(206, 202,=
 195); }

h1 small, h1 .small, h2 small, h2 .small, h3 small, h3 .small, h4 small, h4=
 .small, h5 small, h5 .small, h6 small, h6 .small, .h1 small, .h1 .small, .=
h2 small, .h2 .small, .h3 small, .h3 .small, .h4 small, .h4 .small, .h5 sma=
ll, .h5 .small, .h6 small, .h6 .small { color: rgb(157, 148, 136); }

.text-muted { color: rgb(157, 148, 136); }

.text-primary { color: rgb(211, 138, 211); }

.text-primary:hover { color: rgb(221, 164, 221); }

.text-warning { color: rgb(198, 171, 123); }

.text-warning:hover { color: rgb(209, 187, 148); }

.text-danger { color: rgb(194, 102, 100); }

.text-danger:hover { color: rgb(204, 127, 126); }

.text-success { color: rgb(139, 196, 140); }

.text-success:hover { color: rgb(162, 208, 164); }

.text-info { color: rgb(117, 178, 208); }

.text-info:hover { color: rgb(144, 192, 217); }

.page-header { border-bottom-color: rgb(53, 57, 59); }

.list-unstyled, .list-inline { list-style-image: initial; }

abbr[title], abbr[data-original-title] { border-bottom-color: rgb(82, 88, 9=
2); }

blockquote { border-left-color: rgb(53, 57, 59); }

blockquote small, blockquote .small { color: rgb(157, 148, 136); }

blockquote.pull-right { border-right-color: rgb(53, 57, 59); border-left-co=
lor: initial; }

code { color: rgb(221, 73, 110); background-color: rgb(43, 20, 26); }

pre { color: rgb(211, 207, 201); background-color: rgb(30, 32, 33); border-=
color: rgb(62, 68, 70); }

pre code { color: inherit; background-color: transparent; }

table { background-color: transparent; }

.table > thead > tr > th, .table > thead > tr > td, .table > tbody > tr > t=
h, .table > tbody > tr > td, .table > tfoot > tr > th, .table > tfoot > tr =
> td { border-top-color: rgb(58, 62, 65); }

.table > thead > tr > th { border-bottom-color: rgb(58, 62, 65); }

.table > caption + thead > tr:first-child > th, .table > caption + thead > =
tr:first-child > td, .table > colgroup + thead > tr:first-child > th, .tabl=
e > colgroup + thead > tr:first-child > td, .table > thead:first-child > tr=
:first-child > th, .table > thead:first-child > tr:first-child > td { borde=
r-top-color: initial; }

.table > tbody + tbody { border-top-color: rgb(58, 62, 65); }

.table .table { background-color: rgb(24, 26, 27); }

.table-bordered { border-color: rgb(58, 62, 65); }

.table-bordered > thead > tr > th, .table-bordered > thead > tr > td, .tabl=
e-bordered > tbody > tr > th, .table-bordered > tbody > tr > td, .table-bor=
dered > tfoot > tr > th, .table-bordered > tfoot > tr > td { border-color: =
rgb(58, 62, 65); }

.table-striped > tbody > tr:nth-child(2n+1) > td, .table-striped > tbody > =
tr:nth-child(2n+1) > th { background-color: rgb(27, 30, 31); }

.table-hover > tbody > tr:hover > td, .table-hover > tbody > tr:hover > th =
{ background-color: rgb(30, 32, 33); }

.table > thead > tr > .active, .table > thead > .active > td, .table > thea=
d > .active > th, .table > tbody > tr > .active, .table > tbody > .active >=
 td, .table > tbody > .active > th, .table > tfoot > tr > .active, .table >=
 tfoot > .active > td, .table > tfoot > .active > th { background-color: rg=
b(30, 32, 33); }

.table-hover > tbody > tr > .active:hover, .table-hover > tbody > .active:h=
over > td, .table-hover > tbody > .active:hover > th { background-color: rg=
b(37, 40, 42); }

.table > thead > tr > .success, .table > thead > .success > td, .table > th=
ead > .success > th, .table > tbody > tr > .success, .table > tbody > .succ=
ess > td, .table > tbody > .success > th, .table > tfoot > tr > .success, .=
table > tfoot > .success > td, .table > tfoot > .success > th { background-=
color: rgb(41, 60, 23); }

.table-hover > tbody > tr > .success:hover, .table-hover > tbody > .success=
:hover > td, .table-hover > tbody > .success:hover > th { background-color:=
 rgb(48, 71, 27); }

.table > thead > tr > .danger, .table > thead > .danger > td, .table > thea=
d > .danger > th, .table > tbody > tr > .danger, .table > tbody > .danger >=
 td, .table > tbody > .danger > th, .table > tfoot > tr > .danger, .table >=
 tfoot > .danger > td, .table > tfoot > .danger > th { background-color: rg=
b(56, 22, 22); }

.table-hover > tbody > tr > .danger:hover, .table-hover > tbody > .danger:h=
over > td, .table-hover > tbody > .danger:hover > th { background-color: rg=
b(67, 26, 26); }

.table > thead > tr > .warning, .table > thead > .warning > td, .table > th=
ead > .warning > th, .table > tbody > tr > .warning, .table > tbody > .warn=
ing > td, .table > tbody > .warning > th, .table > tfoot > tr > .warning, .=
table > tfoot > .warning > td, .table > tfoot > .warning > th { background-=
color: rgb(47, 40, 5); }

.table-hover > tbody > tr > .warning:hover, .table-hover > tbody > .warning=
:hover > td, .table-hover > tbody > .warning:hover > th { background-color:=
 rgb(58, 49, 6); }

@media (max-width: 767px) {
  .table-responsive { border-color: rgb(58, 62, 65); }
  .table-responsive > .table-bordered { border-color: initial; }
  .table-responsive > .table-bordered > thead > tr > th:first-child, .table=
-responsive > .table-bordered > thead > tr > td:first-child, .table-respons=
ive > .table-bordered > tbody > tr > th:first-child, .table-responsive > .t=
able-bordered > tbody > tr > td:first-child, .table-responsive > .table-bor=
dered > tfoot > tr > th:first-child, .table-responsive > .table-bordered > =
tfoot > tr > td:first-child { border-left-color: initial; }
  .table-responsive > .table-bordered > thead > tr > th:last-child, .table-=
responsive > .table-bordered > thead > tr > td:last-child, .table-responsiv=
e > .table-bordered > tbody > tr > th:last-child, .table-responsive > .tabl=
e-bordered > tbody > tr > td:last-child, .table-responsive > .table-bordere=
d > tfoot > tr > th:last-child, .table-responsive > .table-bordered > tfoot=
 > tr > td:last-child { border-right-color: initial; }
  .table-responsive > .table-bordered > tbody > tr:last-child > th, .table-=
responsive > .table-bordered > tbody > tr:last-child > td, .table-responsiv=
e > .table-bordered > tfoot > tr:last-child > th, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > td { border-bottom-color: initial; }
}

fieldset { border-color: initial; }

legend { color: rgb(211, 207, 201); border-top-color: initial; border-right=
-color: initial; border-left-color: initial; border-bottom-color: rgb(55, 6=
0, 62); }

input[type=3D"file"]:focus, input[type=3D"radio"]:focus, input[type=3D"chec=
kbox"]:focus { outline-color: rgb(186, 123, 0); }

output { color: rgb(178, 172, 162); }

.form-control { color: rgb(178, 172, 162); background-color: rgb(24, 26, 27=
); background-image: none; border-color: rgb(62, 68, 70); box-shadow: rgba(=
0, 0, 0, 0.07) 0px 1px 1px inset; }

.form-control:focus { border-color: rgb(19, 84, 135); outline-color: initia=
l; box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 1px inset, rgba(20, 85, 136, 0.6=
) 0px 0px 8px; }

.form-control::-webkit-input-placeholder { color: rgb(157, 148, 136); }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { background-color: rgb(34, 36, 38); }

.has-warning .help-block, .has-warning .control-label, .has-warning .radio,=
 .has-warning .checkbox, .has-warning .radio-inline, .has-warning .checkbox=
-inline { color: rgb(198, 171, 123); }

.has-warning .form-control { border-color: rgb(137, 108, 59); box-shadow: r=
gba(0, 0, 0, 0.07) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(148, 117, 64); box-sha=
dow: rgba(0, 0, 0, 0.07) 0px 1px 1px inset, rgb(125, 98, 53) 0px 0px 6px; }

.has-warning .input-group-addon { color: rgb(198, 171, 123); border-color: =
rgb(137, 108, 59); background-color: rgb(47, 40, 5); }

.has-error .help-block, .has-error .control-label, .has-error .radio, .has-=
error .checkbox, .has-error .radio-inline, .has-error .checkbox-inline { co=
lor: rgb(194, 102, 100); }

.has-error .form-control { border-color: rgb(133, 53, 52); box-shadow: rgba=
(0, 0, 0, 0.07) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(143, 58, 56); box-shadow=
: rgba(0, 0, 0, 0.07) 0px 1px 1px inset, rgb(111, 45, 44) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(194, 102, 100); border-color: rg=
b(133, 53, 52); background-color: rgb(56, 22, 22); }

.has-success .help-block, .has-success .control-label, .has-success .radio,=
 .has-success .checkbox, .has-success .radio-inline, .has-success .checkbox=
-inline { color: rgb(139, 196, 140); }

.has-success .form-control { border-color: rgb(68, 134, 69); box-shadow: rg=
ba(0, 0, 0, 0.07) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(73, 143, 75); box-shad=
ow: rgba(0, 0, 0, 0.07) 0px 1px 1px inset, rgb(64, 125, 80) 0px 0px 6px; }

.has-success .input-group-addon { color: rgb(139, 196, 140); border-color: =
rgb(68, 134, 69); background-color: rgb(41, 60, 23); }

.help-block { color: rgb(152, 143, 129); }

.btn { background-image: none; border-color: transparent; }

.btn:focus { outline-color: rgb(186, 123, 0); }

.btn:hover, .btn:focus { color: rgb(200, 195, 188); text-decoration-color: =
initial; }

.btn:active, .btn.active { outline-color: initial; background-image: none; =
box-shadow: rgba(0, 0, 0, 0.13) 0px 3px 5px inset; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { box-shadow: none; =
}

.btn-default { color: rgb(200, 195, 188); background-color: rgb(24, 26, 27)=
; border-color: rgb(62, 68, 70); }

.btn-default:hover, .btn-default:focus, .btn-default:active, .btn-default.a=
ctive { color: rgb(200, 195, 188); background-color: rgb(35, 38, 40); borde=
r-color: rgb(71, 77, 80); }

.open .btn-default.dropdown-toggle { color: rgb(200, 195, 188); background-=
color: rgb(35, 38, 40); border-color: rgb(71, 77, 80); }

.btn-default:active, .btn-default.active { background-image: none; }

.open .btn-default.dropdown-toggle { background-image: none; }

.btn-default.disabled, .btn-default.disabled:hover, .btn-default.disabled:f=
ocus, .btn-default.disabled:active, .btn-default.disabled.active, .btn-defa=
ult[disabled], .btn-default[disabled]:hover, .btn-default[disabled]:focus, =
.btn-default[disabled]:active, .btn-default[disabled].active, fieldset[disa=
bled] .btn-default, fieldset[disabled] .btn-default:hover, fieldset[disable=
d] .btn-default:focus, fieldset[disabled] .btn-default:active, fieldset[dis=
abled] .btn-default.active { background-color: rgb(24, 26, 27); border-colo=
r: rgb(62, 68, 70); }

.btn-default .badge { color: rgb(232, 230, 227); background-color: rgb(24, =
26, 27); }

.btn-primary { color: rgb(232, 230, 227); background-color: rgb(91, 34, 91)=
; border-color: rgb(156, 59, 156); }

.btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.a=
ctive { color: rgb(232, 230, 227); background-color: rgb(67, 26, 67); borde=
r-color: rgb(128, 119, 106); }

.open .btn-primary.dropdown-toggle { color: rgb(232, 230, 227); background-=
color: rgb(67, 26, 67); border-color: rgb(128, 119, 106); }

.btn-primary:active, .btn-primary.active { background-image: none; }

.open .btn-primary.dropdown-toggle { background-image: none; }

.btn-primary.disabled, .btn-primary.disabled:hover, .btn-primary.disabled:f=
ocus, .btn-primary.disabled:active, .btn-primary.disabled.active, .btn-prim=
ary[disabled], .btn-primary[disabled]:hover, .btn-primary[disabled]:focus, =
.btn-primary[disabled]:active, .btn-primary[disabled].active, fieldset[disa=
bled] .btn-primary, fieldset[disabled] .btn-primary:hover, fieldset[disable=
d] .btn-primary:focus, fieldset[disabled] .btn-primary:active, fieldset[dis=
abled] .btn-primary.active { background-color: rgb(91, 34, 91); border-colo=
r: rgb(156, 59, 156); }

.btn-primary .badge { color: rgb(211, 138, 211); background-color: rgb(24, =
26, 27); }

.btn-warning { color: rgb(232, 230, 227); background-color: rgb(153, 95, 13=
); border-color: rgb(154, 96, 13); }

.btn-warning:hover, .btn-warning:focus, .btn-warning:active, .btn-warning.a=
ctive { color: rgb(232, 230, 227); background-color: rgb(176, 110, 15); bor=
der-color: rgb(171, 107, 14); }

.open .btn-warning.dropdown-toggle { color: rgb(232, 230, 227); background-=
color: rgb(176, 110, 15); border-color: rgb(171, 107, 14); }

.btn-warning:active, .btn-warning.active { background-image: none; }

.open .btn-warning.dropdown-toggle { background-image: none; }

.btn-warning.disabled, .btn-warning.disabled:hover, .btn-warning.disabled:f=
ocus, .btn-warning.disabled:active, .btn-warning.disabled.active, .btn-warn=
ing[disabled], .btn-warning[disabled]:hover, .btn-warning[disabled]:focus, =
.btn-warning[disabled]:active, .btn-warning[disabled].active, fieldset[disa=
bled] .btn-warning, fieldset[disabled] .btn-warning:hover, fieldset[disable=
d] .btn-warning:focus, fieldset[disabled] .btn-warning:active, fieldset[dis=
abled] .btn-warning.active { background-color: rgb(153, 95, 13); border-col=
or: rgb(154, 96, 13); }

.btn-warning .badge { color: rgb(241, 176, 84); background-color: rgb(24, 2=
6, 27); }

.btn-danger { color: rgb(232, 230, 227); background-color: rgb(148, 35, 32)=
; border-color: rgb(143, 35, 31); }

.btn-danger:hover, .btn-danger:focus, .btn-danger:active, .btn-danger.activ=
e { color: rgb(232, 230, 227); background-color: rgb(168, 40, 36); border-c=
olor: rgb(158, 38, 34); }

.open .btn-danger.dropdown-toggle { color: rgb(232, 230, 227); background-c=
olor: rgb(168, 40, 36); border-color: rgb(158, 38, 34); }

.btn-danger:active, .btn-danger.active { background-image: none; }

.open .btn-danger.dropdown-toggle { background-image: none; }

.btn-danger.disabled, .btn-danger.disabled:hover, .btn-danger.disabled:focu=
s, .btn-danger.disabled:active, .btn-danger.disabled.active, .btn-danger[di=
sabled], .btn-danger[disabled]:hover, .btn-danger[disabled]:focus, .btn-dan=
ger[disabled]:active, .btn-danger[disabled].active, fieldset[disabled] .btn=
-danger, fieldset[disabled] .btn-danger:hover, fieldset[disabled] .btn-dang=
er:focus, fieldset[disabled] .btn-danger:active, fieldset[disabled] .btn-da=
nger.active { background-color: rgb(148, 35, 32); border-color: rgb(143, 35=
, 31); }

.btn-danger .badge { color: rgb(219, 94, 90); background-color: rgb(24, 26,=
 27); }

.btn-success { color: rgb(232, 230, 227); background-color: rgb(77, 133, 58=
); border-color: rgb(55, 125, 55); }

.btn-success:hover, .btn-success:focus, .btn-success:active, .btn-success.a=
ctive { color: rgb(232, 230, 227); background-color: rgb(57, 131, 57); bord=
er-color: rgb(60, 138, 60); }

.open .btn-success.dropdown-toggle { color: rgb(232, 230, 227); background-=
color: rgb(57, 131, 57); border-color: rgb(60, 138, 60); }

.btn-success:active, .btn-success.active { background-image: none; }

.open .btn-success.dropdown-toggle { background-image: none; }

.btn-success.disabled, .btn-success.disabled:hover, .btn-success.disabled:f=
ocus, .btn-success.disabled:active, .btn-success.disabled.active, .btn-succ=
ess[disabled], .btn-success[disabled]:hover, .btn-success[disabled]:focus, =
.btn-success[disabled]:active, .btn-success[disabled].active, fieldset[disa=
bled] .btn-success, fieldset[disabled] .btn-success:hover, fieldset[disable=
d] .btn-success:focus, fieldset[disabled] .btn-success:active, fieldset[dis=
abled] .btn-success.active { background-color: rgb(77, 133, 58); border-col=
or: rgb(55, 125, 55); }

.btn-success .badge { color: rgb(105, 190, 105); background-color: rgb(24, =
26, 27); }

.btn-info { color: rgb(232, 230, 227); background-color: rgb(28, 115, 141);=
 border-color: rgb(28, 115, 140); }

.btn-info:hover, .btn-info:focus, .btn-info:active, .btn-info.active { colo=
r: rgb(232, 230, 227); background-color: rgb(33, 132, 161); border-color: r=
gb(31, 128, 156); }

.open .btn-info.dropdown-toggle { color: rgb(232, 230, 227); background-col=
or: rgb(33, 132, 161); border-color: rgb(31, 128, 156); }

.btn-info:active, .btn-info.active { background-image: none; }

.open .btn-info.dropdown-toggle { background-image: none; }

.btn-info.disabled, .btn-info.disabled:hover, .btn-info.disabled:focus, .bt=
n-info.disabled:active, .btn-info.disabled.active, .btn-info[disabled], .bt=
n-info[disabled]:hover, .btn-info[disabled]:focus, .btn-info[disabled]:acti=
ve, .btn-info[disabled].active, fieldset[disabled] .btn-info, fieldset[disa=
bled] .btn-info:hover, fieldset[disabled] .btn-info:focus, fieldset[disable=
d] .btn-info:active, fieldset[disabled] .btn-info.active { background-color=
: rgb(28, 115, 141); border-color: rgb(28, 115, 140); }

.btn-info .badge { color: rgb(98, 195, 223); background-color: rgb(24, 26, =
27); }

.btn-link { color: rgb(211, 138, 211); }

.btn-link, .btn-link:active, .btn-link[disabled], fieldset[disabled] .btn-l=
ink { background-color: transparent; box-shadow: none; }

.btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active { border-colo=
r: transparent; }

.btn-link:hover, .btn-link:focus { color: rgb(207, 203, 196); text-decorati=
on-color: initial; background-color: transparent; }

.btn-link[disabled]:hover, .btn-link[disabled]:focus, fieldset[disabled] .b=
tn-link:hover, fieldset[disabled] .btn-link:focus { color: rgb(157, 148, 13=
6); text-decoration-color: initial; }

.caret { border-top-color: initial; border-right-color: transparent; border=
-left-color: transparent; }

.dropdown-toggle:focus { outline-color: initial; }

.dropdown-menu { list-style-image: initial; background-color: rgb(24, 26, 2=
7); border-color: rgba(140, 130, 115, 0.15); box-shadow: rgba(0, 0, 0, 0.18=
) 0px 6px 12px; }

.dropdown-menu .divider { background-color: rgb(39, 42, 44); }

.dropdown-menu > li > a { color: rgb(211, 207, 201); }

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus { text-decorat=
ion-color: initial; color: rgb(219, 216, 211); background-color: rgb(30, 32=
, 33); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown=
-menu > .active > a:focus { color: rgb(232, 230, 227); text-decoration-colo=
r: initial; outline-color: initial; background-color: rgb(91, 34, 91); }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .drop=
down-menu > .disabled > a:focus { color: rgb(157, 148, 136); }

.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus =
{ text-decoration-color: initial; background-color: transparent; background=
-image: none; }

.open > a { outline-color: initial; }

.dropdown-header { color: rgb(157, 148, 136); }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { border-top-color: i=
nitial; border-bottom-color: initial; }

.btn-group > .btn:focus, .btn-group-vertical > .btn:focus { outline-color: =
initial; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine-color: initial; }

.btn-group.open .dropdown-toggle { box-shadow: rgba(0, 0, 0, 0.13) 0px 3px =
5px inset; }

.btn-group.open .dropdown-toggle.btn-link { box-shadow: none; }

.input-group-addon { color: rgb(178, 172, 162); background-color: rgb(34, 3=
6, 38); border-color: rgb(62, 68, 70); }

.input-group-addon:first-child { border-right-color: initial; }

.input-group-addon:last-child { border-left-color: initial; }

.nav { list-style-image: initial; }

.nav > li > a:hover, .nav > li > a:focus { text-decoration-color: initial; =
background-color: rgb(34, 36, 38); }

.nav > li.disabled > a { color: rgb(157, 148, 136); }

.nav > li.disabled > a:hover, .nav > li.disabled > a:focus { color: rgb(157=
, 148, 136); text-decoration-color: initial; background-color: transparent;=
 }

.nav .open > a, .nav .open > a:hover, .nav .open > a:focus { background-col=
or: rgb(34, 36, 38); border-color: rgb(151, 57, 151); }

.nav .nav-divider { background-color: rgb(39, 42, 44); }

.nav-tabs { border-bottom-color: rgb(58, 62, 65); }

.nav-tabs > li > a { border-color: transparent; }

.nav-tabs > li > a:hover { border-color: rgb(53, 57, 59) rgb(53, 57, 59) rg=
b(58, 62, 65); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.=
active > a:focus { color: rgb(178, 172, 162); background-color: rgb(24, 26,=
 27); border-color: rgb(58, 62, 65) rgb(58, 62, 65) transparent; }

.nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > =
li.active > a:focus { color: rgb(232, 230, 227); background-color: rgb(91, =
34, 91); }

.nav-tabs-justified, .nav-tabs.nav-justified { border-bottom-color: initial=
; }

.nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a, .=
nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active >=
 a:hover, .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified =
> .active > a:focus { border-color: rgb(58, 62, 65); }

@media (min-width: 768px) {
  .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a { border-b=
ottom-color: rgb(58, 62, 65); }
  .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,=
 .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active=
 > a:hover, .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justifie=
d > .active > a:focus { border-bottom-color: rgb(48, 52, 54); }
}

.navbar { border-color: transparent; }

.navbar-collapse { border-top-color: transparent; box-shadow: rgba(24, 26, =
27, 0.1) 0px 1px 0px inset; }

@media (min-width: 0px) {
  .navbar-collapse { border-top-color: initial; box-shadow: none; }
}

.navbar-brand:hover, .navbar-brand:focus { text-decoration-color: initial; =
}

.navbar-toggle { background-color: transparent; background-image: none; bor=
der-color: transparent; }

@media (max-width: -1px) {
  .navbar-nav .open .dropdown-menu { background-color: transparent; border-=
color: initial; box-shadow: none; }
  .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropd=
own-menu > li > a:focus { background-image: none; }
}

.navbar-form { border-top-color: transparent; border-bottom-color: transpar=
ent; box-shadow: rgba(24, 26, 27, 0.1) 0px 1px 0px inset, rgba(24, 26, 27, =
0.1) 0px 1px 0px; }

@media (min-width: 0px) {
  .navbar-form { border-color: initial; box-shadow: none; }
}

.navbar-default { background-color: rgb(28, 30, 31); border-color: rgb(55, =
59, 62); }

.navbar-default .navbar-brand { color: rgb(157, 148, 136); }

.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus { =
color: rgb(173, 165, 155); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(157, 148, 136); }

.navbar-default .navbar-nav > li > a { color: rgb(157, 148, 136); }

.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > l=
i > a:focus { color: rgb(200, 195, 188); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:hover, .navbar-default .navbar-nav > .active > a:focus { color: r=
gb(178, 172, 162); background-color: rgb(38, 41, 42); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus { co=
lor: rgb(200, 195, 188); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(58, 62, 65); }

.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus =
{ background-color: rgb(43, 47, 49); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(53, 57, 59=
); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(55, 59, 62); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:hover, .navbar-default .navbar-nav > .open > a:focus { background-col=
or: rgb(38, 41, 42); color: rgb(178, 172, 162); }

@media (max-width: -1px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(15=
7, 148, 136); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(200, 1=
95, 188); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(178, 17=
2, 162); background-color: rgb(38, 41, 42); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(2=
00, 195, 188); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(157, 148, 136); }

.navbar-default .navbar-link:hover { color: rgb(200, 195, 188); }

.navbar-inverse { background-color: rgb(66, 0, 66); border-color: rgb(135, =
125, 111); }

.navbar-inverse .navbar-brand { color: rgb(232, 230, 227); }

.navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus { =
color: rgb(232, 230, 227); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(157, 148, 136); }

.navbar-inverse .navbar-nav > li > a { color: rgb(232, 230, 227); }

.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > l=
i > a:focus { color: rgb(232, 230, 227); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:hover, .navbar-inverse .navbar-nav > .active > a:focus { color: r=
gb(232, 230, 227); background-color: rgb(26, 0, 26); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus { co=
lor: rgb(189, 183, 175); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(151, 57, 151); }

.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus =
{ background-color: rgb(91, 34, 91); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(24, 26, 27=
); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(132, 123, 109); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:hover, .navbar-inverse .navbar-nav > .open > a:focus { background-col=
or: rgb(26, 0, 26); color: rgb(232, 230, 227); }

@media (max-width: -1px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(135, 125, 111); }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider { background-co=
lor: rgb(26, 0, 26); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: rgb(23=
2, 230, 227); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(232, 2=
30, 227); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(232, 23=
0, 227); background-color: rgb(26, 0, 26); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(1=
89, 183, 175); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: rgb(232, 230, 227); }

.navbar-inverse .navbar-link:hover { color: rgb(232, 230, 227); }

.breadcrumb { list-style-image: initial; background-color: rgb(30, 32, 33);=
 }

.breadcrumb > li + li::before { color: rgb(200, 195, 188); }

.breadcrumb > .active { color: rgb(157, 148, 136); }

.pagination > li > a, .pagination > li > span { text-decoration-color: init=
ial; background-color: rgb(24, 26, 27); border-color: rgb(58, 62, 65); }

.pagination > li > a:hover, .pagination > li > a:focus, .pagination > li > =
span:hover, .pagination > li > span:focus { background-color: rgb(34, 36, 3=
8); }

.pagination > .active > a, .pagination > .active > a:hover, .pagination > .=
active > a:focus, .pagination > .active > span, .pagination > .active > spa=
n:hover, .pagination > .active > span:focus { color: rgb(232, 230, 227); ba=
ckground-color: rgb(91, 34, 91); border-color: rgb(151, 57, 151); }

.pagination > .disabled > span, .pagination > .disabled > span:hover, .pagi=
nation > .disabled > span:focus, .pagination > .disabled > a, .pagination >=
 .disabled > a:hover, .pagination > .disabled > a:focus { color: rgb(157, 1=
48, 136); background-color: rgb(24, 26, 27); border-color: rgb(58, 62, 65);=
 }

.pager { list-style-image: initial; }

.pager li > a, .pager li > span { background-color: rgb(24, 26, 27); border=
-color: rgb(58, 62, 65); }

.pager li > a:hover, .pager li > a:focus { text-decoration-color: initial; =
background-color: rgb(34, 36, 38); }

.pager .disabled > a, .pager .disabled > a:hover, .pager .disabled > a:focu=
s, .pager .disabled > span { color: rgb(157, 148, 136); background-color: r=
gb(24, 26, 27); }

.label { color: rgb(232, 230, 227); }

.label[href]:hover, .label[href]:focus { color: rgb(232, 230, 227); text-de=
coration-color: initial; }

.label-default { background-color: rgb(91, 99, 103); }

.label-default[href]:hover, .label-default[href]:focus { background-color: =
rgb(84, 91, 94); }

.label-primary { background-color: rgb(91, 34, 91); }

.label-primary[href]:hover, .label-primary[href]:focus { background-color: =
rgb(62, 23, 62); }

.label-success { background-color: rgb(77, 133, 58); }

.label-success[href]:hover, .label-success[href]:focus { background-color: =
rgb(54, 126, 54); }

.label-info { background-color: rgb(28, 115, 141); }

.label-info[href]:hover, .label-info[href]:focus { background-color: rgb(34=
, 136, 166); }

.label-warning { background-color: rgb(153, 95, 13); }

.label-warning[href]:hover, .label-warning[href]:focus { background-color: =
rgb(181, 113, 15); }

.label-danger { background-color: rgb(148, 35, 32); }

.label-danger[href]:hover, .label-danger[href]:focus { background-color: rg=
b(161, 38, 35); }

.badge { color: rgb(232, 230, 227); background-color: rgb(91, 99, 103); }

a.badge:hover, a.badge:focus { color: rgb(232, 230, 227); text-decoration-c=
olor: initial; }

a.list-group-item.active > .badge, .nav-pills > .active > a > .badge { colo=
r: rgb(211, 138, 211); background-color: rgb(24, 26, 27); }

.jumbotron { color: rgb(157, 148, 136); background-color: rgb(26, 28, 29); =
}

.jumbotron h1, .jumbotron .h1 { color: inherit; }

.thumbnail { background-color: rgb(24, 26, 27); border-color: rgb(58, 62, 6=
5); }

.thumbnail .caption { color: rgb(192, 187, 179); }

a.thumbnail:hover, a.thumbnail:focus, a.thumbnail.active { border-color: rg=
b(151, 57, 151); }

.alert { border-color: transparent; }

.alert h4 { color: inherit; }

.alert-dismissable .close { color: inherit; }

.alert-success { background-color: rgb(41, 60, 23); border-color: rgb(60, 9=
1, 35); color: rgb(139, 196, 140); }

.alert-success hr { border-top-color: rgb(65, 97, 37); }

.alert-success .alert-link { color: rgb(162, 208, 164); }

.alert-info { background-color: rgb(14, 48, 65); border-color: rgb(22, 90, =
104); color: rgb(117, 178, 208); }

.alert-info hr { border-top-color: rgb(24, 97, 111); }

.alert-info .alert-link { color: rgb(144, 192, 217); }

.alert-warning { background-color: rgb(47, 40, 5); border-color: rgb(108, 7=
6, 11); color: rgb(198, 171, 123); }

.alert-warning hr { border-top-color: rgb(114, 80, 12); }

.alert-warning .alert-link { color: rgb(209, 187, 148); }

.alert-danger { background-color: rgb(56, 22, 22); border-color: rgb(89, 35=
, 43); color: rgb(194, 102, 100); }

.alert-danger hr { border-top-color: rgb(95, 36, 46); }

.alert-danger .alert-link { color: rgb(204, 127, 126); }

.progress { background-color: rgb(30, 32, 33); box-shadow: rgba(0, 0, 0, 0.=
1) 0px 1px 2px inset; }

.progress-bar { color: rgb(232, 230, 227); background-color: rgb(91, 34, 91=
); box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset; }

.progress-striped .progress-bar { background-image: linear-gradient(45deg, =
rgba(24, 26, 27, 0.15) 25%, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 0) 50%, rgb=
a(24, 26, 27, 0.15) 50%, rgba(24, 26, 27, 0.15) 75%, rgba(0, 0, 0, 0) 75%, =
rgba(0, 0, 0, 0)); }

.progress-bar-success { background-color: rgb(77, 133, 58); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(24, 26, 27, 0.15) 25%, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 0) =
50%, rgba(24, 26, 27, 0.15) 50%, rgba(24, 26, 27, 0.15) 75%, rgba(0, 0, 0, =
0) 75%, rgba(0, 0, 0, 0)); }

.progress-bar-info { background-color: rgb(28, 115, 141); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(24, 26, 27, 0.15) 25%, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 0) 50%=
, rgba(24, 26, 27, 0.15) 50%, rgba(24, 26, 27, 0.15) 75%, rgba(0, 0, 0, 0) =
75%, rgba(0, 0, 0, 0)); }

.progress-bar-warning { background-color: rgb(153, 95, 13); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(24, 26, 27, 0.15) 25%, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 0) =
50%, rgba(24, 26, 27, 0.15) 50%, rgba(24, 26, 27, 0.15) 75%, rgba(0, 0, 0, =
0) 75%, rgba(0, 0, 0, 0)); }

.progress-bar-danger { background-color: rgb(148, 35, 32); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(24, 26, 27, 0.15) 25%, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 0) 5=
0%, rgba(24, 26, 27, 0.15) 50%, rgba(24, 26, 27, 0.15) 75%, rgba(0, 0, 0, 0=
) 75%, rgba(0, 0, 0, 0)); }

.media-list { list-style-image: initial; }

.list-group-item { background-color: rgb(24, 26, 27); border-color: rgb(58,=
 62, 65); }

a.list-group-item { color: rgb(178, 172, 162); }

a.list-group-item .list-group-item-heading { color: rgb(200, 195, 188); }

a.list-group-item:hover, a.list-group-item:focus { text-decoration-color: i=
nitial; background-color: rgb(30, 32, 33); }

a.list-group-item.active, a.list-group-item.active:hover, a.list-group-item=
.active:focus { color: rgb(232, 230, 227); background-color: rgb(91, 34, 91=
); border-color: rgb(151, 57, 151); }

a.list-group-item.active .list-group-item-heading, a.list-group-item.active=
:hover .list-group-item-heading, a.list-group-item.active:focus .list-group=
-item-heading { color: inherit; }

a.list-group-item.active .list-group-item-text, a.list-group-item.active:ho=
ver .list-group-item-text, a.list-group-item.active:focus .list-group-item-=
text { color: rgb(212, 142, 212); }

.panel { background-color: rgb(24, 26, 27); border-color: transparent; box-=
shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px; }

.panel > .list-group .list-group-item:last-child { border-bottom-color: ini=
tial; }

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive { b=
order-top-color: rgb(58, 62, 65); }

.panel > .table > tbody:first-child th, .panel > .table > tbody:first-child=
 td { border-top-color: initial; }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder-color: initial; }

.panel > .table-bordered > thead > tr > th:first-child, .panel > .table-bor=
dered > thead > tr > td:first-child, .panel > .table-bordered > tbody > tr =
> th:first-child, .panel > .table-bordered > tbody > tr > td:first-child, .=
panel > .table-bordered > tfoot > tr > th:first-child, .panel > .table-bord=
ered > tfoot > tr > td:first-child, .panel > .table-responsive > .table-bor=
dered > thead > tr > th:first-child, .panel > .table-responsive > .table-bo=
rdered > thead > tr > td:first-child, .panel > .table-responsive > .table-b=
ordered > tbody > tr > th:first-child, .panel > .table-responsive > .table-=
bordered > tbody > tr > td:first-child, .panel > .table-responsive > .table=
-bordered > tfoot > tr > th:first-child, .panel > .table-responsive > .tabl=
e-bordered > tfoot > tr > td:first-child { border-left-color: initial; }

.panel > .table-bordered > thead > tr > th:last-child, .panel > .table-bord=
ered > thead > tr > td:last-child, .panel > .table-bordered > tbody > tr > =
th:last-child, .panel > .table-bordered > tbody > tr > td:last-child, .pane=
l > .table-bordered > tfoot > tr > th:last-child, .panel > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child { border-right-color: initial; }

.panel > .table-bordered > thead > tr:last-child > th, .panel > .table-bord=
ered > thead > tr:last-child > td, .panel > .table-bordered > tbody > tr:la=
st-child > th, .panel > .table-bordered > tbody > tr:last-child > td, .pane=
l > .table-bordered > tfoot > tr:last-child > th, .panel > .table-bordered =
> tfoot > tr:last-child > td, .panel > .table-responsive > .table-bordered =
> thead > tr:last-child > th, .panel > .table-responsive > .table-bordered =
> thead > tr:last-child > td, .panel > .table-responsive > .table-bordered =
> tbody > tr:last-child > th, .panel > .table-responsive > .table-bordered =
> tbody > tr:last-child > td, .panel > .table-responsive > .table-bordered =
> tfoot > tr:last-child > th, .panel > .table-responsive > .table-bordered =
> tfoot > tr:last-child > td { border-bottom-color: initial; }

.panel > .table-responsive { border-color: initial; }

.panel-heading { border-bottom-color: transparent; }

.panel-heading > .dropdown .dropdown-toggle { color: inherit; }

.panel-title { color: inherit; }

.panel-title > a { color: inherit; }

.panel-footer { background-color: rgb(30, 32, 33); border-top-color: rgb(58=
, 62, 65); }

.panel-group .panel-heading { border-bottom-color: initial; }

.panel-group .panel-heading + .panel-collapse .panel-body { border-top-colo=
r: rgb(58, 62, 65); }

.panel-group .panel-footer { border-top-color: initial; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom-co=
lor: rgb(58, 62, 65); }

.panel-default { border-color: rgb(58, 62, 65); }

.panel-default > .panel-heading { color: rgb(211, 207, 201); background-col=
or: rgb(30, 32, 33); border-color: rgb(58, 62, 65); }

.panel-default > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(58, 62, 65); }

.panel-default > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(58, 62, 65); }

.panel-primary { border-color: rgb(151, 57, 151); }

.panel-primary > .panel-heading { color: rgb(232, 230, 227); background-col=
or: rgb(91, 34, 91); border-color: rgb(151, 57, 151); }

.panel-primary > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(151, 57, 151); }

.panel-primary > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(151, 57, 151); }

.panel-success { border-color: rgb(60, 91, 35); }

.panel-success > .panel-heading { color: rgb(139, 196, 140); background-col=
or: rgb(41, 60, 23); border-color: rgb(60, 91, 35); }

.panel-success > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(60, 91, 35); }

.panel-success > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(60, 91, 35); }

.panel-warning { border-color: rgb(108, 76, 11); }

.panel-warning > .panel-heading { color: rgb(198, 171, 123); background-col=
or: rgb(47, 40, 5); border-color: rgb(108, 76, 11); }

.panel-warning > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(108, 76, 11); }

.panel-warning > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(108, 76, 11); }

.panel-danger { border-color: rgb(89, 35, 43); }

.panel-danger > .panel-heading { color: rgb(194, 102, 100); background-colo=
r: rgb(56, 22, 22); border-color: rgb(89, 35, 43); }

.panel-danger > .panel-heading + .panel-collapse .panel-body { border-top-c=
olor: rgb(89, 35, 43); }

.panel-danger > .panel-footer + .panel-collapse .panel-body { border-bottom=
-color: rgb(89, 35, 43); }

.panel-info { border-color: rgb(22, 90, 104); }

.panel-info > .panel-heading { color: rgb(117, 178, 208); background-color:=
 rgb(14, 48, 65); border-color: rgb(22, 90, 104); }

.panel-info > .panel-heading + .panel-collapse .panel-body { border-top-col=
or: rgb(22, 90, 104); }

.panel-info > .panel-footer + .panel-collapse .panel-body { border-bottom-c=
olor: rgb(22, 90, 104); }

.well { background-color: rgb(30, 32, 33); border-color: rgb(56, 61, 63); b=
ox-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(140, 130, 115, 0.15); }

.close { color: rgb(232, 230, 227); text-shadow: rgb(24, 26, 27) 0px 1px 0p=
x; }

.close:hover, .close:focus { color: rgb(232, 230, 227); text-decoration-col=
or: initial; }

button.close { background-image: initial; background-color: transparent; bo=
rder-color: initial; }

.modal-content { background-color: rgb(24, 26, 27); border-color: rgba(140,=
 130, 115, 0.2); box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 9px; outline-color:=
 initial; }

.modal-backdrop { background-color: rgb(0, 0, 0); }

.modal-header { border-bottom-color: rgb(55, 60, 62); }

.modal-footer { border-top-color: rgb(55, 60, 62); }

@media screen and (min-width: 768px) {
  .modal-content { box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px; }
}

.tooltip-inner { color: rgb(232, 230, 227); text-decoration-color: initial;=
 background-color: rgb(0, 0, 0); }

.tooltip-arrow { border-color: transparent; }

.tooltip.top .tooltip-arrow { border-top-color: rgb(140, 130, 115); }

.tooltip.top-left .tooltip-arrow { border-top-color: rgb(140, 130, 115); }

.tooltip.top-right .tooltip-arrow { border-top-color: rgb(140, 130, 115); }

.tooltip.right .tooltip-arrow { border-right-color: rgb(140, 130, 115); }

.tooltip.left .tooltip-arrow { border-left-color: rgb(140, 130, 115); }

.tooltip.bottom .tooltip-arrow { border-bottom-color: rgb(140, 130, 115); }

.tooltip.bottom-left .tooltip-arrow { border-bottom-color: rgb(140, 130, 11=
5); }

.tooltip.bottom-right .tooltip-arrow { border-bottom-color: rgb(140, 130, 1=
15); }

.popover { background-color: rgb(24, 26, 27); border-color: rgba(140, 130, =
115, 0.2); box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10px; }

.popover-title { background-color: rgb(29, 31, 32); border-bottom-color: rg=
b(54, 58, 60); }

.popover .arrow, .popover .arrow::after { border-color: transparent; }

.popover.top .arrow { border-top-color: rgba(140, 130, 115, 0.25); }

.popover.top .arrow::after { border-top-color: rgb(48, 52, 54); }

.popover.right .arrow { border-right-color: rgba(140, 130, 115, 0.25); }

.popover.right .arrow::after { border-right-color: rgb(48, 52, 54); }

.popover.bottom .arrow { border-bottom-color: rgba(140, 130, 115, 0.25); }

.popover.bottom .arrow::after { border-bottom-color: rgb(48, 52, 54); }

.popover.left .arrow { border-left-color: rgba(140, 130, 115, 0.25); }

.popover.left .arrow::after { border-left-color: rgb(48, 52, 54); }

.carousel-control { color: rgb(232, 230, 227); text-shadow: rgba(0, 0, 0, 0=
.6) 0px 1px 2px; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 100%); }

.carousel-control.right { background-image: linear-gradient(to right, rgba(=
0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.5) 100%); }

.carousel-control:hover, .carousel-control:focus { outline-color: initial; =
color: rgb(232, 230, 227); text-decoration-color: initial; }

.carousel-indicators { list-style-image: initial; }

.carousel-indicators li { border-color: rgb(48, 52, 54); background-color: =
transparent; }

.carousel-indicators .active { background-color: rgb(24, 26, 27); }

.carousel-caption { color: rgb(232, 230, 227); text-shadow: rgba(0, 0, 0, 0=
.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

.text-hide { color: transparent; text-shadow: none; background-color: trans=
parent; border-color: initial; }

.fa-border { border-color: rgb(53, 57, 59); }

.fa-inverse { color: rgb(232, 230, 227); }

a:hover { text-decoration-color: initial; }

p a { text-decoration-color: initial; }

p a:hover { background-color: rgb(66, 0, 66); color: rgb(232, 230, 227); }

a:hover .big-circle, a:hover .circle { background-color: rgb(66, 0, 66); }

.jumbotron h1 { color: rgb(232, 230, 227); }

::selection { background-image: initial; background-color: rgba(91, 34, 91,=
 0.3); color: rgb(232, 230, 227); }

.next-steps + footer > .container { border-top-color: rgb(53, 57, 59); }

.jumbotron .screenshot { box-shadow: rgb(0, 0, 0) 0px 0px 10px; }

.main-content { background-image: initial; background-color: rgb(30, 32, 33=
); }

.nav.navbar-nav li:hover { background-image: initial; background-color: rgb=
(91, 34, 91); }

.nav.navbar-nav li.selected::after { background-color: rgb(91, 34, 91); }

.fa.circle { background-color: rgb(91, 34, 91); color: rgb(232, 230, 227); =
}

.fa.big-circle { background-color: rgb(91, 34, 91); color: rgb(232, 230, 22=
7); }

.sticky li a { border-bottom-color: rgb(56, 61, 63); }

.sticky li a:hover { background-image: initial; background-color: rgb(40, 4=
3, 45); }

.sticky li.active > a { background-image: initial; background-color: rgb(91=
, 34, 91); color: rgb(232, 230, 227); }

.borderless, table.borderless td, table.borderless th { border-color: initi=
al; }

a.toc-backref { text-decoration-color: initial; color: rgb(232, 230, 227); =
}

div.admonition, div.attention, div.caution, div.danger, div.error, div.hint=
, div.important, div.note, div.tip, div.warning { border-color: initial; }

div.attention p.admonition-title, div.caution p.admonition-title, div.dange=
r p.admonition-title, div.error p.admonition-title, div.warning p.admonitio=
n-title, .code .error { color: rgb(255, 26, 26); }

div.sidebar { border-color: initial; background-color: rgb(46, 46, 0); }

div.system-messages h1 { color: rgb(255, 26, 26); }

div.system-message { border-color: initial; }

div.system-message p.system-message-title { color: rgb(255, 26, 26); }

ol.arabic { list-style-image: initial; }

ol.loweralpha { list-style-image: initial; }

ol.upperalpha { list-style-image: initial; }

ol.lowerroman { list-style-image: initial; }

ol.upperroman { list-style-image: initial; }

p.rubric { color: rgb(255, 114, 114); }

pre.code .ln { color: rgb(152, 143, 129); }

pre.code, code { background-color: rgb(34, 36, 38); }

pre.code .comment, code .comment { color: rgb(166, 158, 146); }

pre.code .keyword, code .keyword { color: rgb(211, 208, 202); }

pre.code .literal.string, code .literal.string { color: rgb(204, 200, 193);=
 }

pre.code .name.builtin, code .name.builtin { color: rgb(134, 124, 212); }

pre.code .deleted, code .deleted { background-color: rgb(94, 48, 33); }

pre.code .inserted, code .inserted { background-color: rgb(76, 108, 41); }

span.problematic { color: rgb(255, 26, 26); }

table.citation { border-left-color: rgb(84, 91, 94); }

table.footnote { border-left-color: rgb(140, 130, 115); }

table.docutils.booktabs { border-color: initial; }

table.docutils.booktabs * { border-color: initial; }

table.docutils.booktabs th { border-bottom-color: initial; }

.manual-container .section blockquote { border-left-color: initial; }

.manual-container div.admonition, .manual-container div.attention, .manual-=
container div.caution, .manual-container div.danger, .manual-container div.=
error, .manual-container div.hint, .manual-container div.important, .manual=
-container div.note, .manual-container div.tip, .manual-container div.warni=
ng { border-color: rgb(56, 61, 63); }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-98172574-cff3-463e-b62e-d0cee7fadae4@mhtml.blink

@charset "utf-8";

.vimvixen-hint { background-color: rgb(123, 83, 0) !important; border-color=
: rgb(216, 176, 19) !important; color: rgb(243, 232, 200) !important; }

#vimvixen-console-frame { color-scheme: light !important; }

::placeholder { opacity: 0.5 !important; }

#edge-translate-panel-body, .MuiTypography-body1, .nfe-quote-text { color: =
var(--darkreader-neutral-text) !important; }

gr-main-header { background-color: rgb(15, 58, 72) !important; }

.tou-z65h9k, .tou-mignzq, .tou-1b6i2ox, .tou-lnqlqk { background-color: var=
(--darkreader-neutral-background) !important; }

.tou-75mvi { background-color: rgb(3, 32, 41) !important; }

.tou-ta9e87, .tou-1w3fhi0, .tou-1b8t2us, .tou-py7lfi, .tou-1lpmd9d, .tou-1f=
rrtv8, .tou-17ezmgn { background-color: rgb(10, 10, 10) !important; }

.tou-uknfeu { background-color: rgb(35, 22, 3) !important; }

.tou-6i3zyv { background-color: rgb(25, 87, 108) !important; }

div.mermaid-viewer-control-panel .btn { fill: var(--darkreader-neutral-text=
); background-color: var(--darkreader-neutral-background); }

svg g rect.er { fill: var(--darkreader-neutral-background) !important; }

svg g rect.er.entityBox { fill: var(--darkreader-neutral-background) !impor=
tant; }

svg g rect.er.attributeBoxOdd { fill: var(--darkreader-neutral-background) =
!important; }

svg g rect.er.attributeBoxEven { fill: var(--darkreader-selection-backgroun=
d); fill-opacity: 0.8 !important; }

svg rect.er.relationshipLabelBox { fill: var(--darkreader-neutral-backgroun=
d) !important; }

svg g g.nodes rect, svg g g.nodes polygon { fill: var(--darkreader-neutral-=
background) !important; }

svg g rect.task { fill: var(--darkreader-selection-background) !important; =
}

svg line.messageLine0, svg line.messageLine1 { stroke: var(--darkreader-neu=
tral-text) !important; }

div.mermaid .actor { fill: var(--darkreader-neutral-background) !important;=
 }

embed[type=3D"application/pdf"][src=3D"about:blank"] { filter: invert(100%)=
 contrast(90%); }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://mpv.io/stylesheets/all-5783234c.css

@charset "utf-8";

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
nav, section, summary { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

html { font-family: sans-serif; text-size-adjust: 100%; }

body { margin: 0px; }

a { background: transparent; }

a:focus { outline: dotted thin; }

a:active, a:hover { outline: 0px; }

h1 { font-size: 2em; margin: 0.67em 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: bold; }

dfn { font-style: italic; }

hr { box-sizing: content-box; height: 0px; }

mark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }

code, kbd, pre, samp { font-family: monospace, serif; font-size: 1em; }

pre { white-space: pre-wrap; }

q { quotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 0px; }

fieldset { border: 1px solid rgb(192, 192, 192); margin: 0px 2px; padding: =
0.35em 0.625em 0.75em; }

legend { border: 0px; padding: 0px; }

button, input, select, textarea { font-family: inherit; font-size: 100%; ma=
rgin: 0px; }

button, input { line-height: normal; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"search"] { appearance: textfield; box-sizing: content-box; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { appearance: none; }

textarea { overflow: auto; vertical-align: top; }

table { border-collapse: collapse; border-spacing: 0px; }

@media print {
  * { text-shadow: none !important; color: rgb(0, 0, 0) !important; backgro=
und: transparent !important; box-shadow: none !important; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: " (" attr(href) ")"; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  a[href^=3D"javascript:"]::after, a[href^=3D"#"]::after { content: ""; }
  pre, blockquote { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  tr, img { break-inside: avoid; }
  img { max-width: 100% !important; }
  @page { margin: 2cm 0.5cm; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  select { background: rgb(255, 255, 255) !important; }
  .navbar { display: none; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .btn > .caret, .dropup > .btn > .caret { border-top-color: rgb(0, 0, 0) !=
important; }
  .label { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table-bordered th, .table-bordered td { border: 1px solid rgb(221, 221, =
221) !important; }
}

*, ::before, ::after { box-sizing: border-box; }

html { font-size: 62.5%; -webkit-tap-highlight-color: transparent; }

body { font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-si=
ze: 14px; line-height: 1.42857; color: rgb(63, 63, 63); background-color: w=
hite; }

input, button, select, textarea { font-family: inherit; font-size: inherit;=
 line-height: inherit; }

a { color: rgb(114, 43, 114); text-decoration: none; }

a:hover, a:focus { color: rgb(58, 22, 58); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

img { vertical-align: middle; }

.img-responsive { display: block; max-width: 100%; height: auto; }

.img-rounded { border-radius: 6px; }

.img-thumbnail { padding: 4px; line-height: 1.42857; background-color: whit=
e; border: 1px solid rgb(221, 221, 221); border-radius: 4px; transition: al=
l 0.2s ease-in-out 0s; display: inline-block; max-width: 100%; height: auto=
; }

.img-circle { border-radius: 50%; }

hr { margin-top: 20px; margin-bottom: 20px; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgb(238, 238, 238); }

.sr-only { position: absolute; width: 1px; height: 1px; margin: -1px; paddi=
ng: 0px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 { font-family: "Helvet=
ica Neue", Helvetica, Arial, sans-serif; font-weight: 200; line-height: 1.1=
; color: rgb(82, 0, 83); }

h1 small, h1 .small, h2 small, h2 .small, h3 small, h3 .small, h4 small, h4=
 .small, h5 small, h5 .small, h6 small, h6 .small, .h1 small, .h1 .small, .=
h2 small, .h2 .small, .h3 small, .h3 .small, .h4 small, .h4 .small, .h5 sma=
ll, .h5 .small, .h6 small, .h6 .small { font-weight: normal; line-height: 1=
; color: rgb(136, 136, 136); }

h1, h2, h3 { margin-top: 20px; margin-bottom: 10px; }

h1 small, h1 .small, h2 small, h2 .small, h3 small, h3 .small { font-size: =
65%; }

h4, h5, h6 { margin-top: 10px; margin-bottom: 10px; }

h4 small, h4 .small, h5 small, h5 .small, h6 small, h6 .small { font-size: =
75%; }

h1, .h1 { font-size: 36px; }

h2, .h2 { font-size: 30px; }

h3, .h3 { font-size: 24px; }

h4, .h4 { font-size: 18px; }

h5, .h5 { font-size: 14px; }

h6, .h6 { font-size: 12px; }

p { margin: 0px 0px 10px; }

.lead { margin-bottom: 20px; font-size: 16px; font-weight: 200; line-height=
: 1.4; }

@media (min-width: 768px) {
  .lead { font-size: 21px; }
}

small, .small { font-size: 85%; }

cite { font-style: normal; }

.text-muted { color: rgb(136, 136, 136); }

.text-primary { color: rgb(114, 43, 114); }

.text-primary:hover { color: rgb(77, 29, 77); }

.text-warning { color: rgb(138, 109, 59); }

.text-warning:hover { color: rgb(102, 81, 44); }

.text-danger { color: rgb(169, 68, 66); }

.text-danger:hover { color: rgb(132, 53, 52); }

.text-success { color: rgb(60, 118, 61); }

.text-success:hover { color: rgb(43, 84, 44); }

.text-info { color: rgb(49, 112, 143); }

.text-info:hover { color: rgb(36, 82, 105); }

.text-left { text-align: left; }

.text-right { text-align: right; }

.text-center { text-align: center; }

.page-header { padding-bottom: 9px; margin: 40px 0px 20px; border-bottom: 1=
px solid rgb(238, 238, 238); }

ul, ol { margin-top: 0px; margin-bottom: 10px; }

ul ul, ul ol, ol ul, ol ol { margin-bottom: 0px; }

.list-unstyled, .list-inline { padding-left: 0px; list-style: none; }

.list-inline > li { display: inline-block; padding-left: 5px; padding-right=
: 5px; }

.list-inline > li:first-child { padding-left: 0px; }

dl { margin-top: 0px; margin-bottom: 20px; }

dt, dd { line-height: 1.42857; }

dt { font-weight: bold; }

dd { margin-left: 0px; }

@media (min-width: 0px) {
  .dl-horizontal dt { float: left; width: 160px; clear: left; text-align: r=
ight; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
  .dl-horizontal dd { margin-left: 180px; }
  .dl-horizontal dd::before, .dl-horizontal dd::after { content: " "; displ=
ay: table; }
  .dl-horizontal dd::after { clear: both; }
}

abbr[title], abbr[data-original-title] { cursor: help; border-bottom: 1px d=
otted rgb(136, 136, 136); }

.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 10px 20px; margin: 0px 0px 20px; border-left: 5px sol=
id rgb(238, 238, 238); }

blockquote p { font-size: 17.5px; font-weight: 300; line-height: 1.25; }

blockquote p:last-child { margin-bottom: 0px; }

blockquote small, blockquote .small { display: block; line-height: 1.42857;=
 color: rgb(136, 136, 136); }

blockquote small::before, blockquote .small::before { content: "=E2=80=94=
=C2=A0"; }

blockquote.pull-right { padding-right: 15px; padding-left: 0px; border-righ=
t: 5px solid rgb(238, 238, 238); border-left: 0px; }

blockquote.pull-right p, blockquote.pull-right small, blockquote.pull-right=
 .small { text-align: right; }

blockquote.pull-right small::before, blockquote.pull-right .small::before {=
 content: ""; }

blockquote.pull-right small::after, blockquote.pull-right .small::after { c=
ontent: "=C2=A0=E2=80=94"; }

blockquote::before, blockquote::after { content: ""; }

address { margin-bottom: 20px; font-style: normal; line-height: 1.42857; }

code, kbd, pre, samp { font-family: Menlo, Monaco, Consolas, "Courier New",=
 monospace; }

code { padding: 2px 4px; font-size: 90%; color: rgb(199, 37, 78); backgroun=
d-color: rgb(249, 242, 244); white-space: nowrap; border-radius: 4px; }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 1.42857; word-break: break-all; overflow-wrap: break-word; c=
olor: rgb(34, 34, 34); background-color: rgb(245, 245, 245); border: 1px so=
lid rgb(204, 204, 204); border-radius: 4px; }

pre code { padding: 0px; font-size: inherit; color: inherit; white-space: p=
re-wrap; background-color: transparent; border-radius: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { margin-right: auto; margin-left: auto; padding-left: 15px; pad=
ding-right: 15px; }

.container::before, .container::after { content: " "; display: table; }

.container::after { clear: both; }

@media (min-width: 768px) {
  .container { width: 750px; }
}

@media (min-width: 992px) {
  .container { width: 970px; }
}

@media (min-width: 1200px) {
  .container { width: 1029px; }
}

.row { margin-left: -15px; margin-right: -15px; }

.row::before, .row::after { content: " "; display: table; }

.row::after { clear: both; }

.col-xs-12, .col-sm-12, .col-md-12, .col-lg-12, .col-xs-11, .col-sm-11, .co=
l-md-11, .col-lg-11, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-x=
s-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-8, .col-sm-8, .col-md-8, .col=
-lg-8, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-6, .col-sm-6, .c=
ol-md-6, .col-lg-6, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-4, =
.col-sm-4, .col-md-4, .col-lg-4, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3=
, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-1, .col-sm-1, .col-md=
-1, .col-lg-1 { position: relative; min-height: 1px; padding-left: 15px; pa=
dding-right: 15px; }

.col-xs-12, .col-xs-11, .col-xs-10, .col-xs-9, .col-xs-8, .col-xs-7, .col-x=
s-6, .col-xs-5, .col-xs-4, .col-xs-3, .col-xs-2, .col-xs-1 { float: left; }

.col-xs-1 { width: 8.33333%; }

.col-xs-2 { width: 16.6667%; }

.col-xs-3 { width: 25%; }

.col-xs-4 { width: 33.3333%; }

.col-xs-5 { width: 41.6667%; }

.col-xs-6 { width: 50%; }

.col-xs-7 { width: 58.3333%; }

.col-xs-8 { width: 66.6667%; }

.col-xs-9 { width: 75%; }

.col-xs-10 { width: 83.3333%; }

.col-xs-11 { width: 91.6667%; }

.col-xs-12 { width: 100%; }

.col-xs-pull-0 { right: 0%; }

.col-xs-pull-1 { right: 8.33333%; }

.col-xs-pull-2 { right: 16.6667%; }

.col-xs-pull-3 { right: 25%; }

.col-xs-pull-4 { right: 33.3333%; }

.col-xs-pull-5 { right: 41.6667%; }

.col-xs-pull-6 { right: 50%; }

.col-xs-pull-7 { right: 58.3333%; }

.col-xs-pull-8 { right: 66.6667%; }

.col-xs-pull-9 { right: 75%; }

.col-xs-pull-10 { right: 83.3333%; }

.col-xs-pull-11 { right: 91.6667%; }

.col-xs-pull-12 { right: 100%; }

.col-xs-push-0 { left: 0%; }

.col-xs-push-1 { left: 8.33333%; }

.col-xs-push-2 { left: 16.6667%; }

.col-xs-push-3 { left: 25%; }

.col-xs-push-4 { left: 33.3333%; }

.col-xs-push-5 { left: 41.6667%; }

.col-xs-push-6 { left: 50%; }

.col-xs-push-7 { left: 58.3333%; }

.col-xs-push-8 { left: 66.6667%; }

.col-xs-push-9 { left: 75%; }

.col-xs-push-10 { left: 83.3333%; }

.col-xs-push-11 { left: 91.6667%; }

.col-xs-push-12 { left: 100%; }

.col-xs-offset-0 { margin-left: 0%; }

.col-xs-offset-1 { margin-left: 8.33333%; }

.col-xs-offset-2 { margin-left: 16.6667%; }

.col-xs-offset-3 { margin-left: 25%; }

.col-xs-offset-4 { margin-left: 33.3333%; }

.col-xs-offset-5 { margin-left: 41.6667%; }

.col-xs-offset-6 { margin-left: 50%; }

.col-xs-offset-7 { margin-left: 58.3333%; }

.col-xs-offset-8 { margin-left: 66.6667%; }

.col-xs-offset-9 { margin-left: 75%; }

.col-xs-offset-10 { margin-left: 83.3333%; }

.col-xs-offset-11 { margin-left: 91.6667%; }

.col-xs-offset-12 { margin-left: 100%; }

@media (min-width: 768px) {
  .col-sm-12, .col-sm-11, .col-sm-10, .col-sm-9, .col-sm-8, .col-sm-7, .col=
-sm-6, .col-sm-5, .col-sm-4, .col-sm-3, .col-sm-2, .col-sm-1 { float: left;=
 }
  .col-sm-1 { width: 8.33333%; }
  .col-sm-2 { width: 16.6667%; }
  .col-sm-3 { width: 25%; }
  .col-sm-4 { width: 33.3333%; }
  .col-sm-5 { width: 41.6667%; }
  .col-sm-6 { width: 50%; }
  .col-sm-7 { width: 58.3333%; }
  .col-sm-8 { width: 66.6667%; }
  .col-sm-9 { width: 75%; }
  .col-sm-10 { width: 83.3333%; }
  .col-sm-11 { width: 91.6667%; }
  .col-sm-12 { width: 100%; }
  .col-sm-pull-0 { right: 0%; }
  .col-sm-pull-1 { right: 8.33333%; }
  .col-sm-pull-2 { right: 16.6667%; }
  .col-sm-pull-3 { right: 25%; }
  .col-sm-pull-4 { right: 33.3333%; }
  .col-sm-pull-5 { right: 41.6667%; }
  .col-sm-pull-6 { right: 50%; }
  .col-sm-pull-7 { right: 58.3333%; }
  .col-sm-pull-8 { right: 66.6667%; }
  .col-sm-pull-9 { right: 75%; }
  .col-sm-pull-10 { right: 83.3333%; }
  .col-sm-pull-11 { right: 91.6667%; }
  .col-sm-pull-12 { right: 100%; }
  .col-sm-push-0 { left: 0%; }
  .col-sm-push-1 { left: 8.33333%; }
  .col-sm-push-2 { left: 16.6667%; }
  .col-sm-push-3 { left: 25%; }
  .col-sm-push-4 { left: 33.3333%; }
  .col-sm-push-5 { left: 41.6667%; }
  .col-sm-push-6 { left: 50%; }
  .col-sm-push-7 { left: 58.3333%; }
  .col-sm-push-8 { left: 66.6667%; }
  .col-sm-push-9 { left: 75%; }
  .col-sm-push-10 { left: 83.3333%; }
  .col-sm-push-11 { left: 91.6667%; }
  .col-sm-push-12 { left: 100%; }
  .col-sm-offset-0 { margin-left: 0%; }
  .col-sm-offset-1 { margin-left: 8.33333%; }
  .col-sm-offset-2 { margin-left: 16.6667%; }
  .col-sm-offset-3 { margin-left: 25%; }
  .col-sm-offset-4 { margin-left: 33.3333%; }
  .col-sm-offset-5 { margin-left: 41.6667%; }
  .col-sm-offset-6 { margin-left: 50%; }
  .col-sm-offset-7 { margin-left: 58.3333%; }
  .col-sm-offset-8 { margin-left: 66.6667%; }
  .col-sm-offset-9 { margin-left: 75%; }
  .col-sm-offset-10 { margin-left: 83.3333%; }
  .col-sm-offset-11 { margin-left: 91.6667%; }
  .col-sm-offset-12 { margin-left: 100%; }
}

@media (min-width: 992px) {
  .col-md-12, .col-md-11, .col-md-10, .col-md-9, .col-md-8, .col-md-7, .col=
-md-6, .col-md-5, .col-md-4, .col-md-3, .col-md-2, .col-md-1 { float: left;=
 }
  .col-md-1 { width: 8.33333%; }
  .col-md-2 { width: 16.6667%; }
  .col-md-3 { width: 25%; }
  .col-md-4 { width: 33.3333%; }
  .col-md-5 { width: 41.6667%; }
  .col-md-6 { width: 50%; }
  .col-md-7 { width: 58.3333%; }
  .col-md-8 { width: 66.6667%; }
  .col-md-9 { width: 75%; }
  .col-md-10 { width: 83.3333%; }
  .col-md-11 { width: 91.6667%; }
  .col-md-12 { width: 100%; }
  .col-md-pull-0 { right: 0%; }
  .col-md-pull-1 { right: 8.33333%; }
  .col-md-pull-2 { right: 16.6667%; }
  .col-md-pull-3 { right: 25%; }
  .col-md-pull-4 { right: 33.3333%; }
  .col-md-pull-5 { right: 41.6667%; }
  .col-md-pull-6 { right: 50%; }
  .col-md-pull-7 { right: 58.3333%; }
  .col-md-pull-8 { right: 66.6667%; }
  .col-md-pull-9 { right: 75%; }
  .col-md-pull-10 { right: 83.3333%; }
  .col-md-pull-11 { right: 91.6667%; }
  .col-md-pull-12 { right: 100%; }
  .col-md-push-0 { left: 0%; }
  .col-md-push-1 { left: 8.33333%; }
  .col-md-push-2 { left: 16.6667%; }
  .col-md-push-3 { left: 25%; }
  .col-md-push-4 { left: 33.3333%; }
  .col-md-push-5 { left: 41.6667%; }
  .col-md-push-6 { left: 50%; }
  .col-md-push-7 { left: 58.3333%; }
  .col-md-push-8 { left: 66.6667%; }
  .col-md-push-9 { left: 75%; }
  .col-md-push-10 { left: 83.3333%; }
  .col-md-push-11 { left: 91.6667%; }
  .col-md-push-12 { left: 100%; }
  .col-md-offset-0 { margin-left: 0%; }
  .col-md-offset-1 { margin-left: 8.33333%; }
  .col-md-offset-2 { margin-left: 16.6667%; }
  .col-md-offset-3 { margin-left: 25%; }
  .col-md-offset-4 { margin-left: 33.3333%; }
  .col-md-offset-5 { margin-left: 41.6667%; }
  .col-md-offset-6 { margin-left: 50%; }
  .col-md-offset-7 { margin-left: 58.3333%; }
  .col-md-offset-8 { margin-left: 66.6667%; }
  .col-md-offset-9 { margin-left: 75%; }
  .col-md-offset-10 { margin-left: 83.3333%; }
  .col-md-offset-11 { margin-left: 91.6667%; }
  .col-md-offset-12 { margin-left: 100%; }
}

@media (min-width: 1200px) {
  .col-lg-12, .col-lg-11, .col-lg-10, .col-lg-9, .col-lg-8, .col-lg-7, .col=
-lg-6, .col-lg-5, .col-lg-4, .col-lg-3, .col-lg-2, .col-lg-1 { float: left;=
 }
  .col-lg-1 { width: 8.33333%; }
  .col-lg-2 { width: 16.6667%; }
  .col-lg-3 { width: 25%; }
  .col-lg-4 { width: 33.3333%; }
  .col-lg-5 { width: 41.6667%; }
  .col-lg-6 { width: 50%; }
  .col-lg-7 { width: 58.3333%; }
  .col-lg-8 { width: 66.6667%; }
  .col-lg-9 { width: 75%; }
  .col-lg-10 { width: 83.3333%; }
  .col-lg-11 { width: 91.6667%; }
  .col-lg-12 { width: 100%; }
  .col-lg-pull-0 { right: 0%; }
  .col-lg-pull-1 { right: 8.33333%; }
  .col-lg-pull-2 { right: 16.6667%; }
  .col-lg-pull-3 { right: 25%; }
  .col-lg-pull-4 { right: 33.3333%; }
  .col-lg-pull-5 { right: 41.6667%; }
  .col-lg-pull-6 { right: 50%; }
  .col-lg-pull-7 { right: 58.3333%; }
  .col-lg-pull-8 { right: 66.6667%; }
  .col-lg-pull-9 { right: 75%; }
  .col-lg-pull-10 { right: 83.3333%; }
  .col-lg-pull-11 { right: 91.6667%; }
  .col-lg-pull-12 { right: 100%; }
  .col-lg-push-0 { left: 0%; }
  .col-lg-push-1 { left: 8.33333%; }
  .col-lg-push-2 { left: 16.6667%; }
  .col-lg-push-3 { left: 25%; }
  .col-lg-push-4 { left: 33.3333%; }
  .col-lg-push-5 { left: 41.6667%; }
  .col-lg-push-6 { left: 50%; }
  .col-lg-push-7 { left: 58.3333%; }
  .col-lg-push-8 { left: 66.6667%; }
  .col-lg-push-9 { left: 75%; }
  .col-lg-push-10 { left: 83.3333%; }
  .col-lg-push-11 { left: 91.6667%; }
  .col-lg-push-12 { left: 100%; }
  .col-lg-offset-0 { margin-left: 0%; }
  .col-lg-offset-1 { margin-left: 8.33333%; }
  .col-lg-offset-2 { margin-left: 16.6667%; }
  .col-lg-offset-3 { margin-left: 25%; }
  .col-lg-offset-4 { margin-left: 33.3333%; }
  .col-lg-offset-5 { margin-left: 41.6667%; }
  .col-lg-offset-6 { margin-left: 50%; }
  .col-lg-offset-7 { margin-left: 58.3333%; }
  .col-lg-offset-8 { margin-left: 66.6667%; }
  .col-lg-offset-9 { margin-left: 75%; }
  .col-lg-offset-10 { margin-left: 83.3333%; }
  .col-lg-offset-11 { margin-left: 91.6667%; }
  .col-lg-offset-12 { margin-left: 100%; }
}

table { max-width: 100%; background-color: transparent; }

th { text-align: left; }

.table { width: 100%; margin-bottom: 20px; }

.table > thead > tr > th, .table > thead > tr > td, .table > tbody > tr > t=
h, .table > tbody > tr > td, .table > tfoot > tr > th, .table > tfoot > tr =
> td { padding: 8px; line-height: 1.42857; vertical-align: top; border-top:=
 1px solid rgb(221, 221, 221); }

.table > thead > tr > th { vertical-align: bottom; border-bottom: 2px solid=
 rgb(221, 221, 221); }

.table > caption + thead > tr:first-child > th, .table > caption + thead > =
tr:first-child > td, .table > colgroup + thead > tr:first-child > th, .tabl=
e > colgroup + thead > tr:first-child > td, .table > thead:first-child > tr=
:first-child > th, .table > thead:first-child > tr:first-child > td { borde=
r-top: 0px; }

.table > tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table .table { background-color: white; }

.table-condensed > thead > tr > th, .table-condensed > thead > tr > td, .ta=
ble-condensed > tbody > tr > th, .table-condensed > tbody > tr > td, .table=
-condensed > tfoot > tr > th, .table-condensed > tfoot > tr > td { padding:=
 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); }

.table-bordered > thead > tr > th, .table-bordered > thead > tr > td, .tabl=
e-bordered > tbody > tr > th, .table-bordered > tbody > tr > td, .table-bor=
dered > tfoot > tr > th, .table-bordered > tfoot > tr > td { border: 1px so=
lid rgb(221, 221, 221); }

.table-bordered > thead > tr > th, .table-bordered > thead > tr > td { bord=
er-bottom-width: 2px; }

.table-striped > tbody > tr:nth-child(2n+1) > td, .table-striped > tbody > =
tr:nth-child(2n+1) > th { background-color: rgb(249, 249, 249); }

.table-hover > tbody > tr:hover > td, .table-hover > tbody > tr:hover > th =
{ background-color: rgb(245, 245, 245); }

table col[class*=3D"col-"] { position: static; float: none; display: table-=
column; }

table td[class*=3D"col-"], table th[class*=3D"col-"] { float: none; display=
: table-cell; }

.table > thead > tr > .active, .table > thead > .active > td, .table > thea=
d > .active > th, .table > tbody > tr > .active, .table > tbody > .active >=
 td, .table > tbody > .active > th, .table > tfoot > tr > .active, .table >=
 tfoot > .active > td, .table > tfoot > .active > th { background-color: rg=
b(245, 245, 245); }

.table-hover > tbody > tr > .active:hover, .table-hover > tbody > .active:h=
over > td, .table-hover > tbody > .active:hover > th { background-color: rg=
b(232, 232, 232); }

.table > thead > tr > .success, .table > thead > .success > td, .table > th=
ead > .success > th, .table > tbody > tr > .success, .table > tbody > .succ=
ess > td, .table > tbody > .success > th, .table > tfoot > tr > .success, .=
table > tfoot > .success > td, .table > tfoot > .success > th { background-=
color: rgb(223, 240, 216); }

.table-hover > tbody > tr > .success:hover, .table-hover > tbody > .success=
:hover > td, .table-hover > tbody > .success:hover > th { background-color:=
 rgb(208, 233, 198); }

.table > thead > tr > .danger, .table > thead > .danger > td, .table > thea=
d > .danger > th, .table > tbody > tr > .danger, .table > tbody > .danger >=
 td, .table > tbody > .danger > th, .table > tfoot > tr > .danger, .table >=
 tfoot > .danger > td, .table > tfoot > .danger > th { background-color: rg=
b(242, 222, 222); }

.table-hover > tbody > tr > .danger:hover, .table-hover > tbody > .danger:h=
over > td, .table-hover > tbody > .danger:hover > th { background-color: rg=
b(235, 204, 204); }

.table > thead > tr > .warning, .table > thead > .warning > td, .table > th=
ead > .warning > th, .table > tbody > tr > .warning, .table > tbody > .warn=
ing > td, .table > tbody > .warning > th, .table > tfoot > tr > .warning, .=
table > tfoot > .warning > td, .table > tfoot > .warning > th { background-=
color: rgb(252, 248, 227); }

.table-hover > tbody > tr > .warning:hover, .table-hover > tbody > .warning=
:hover > td, .table-hover > tbody > .warning:hover > th { background-color:=
 rgb(250, 242, 204); }

@media (max-width: 767px) {
  .table-responsive { width: 100%; margin-bottom: 15px; overflow: scroll hi=
dden; border: 1px solid rgb(221, 221, 221); }
  .table-responsive > .table { margin-bottom: 0px; }
  .table-responsive > .table > thead > tr > th, .table-responsive > .table =
> thead > tr > td, .table-responsive > .table > tbody > tr > th, .table-res=
ponsive > .table > tbody > tr > td, .table-responsive > .table > tfoot > tr=
 > th, .table-responsive > .table > tfoot > tr > td { white-space: nowrap; =
}
  .table-responsive > .table-bordered { border: 0px; }
  .table-responsive > .table-bordered > thead > tr > th:first-child, .table=
-responsive > .table-bordered > thead > tr > td:first-child, .table-respons=
ive > .table-bordered > tbody > tr > th:first-child, .table-responsive > .t=
able-bordered > tbody > tr > td:first-child, .table-responsive > .table-bor=
dered > tfoot > tr > th:first-child, .table-responsive > .table-bordered > =
tfoot > tr > td:first-child { border-left: 0px; }
  .table-responsive > .table-bordered > thead > tr > th:last-child, .table-=
responsive > .table-bordered > thead > tr > td:last-child, .table-responsiv=
e > .table-bordered > tbody > tr > th:last-child, .table-responsive > .tabl=
e-bordered > tbody > tr > td:last-child, .table-responsive > .table-bordere=
d > tfoot > tr > th:last-child, .table-responsive > .table-bordered > tfoot=
 > tr > td:last-child { border-right: 0px; }
  .table-responsive > .table-bordered > tbody > tr:last-child > th, .table-=
responsive > .table-bordered > tbody > tr:last-child > td, .table-responsiv=
e > .table-bordered > tfoot > tr:last-child > th, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > td { border-bottom: 0px; }
}

fieldset { padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: inherit; color: rgb(34, 34, 34); border-width: =
0px 0px 1px; border-top-style: initial; border-right-style: initial; border=
-left-style: initial; border-top-color: initial; border-right-color: initia=
l; border-left-color: initial; border-image: initial; border-bottom-style: =
solid; border-bottom-color: rgb(229, 229, 229); }

label { display: inline-block; margin-bottom: 5px; font-weight: bold; }

input[type=3D"search"] { box-sizing: border-box; }

input[type=3D"radio"], input[type=3D"checkbox"] { margin: 4px 0px 0px; line=
-height: normal; }

input[type=3D"file"] { display: block; }

select[multiple], select[size] { height: auto; }

select optgroup { font-size: inherit; font-style: inherit; font-family: inh=
erit; }

input[type=3D"file"]:focus, input[type=3D"radio"]:focus, input[type=3D"chec=
kbox"]:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: =
-2px; }

input[type=3D"number"]::-webkit-outer-spin-button, input[type=3D"number"]::=
-webkit-inner-spin-button { height: auto; }

output { display: block; padding-top: 7px; font-size: 14px; line-height: 1.=
42857; color: rgb(85, 85, 85); vertical-align: middle; }

.form-control { display: block; width: 100%; height: 34px; padding: 6px 12p=
x; font-size: 14px; line-height: 1.42857; color: rgb(85, 85, 85); vertical-=
align: middle; background-color: rgb(255, 255, 255); background-image: none=
; border: 1px solid rgb(204, 204, 204); border-radius: 4px; box-shadow: rgb=
a(0, 0, 0, 0.075) 0px 1px 1px inset; transition: border-color 0.15s ease-in=
-out 0s, box-shadow 0.15s ease-in-out 0s; }

.form-control:focus { border-color: rgb(102, 175, 233); outline: 0px; box-s=
hadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgba(102, 175, 233, 0.6) 0px=
 0px 8px; }

.form-control::-webkit-input-placeholder { color: rgb(136, 136, 136); }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { cursor: not-allowed; background-color: rgb(238, 238, 238); }

textarea.form-control { height: auto; }

.form-group { margin-bottom: 15px; }

.radio, .checkbox { display: block; min-height: 20px; margin-top: 10px; mar=
gin-bottom: 10px; padding-left: 20px; vertical-align: middle; }

.radio label, .checkbox label { display: inline; margin-bottom: 0px; font-w=
eight: normal; cursor: pointer; }

.radio input[type=3D"radio"], .radio-inline input[type=3D"radio"], .checkbo=
x input[type=3D"checkbox"], .checkbox-inline input[type=3D"checkbox"] { flo=
at: left; margin-left: -20px; }

.radio + .radio, .checkbox + .checkbox { margin-top: -5px; }

.radio-inline, .checkbox-inline { display: inline-block; padding-left: 20px=
; margin-bottom: 0px; vertical-align: middle; font-weight: normal; cursor: =
pointer; }

.radio-inline + .radio-inline, .checkbox-inline + .checkbox-inline { margin=
-top: 0px; margin-left: 10px; }

input[type=3D"radio"][disabled], fieldset[disabled] input[type=3D"radio"], =
input[type=3D"checkbox"][disabled], fieldset[disabled] input[type=3D"checkb=
ox"], .radio[disabled], fieldset[disabled] .radio, .radio-inline[disabled],=
 fieldset[disabled] .radio-inline, .checkbox[disabled], fieldset[disabled] =
.checkbox, .checkbox-inline[disabled], fieldset[disabled] .checkbox-inline =
{ cursor: not-allowed; }

.input-sm, .input-group-sm > .form-control, .input-group-sm > .input-group-=
addon, .input-group-sm > .input-group-btn > .btn { height: 30px; padding: 5=
px 10px; font-size: 12px; line-height: 1.5; border-radius: 3px; }

select.input-sm, .input-group-sm > select.form-control, .input-group-sm > s=
elect.input-group-addon, .input-group-sm > .input-group-btn > select.btn { =
height: 30px; line-height: 30px; }

textarea.input-sm, .input-group-sm > textarea.form-control, .input-group-sm=
 > textarea.input-group-addon, .input-group-sm > .input-group-btn > textare=
a.btn { height: auto; }

.input-lg, .input-group-lg > .form-control, .input-group-lg > .input-group-=
addon, .input-group-lg > .input-group-btn > .btn { height: 46px; padding: 1=
0px 16px; font-size: 18px; line-height: 1.33; border-radius: 6px; }

select.input-lg, .input-group-lg > select.form-control, .input-group-lg > s=
elect.input-group-addon, .input-group-lg > .input-group-btn > select.btn { =
height: 46px; line-height: 46px; }

textarea.input-lg, .input-group-lg > textarea.form-control, .input-group-lg=
 > textarea.input-group-addon, .input-group-lg > .input-group-btn > textare=
a.btn { height: auto; }

.has-warning .help-block, .has-warning .control-label, .has-warning .radio,=
 .has-warning .checkbox, .has-warning .radio-inline, .has-warning .checkbox=
-inline { color: rgb(138, 109, 59); }

.has-warning .form-control { border-color: rgb(138, 109, 59); box-shadow: r=
gba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(102, 81, 44); box-shad=
ow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(192, 161, 107) 0px 0px 6px;=
 }

.has-warning .input-group-addon { color: rgb(138, 109, 59); border-color: r=
gb(138, 109, 59); background-color: rgb(252, 248, 227); }

.has-error .help-block, .has-error .control-label, .has-error .radio, .has-=
error .checkbox, .has-error .radio-inline, .has-error .checkbox-inline { co=
lor: rgb(169, 68, 66); }

.has-error .form-control { border-color: rgb(169, 68, 66); box-shadow: rgba=
(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(132, 53, 52); box-shadow=
: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(206, 132, 131) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(169, 68, 66); border-color: rgb(=
169, 68, 66); background-color: rgb(242, 222, 222); }

.has-success .help-block, .has-success .control-label, .has-success .radio,=
 .has-success .checkbox, .has-success .radio-inline, .has-success .checkbox=
-inline { color: rgb(60, 118, 61); }

.has-success .form-control { border-color: rgb(60, 118, 61); box-shadow: rg=
ba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(43, 84, 44); box-shado=
w: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(103, 177, 104) 0px 0px 6px; =
}

.has-success .input-group-addon { color: rgb(60, 118, 61); border-color: rg=
b(60, 118, 61); background-color: rgb(223, 240, 216); }

.form-control-static { margin-bottom: 0px; }

.help-block { display: block; margin-top: 5px; margin-bottom: 10px; color: =
rgb(127, 127, 127); }

@media (min-width: 768px) {
  .form-inline .form-group, .navbar-form .form-group { display: inline-bloc=
k; margin-bottom: 0px; vertical-align: middle; }
  .form-inline .form-control, .navbar-form .form-control { display: inline-=
block; }
  .form-inline select.form-control, .navbar-form select.form-control { widt=
h: auto; }
  .form-inline .radio, .navbar-form .radio, .form-inline .checkbox, .navbar=
-form .checkbox { display: inline-block; margin-top: 0px; margin-bottom: 0p=
x; padding-left: 0px; }
  .form-inline .radio input[type=3D"radio"], .navbar-form .radio input[type=
=3D"radio"], .form-inline .checkbox input[type=3D"checkbox"], .navbar-form =
.checkbox input[type=3D"checkbox"] { float: none; margin-left: 0px; }
}

.form-horizontal .control-label, .form-horizontal .radio, .form-horizontal =
.checkbox, .form-horizontal .radio-inline, .form-horizontal .checkbox-inlin=
e { margin-top: 0px; margin-bottom: 0px; padding-top: 7px; }

.form-horizontal .radio, .form-horizontal .checkbox { min-height: 27px; }

.form-horizontal .form-group { margin-left: -15px; margin-right: -15px; }

.form-horizontal .form-group::before, .form-horizontal .form-group::after {=
 content: " "; display: table; }

.form-horizontal .form-group::after { clear: both; }

.form-horizontal .form-control-static { padding-top: 7px; }

@media (min-width: 768px) {
  .form-horizontal .control-label { text-align: right; }
}

.btn { display: inline-block; margin-bottom: 0px; font-weight: normal; text=
-align: center; vertical-align: middle; cursor: pointer; background-image: =
none; border: 1px solid transparent; white-space: nowrap; padding: 6px 12px=
; font-size: 14px; line-height: 1.42857; border-radius: 4px; user-select: n=
one; }

.btn:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2=
px; }

.btn:hover, .btn:focus { color: rgb(51, 51, 51); text-decoration: none; }

.btn:active, .btn.active { outline: 0px; background-image: none; box-shadow=
: rgba(0, 0, 0, 0.125) 0px 3px 5px inset; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { cursor: not-allowe=
d; pointer-events: none; opacity: 0.65; box-shadow: none; }

.btn-default { color: rgb(51, 51, 51); background-color: rgb(255, 255, 255)=
; border-color: rgb(204, 204, 204); }

.btn-default:hover, .btn-default:focus, .btn-default:active, .btn-default.a=
ctive { color: rgb(51, 51, 51); background-color: rgb(235, 235, 235); borde=
r-color: rgb(173, 173, 173); }

.open .btn-default.dropdown-toggle { color: rgb(51, 51, 51); background-col=
or: rgb(235, 235, 235); border-color: rgb(173, 173, 173); }

.btn-default:active, .btn-default.active { background-image: none; }

.open .btn-default.dropdown-toggle { background-image: none; }

.btn-default.disabled, .btn-default.disabled:hover, .btn-default.disabled:f=
ocus, .btn-default.disabled:active, .btn-default.disabled.active, .btn-defa=
ult[disabled], .btn-default[disabled]:hover, .btn-default[disabled]:focus, =
.btn-default[disabled]:active, .btn-default[disabled].active, fieldset[disa=
bled] .btn-default, fieldset[disabled] .btn-default:hover, fieldset[disable=
d] .btn-default:focus, fieldset[disabled] .btn-default:active, fieldset[dis=
abled] .btn-default.active { background-color: rgb(255, 255, 255); border-c=
olor: rgb(204, 204, 204); }

.btn-default .badge { color: rgb(255, 255, 255); background-color: rgb(255,=
 255, 255); }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(114, 43, 11=
4); border-color: rgb(95, 36, 95); }

.btn-primary:hover, .btn-primary:focus, .btn-primary:active, .btn-primary.a=
ctive { color: rgb(255, 255, 255); background-color: rgb(84, 32, 84); borde=
r-color: rgb(51, 19, 51); }

.open .btn-primary.dropdown-toggle { color: rgb(255, 255, 255); background-=
color: rgb(84, 32, 84); border-color: rgb(51, 19, 51); }

.btn-primary:active, .btn-primary.active { background-image: none; }

.open .btn-primary.dropdown-toggle { background-image: none; }

.btn-primary.disabled, .btn-primary.disabled:hover, .btn-primary.disabled:f=
ocus, .btn-primary.disabled:active, .btn-primary.disabled.active, .btn-prim=
ary[disabled], .btn-primary[disabled]:hover, .btn-primary[disabled]:focus, =
.btn-primary[disabled]:active, .btn-primary[disabled].active, fieldset[disa=
bled] .btn-primary, fieldset[disabled] .btn-primary:hover, fieldset[disable=
d] .btn-primary:focus, fieldset[disabled] .btn-primary:active, fieldset[dis=
abled] .btn-primary.active { background-color: rgb(114, 43, 114); border-co=
lor: rgb(95, 36, 95); }

.btn-primary .badge { color: rgb(114, 43, 114); background-color: rgb(255, =
255, 255); }

.btn-warning { color: rgb(255, 255, 255); background-color: rgb(240, 173, 7=
8); border-color: rgb(238, 162, 54); }

.btn-warning:hover, .btn-warning:focus, .btn-warning:active, .btn-warning.a=
ctive { color: rgb(255, 255, 255); background-color: rgb(237, 156, 40); bor=
der-color: rgb(213, 133, 18); }

.open .btn-warning.dropdown-toggle { color: rgb(255, 255, 255); background-=
color: rgb(237, 156, 40); border-color: rgb(213, 133, 18); }

.btn-warning:active, .btn-warning.active { background-image: none; }

.open .btn-warning.dropdown-toggle { background-image: none; }

.btn-warning.disabled, .btn-warning.disabled:hover, .btn-warning.disabled:f=
ocus, .btn-warning.disabled:active, .btn-warning.disabled.active, .btn-warn=
ing[disabled], .btn-warning[disabled]:hover, .btn-warning[disabled]:focus, =
.btn-warning[disabled]:active, .btn-warning[disabled].active, fieldset[disa=
bled] .btn-warning, fieldset[disabled] .btn-warning:hover, fieldset[disable=
d] .btn-warning:focus, fieldset[disabled] .btn-warning:active, fieldset[dis=
abled] .btn-warning.active { background-color: rgb(240, 173, 78); border-co=
lor: rgb(238, 162, 54); }

.btn-warning .badge { color: rgb(240, 173, 78); background-color: rgb(255, =
255, 255); }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(217, 83, 79)=
; border-color: rgb(212, 63, 58); }

.btn-danger:hover, .btn-danger:focus, .btn-danger:active, .btn-danger.activ=
e { color: rgb(255, 255, 255); background-color: rgb(210, 50, 45); border-c=
olor: rgb(172, 41, 37); }

.open .btn-danger.dropdown-toggle { color: rgb(255, 255, 255); background-c=
olor: rgb(210, 50, 45); border-color: rgb(172, 41, 37); }

.btn-danger:active, .btn-danger.active { background-image: none; }

.open .btn-danger.dropdown-toggle { background-image: none; }

.btn-danger.disabled, .btn-danger.disabled:hover, .btn-danger.disabled:focu=
s, .btn-danger.disabled:active, .btn-danger.disabled.active, .btn-danger[di=
sabled], .btn-danger[disabled]:hover, .btn-danger[disabled]:focus, .btn-dan=
ger[disabled]:active, .btn-danger[disabled].active, fieldset[disabled] .btn=
-danger, fieldset[disabled] .btn-danger:hover, fieldset[disabled] .btn-dang=
er:focus, fieldset[disabled] .btn-danger:active, fieldset[disabled] .btn-da=
nger.active { background-color: rgb(217, 83, 79); border-color: rgb(212, 63=
, 58); }

.btn-danger .badge { color: rgb(217, 83, 79); background-color: rgb(255, 25=
5, 255); }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(92, 184, 92=
); border-color: rgb(76, 174, 76); }

.btn-success:hover, .btn-success:focus, .btn-success:active, .btn-success.a=
ctive { color: rgb(255, 255, 255); background-color: rgb(71, 164, 71); bord=
er-color: rgb(57, 132, 57); }

.open .btn-success.dropdown-toggle { color: rgb(255, 255, 255); background-=
color: rgb(71, 164, 71); border-color: rgb(57, 132, 57); }

.btn-success:active, .btn-success.active { background-image: none; }

.open .btn-success.dropdown-toggle { background-image: none; }

.btn-success.disabled, .btn-success.disabled:hover, .btn-success.disabled:f=
ocus, .btn-success.disabled:active, .btn-success.disabled.active, .btn-succ=
ess[disabled], .btn-success[disabled]:hover, .btn-success[disabled]:focus, =
.btn-success[disabled]:active, .btn-success[disabled].active, fieldset[disa=
bled] .btn-success, fieldset[disabled] .btn-success:hover, fieldset[disable=
d] .btn-success:focus, fieldset[disabled] .btn-success:active, fieldset[dis=
abled] .btn-success.active { background-color: rgb(92, 184, 92); border-col=
or: rgb(76, 174, 76); }

.btn-success .badge { color: rgb(92, 184, 92); background-color: rgb(255, 2=
55, 255); }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(91, 192, 222);=
 border-color: rgb(70, 184, 218); }

.btn-info:hover, .btn-info:focus, .btn-info:active, .btn-info.active { colo=
r: rgb(255, 255, 255); background-color: rgb(57, 179, 215); border-color: r=
gb(38, 154, 188); }

.open .btn-info.dropdown-toggle { color: rgb(255, 255, 255); background-col=
or: rgb(57, 179, 215); border-color: rgb(38, 154, 188); }

.btn-info:active, .btn-info.active { background-image: none; }

.open .btn-info.dropdown-toggle { background-image: none; }

.btn-info.disabled, .btn-info.disabled:hover, .btn-info.disabled:focus, .bt=
n-info.disabled:active, .btn-info.disabled.active, .btn-info[disabled], .bt=
n-info[disabled]:hover, .btn-info[disabled]:focus, .btn-info[disabled]:acti=
ve, .btn-info[disabled].active, fieldset[disabled] .btn-info, fieldset[disa=
bled] .btn-info:hover, fieldset[disabled] .btn-info:focus, fieldset[disable=
d] .btn-info:active, fieldset[disabled] .btn-info.active { background-color=
: rgb(91, 192, 222); border-color: rgb(70, 184, 218); }

.btn-info .badge { color: rgb(91, 192, 222); background-color: rgb(255, 255=
, 255); }

.btn-link { color: rgb(114, 43, 114); font-weight: normal; cursor: pointer;=
 border-radius: 0px; }

.btn-link, .btn-link:active, .btn-link[disabled], fieldset[disabled] .btn-l=
ink { background-color: transparent; box-shadow: none; }

.btn-link, .btn-link:hover, .btn-link:focus, .btn-link:active { border-colo=
r: transparent; }

.btn-link:hover, .btn-link:focus { color: rgb(58, 22, 58); text-decoration:=
 underline; background-color: transparent; }

.btn-link[disabled]:hover, .btn-link[disabled]:focus, fieldset[disabled] .b=
tn-link:hover, fieldset[disabled] .btn-link:focus { color: rgb(136, 136, 13=
6); text-decoration: none; }

.btn-lg, .btn-group-lg > .btn { padding: 10px 16px; font-size: 18px; line-h=
eight: 1.33; border-radius: 6px; }

.btn-sm, .btn-group-sm > .btn { padding: 5px 10px; font-size: 12px; line-he=
ight: 1.5; border-radius: 3px; }

.btn-xs, .btn-group-xs > .btn { padding: 1px 5px; font-size: 12px; line-hei=
ght: 1.5; border-radius: 3px; }

.btn-block { display: block; width: 100%; padding-left: 0px; padding-right:=
 0px; }

.btn-block + .btn-block { margin-top: 5px; }

input[type=3D"submit"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"button"].btn-block { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear 0s; }

.fade.in { opacity: 1; }

.collapse { display: none; }

.collapse.in { display: block; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
: height 0.35s ease 0s; }

@font-face { font-family: "Glyphicons Halflings"; src: url("/fonts/bootstra=
p/glyphicons-halflings-regular-c6ea7b1a.woff") format("woff"), url("/fonts/=
bootstrap/glyphicons-halflings-regular-536d2b1b.ttf") format("truetype"); }

.glyphicon { position: relative; top: 1px; display: inline-block; font-fami=
ly: "Glyphicons Halflings"; font-style: normal; font-weight: normal; line-h=
eight: 1; -webkit-font-smoothing: antialiased; }

.glyphicon:empty { width: 1em; }

.glyphicon-asterisk::before { content: "*"; }

.glyphicon-plus::before { content: "+"; }

.glyphicon-euro::before { content: "=E2=82=AC"; }

.glyphicon-minus::before { content: "=E2=88=92"; }

.glyphicon-cloud::before { content: "=E2=98=81"; }

.glyphicon-envelope::before { content: "=E2=9C=89"; }

.glyphicon-pencil::before { content: "=E2=9C=8F"; }

.glyphicon-glass::before { content: "=EE=80=81"; }

.glyphicon-music::before { content: "=EE=80=82"; }

.glyphicon-search::before { content: "=EE=80=83"; }

.glyphicon-heart::before { content: "=EE=80=85"; }

.glyphicon-star::before { content: "=EE=80=86"; }

.glyphicon-star-empty::before { content: "=EE=80=87"; }

.glyphicon-user::before { content: "=EE=80=88"; }

.glyphicon-film::before { content: "=EE=80=89"; }

.glyphicon-th-large::before { content: "=EE=80=90"; }

.glyphicon-th::before { content: "=EE=80=91"; }

.glyphicon-th-list::before { content: "=EE=80=92"; }

.glyphicon-ok::before { content: "=EE=80=93"; }

.glyphicon-remove::before { content: "=EE=80=94"; }

.glyphicon-zoom-in::before { content: "=EE=80=95"; }

.glyphicon-zoom-out::before { content: "=EE=80=96"; }

.glyphicon-off::before { content: "=EE=80=97"; }

.glyphicon-signal::before { content: "=EE=80=98"; }

.glyphicon-cog::before { content: "=EE=80=99"; }

.glyphicon-trash::before { content: "=EE=80=A0"; }

.glyphicon-home::before { content: "=EE=80=A1"; }

.glyphicon-file::before { content: "=EE=80=A2"; }

.glyphicon-time::before { content: "=EE=80=A3"; }

.glyphicon-road::before { content: "=EE=80=A4"; }

.glyphicon-download-alt::before { content: "=EE=80=A5"; }

.glyphicon-download::before { content: "=EE=80=A6"; }

.glyphicon-upload::before { content: "=EE=80=A7"; }

.glyphicon-inbox::before { content: "=EE=80=A8"; }

.glyphicon-play-circle::before { content: "=EE=80=A9"; }

.glyphicon-repeat::before { content: "=EE=80=B0"; }

.glyphicon-refresh::before { content: "=EE=80=B1"; }

.glyphicon-list-alt::before { content: "=EE=80=B2"; }

.glyphicon-lock::before { content: "=EE=80=B3"; }

.glyphicon-flag::before { content: "=EE=80=B4"; }

.glyphicon-headphones::before { content: "=EE=80=B5"; }

.glyphicon-volume-off::before { content: "=EE=80=B6"; }

.glyphicon-volume-down::before { content: "=EE=80=B7"; }

.glyphicon-volume-up::before { content: "=EE=80=B8"; }

.glyphicon-qrcode::before { content: "=EE=80=B9"; }

.glyphicon-barcode::before { content: "=EE=81=80"; }

.glyphicon-tag::before { content: "=EE=81=81"; }

.glyphicon-tags::before { content: "=EE=81=82"; }

.glyphicon-book::before { content: "=EE=81=83"; }

.glyphicon-bookmark::before { content: "=EE=81=84"; }

.glyphicon-print::before { content: "=EE=81=85"; }

.glyphicon-camera::before { content: "=EE=81=86"; }

.glyphicon-font::before { content: "=EE=81=87"; }

.glyphicon-bold::before { content: "=EE=81=88"; }

.glyphicon-italic::before { content: "=EE=81=89"; }

.glyphicon-text-height::before { content: "=EE=81=90"; }

.glyphicon-text-width::before { content: "=EE=81=91"; }

.glyphicon-align-left::before { content: "=EE=81=92"; }

.glyphicon-align-center::before { content: "=EE=81=93"; }

.glyphicon-align-right::before { content: "=EE=81=94"; }

.glyphicon-align-justify::before { content: "=EE=81=95"; }

.glyphicon-list::before { content: "=EE=81=96"; }

.glyphicon-indent-left::before { content: "=EE=81=97"; }

.glyphicon-indent-right::before { content: "=EE=81=98"; }

.glyphicon-facetime-video::before { content: "=EE=81=99"; }

.glyphicon-picture::before { content: "=EE=81=A0"; }

.glyphicon-map-marker::before { content: "=EE=81=A2"; }

.glyphicon-adjust::before { content: "=EE=81=A3"; }

.glyphicon-tint::before { content: "=EE=81=A4"; }

.glyphicon-edit::before { content: "=EE=81=A5"; }

.glyphicon-share::before { content: "=EE=81=A6"; }

.glyphicon-check::before { content: "=EE=81=A7"; }

.glyphicon-move::before { content: "=EE=81=A8"; }

.glyphicon-step-backward::before { content: "=EE=81=A9"; }

.glyphicon-fast-backward::before { content: "=EE=81=B0"; }

.glyphicon-backward::before { content: "=EE=81=B1"; }

.glyphicon-play::before { content: "=EE=81=B2"; }

.glyphicon-pause::before { content: "=EE=81=B3"; }

.glyphicon-stop::before { content: "=EE=81=B4"; }

.glyphicon-forward::before { content: "=EE=81=B5"; }

.glyphicon-fast-forward::before { content: "=EE=81=B6"; }

.glyphicon-step-forward::before { content: "=EE=81=B7"; }

.glyphicon-eject::before { content: "=EE=81=B8"; }

.glyphicon-chevron-left::before { content: "=EE=81=B9"; }

.glyphicon-chevron-right::before { content: "=EE=82=80"; }

.glyphicon-plus-sign::before { content: "=EE=82=81"; }

.glyphicon-minus-sign::before { content: "=EE=82=82"; }

.glyphicon-remove-sign::before { content: "=EE=82=83"; }

.glyphicon-ok-sign::before { content: "=EE=82=84"; }

.glyphicon-question-sign::before { content: "=EE=82=85"; }

.glyphicon-info-sign::before { content: "=EE=82=86"; }

.glyphicon-screenshot::before { content: "=EE=82=87"; }

.glyphicon-remove-circle::before { content: "=EE=82=88"; }

.glyphicon-ok-circle::before { content: "=EE=82=89"; }

.glyphicon-ban-circle::before { content: "=EE=82=90"; }

.glyphicon-arrow-left::before { content: "=EE=82=91"; }

.glyphicon-arrow-right::before { content: "=EE=82=92"; }

.glyphicon-arrow-up::before { content: "=EE=82=93"; }

.glyphicon-arrow-down::before { content: "=EE=82=94"; }

.glyphicon-share-alt::before { content: "=EE=82=95"; }

.glyphicon-resize-full::before { content: "=EE=82=96"; }

.glyphicon-resize-small::before { content: "=EE=82=97"; }

.glyphicon-exclamation-sign::before { content: "=EE=84=81"; }

.glyphicon-gift::before { content: "=EE=84=82"; }

.glyphicon-leaf::before { content: "=EE=84=83"; }

.glyphicon-fire::before { content: "=EE=84=84"; }

.glyphicon-eye-open::before { content: "=EE=84=85"; }

.glyphicon-eye-close::before { content: "=EE=84=86"; }

.glyphicon-warning-sign::before { content: "=EE=84=87"; }

.glyphicon-plane::before { content: "=EE=84=88"; }

.glyphicon-calendar::before { content: "=EE=84=89"; }

.glyphicon-random::before { content: "=EE=84=90"; }

.glyphicon-comment::before { content: "=EE=84=91"; }

.glyphicon-magnet::before { content: "=EE=84=92"; }

.glyphicon-chevron-up::before { content: "=EE=84=93"; }

.glyphicon-chevron-down::before { content: "=EE=84=94"; }

.glyphicon-retweet::before { content: "=EE=84=95"; }

.glyphicon-shopping-cart::before { content: "=EE=84=96"; }

.glyphicon-folder-close::before { content: "=EE=84=97"; }

.glyphicon-folder-open::before { content: "=EE=84=98"; }

.glyphicon-resize-vertical::before { content: "=EE=84=99"; }

.glyphicon-resize-horizontal::before { content: "=EE=84=A0"; }

.glyphicon-hdd::before { content: "=EE=84=A1"; }

.glyphicon-bullhorn::before { content: "=EE=84=A2"; }

.glyphicon-bell::before { content: "=EE=84=A3"; }

.glyphicon-certificate::before { content: "=EE=84=A4"; }

.glyphicon-thumbs-up::before { content: "=EE=84=A5"; }

.glyphicon-thumbs-down::before { content: "=EE=84=A6"; }

.glyphicon-hand-right::before { content: "=EE=84=A7"; }

.glyphicon-hand-left::before { content: "=EE=84=A8"; }

.glyphicon-hand-up::before { content: "=EE=84=A9"; }

.glyphicon-hand-down::before { content: "=EE=84=B0"; }

.glyphicon-circle-arrow-right::before { content: "=EE=84=B1"; }

.glyphicon-circle-arrow-left::before { content: "=EE=84=B2"; }

.glyphicon-circle-arrow-up::before { content: "=EE=84=B3"; }

.glyphicon-circle-arrow-down::before { content: "=EE=84=B4"; }

.glyphicon-globe::before { content: "=EE=84=B5"; }

.glyphicon-wrench::before { content: "=EE=84=B6"; }

.glyphicon-tasks::before { content: "=EE=84=B7"; }

.glyphicon-filter::before { content: "=EE=84=B8"; }

.glyphicon-briefcase::before { content: "=EE=84=B9"; }

.glyphicon-fullscreen::before { content: "=EE=85=80"; }

.glyphicon-dashboard::before { content: "=EE=85=81"; }

.glyphicon-paperclip::before { content: "=EE=85=82"; }

.glyphicon-heart-empty::before { content: "=EE=85=83"; }

.glyphicon-link::before { content: "=EE=85=84"; }

.glyphicon-phone::before { content: "=EE=85=85"; }

.glyphicon-pushpin::before { content: "=EE=85=86"; }

.glyphicon-usd::before { content: "=EE=85=88"; }

.glyphicon-gbp::before { content: "=EE=85=89"; }

.glyphicon-sort::before { content: "=EE=85=90"; }

.glyphicon-sort-by-alphabet::before { content: "=EE=85=91"; }

.glyphicon-sort-by-alphabet-alt::before { content: "=EE=85=92"; }

.glyphicon-sort-by-order::before { content: "=EE=85=93"; }

.glyphicon-sort-by-order-alt::before { content: "=EE=85=94"; }

.glyphicon-sort-by-attributes::before { content: "=EE=85=95"; }

.glyphicon-sort-by-attributes-alt::before { content: "=EE=85=96"; }

.glyphicon-unchecked::before { content: "=EE=85=97"; }

.glyphicon-expand::before { content: "=EE=85=98"; }

.glyphicon-collapse-down::before { content: "=EE=85=99"; }

.glyphicon-collapse-up::before { content: "=EE=85=A0"; }

.glyphicon-log-in::before { content: "=EE=85=A1"; }

.glyphicon-flash::before { content: "=EE=85=A2"; }

.glyphicon-log-out::before { content: "=EE=85=A3"; }

.glyphicon-new-window::before { content: "=EE=85=A4"; }

.glyphicon-record::before { content: "=EE=85=A5"; }

.glyphicon-save::before { content: "=EE=85=A6"; }

.glyphicon-open::before { content: "=EE=85=A7"; }

.glyphicon-saved::before { content: "=EE=85=A8"; }

.glyphicon-import::before { content: "=EE=85=A9"; }

.glyphicon-export::before { content: "=EE=85=B0"; }

.glyphicon-send::before { content: "=EE=85=B1"; }

.glyphicon-floppy-disk::before { content: "=EE=85=B2"; }

.glyphicon-floppy-saved::before { content: "=EE=85=B3"; }

.glyphicon-floppy-remove::before { content: "=EE=85=B4"; }

.glyphicon-floppy-save::before { content: "=EE=85=B5"; }

.glyphicon-floppy-open::before { content: "=EE=85=B6"; }

.glyphicon-credit-card::before { content: "=EE=85=B7"; }

.glyphicon-transfer::before { content: "=EE=85=B8"; }

.glyphicon-cutlery::before { content: "=EE=85=B9"; }

.glyphicon-header::before { content: "=EE=86=80"; }

.glyphicon-compressed::before { content: "=EE=86=81"; }

.glyphicon-earphone::before { content: "=EE=86=82"; }

.glyphicon-phone-alt::before { content: "=EE=86=83"; }

.glyphicon-tower::before { content: "=EE=86=84"; }

.glyphicon-stats::before { content: "=EE=86=85"; }

.glyphicon-sd-video::before { content: "=EE=86=86"; }

.glyphicon-hd-video::before { content: "=EE=86=87"; }

.glyphicon-subtitles::before { content: "=EE=86=88"; }

.glyphicon-sound-stereo::before { content: "=EE=86=89"; }

.glyphicon-sound-dolby::before { content: "=EE=86=90"; }

.glyphicon-sound-5-1::before { content: "=EE=86=91"; }

.glyphicon-sound-6-1::before { content: "=EE=86=92"; }

.glyphicon-sound-7-1::before { content: "=EE=86=93"; }

.glyphicon-copyright-mark::before { content: "=EE=86=94"; }

.glyphicon-registration-mark::before { content: "=EE=86=95"; }

.glyphicon-cloud-download::before { content: "=EE=86=97"; }

.glyphicon-cloud-upload::before { content: "=EE=86=98"; }

.glyphicon-tree-conifer::before { content: "=EE=86=99"; }

.glyphicon-tree-deciduous::before { content: "=EE=88=80"; }

.caret { display: inline-block; width: 0px; height: 0px; margin-left: 2px; =
vertical-align: middle; border-top: 4px solid; border-right: 4px solid tran=
sparent; border-left: 4px solid transparent; }

.dropdown { position: relative; }

.dropdown-toggle:focus { outline: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; list-style: none; font-size: 14px; background-color: rgb(255, 255,=
 255); border: 1px solid rgba(0, 0, 0, 0.15); border-radius: 4px; box-shado=
w: rgba(0, 0, 0, 0.176) 0px 6px 12px; background-clip: padding-box; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 0px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); }

.dropdown-menu > li > a { display: block; padding: 3px 20px; clear: both; f=
ont-weight: normal; line-height: 1.42857; color: rgb(34, 34, 34); white-spa=
ce: nowrap; }

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus { text-decorat=
ion: none; color: rgb(21, 21, 21); background-color: rgb(245, 245, 245); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown=
-menu > .active > a:focus { color: rgb(255, 255, 255); text-decoration: non=
e; outline: 0px; background-color: rgb(114, 43, 114); }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .drop=
down-menu > .disabled > a:focus { color: rgb(136, 136, 136); }

.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus =
{ text-decoration: none; background-color: transparent; background-image: n=
one; cursor: not-allowed; }

.open > .dropdown-menu { display: block; }

.open > a { outline: 0px; }

.dropdown-header { display: block; padding: 3px 20px; font-size: 12px; line=
-height: 1.42857; color: rgb(136, 136, 136); }

.dropdown-backdrop { position: fixed; inset: 0px; z-index: 990; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { border-top: 0px; bo=
rder-bottom: 4px solid; content: ""; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 1px; }

@media (min-width: 0px) {
  .navbar-right .dropdown-menu { right: 0px; left: auto; }
}

.btn-group, .btn-group-vertical { position: relative; display: inline-block=
; vertical-align: middle; }

.btn-group > .btn, .btn-group-vertical > .btn { position: relative; float: =
left; }

.btn-group > .btn:hover, .btn-group > .btn:focus, .btn-group > .btn:active,=
 .btn-group > .btn.active, .btn-group-vertical > .btn:hover, .btn-group-ver=
tical > .btn:focus, .btn-group-vertical > .btn:active, .btn-group-vertical =
> .btn.active { z-index: 2; }

.btn-group > .btn:focus, .btn-group-vertical > .btn:focus { outline: none; =
}

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar::before, .btn-toolbar::after { content: " "; display: table; }

.btn-toolbar::after { clear: both; }

.btn-toolbar .btn-group { float: left; }

.btn-toolbar > .btn + .btn, .btn-toolbar > .btn + .btn-group, .btn-toolbar =
> .btn-group + .btn, .btn-toolbar > .btn-group + .btn-group { margin-left: =
5px; }

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) =
{ border-radius: 0px; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) { bord=
er-bottom-right-radius: 0px; border-top-right-radius: 0px; }

.btn-group > .btn:last-child:not(:first-child), .btn-group > .dropdown-togg=
le:not(:first-child) { border-bottom-left-radius: 0px; border-top-left-radi=
us: 0px; }

.btn-group > .btn-group { float: left; }

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn { border-=
radius: 0px; }

.btn-group > .btn-group:first-child > .btn:last-child, .btn-group > .btn-gr=
oup:first-child > .dropdown-toggle { border-bottom-right-radius: 0px; borde=
r-top-right-radius: 0px; }

.btn-group > .btn-group:last-child > .btn:first-child { border-bottom-left-=
radius: 0px; border-top-left-radius: 0px; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group > .btn + .dropdown-toggle { padding-left: 8px; padding-right: 8p=
x; }

.btn-group > .btn-lg + .dropdown-toggle, .btn-group-lg.btn-group > .btn + .=
dropdown-toggle { padding-left: 12px; padding-right: 12px; }

.btn-group.open .dropdown-toggle { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px=
 5px inset; }

.btn-group.open .dropdown-toggle.btn-link { box-shadow: none; }

.btn .caret { margin-left: 0px; }

.btn-lg .caret, .btn-group-lg > .btn .caret { border-width: 5px 5px 0px; }

.dropup .btn-lg .caret, .dropup .btn-group-lg > .btn .caret { border-width:=
 0px 5px 5px; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group, .btn-group-ve=
rtical > .btn-group > .btn { display: block; float: none; width: 100%; max-=
width: 100%; }

.btn-group-vertical > .btn-group::before, .btn-group-vertical > .btn-group:=
:after { content: " "; display: table; }

.btn-group-vertical > .btn-group::after { clear: both; }

.btn-group-vertical > .btn-group > .btn { float: none; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:first-child):not(:last-child) { border-radi=
us: 0px; }

.btn-group-vertical > .btn:first-child:not(:last-child) { border-top-right-=
radius: 4px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0p=
x; }

.btn-group-vertical > .btn:last-child:not(:first-child) { border-bottom-lef=
t-radius: 4px; border-top-right-radius: 0px; border-top-left-radius: 0px; }

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn =
{ border-radius: 0px; }

.btn-group-vertical > .btn-group:first-child > .btn:last-child, .btn-group-=
vertical > .btn-group:first-child > .dropdown-toggle { border-bottom-right-=
radius: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn-group:last-child > .btn:first-child { border-top=
-right-radius: 0px; border-top-left-radius: 0px; }

.btn-group-justified { display: table; width: 100%; table-layout: fixed; bo=
rder-collapse: separate; }

.btn-group-justified > .btn, .btn-group-justified > .btn-group { float: non=
e; display: table-cell; width: 1%; }

.btn-group-justified > .btn-group .btn { width: 100%; }

[data-toggle=3D"buttons"] > .btn > input[type=3D"radio"], [data-toggle=3D"b=
uttons"] > .btn > input[type=3D"checkbox"] { display: none; }

.input-group { position: relative; display: table; border-collapse: separat=
e; }

.input-group[class*=3D"col-"] { float: none; padding-left: 0px; padding-rig=
ht: 0px; }

.input-group .form-control { width: 100%; margin-bottom: 0px; }

.input-group-addon, .input-group-btn, .input-group .form-control { display:=
 table-cell; }

.input-group-addon:not(:first-child):not(:last-child), .input-group-btn:not=
(:first-child):not(:last-child), .input-group .form-control:not(:first-chil=
d):not(:last-child) { border-radius: 0px; }

.input-group-addon, .input-group-btn { width: 1%; white-space: nowrap; vert=
ical-align: middle; }

.input-group-addon { padding: 6px 12px; font-size: 14px; font-weight: norma=
l; line-height: 1; color: rgb(85, 85, 85); text-align: center; background-c=
olor: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); border-radi=
us: 4px; }

.input-group-addon.input-sm, .input-group-sm > .input-group-addon, .input-g=
roup-sm > .input-group-btn > .input-group-addon.btn { padding: 5px 10px; fo=
nt-size: 12px; border-radius: 3px; }

.input-group-addon.input-lg, .input-group-lg > .input-group-addon, .input-g=
roup-lg > .input-group-btn > .input-group-addon.btn { padding: 10px 16px; f=
ont-size: 18px; border-radius: 6px; }

.input-group-addon input[type=3D"radio"], .input-group-addon input[type=3D"=
checkbox"] { margin-top: 0px; }

.input-group .form-control:first-child, .input-group-addon:first-child, .in=
put-group-btn:first-child > .btn, .input-group-btn:first-child > .dropdown-=
toggle, .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-t=
oggle) { border-bottom-right-radius: 0px; border-top-right-radius: 0px; }

.input-group-addon:first-child { border-right: 0px; }

.input-group .form-control:last-child, .input-group-addon:last-child, .inpu=
t-group-btn:last-child > .btn, .input-group-btn:last-child > .dropdown-togg=
le, .input-group-btn:first-child > .btn:not(:first-child) { border-bottom-l=
eft-radius: 0px; border-top-left-radius: 0px; }

.input-group-addon:last-child { border-left: 0px; }

.input-group-btn { position: relative; white-space: nowrap; }

.input-group-btn:first-child > .btn { margin-right: -1px; }

.input-group-btn:last-child > .btn { margin-left: -1px; }

.input-group-btn > .btn { position: relative; }

.input-group-btn > .btn + .btn { margin-left: -4px; }

.input-group-btn > .btn:hover, .input-group-btn > .btn:active { z-index: 2;=
 }

.nav { margin-bottom: 0px; padding-left: 0px; list-style: none; }

.nav::before, .nav::after { content: " "; display: table; }

.nav::after { clear: both; }

.nav > li { position: relative; display: block; }

.nav > li > a { position: relative; display: block; padding: 10px 15px; }

.nav > li > a:hover, .nav > li > a:focus { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.nav > li.disabled > a { color: rgb(136, 136, 136); }

.nav > li.disabled > a:hover, .nav > li.disabled > a:focus { color: rgb(136=
, 136, 136); text-decoration: none; background-color: transparent; cursor: =
not-allowed; }

.nav .open > a, .nav .open > a:hover, .nav .open > a:focus { background-col=
or: rgb(238, 238, 238); border-color: rgb(114, 43, 114); }

.nav .nav-divider { height: 1px; margin: 9px 0px; overflow: hidden; backgro=
und-color: rgb(229, 229, 229); }

.nav > li > a > img { max-width: none; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { float: left; margin-bottom: -1px; }

.nav-tabs > li > a { margin-right: 2px; line-height: 1.42857; border: 1px s=
olid transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.=
active > a:focus { color: rgb(85, 85, 85); background-color: white; border-=
width: 1px; border-style: solid; border-color: rgb(221, 221, 221) rgb(221, =
221, 221) transparent; border-image: initial; cursor: default; }

.nav-pills > li { float: left; }

.nav-pills > li > a { border-radius: 4px; }

.nav-pills > li + li { margin-left: 2px; }

.nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > =
li.active > a:focus { color: rgb(255, 255, 255); background-color: rgb(114,=
 43, 114); }

.nav-stacked > li { float: none; }

.nav-stacked > li + li { margin-top: 2px; margin-left: 0px; }

.nav-justified, .nav-tabs.nav-justified { width: 100%; }

.nav-justified > li, .nav-tabs.nav-justified > li { float: none; }

.nav-justified > li > a, .nav-tabs.nav-justified > li > a { text-align: cen=
ter; margin-bottom: 5px; }

.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto; }

@media (min-width: 768px) {
  .nav-justified > li, .nav-tabs.nav-justified > li { display: table-cell; =
width: 1%; }
  .nav-justified > li > a, .nav-tabs.nav-justified > li > a { margin-bottom=
: 0px; }
}

.nav-tabs-justified, .nav-tabs.nav-justified { border-bottom: 0px; }

.nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a { margin-rig=
ht: 0px; border-radius: 4px; }

.nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a, .=
nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active >=
 a:hover, .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justified =
> .active > a:focus { border: 1px solid rgb(221, 221, 221); }

@media (min-width: 768px) {
  .nav-tabs-justified > li > a, .nav-tabs.nav-justified > li > a { border-b=
ottom: 1px solid rgb(221, 221, 221); border-radius: 4px 4px 0px 0px; }
  .nav-tabs-justified > .active > a, .nav-tabs.nav-justified > .active > a,=
 .nav-tabs-justified > .active > a:hover, .nav-tabs.nav-justified > .active=
 > a:hover, .nav-tabs-justified > .active > a:focus, .nav-tabs.nav-justifie=
d > .active > a:focus { border-bottom-color: white; }
}

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-right-radius: 0px; =
border-top-left-radius: 0px; }

.navbar { position: relative; min-height: 50px; margin-bottom: 20px; border=
: 1px solid transparent; }

.navbar::before, .navbar::after { content: " "; display: table; }

.navbar::after { clear: both; }

@media (min-width: 0px) {
  .navbar { border-radius: 4px; }
}

.navbar-header::before, .navbar-header::after { content: " "; display: tabl=
e; }

.navbar-header::after { clear: both; }

@media (min-width: 0px) {
  .navbar-header { float: left; }
}

.navbar-collapse { max-height: 340px; overflow-x: visible; padding-right: 1=
5px; padding-left: 15px; border-top: 1px solid transparent; box-shadow: rgb=
a(255, 255, 255, 0.1) 0px 1px 0px inset; }

.navbar-collapse::before, .navbar-collapse::after { content: " "; display: =
table; }

.navbar-collapse::after { clear: both; }

.navbar-collapse.in { overflow-y: auto; }

@media (min-width: 0px) {
  .navbar-collapse { width: auto; border-top: 0px; box-shadow: none; }
  .navbar-collapse.collapse { padding-bottom: 0px; display: block !importan=
t; height: auto !important; overflow: visible !important; }
  .navbar-collapse.in { overflow-y: visible; }
  .navbar-fixed-top .navbar-collapse, .navbar-static-top .navbar-collapse, =
.navbar-fixed-bottom .navbar-collapse { padding-left: 0px; padding-right: 0=
px; }
}

.container > .navbar-header, .container > .navbar-collapse { margin-right: =
-15px; margin-left: -15px; }

@media (min-width: 0px) {
  .container > .navbar-header, .container > .navbar-collapse { margin-right=
: 0px; margin-left: 0px; }
}

.navbar-static-top { z-index: 1000; border-width: 0px 0px 1px; }

@media (min-width: 0px) {
  .navbar-static-top { border-radius: 0px; }
}

.navbar-fixed-top, .navbar-fixed-bottom { position: fixed; right: 0px; left=
: 0px; z-index: 1030; }

@media (min-width: 0px) {
  .navbar-fixed-top, .navbar-fixed-bottom { border-radius: 0px; }
}

.navbar-fixed-top { top: 0px; border-width: 0px 0px 1px; }

.navbar-fixed-bottom { bottom: 0px; margin-bottom: 0px; border-width: 1px 0=
px 0px; }

.navbar-brand { float: left; padding: 15px; font-size: 18px; line-height: 2=
0px; }

.navbar-brand:hover, .navbar-brand:focus { text-decoration: none; }

@media (min-width: 0px) {
  .navbar > .container .navbar-brand { margin-left: -15px; }
}

.navbar-toggle { position: relative; float: right; margin-right: 15px; padd=
ing: 9px 10px; margin-top: 8px; margin-bottom: 8px; background-color: trans=
parent; background-image: none; border: 1px solid transparent; border-radiu=
s: 4px; }

.navbar-toggle .icon-bar { display: block; width: 22px; height: 2px; border=
-radius: 1px; }

.navbar-toggle .icon-bar + .icon-bar { margin-top: 4px; }

@media (min-width: 0px) {
  .navbar-toggle { display: none; }
}

.navbar-nav { margin: 7.5px -15px; }

.navbar-nav > li > a { padding-top: 10px; padding-bottom: 10px; line-height=
: 20px; }

@media (max-width: -1px) {
  .navbar-nav .open .dropdown-menu { position: static; float: none; width: =
auto; margin-top: 0px; background-color: transparent; border: 0px; box-shad=
ow: none; }
  .navbar-nav .open .dropdown-menu > li > a, .navbar-nav .open .dropdown-me=
nu .dropdown-header { padding: 5px 15px 5px 25px; }
  .navbar-nav .open .dropdown-menu > li > a { line-height: 20px; }
  .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-nav .open .dropd=
own-menu > li > a:focus { background-image: none; }
}

@media (min-width: 0px) {
  .navbar-nav { float: left; margin: 0px; }
  .navbar-nav > li { float: left; }
  .navbar-nav > li > a { padding-top: 15px; padding-bottom: 15px; }
  .navbar-nav.navbar-right:last-child { margin-right: -15px; }
}

@media (min-width: 0px) {
  .navbar-left { float: left !important; }
  .navbar-right { float: right !important; }
}

.navbar-form { margin: 8px -15px; padding: 10px 15px; border-top: 1px solid=
 transparent; border-bottom: 1px solid transparent; box-shadow: rgba(255, 2=
55, 255, 0.1) 0px 1px 0px inset, rgba(255, 255, 255, 0.1) 0px 1px 0px; }

@media (max-width: -1px) {
  .navbar-form .form-group { margin-bottom: 5px; }
}

@media (min-width: 0px) {
  .navbar-form { width: auto; border: 0px; margin-left: 0px; margin-right: =
0px; padding-top: 0px; padding-bottom: 0px; box-shadow: none; }
  .navbar-form.navbar-right:last-child { margin-right: -15px; }
}

.navbar-nav > li > .dropdown-menu { margin-top: 0px; border-top-right-radiu=
s: 0px; border-top-left-radius: 0px; }

.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu { border-bottom-righ=
t-radius: 0px; border-bottom-left-radius: 0px; }

.navbar-nav.pull-right > li > .dropdown-menu, .navbar-nav > li > .dropdown-=
menu.pull-right { left: auto; right: 0px; }

.navbar-btn { margin-top: 8px; margin-bottom: 8px; }

.navbar-btn.btn-sm, .btn-group-sm > .navbar-btn.btn { margin-top: 10px; mar=
gin-bottom: 10px; }

.navbar-btn.btn-xs, .btn-group-xs > .navbar-btn.btn { margin-top: 14px; mar=
gin-bottom: 14px; }

.navbar-text { margin-top: 15px; margin-bottom: 15px; }

@media (min-width: 0px) {
  .navbar-text { float: left; margin-left: 15px; margin-right: 15px; }
  .navbar-text.navbar-right:last-child { margin-right: 0px; }
}

.navbar-default { background-color: rgb(248, 248, 248); border-color: rgb(2=
31, 231, 231); }

.navbar-default .navbar-brand { color: rgb(119, 119, 119); }

.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus { =
color: rgb(94, 94, 94); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > l=
i > a:focus { color: rgb(51, 51, 51); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:hover, .navbar-default .navbar-nav > .active > a:focus { color: r=
gb(85, 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:hover, .navbar-default .navbar-nav > .disabled > a:focus { co=
lor: rgb(204, 204, 204); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus =
{ background-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(204, 204, =
204); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:hover, .navbar-default .navbar-nav > .open > a:focus { background-col=
or: rgb(231, 231, 231); color: rgb(85, 85, 85); }

@media (max-width: -1px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(11=
9, 119, 119); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(51, 51=
, 51); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(85, 85,=
 85); background-color: rgb(231, 231, 231); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(2=
04, 204, 204); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(119, 119, 119); }

.navbar-default .navbar-link:hover { color: rgb(51, 51, 51); }

.navbar-inverse { background-color: rgb(82, 0, 83); border-color: rgb(32, 0=
, 32); }

.navbar-inverse .navbar-brand { color: white; }

.navbar-inverse .navbar-brand:hover, .navbar-inverse .navbar-brand:focus { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(136, 136, 136); }

.navbar-inverse .navbar-nav > li > a { color: white; }

.navbar-inverse .navbar-nav > li > a:hover, .navbar-inverse .navbar-nav > l=
i > a:focus { color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:hover, .navbar-inverse .navbar-nav > .active > a:focus { color: r=
gb(255, 255, 255); background-color: rgb(32, 0, 32); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:hover, .navbar-inverse .navbar-nav > .disabled > a:focus { co=
lor: rgb(68, 68, 68); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(114, 43, 114); }

.navbar-inverse .navbar-toggle:hover, .navbar-inverse .navbar-toggle:focus =
{ background-color: rgb(114, 43, 114); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(255, 255, =
255); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(47, 0, 47); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:hover, .navbar-inverse .navbar-nav > .open > a:focus { background-col=
or: rgb(32, 0, 32); color: rgb(255, 255, 255); }

@media (max-width: -1px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(32, 0, 32); }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider { background-co=
lor: rgb(32, 0, 32); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: white;=
 }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(255, 2=
55, 255); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(255, 25=
5, 255); background-color: rgb(32, 0, 32); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:focus { color: rgb(6=
8, 68, 68); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: white; }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.breadcrumb { padding: 8px 15px; margin-bottom: 20px; list-style: none; bac=
kground-color: rgb(245, 245, 245); border-radius: 4px; }

.breadcrumb > li { display: inline-block; }

.breadcrumb > li + li::before { content: "/=C2=A0"; padding: 0px 5px; color=
: rgb(204, 204, 204); }

.breadcrumb > .active { color: rgb(136, 136, 136); }

.pagination { display: inline-block; padding-left: 0px; margin: 20px 0px; b=
order-radius: 4px; }

.pagination > li { display: inline; }

.pagination > li > a, .pagination > li > span { position: relative; float: =
left; padding: 6px 12px; line-height: 1.42857; text-decoration: none; backg=
round-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221); marg=
in-left: -1px; }

.pagination > li:first-child > a, .pagination > li:first-child > span { mar=
gin-left: 0px; border-bottom-left-radius: 4px; border-top-left-radius: 4px;=
 }

.pagination > li:last-child > a, .pagination > li:last-child > span { borde=
r-bottom-right-radius: 4px; border-top-right-radius: 4px; }

.pagination > li > a:hover, .pagination > li > a:focus, .pagination > li > =
span:hover, .pagination > li > span:focus { background-color: rgb(238, 238,=
 238); }

.pagination > .active > a, .pagination > .active > a:hover, .pagination > .=
active > a:focus, .pagination > .active > span, .pagination > .active > spa=
n:hover, .pagination > .active > span:focus { z-index: 2; color: rgb(255, 2=
55, 255); background-color: rgb(114, 43, 114); border-color: rgb(114, 43, 1=
14); cursor: default; }

.pagination > .disabled > span, .pagination > .disabled > span:hover, .pagi=
nation > .disabled > span:focus, .pagination > .disabled > a, .pagination >=
 .disabled > a:hover, .pagination > .disabled > a:focus { color: rgb(136, 1=
36, 136); background-color: rgb(255, 255, 255); border-color: rgb(221, 221,=
 221); cursor: not-allowed; }

.pagination-lg > li > a, .pagination-lg > li > span { padding: 10px 16px; f=
ont-size: 18px; }

.pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span=
 { border-bottom-left-radius: 6px; border-top-left-radius: 6px; }

.pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {=
 border-bottom-right-radius: 6px; border-top-right-radius: 6px; }

.pagination-sm > li > a, .pagination-sm > li > span { padding: 5px 10px; fo=
nt-size: 12px; }

.pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span=
 { border-bottom-left-radius: 3px; border-top-left-radius: 3px; }

.pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {=
 border-bottom-right-radius: 3px; border-top-right-radius: 3px; }

.pager { padding-left: 0px; margin: 20px 0px; list-style: none; text-align:=
 center; }

.pager::before, .pager::after { content: " "; display: table; }

.pager::after { clear: both; }

.pager li { display: inline; }

.pager li > a, .pager li > span { display: inline-block; padding: 5px 14px;=
 background-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221)=
; border-radius: 15px; }

.pager li > a:hover, .pager li > a:focus { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.pager .next > a, .pager .next > span { float: right; }

.pager .previous > a, .pager .previous > span { float: left; }

.pager .disabled > a, .pager .disabled > a:hover, .pager .disabled > a:focu=
s, .pager .disabled > span { color: rgb(136, 136, 136); background-color: r=
gb(255, 255, 255); cursor: not-allowed; }

.label { display: inline; padding: 0.2em 0.6em 0.3em; font-size: 75%; font-=
weight: bold; line-height: 1; color: rgb(255, 255, 255); text-align: center=
; white-space: nowrap; vertical-align: baseline; border-radius: 0.25em; }

.label[href]:hover, .label[href]:focus { color: rgb(255, 255, 255); text-de=
coration: none; cursor: pointer; }

.label:empty { display: none; }

.btn .label { position: relative; top: -1px; }

.label-default { background-color: rgb(136, 136, 136); }

.label-default[href]:hover, .label-default[href]:focus { background-color: =
rgb(111, 111, 111); }

.label-primary { background-color: rgb(114, 43, 114); }

.label-primary[href]:hover, .label-primary[href]:focus { background-color: =
rgb(77, 29, 77); }

.label-success { background-color: rgb(92, 184, 92); }

.label-success[href]:hover, .label-success[href]:focus { background-color: =
rgb(68, 157, 68); }

.label-info { background-color: rgb(91, 192, 222); }

.label-info[href]:hover, .label-info[href]:focus { background-color: rgb(49=
, 176, 213); }

.label-warning { background-color: rgb(240, 173, 78); }

.label-warning[href]:hover, .label-warning[href]:focus { background-color: =
rgb(236, 151, 31); }

.label-danger { background-color: rgb(217, 83, 79); }

.label-danger[href]:hover, .label-danger[href]:focus { background-color: rg=
b(201, 48, 44); }

.badge { display: inline-block; min-width: 10px; padding: 3px 7px; font-siz=
e: 12px; font-weight: bold; color: rgb(255, 255, 255); line-height: 1; vert=
ical-align: baseline; white-space: nowrap; text-align: center; background-c=
olor: rgb(136, 136, 136); border-radius: 10px; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

a.badge:hover, a.badge:focus { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

a.list-group-item.active > .badge, .nav-pills > .active > a > .badge { colo=
r: rgb(114, 43, 114); background-color: rgb(255, 255, 255); }

.nav-pills > li > a > .badge { margin-left: 3px; }

.jumbotron { padding: 30px; margin-bottom: 30px; font-size: 21px; font-weig=
ht: 200; line-height: 2.14286; color: rgb(136, 136, 136); background-color:=
 rgb(34, 34, 34); }

.jumbotron h1, .jumbotron .h1 { line-height: 1; color: inherit; }

.jumbotron p { line-height: 1.4; }

.container .jumbotron { border-radius: 6px; }

.jumbotron .container { max-width: 100%; }

@media screen and (min-width: 768px) {
  .jumbotron { padding-top: 48px; padding-bottom: 48px; }
  .container .jumbotron { padding-left: 60px; padding-right: 60px; }
  .jumbotron h1, .jumbotron .h1 { font-size: 63px; }
}

.thumbnail { display: block; padding: 4px; margin-bottom: 20px; line-height=
: 1.42857; background-color: white; border: 1px solid rgb(221, 221, 221); b=
order-radius: 4px; transition: all 0.2s ease-in-out 0s; }

.thumbnail > img, .thumbnail a > img { display: block; max-width: 100%; hei=
ght: auto; margin-left: auto; margin-right: auto; }

.thumbnail .caption { padding: 9px; color: rgb(63, 63, 63); }

a.thumbnail:hover, a.thumbnail:focus, a.thumbnail.active { border-color: rg=
b(114, 43, 114); }

.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent;=
 border-radius: 4px; }

.alert h4 { margin-top: 0px; color: inherit; }

.alert .alert-link { font-weight: bold; }

.alert > p, .alert > ul { margin-bottom: 0px; }

.alert > p + p { margin-top: 5px; }

.alert-dismissable { padding-right: 35px; }

.alert-dismissable .close { position: relative; top: -2px; right: -21px; co=
lor: inherit; }

.alert-success { background-color: rgb(223, 240, 216); border-color: rgb(21=
4, 233, 198); color: rgb(60, 118, 61); }

.alert-success hr { border-top-color: rgb(201, 226, 179); }

.alert-success .alert-link { color: rgb(43, 84, 44); }

.alert-info { background-color: rgb(217, 237, 247); border-color: rgb(188, =
232, 241); color: rgb(49, 112, 143); }

.alert-info hr { border-top-color: rgb(166, 225, 236); }

.alert-info .alert-link { color: rgb(36, 82, 105); }

.alert-warning { background-color: rgb(252, 248, 227); border-color: rgb(25=
0, 235, 204); color: rgb(138, 109, 59); }

.alert-warning hr { border-top-color: rgb(247, 225, 181); }

.alert-warning .alert-link { color: rgb(102, 81, 44); }

.alert-danger { background-color: rgb(242, 222, 222); border-color: rgb(235=
, 204, 209); color: rgb(169, 68, 66); }

.alert-danger hr { border-top-color: rgb(228, 185, 192); }

.alert-danger .alert-link { color: rgb(132, 53, 52); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { overflow: hidden; height: 20px; margin-bottom: 20px; background=
-color: rgb(245, 245, 245); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0=
.1) 0px 1px 2px inset; }

.progress-bar { float: left; width: 0%; height: 100%; font-size: 12px; line=
-height: 20px; color: rgb(255, 255, 255); text-align: center; background-co=
lor: rgb(114, 43, 114); box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset;=
 transition: width 0.6s ease 0s; }

.progress-striped .progress-bar { background-image: linear-gradient(45deg, =
rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, =
255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transp=
arent); background-size: 40px 40px; }

.progress.active .progress-bar { animation: 2s linear 0s infinite normal no=
ne running progress-bar-stripes; }

.progress-bar-success { background-color: rgb(92, 184, 92); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-info { background-color: rgb(91, 192, 222); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(=
255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, t=
ransparent); }

.progress-bar-warning { background-color: rgb(240, 173, 78); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-danger { background-color: rgb(217, 83, 79); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgb=
a(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%,=
 transparent); }

.media, .media-body { overflow: hidden; zoom: 1; }

.media, .media .media { margin-top: 15px; }

.media:first-child { margin-top: 0px; }

.media-object { display: block; }

.media-heading { margin: 0px 0px 5px; }

.media > .pull-left { margin-right: 10px; }

.media > .pull-right { margin-left: 10px; }

.media-list { padding-left: 0px; list-style: none; }

.list-group { margin-bottom: 20px; padding-left: 0px; }

.list-group-item { position: relative; display: block; padding: 10px 15px; =
margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1px soli=
d rgb(221, 221, 221); }

.list-group-item:first-child { border-top-right-radius: 4px; border-top-lef=
t-radius: 4px; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 4px; border-bottom-left-radius: 4px; }

.list-group-item > .badge { float: right; }

.list-group-item > .badge + .badge { margin-right: 5px; }

a.list-group-item { color: rgb(85, 85, 85); }

a.list-group-item .list-group-item-heading { color: rgb(51, 51, 51); }

a.list-group-item:hover, a.list-group-item:focus { text-decoration: none; b=
ackground-color: rgb(245, 245, 245); }

a.list-group-item.active, a.list-group-item.active:hover, a.list-group-item=
.active:focus { z-index: 2; color: rgb(255, 255, 255); background-color: rg=
b(114, 43, 114); border-color: rgb(114, 43, 114); }

a.list-group-item.active .list-group-item-heading, a.list-group-item.active=
:hover .list-group-item-heading, a.list-group-item.active:focus .list-group=
-item-heading { color: inherit; }

a.list-group-item.active .list-group-item-text, a.list-group-item.active:ho=
ver .list-group-item-text, a.list-group-item.active:focus .list-group-item-=
text { color: rgb(214, 147, 214); }

.list-group-item-heading { margin-top: 0px; margin-bottom: 5px; }

.list-group-item-text { margin-bottom: 0px; line-height: 1.3; }

.panel { margin-bottom: 20px; background-color: rgb(255, 255, 255); border:=
 1px solid transparent; border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.05)=
 0px 1px 1px; }

.panel-body { padding: 15px; }

.panel-body::before, .panel-body::after { content: " "; display: table; }

.panel-body::after { clear: both; }

.panel > .list-group { margin-bottom: 0px; }

.panel > .list-group .list-group-item { border-width: 1px 0px; }

.panel > .list-group .list-group-item:first-child { border-top-right-radius=
: 0px; border-top-left-radius: 0px; }

.panel > .list-group .list-group-item:last-child { border-bottom: 0px; }

.panel-heading + .list-group .list-group-item:first-child { border-top-widt=
h: 0px; }

.panel > .table, .panel > .table-responsive > .table { margin-bottom: 0px; =
}

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive { b=
order-top: 1px solid rgb(221, 221, 221); }

.panel > .table > tbody:first-child th, .panel > .table > tbody:first-child=
 td { border-top: 0px; }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder: 0px; }

.panel > .table-bordered > thead > tr > th:first-child, .panel > .table-bor=
dered > thead > tr > td:first-child, .panel > .table-bordered > tbody > tr =
> th:first-child, .panel > .table-bordered > tbody > tr > td:first-child, .=
panel > .table-bordered > tfoot > tr > th:first-child, .panel > .table-bord=
ered > tfoot > tr > td:first-child, .panel > .table-responsive > .table-bor=
dered > thead > tr > th:first-child, .panel > .table-responsive > .table-bo=
rdered > thead > tr > td:first-child, .panel > .table-responsive > .table-b=
ordered > tbody > tr > th:first-child, .panel > .table-responsive > .table-=
bordered > tbody > tr > td:first-child, .panel > .table-responsive > .table=
-bordered > tfoot > tr > th:first-child, .panel > .table-responsive > .tabl=
e-bordered > tfoot > tr > td:first-child { border-left: 0px; }

.panel > .table-bordered > thead > tr > th:last-child, .panel > .table-bord=
ered > thead > tr > td:last-child, .panel > .table-bordered > tbody > tr > =
th:last-child, .panel > .table-bordered > tbody > tr > td:last-child, .pane=
l > .table-bordered > tfoot > tr > th:last-child, .panel > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child { border-right: 0px; }

.panel > .table-bordered > thead > tr:last-child > th, .panel > .table-bord=
ered > thead > tr:last-child > td, .panel > .table-bordered > tbody > tr:la=
st-child > th, .panel > .table-bordered > tbody > tr:last-child > td, .pane=
l > .table-bordered > tfoot > tr:last-child > th, .panel > .table-bordered =
> tfoot > tr:last-child > td, .panel > .table-responsive > .table-bordered =
> thead > tr:last-child > th, .panel > .table-responsive > .table-bordered =
> thead > tr:last-child > td, .panel > .table-responsive > .table-bordered =
> tbody > tr:last-child > th, .panel > .table-responsive > .table-bordered =
> tbody > tr:last-child > td, .panel > .table-responsive > .table-bordered =
> tfoot > tr:last-child > th, .panel > .table-responsive > .table-bordered =
> tfoot > tr:last-child > td { border-bottom: 0px; }

.panel > .table-responsive { border: 0px; margin-bottom: 0px; }

.panel-heading { padding: 10px 15px; border-bottom: 1px solid transparent; =
border-top-right-radius: 3px; border-top-left-radius: 3px; }

.panel-heading > .dropdown .dropdown-toggle { color: inherit; }

.panel-title { margin-top: 0px; margin-bottom: 0px; font-size: 16px; color:=
 inherit; }

.panel-title > a { color: inherit; }

.panel-footer { padding: 10px 15px; background-color: rgb(245, 245, 245); b=
order-top: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 3px; b=
order-bottom-left-radius: 3px; }

.panel-group .panel { margin-bottom: 0px; border-radius: 4px; overflow: hid=
den; }

.panel-group .panel + .panel { margin-top: 5px; }

.panel-group .panel-heading { border-bottom: 0px; }

.panel-group .panel-heading + .panel-collapse .panel-body { border-top: 1px=
 solid rgb(221, 221, 221); }

.panel-group .panel-footer { border-top: 0px; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom: 1=
px solid rgb(221, 221, 221); }

.panel-default { border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading { color: rgb(34, 34, 34); background-color:=
 rgb(245, 245, 245); border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(221, 221, 221); }

.panel-default > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(221, 221, 221); }

.panel-primary { border-color: rgb(114, 43, 114); }

.panel-primary > .panel-heading { color: rgb(255, 255, 255); background-col=
or: rgb(114, 43, 114); border-color: rgb(114, 43, 114); }

.panel-primary > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(114, 43, 114); }

.panel-primary > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(114, 43, 114); }

.panel-success { border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(214, 233, 198); }

.panel-success > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(214, 233, 198); }

.panel-warning { border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading + .panel-collapse .panel-body { border-top-=
color: rgb(250, 235, 204); }

.panel-warning > .panel-footer + .panel-collapse .panel-body { border-botto=
m-color: rgb(250, 235, 204); }

.panel-danger { border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading { color: rgb(169, 68, 66); background-color:=
 rgb(242, 222, 222); border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading + .panel-collapse .panel-body { border-top-c=
olor: rgb(235, 204, 209); }

.panel-danger > .panel-footer + .panel-collapse .panel-body { border-bottom=
-color: rgb(235, 204, 209); }

.panel-info { border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading { color: rgb(49, 112, 143); background-color: =
rgb(217, 237, 247); border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading + .panel-collapse .panel-body { border-top-col=
or: rgb(188, 232, 241); }

.panel-info > .panel-footer + .panel-collapse .panel-body { border-bottom-c=
olor: rgb(188, 232, 241); }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgb(227, 227, 227); border-radiu=
s: 4px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.15); }

.well-lg { padding: 24px; border-radius: 6px; }

.well-sm { padding: 9px; border-radius: 3px; }

.close { float: right; font-size: 21px; font-weight: bold; line-height: 1; =
color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: =
0.2; }

.close:hover, .close:focus { color: rgb(0, 0, 0); text-decoration: none; cu=
rsor: pointer; opacity: 0.5; }

button.close { padding: 0px; cursor: pointer; background: transparent; bord=
er: 0px; appearance: none; }

.modal-open { overflow: hidden; }

.modal { display: none; overflow: auto scroll; position: fixed; inset: 0px;=
 z-index: 1040; }

.modal.fade .modal-dialog { transform: translate(0px, -25%); transition: tr=
ansform 0.3s ease-out 0s; }

.modal.in .modal-dialog { transform: translate(0px, 0px); }

.modal-dialog { position: relative; width: auto; margin: 10px; z-index: 105=
0; }

.modal-content { position: relative; background-color: rgb(255, 255, 255); =
border: 1px solid rgba(0, 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(=
0, 0, 0, 0.5) 0px 3px 9px; background-clip: padding-box; outline: none; }

.modal-backdrop { position: fixed; inset: 0px; z-index: 1030; background-co=
lor: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.in { opacity: 0.5; }

.modal-header { padding: 15px; border-bottom: 1px solid rgb(229, 229, 229);=
 min-height: 16.4286px; }

.modal-header .close { margin-top: -2px; }

.modal-title { margin: 0px; line-height: 1.42857; }

.modal-body { position: relative; padding: 20px; }

.modal-footer { margin-top: 15px; padding: 19px 20px 20px; text-align: righ=
t; border-top: 1px solid rgb(229, 229, 229); }

.modal-footer::before, .modal-footer::after { content: " "; display: table;=
 }

.modal-footer::after { clear: both; }

.modal-footer .btn + .btn { margin-left: 5px; margin-bottom: 0px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.modal-footer .btn-block + .btn-block { margin-left: 0px; }

@media screen and (min-width: 768px) {
  .modal-dialog { width: 600px; margin: 30px auto; }
  .modal-content { box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px; }
}

.tooltip { position: absolute; z-index: 1030; display: block; visibility: v=
isible; font-size: 12px; line-height: 1.4; opacity: 0; }

.tooltip.in { opacity: 0.9; }

.tooltip.top { margin-top: -3px; padding: 5px 0px; }

.tooltip.right { margin-left: 3px; padding: 0px 5px; }

.tooltip.bottom { margin-top: 3px; padding: 5px 0px; }

.tooltip.left { margin-left: -3px; padding: 0px 5px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; text-decoration: none; background-color: rgb(0, 0,=
 0); border-radius: 4px; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-left .tooltip-arrow { bottom: 0px; left: 5px; border-width: 5p=
x 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-right .tooltip-arrow { bottom: 0px; right: 5px; border-width: =
5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-width: 5px 5px 5px 0px; border-right-color: rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-width: 5px 0px 5px 5px; border-left-color: rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-left .tooltip-arrow { top: 0px; left: 5px; border-width: 0p=
x 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-right .tooltip-arrow { top: 0px; right: 5px; border-width: =
0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1010; display:=
 none; max-width: 276px; padding: 1px; text-align: left; background-color: =
rgb(255, 255, 255); background-clip: padding-box; border: 1px solid rgba(0,=
 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10p=
x; white-space: normal; }

.popover.top { margin-top: -10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-left: -10px; }

.popover-title { margin: 0px; padding: 8px 14px; font-size: 14px; font-weig=
ht: normal; line-height: 18px; background-color: rgb(247, 247, 247); border=
-bottom: 1px solid rgb(235, 235, 235); border-radius: 5px 5px 0px 0px; }

.popover-content { padding: 9px 14px; }

.popover .arrow, .popover .arrow::after { position: absolute; display: bloc=
k; width: 0px; height: 0px; border-color: transparent; border-style: solid;=
 }

.popover .arrow { border-width: 11px; }

.popover .arrow::after { border-width: 10px; content: ""; }

.popover.top .arrow { left: 50%; margin-left: -11px; border-bottom-width: 0=
px; border-top-color: rgba(0, 0, 0, 0.25); bottom: -11px; }

.popover.top .arrow::after { content: " "; bottom: 1px; margin-left: -10px;=
 border-bottom-width: 0px; border-top-color: rgb(255, 255, 255); }

.popover.right .arrow { top: 50%; left: -11px; margin-top: -11px; border-le=
ft-width: 0px; border-right-color: rgba(0, 0, 0, 0.25); }

.popover.right .arrow::after { content: " "; left: 1px; bottom: -10px; bord=
er-left-width: 0px; border-right-color: rgb(255, 255, 255); }

.popover.bottom .arrow { left: 50%; margin-left: -11px; border-top-width: 0=
px; border-bottom-color: rgba(0, 0, 0, 0.25); top: -11px; }

.popover.bottom .arrow::after { content: " "; top: 1px; margin-left: -10px;=
 border-top-width: 0px; border-bottom-color: rgb(255, 255, 255); }

.popover.left .arrow { top: 50%; right: -11px; margin-top: -11px; border-ri=
ght-width: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.popover.left .arrow::after { content: " "; right: 1px; border-right-width:=
 0px; border-left-color: rgb(255, 255, 255); bottom: -10px; }

.carousel { position: relative; }

.carousel-inner { position: relative; overflow: hidden; width: 100%; }

.carousel-inner > .item { display: none; position: relative; transition: le=
ft 0.6s ease-in-out 0s; }

.carousel-inner > .item > img, .carousel-inner > .item > a > img { display:=
 block; max-width: 100%; height: auto; line-height: 1; }

.carousel-inner > .active, .carousel-inner > .next, .carousel-inner > .prev=
 { display: block; }

.carousel-inner > .active { left: 0px; }

.carousel-inner > .next, .carousel-inner > .prev { position: absolute; top:=
 0px; width: 100%; }

.carousel-inner > .next { left: 100%; }

.carousel-inner > .prev { left: -100%; }

.carousel-inner > .next.left, .carousel-inner > .prev.right { left: 0px; }

.carousel-inner > .active.left { left: -100%; }

.carousel-inner > .active.right { left: 100%; }

.carousel-control { position: absolute; top: 0px; left: 0px; bottom: 0px; w=
idth: 15%; opacity: 0.5; font-size: 20px; color: rgb(255, 255, 255); text-a=
lign: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 100%); background-repeat: repeat-x; }

.carousel-control.right { left: auto; right: 0px; background-image: linear-=
gradient(to right, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.5) 100%); backgroun=
d-repeat: repeat-x; }

.carousel-control:hover, .carousel-control:focus { outline: none; color: rg=
b(255, 255, 255); text-decoration: none; opacity: 0.9; }

.carousel-control .icon-prev, .carousel-control .icon-next, .carousel-contr=
ol .glyphicon-chevron-left, .carousel-control .glyphicon-chevron-right { po=
sition: absolute; top: 50%; z-index: 5; display: inline-block; }

.carousel-control .icon-prev, .carousel-control .glyphicon-chevron-left { l=
eft: 50%; }

.carousel-control .icon-next, .carousel-control .glyphicon-chevron-right { =
right: 50%; }

.carousel-control .icon-prev, .carousel-control .icon-next { width: 20px; h=
eight: 20px; margin-top: -10px; margin-left: -10px; font-family: serif; }

.carousel-control .icon-prev::before { content: "=E2=80=B9"; }

.carousel-control .icon-next::before { content: "=E2=80=BA"; }

.carousel-indicators { position: absolute; bottom: 10px; left: 50%; z-index=
: 15; width: 60%; margin-left: -30%; padding-left: 0px; list-style: none; t=
ext-align: center; }

.carousel-indicators li { display: inline-block; width: 10px; height: 10px;=
 margin: 1px; text-indent: -999px; border: 1px solid rgb(255, 255, 255); bo=
rder-radius: 10px; cursor: pointer; background-color: transparent; }

.carousel-indicators .active { margin: 0px; width: 12px; height: 12px; back=
ground-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; left: 15%; right: 15%; bottom: 20px=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

@media screen and (min-width: 768px) {
  .carousel-control .glyphicons-chevron-left, .carousel-control .glyphicons=
-chevron-right, .carousel-control .icon-prev, .carousel-control .icon-next =
{ width: 30px; height: 30px; margin-top: -15px; margin-left: -15px; font-si=
ze: 30px; }
  .carousel-caption { left: 20%; right: 20%; padding-bottom: 30px; }
  .carousel-indicators { bottom: 20px; }
}

.clearfix::before, .clearfix::after { content: " "; display: table; }

.clearfix::after { clear: both; }

.center-block { display: block; margin-left: auto; margin-right: auto; }

.pull-right { float: right !important; }

.pull-left { float: left !important; }

.hide { display: none !important; }

.show { display: block !important; }

.invisible { visibility: hidden; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.hidden { display: none !important; visibility: hidden !important; }

.affix { position: fixed; }

.visible-xs, tr.visible-xs, th.visible-xs, td.visible-xs { display: none !i=
mportant; }

@media (max-width: 767px) {
  .visible-xs { display: block !important; }
  table.visible-xs { display: table; }
  tr.visible-xs { display: table-row !important; }
  th.visible-xs, td.visible-xs { display: table-cell !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-xs.visible-sm { display: block !important; }
  table.visible-xs.visible-sm { display: table; }
  tr.visible-xs.visible-sm { display: table-row !important; }
  th.visible-xs.visible-sm, td.visible-xs.visible-sm { display: table-cell =
!important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-xs.visible-md { display: block !important; }
  table.visible-xs.visible-md { display: table; }
  tr.visible-xs.visible-md { display: table-row !important; }
  th.visible-xs.visible-md, td.visible-xs.visible-md { display: table-cell =
!important; }
}

@media (min-width: 1200px) {
  .visible-xs.visible-lg { display: block !important; }
  table.visible-xs.visible-lg { display: table; }
  tr.visible-xs.visible-lg { display: table-row !important; }
  th.visible-xs.visible-lg, td.visible-xs.visible-lg { display: table-cell =
!important; }
}

.visible-sm, tr.visible-sm, th.visible-sm, td.visible-sm { display: none !i=
mportant; }

@media (max-width: 767px) {
  .visible-sm.visible-xs { display: block !important; }
  table.visible-sm.visible-xs { display: table; }
  tr.visible-sm.visible-xs { display: table-row !important; }
  th.visible-sm.visible-xs, td.visible-sm.visible-xs { display: table-cell =
!important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm { display: block !important; }
  table.visible-sm { display: table; }
  tr.visible-sm { display: table-row !important; }
  th.visible-sm, td.visible-sm { display: table-cell !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-sm.visible-md { display: block !important; }
  table.visible-sm.visible-md { display: table; }
  tr.visible-sm.visible-md { display: table-row !important; }
  th.visible-sm.visible-md, td.visible-sm.visible-md { display: table-cell =
!important; }
}

@media (min-width: 1200px) {
  .visible-sm.visible-lg { display: block !important; }
  table.visible-sm.visible-lg { display: table; }
  tr.visible-sm.visible-lg { display: table-row !important; }
  th.visible-sm.visible-lg, td.visible-sm.visible-lg { display: table-cell =
!important; }
}

.visible-md, tr.visible-md, th.visible-md, td.visible-md { display: none !i=
mportant; }

@media (max-width: 767px) {
  .visible-md.visible-xs { display: block !important; }
  table.visible-md.visible-xs { display: table; }
  tr.visible-md.visible-xs { display: table-row !important; }
  th.visible-md.visible-xs, td.visible-md.visible-xs { display: table-cell =
!important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-md.visible-sm { display: block !important; }
  table.visible-md.visible-sm { display: table; }
  tr.visible-md.visible-sm { display: table-row !important; }
  th.visible-md.visible-sm, td.visible-md.visible-sm { display: table-cell =
!important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md { display: block !important; }
  table.visible-md { display: table; }
  tr.visible-md { display: table-row !important; }
  th.visible-md, td.visible-md { display: table-cell !important; }
}

@media (min-width: 1200px) {
  .visible-md.visible-lg { display: block !important; }
  table.visible-md.visible-lg { display: table; }
  tr.visible-md.visible-lg { display: table-row !important; }
  th.visible-md.visible-lg, td.visible-md.visible-lg { display: table-cell =
!important; }
}

.visible-lg, tr.visible-lg, th.visible-lg, td.visible-lg { display: none !i=
mportant; }

@media (max-width: 767px) {
  .visible-lg.visible-xs { display: block !important; }
  table.visible-lg.visible-xs { display: table; }
  tr.visible-lg.visible-xs { display: table-row !important; }
  th.visible-lg.visible-xs, td.visible-lg.visible-xs { display: table-cell =
!important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-lg.visible-sm { display: block !important; }
  table.visible-lg.visible-sm { display: table; }
  tr.visible-lg.visible-sm { display: table-row !important; }
  th.visible-lg.visible-sm, td.visible-lg.visible-sm { display: table-cell =
!important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-lg.visible-md { display: block !important; }
  table.visible-lg.visible-md { display: table; }
  tr.visible-lg.visible-md { display: table-row !important; }
  th.visible-lg.visible-md, td.visible-lg.visible-md { display: table-cell =
!important; }
}

@media (min-width: 1200px) {
  .visible-lg { display: block !important; }
  table.visible-lg { display: table; }
  tr.visible-lg { display: table-row !important; }
  th.visible-lg, td.visible-lg { display: table-cell !important; }
}

.hidden-xs { display: block !important; }

table.hidden-xs { display: table; }

tr.hidden-xs { display: table-row !important; }

th.hidden-xs, td.hidden-xs { display: table-cell !important; }

@media (max-width: 767px) {
  .hidden-xs, tr.hidden-xs, th.hidden-xs, td.hidden-xs { display: none !imp=
ortant; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-xs.hidden-sm, tr.hidden-xs.hidden-sm, th.hidden-xs.hidden-sm, td.=
hidden-xs.hidden-sm { display: none !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-xs.hidden-md, tr.hidden-xs.hidden-md, th.hidden-xs.hidden-md, td.=
hidden-xs.hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-xs.hidden-lg, tr.hidden-xs.hidden-lg, th.hidden-xs.hidden-lg, td.=
hidden-xs.hidden-lg { display: none !important; }
}

.hidden-sm { display: block !important; }

table.hidden-sm { display: table; }

tr.hidden-sm { display: table-row !important; }

th.hidden-sm, td.hidden-sm { display: table-cell !important; }

@media (max-width: 767px) {
  .hidden-sm.hidden-xs, tr.hidden-sm.hidden-xs, th.hidden-sm.hidden-xs, td.=
hidden-sm.hidden-xs { display: none !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-sm, tr.hidden-sm, th.hidden-sm, td.hidden-sm { display: none !imp=
ortant; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-sm.hidden-md, tr.hidden-sm.hidden-md, th.hidden-sm.hidden-md, td.=
hidden-sm.hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-sm.hidden-lg, tr.hidden-sm.hidden-lg, th.hidden-sm.hidden-lg, td.=
hidden-sm.hidden-lg { display: none !important; }
}

.hidden-md { display: block !important; }

table.hidden-md { display: table; }

tr.hidden-md { display: table-row !important; }

th.hidden-md, td.hidden-md { display: table-cell !important; }

@media (max-width: 767px) {
  .hidden-md.hidden-xs, tr.hidden-md.hidden-xs, th.hidden-md.hidden-xs, td.=
hidden-md.hidden-xs { display: none !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-md.hidden-sm, tr.hidden-md.hidden-sm, th.hidden-md.hidden-sm, td.=
hidden-md.hidden-sm { display: none !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-md, tr.hidden-md, th.hidden-md, td.hidden-md { display: none !imp=
ortant; }
}

@media (min-width: 1200px) {
  .hidden-md.hidden-lg, tr.hidden-md.hidden-lg, th.hidden-md.hidden-lg, td.=
hidden-md.hidden-lg { display: none !important; }
}

.hidden-lg { display: block !important; }

table.hidden-lg { display: table; }

tr.hidden-lg { display: table-row !important; }

th.hidden-lg, td.hidden-lg { display: table-cell !important; }

@media (max-width: 767px) {
  .hidden-lg.hidden-xs, tr.hidden-lg.hidden-xs, th.hidden-lg.hidden-xs, td.=
hidden-lg.hidden-xs { display: none !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-lg.hidden-sm, tr.hidden-lg.hidden-sm, th.hidden-lg.hidden-sm, td.=
hidden-lg.hidden-sm { display: none !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-lg.hidden-md, tr.hidden-lg.hidden-md, th.hidden-lg.hidden-md, td.=
hidden-lg.hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-lg, tr.hidden-lg, th.hidden-lg, td.hidden-lg { display: none !imp=
ortant; }
}

.visible-print, tr.visible-print, th.visible-print, td.visible-print { disp=
lay: none !important; }

@media print {
  .visible-print { display: block !important; }
  table.visible-print { display: table; }
  tr.visible-print { display: table-row !important; }
  th.visible-print, td.visible-print { display: table-cell !important; }
  .hidden-print, tr.hidden-print, th.hidden-print, td.hidden-print { displa=
y: none !important; }
}

@font-face { font-family: FontAwesome; src: url("/fonts/fontawesome-webfont=
-7d65e022.woff?v=3D4.2.0") format("woff"), url("/fonts/fontawesome-webfont-=
6225ccc4.ttf?v=3D4.2.0") format("truetype"); font-weight: normal; font-styl=
e: normal; }

.fa { display: inline-block; font-style: normal; font-variant: normal; font=
-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; f=
ont-variation-settings: normal; font-weight: normal; font-stretch: normal; =
line-height: 1; font-family: FontAwesome; font-size: inherit; text-renderin=
g: auto; -webkit-font-smoothing: antialiased; }

.fa-lg { font-size: 1.33333em; line-height: 0.75em; vertical-align: -15%; }

.fa-2x { font-size: 2em; }

.fa-3x { font-size: 3em; }

.fa-4x { font-size: 4em; }

.fa-5x { font-size: 5em; }

.fa-fw { width: 1.28571em; text-align: center; }

.fa-ul { padding-left: 0px; margin-left: 2.14286em; list-style-type: none; =
}

.fa-ul > li { position: relative; }

.fa-li { position: absolute; left: -2.14286em; width: 2.14286em; top: 0.142=
857em; text-align: center; }

.fa-li.fa-lg { left: -1.85714em; }

.fa-border { padding: 0.2em 0.25em 0.15em; border: 0.08em solid rgb(238, 23=
8, 238); border-radius: 0.1em; }

.pull-right { float: right; }

.pull-left { float: left; }

.fa.pull-left { margin-right: 0.3em; }

.fa.pull-right { margin-left: 0.3em; }

.fa-spin { animation: 2s linear 0s infinite normal none running fa-spin; }

@-webkit-keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

@keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

.fa-rotate-90 { transform: rotate(90deg); }

.fa-rotate-180 { transform: rotate(180deg); }

.fa-rotate-270 { transform: rotate(270deg); }

.fa-flip-horizontal { transform: scale(-1, 1); }

.fa-flip-vertical { transform: scale(1, -1); }

:root .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270, :root .fa-=
flip-horizontal, :root .fa-flip-vertical { filter: none; }

.fa-stack { position: relative; display: inline-block; width: 2em; height: =
2em; line-height: 2em; vertical-align: middle; }

.fa-stack-1x, .fa-stack-2x { position: absolute; left: 0px; width: 100%; te=
xt-align: center; }

.fa-stack-1x { line-height: inherit; }

.fa-stack-2x { font-size: 2em; }

.fa-inverse { color: rgb(255, 255, 255); }

.fa-glass::before { content: "=EF=80=80"; }

.fa-music::before { content: "=EF=80=81"; }

.fa-search::before { content: "=EF=80=82"; }

.fa-envelope-o::before { content: "=EF=80=83"; }

.fa-heart::before { content: "=EF=80=84"; }

.fa-star::before { content: "=EF=80=85"; }

.fa-star-o::before { content: "=EF=80=86"; }

.fa-user::before { content: "=EF=80=87"; }

.fa-film::before { content: "=EF=80=88"; }

.fa-th-large::before { content: "=EF=80=89"; }

.fa-th::before { content: "=EF=80=8A"; }

.fa-th-list::before { content: "=EF=80=8B"; }

.fa-check::before { content: "=EF=80=8C"; }

.fa-remove::before, .fa-close::before, .fa-times::before { content: "=EF=80=
=8D"; }

.fa-search-plus::before { content: "=EF=80=8E"; }

.fa-search-minus::before { content: "=EF=80=90"; }

.fa-power-off::before { content: "=EF=80=91"; }

.fa-signal::before { content: "=EF=80=92"; }

.fa-gear::before, .fa-cog::before { content: "=EF=80=93"; }

.fa-trash-o::before { content: "=EF=80=94"; }

.fa-home::before { content: "=EF=80=95"; }

.fa-file-o::before { content: "=EF=80=96"; }

.fa-clock-o::before { content: "=EF=80=97"; }

.fa-road::before { content: "=EF=80=98"; }

.fa-download::before { content: "=EF=80=99"; }

.fa-arrow-circle-o-down::before { content: "=EF=80=9A"; }

.fa-arrow-circle-o-up::before { content: "=EF=80=9B"; }

.fa-inbox::before { content: "=EF=80=9C"; }

.fa-play-circle-o::before { content: "=EF=80=9D"; }

.fa-rotate-right::before, .fa-repeat::before { content: "=EF=80=9E"; }

.fa-refresh::before { content: "=EF=80=A1"; }

.fa-list-alt::before { content: "=EF=80=A2"; }

.fa-lock::before { content: "=EF=80=A3"; }

.fa-flag::before { content: "=EF=80=A4"; }

.fa-headphones::before { content: "=EF=80=A5"; }

.fa-volume-off::before { content: "=EF=80=A6"; }

.fa-volume-down::before { content: "=EF=80=A7"; }

.fa-volume-up::before { content: "=EF=80=A8"; }

.fa-qrcode::before { content: "=EF=80=A9"; }

.fa-barcode::before { content: "=EF=80=AA"; }

.fa-tag::before { content: "=EF=80=AB"; }

.fa-tags::before { content: "=EF=80=AC"; }

.fa-book::before { content: "=EF=80=AD"; }

.fa-bookmark::before { content: "=EF=80=AE"; }

.fa-print::before { content: "=EF=80=AF"; }

.fa-camera::before { content: "=EF=80=B0"; }

.fa-font::before { content: "=EF=80=B1"; }

.fa-bold::before { content: "=EF=80=B2"; }

.fa-italic::before { content: "=EF=80=B3"; }

.fa-text-height::before { content: "=EF=80=B4"; }

.fa-text-width::before { content: "=EF=80=B5"; }

.fa-align-left::before { content: "=EF=80=B6"; }

.fa-align-center::before { content: "=EF=80=B7"; }

.fa-align-right::before { content: "=EF=80=B8"; }

.fa-align-justify::before { content: "=EF=80=B9"; }

.fa-list::before { content: "=EF=80=BA"; }

.fa-dedent::before, .fa-outdent::before { content: "=EF=80=BB"; }

.fa-indent::before { content: "=EF=80=BC"; }

.fa-video-camera::before { content: "=EF=80=BD"; }

.fa-photo::before, .fa-image::before, .fa-picture-o::before { content: "=EF=
=80=BE"; }

.fa-pencil::before { content: "=EF=81=80"; }

.fa-map-marker::before { content: "=EF=81=81"; }

.fa-adjust::before { content: "=EF=81=82"; }

.fa-tint::before { content: "=EF=81=83"; }

.fa-edit::before, .fa-pencil-square-o::before { content: "=EF=81=84"; }

.fa-share-square-o::before { content: "=EF=81=85"; }

.fa-check-square-o::before { content: "=EF=81=86"; }

.fa-arrows::before { content: "=EF=81=87"; }

.fa-step-backward::before { content: "=EF=81=88"; }

.fa-fast-backward::before { content: "=EF=81=89"; }

.fa-backward::before { content: "=EF=81=8A"; }

.fa-play::before { content: "=EF=81=8B"; }

.fa-pause::before { content: "=EF=81=8C"; }

.fa-stop::before { content: "=EF=81=8D"; }

.fa-forward::before { content: "=EF=81=8E"; }

.fa-fast-forward::before { content: "=EF=81=90"; }

.fa-step-forward::before { content: "=EF=81=91"; }

.fa-eject::before { content: "=EF=81=92"; }

.fa-chevron-left::before { content: "=EF=81=93"; }

.fa-chevron-right::before { content: "=EF=81=94"; }

.fa-plus-circle::before { content: "=EF=81=95"; }

.fa-minus-circle::before { content: "=EF=81=96"; }

.fa-times-circle::before { content: "=EF=81=97"; }

.fa-check-circle::before { content: "=EF=81=98"; }

.fa-question-circle::before { content: "=EF=81=99"; }

.fa-info-circle::before { content: "=EF=81=9A"; }

.fa-crosshairs::before { content: "=EF=81=9B"; }

.fa-times-circle-o::before { content: "=EF=81=9C"; }

.fa-check-circle-o::before { content: "=EF=81=9D"; }

.fa-ban::before { content: "=EF=81=9E"; }

.fa-arrow-left::before { content: "=EF=81=A0"; }

.fa-arrow-right::before { content: "=EF=81=A1"; }

.fa-arrow-up::before { content: "=EF=81=A2"; }

.fa-arrow-down::before { content: "=EF=81=A3"; }

.fa-mail-forward::before, .fa-share::before { content: "=EF=81=A4"; }

.fa-expand::before { content: "=EF=81=A5"; }

.fa-compress::before { content: "=EF=81=A6"; }

.fa-plus::before { content: "=EF=81=A7"; }

.fa-minus::before { content: "=EF=81=A8"; }

.fa-asterisk::before { content: "=EF=81=A9"; }

.fa-exclamation-circle::before { content: "=EF=81=AA"; }

.fa-gift::before { content: "=EF=81=AB"; }

.fa-leaf::before { content: "=EF=81=AC"; }

.fa-fire::before { content: "=EF=81=AD"; }

.fa-eye::before { content: "=EF=81=AE"; }

.fa-eye-slash::before { content: "=EF=81=B0"; }

.fa-warning::before, .fa-exclamation-triangle::before { content: "=EF=81=B1=
"; }

.fa-plane::before { content: "=EF=81=B2"; }

.fa-calendar::before { content: "=EF=81=B3"; }

.fa-random::before { content: "=EF=81=B4"; }

.fa-comment::before { content: "=EF=81=B5"; }

.fa-magnet::before { content: "=EF=81=B6"; }

.fa-chevron-up::before { content: "=EF=81=B7"; }

.fa-chevron-down::before { content: "=EF=81=B8"; }

.fa-retweet::before { content: "=EF=81=B9"; }

.fa-shopping-cart::before { content: "=EF=81=BA"; }

.fa-folder::before { content: "=EF=81=BB"; }

.fa-folder-open::before { content: "=EF=81=BC"; }

.fa-arrows-v::before { content: "=EF=81=BD"; }

.fa-arrows-h::before { content: "=EF=81=BE"; }

.fa-bar-chart-o::before, .fa-bar-chart::before { content: "=EF=82=80"; }

.fa-twitter-square::before { content: "=EF=82=81"; }

.fa-facebook-square::before { content: "=EF=82=82"; }

.fa-camera-retro::before { content: "=EF=82=83"; }

.fa-key::before { content: "=EF=82=84"; }

.fa-gears::before, .fa-cogs::before { content: "=EF=82=85"; }

.fa-comments::before { content: "=EF=82=86"; }

.fa-thumbs-o-up::before { content: "=EF=82=87"; }

.fa-thumbs-o-down::before { content: "=EF=82=88"; }

.fa-star-half::before { content: "=EF=82=89"; }

.fa-heart-o::before { content: "=EF=82=8A"; }

.fa-sign-out::before { content: "=EF=82=8B"; }

.fa-linkedin-square::before { content: "=EF=82=8C"; }

.fa-thumb-tack::before { content: "=EF=82=8D"; }

.fa-external-link::before { content: "=EF=82=8E"; }

.fa-sign-in::before { content: "=EF=82=90"; }

.fa-trophy::before { content: "=EF=82=91"; }

.fa-github-square::before { content: "=EF=82=92"; }

.fa-upload::before { content: "=EF=82=93"; }

.fa-lemon-o::before { content: "=EF=82=94"; }

.fa-phone::before { content: "=EF=82=95"; }

.fa-square-o::before { content: "=EF=82=96"; }

.fa-bookmark-o::before { content: "=EF=82=97"; }

.fa-phone-square::before { content: "=EF=82=98"; }

.fa-twitter::before { content: "=EF=82=99"; }

.fa-facebook::before { content: "=EF=82=9A"; }

.fa-github::before { content: "=EF=82=9B"; }

.fa-unlock::before { content: "=EF=82=9C"; }

.fa-credit-card::before { content: "=EF=82=9D"; }

.fa-rss::before { content: "=EF=82=9E"; }

.fa-hdd-o::before { content: "=EF=82=A0"; }

.fa-bullhorn::before { content: "=EF=82=A1"; }

.fa-bell::before { content: "=EF=83=B3"; }

.fa-certificate::before { content: "=EF=82=A3"; }

.fa-hand-o-right::before { content: "=EF=82=A4"; }

.fa-hand-o-left::before { content: "=EF=82=A5"; }

.fa-hand-o-up::before { content: "=EF=82=A6"; }

.fa-hand-o-down::before { content: "=EF=82=A7"; }

.fa-arrow-circle-left::before { content: "=EF=82=A8"; }

.fa-arrow-circle-right::before { content: "=EF=82=A9"; }

.fa-arrow-circle-up::before { content: "=EF=82=AA"; }

.fa-arrow-circle-down::before { content: "=EF=82=AB"; }

.fa-globe::before { content: "=EF=82=AC"; }

.fa-wrench::before { content: "=EF=82=AD"; }

.fa-tasks::before { content: "=EF=82=AE"; }

.fa-filter::before { content: "=EF=82=B0"; }

.fa-briefcase::before { content: "=EF=82=B1"; }

.fa-arrows-alt::before { content: "=EF=82=B2"; }

.fa-group::before, .fa-users::before { content: "=EF=83=80"; }

.fa-chain::before, .fa-link::before { content: "=EF=83=81"; }

.fa-cloud::before { content: "=EF=83=82"; }

.fa-flask::before { content: "=EF=83=83"; }

.fa-cut::before, .fa-scissors::before { content: "=EF=83=84"; }

.fa-copy::before, .fa-files-o::before { content: "=EF=83=85"; }

.fa-paperclip::before { content: "=EF=83=86"; }

.fa-save::before, .fa-floppy-o::before { content: "=EF=83=87"; }

.fa-square::before { content: "=EF=83=88"; }

.fa-navicon::before, .fa-reorder::before, .fa-bars::before { content: "=EF=
=83=89"; }

.fa-list-ul::before { content: "=EF=83=8A"; }

.fa-list-ol::before { content: "=EF=83=8B"; }

.fa-strikethrough::before { content: "=EF=83=8C"; }

.fa-underline::before { content: "=EF=83=8D"; }

.fa-table::before { content: "=EF=83=8E"; }

.fa-magic::before { content: "=EF=83=90"; }

.fa-truck::before { content: "=EF=83=91"; }

.fa-pinterest::before { content: "=EF=83=92"; }

.fa-pinterest-square::before { content: "=EF=83=93"; }

.fa-google-plus-square::before { content: "=EF=83=94"; }

.fa-google-plus::before { content: "=EF=83=95"; }

.fa-money::before { content: "=EF=83=96"; }

.fa-caret-down::before { content: "=EF=83=97"; }

.fa-caret-up::before { content: "=EF=83=98"; }

.fa-caret-left::before { content: "=EF=83=99"; }

.fa-caret-right::before { content: "=EF=83=9A"; }

.fa-columns::before { content: "=EF=83=9B"; }

.fa-unsorted::before, .fa-sort::before { content: "=EF=83=9C"; }

.fa-sort-down::before, .fa-sort-desc::before { content: "=EF=83=9D"; }

.fa-sort-up::before, .fa-sort-asc::before { content: "=EF=83=9E"; }

.fa-envelope::before { content: "=EF=83=A0"; }

.fa-linkedin::before { content: "=EF=83=A1"; }

.fa-rotate-left::before, .fa-undo::before { content: "=EF=83=A2"; }

.fa-legal::before, .fa-gavel::before { content: "=EF=83=A3"; }

.fa-dashboard::before, .fa-tachometer::before { content: "=EF=83=A4"; }

.fa-comment-o::before { content: "=EF=83=A5"; }

.fa-comments-o::before { content: "=EF=83=A6"; }

.fa-flash::before, .fa-bolt::before { content: "=EF=83=A7"; }

.fa-sitemap::before { content: "=EF=83=A8"; }

.fa-umbrella::before { content: "=EF=83=A9"; }

.fa-paste::before, .fa-clipboard::before { content: "=EF=83=AA"; }

.fa-lightbulb-o::before { content: "=EF=83=AB"; }

.fa-exchange::before { content: "=EF=83=AC"; }

.fa-cloud-download::before { content: "=EF=83=AD"; }

.fa-cloud-upload::before { content: "=EF=83=AE"; }

.fa-user-md::before { content: "=EF=83=B0"; }

.fa-stethoscope::before { content: "=EF=83=B1"; }

.fa-suitcase::before { content: "=EF=83=B2"; }

.fa-bell-o::before { content: "=EF=82=A2"; }

.fa-coffee::before { content: "=EF=83=B4"; }

.fa-cutlery::before { content: "=EF=83=B5"; }

.fa-file-text-o::before { content: "=EF=83=B6"; }

.fa-building-o::before { content: "=EF=83=B7"; }

.fa-hospital-o::before { content: "=EF=83=B8"; }

.fa-ambulance::before { content: "=EF=83=B9"; }

.fa-medkit::before { content: "=EF=83=BA"; }

.fa-fighter-jet::before { content: "=EF=83=BB"; }

.fa-beer::before { content: "=EF=83=BC"; }

.fa-h-square::before { content: "=EF=83=BD"; }

.fa-plus-square::before { content: "=EF=83=BE"; }

.fa-angle-double-left::before { content: "=EF=84=80"; }

.fa-angle-double-right::before { content: "=EF=84=81"; }

.fa-angle-double-up::before { content: "=EF=84=82"; }

.fa-angle-double-down::before { content: "=EF=84=83"; }

.fa-angle-left::before { content: "=EF=84=84"; }

.fa-angle-right::before { content: "=EF=84=85"; }

.fa-angle-up::before { content: "=EF=84=86"; }

.fa-angle-down::before { content: "=EF=84=87"; }

.fa-desktop::before { content: "=EF=84=88"; }

.fa-laptop::before { content: "=EF=84=89"; }

.fa-tablet::before { content: "=EF=84=8A"; }

.fa-mobile-phone::before, .fa-mobile::before { content: "=EF=84=8B"; }

.fa-circle-o::before { content: "=EF=84=8C"; }

.fa-quote-left::before { content: "=EF=84=8D"; }

.fa-quote-right::before { content: "=EF=84=8E"; }

.fa-spinner::before { content: "=EF=84=90"; }

.fa-circle::before { content: "=EF=84=91"; }

.fa-mail-reply::before, .fa-reply::before { content: "=EF=84=92"; }

.fa-github-alt::before { content: "=EF=84=93"; }

.fa-folder-o::before { content: "=EF=84=94"; }

.fa-folder-open-o::before { content: "=EF=84=95"; }

.fa-smile-o::before { content: "=EF=84=98"; }

.fa-frown-o::before { content: "=EF=84=99"; }

.fa-meh-o::before { content: "=EF=84=9A"; }

.fa-gamepad::before { content: "=EF=84=9B"; }

.fa-keyboard-o::before { content: "=EF=84=9C"; }

.fa-flag-o::before { content: "=EF=84=9D"; }

.fa-flag-checkered::before { content: "=EF=84=9E"; }

.fa-terminal::before { content: "=EF=84=A0"; }

.fa-code::before { content: "=EF=84=A1"; }

.fa-mail-reply-all::before, .fa-reply-all::before { content: "=EF=84=A2"; }

.fa-star-half-empty::before, .fa-star-half-full::before, .fa-star-half-o::b=
efore { content: "=EF=84=A3"; }

.fa-location-arrow::before { content: "=EF=84=A4"; }

.fa-crop::before { content: "=EF=84=A5"; }

.fa-code-fork::before { content: "=EF=84=A6"; }

.fa-unlink::before, .fa-chain-broken::before { content: "=EF=84=A7"; }

.fa-question::before { content: "=EF=84=A8"; }

.fa-info::before { content: "=EF=84=A9"; }

.fa-exclamation::before { content: "=EF=84=AA"; }

.fa-superscript::before { content: "=EF=84=AB"; }

.fa-subscript::before { content: "=EF=84=AC"; }

.fa-eraser::before { content: "=EF=84=AD"; }

.fa-puzzle-piece::before { content: "=EF=84=AE"; }

.fa-microphone::before { content: "=EF=84=B0"; }

.fa-microphone-slash::before { content: "=EF=84=B1"; }

.fa-shield::before { content: "=EF=84=B2"; }

.fa-calendar-o::before { content: "=EF=84=B3"; }

.fa-fire-extinguisher::before { content: "=EF=84=B4"; }

.fa-rocket::before { content: "=EF=84=B5"; }

.fa-maxcdn::before { content: "=EF=84=B6"; }

.fa-chevron-circle-left::before { content: "=EF=84=B7"; }

.fa-chevron-circle-right::before { content: "=EF=84=B8"; }

.fa-chevron-circle-up::before { content: "=EF=84=B9"; }

.fa-chevron-circle-down::before { content: "=EF=84=BA"; }

.fa-html5::before { content: "=EF=84=BB"; }

.fa-css3::before { content: "=EF=84=BC"; }

.fa-anchor::before { content: "=EF=84=BD"; }

.fa-unlock-alt::before { content: "=EF=84=BE"; }

.fa-bullseye::before { content: "=EF=85=80"; }

.fa-ellipsis-h::before { content: "=EF=85=81"; }

.fa-ellipsis-v::before { content: "=EF=85=82"; }

.fa-rss-square::before { content: "=EF=85=83"; }

.fa-play-circle::before { content: "=EF=85=84"; }

.fa-ticket::before { content: "=EF=85=85"; }

.fa-minus-square::before { content: "=EF=85=86"; }

.fa-minus-square-o::before { content: "=EF=85=87"; }

.fa-level-up::before { content: "=EF=85=88"; }

.fa-level-down::before { content: "=EF=85=89"; }

.fa-check-square::before { content: "=EF=85=8A"; }

.fa-pencil-square::before { content: "=EF=85=8B"; }

.fa-external-link-square::before { content: "=EF=85=8C"; }

.fa-share-square::before { content: "=EF=85=8D"; }

.fa-compass::before { content: "=EF=85=8E"; }

.fa-toggle-down::before, .fa-caret-square-o-down::before { content: "=EF=85=
=90"; }

.fa-toggle-up::before, .fa-caret-square-o-up::before { content: "=EF=85=91"=
; }

.fa-toggle-right::before, .fa-caret-square-o-right::before { content: "=EF=
=85=92"; }

.fa-euro::before, .fa-eur::before { content: "=EF=85=93"; }

.fa-gbp::before { content: "=EF=85=94"; }

.fa-dollar::before, .fa-usd::before { content: "=EF=85=95"; }

.fa-rupee::before, .fa-inr::before { content: "=EF=85=96"; }

.fa-cny::before, .fa-rmb::before, .fa-yen::before, .fa-jpy::before { conten=
t: "=EF=85=97"; }

.fa-ruble::before, .fa-rouble::before, .fa-rub::before { content: "=EF=85=
=98"; }

.fa-won::before, .fa-krw::before { content: "=EF=85=99"; }

.fa-bitcoin::before, .fa-btc::before { content: "=EF=85=9A"; }

.fa-file::before { content: "=EF=85=9B"; }

.fa-file-text::before { content: "=EF=85=9C"; }

.fa-sort-alpha-asc::before { content: "=EF=85=9D"; }

.fa-sort-alpha-desc::before { content: "=EF=85=9E"; }

.fa-sort-amount-asc::before { content: "=EF=85=A0"; }

.fa-sort-amount-desc::before { content: "=EF=85=A1"; }

.fa-sort-numeric-asc::before { content: "=EF=85=A2"; }

.fa-sort-numeric-desc::before { content: "=EF=85=A3"; }

.fa-thumbs-up::before { content: "=EF=85=A4"; }

.fa-thumbs-down::before { content: "=EF=85=A5"; }

.fa-youtube-square::before { content: "=EF=85=A6"; }

.fa-youtube::before { content: "=EF=85=A7"; }

.fa-xing::before { content: "=EF=85=A8"; }

.fa-xing-square::before { content: "=EF=85=A9"; }

.fa-youtube-play::before { content: "=EF=85=AA"; }

.fa-dropbox::before { content: "=EF=85=AB"; }

.fa-stack-overflow::before { content: "=EF=85=AC"; }

.fa-instagram::before { content: "=EF=85=AD"; }

.fa-flickr::before { content: "=EF=85=AE"; }

.fa-adn::before { content: "=EF=85=B0"; }

.fa-bitbucket::before { content: "=EF=85=B1"; }

.fa-bitbucket-square::before { content: "=EF=85=B2"; }

.fa-tumblr::before { content: "=EF=85=B3"; }

.fa-tumblr-square::before { content: "=EF=85=B4"; }

.fa-long-arrow-down::before { content: "=EF=85=B5"; }

.fa-long-arrow-up::before { content: "=EF=85=B6"; }

.fa-long-arrow-left::before { content: "=EF=85=B7"; }

.fa-long-arrow-right::before { content: "=EF=85=B8"; }

.fa-apple::before { content: "=EF=85=B9"; }

.fa-windows::before { content: "=EF=85=BA"; }

.fa-android::before { content: "=EF=85=BB"; }

.fa-linux::before { content: "=EF=85=BC"; }

.fa-dribbble::before { content: "=EF=85=BD"; }

.fa-skype::before { content: "=EF=85=BE"; }

.fa-foursquare::before { content: "=EF=86=80"; }

.fa-trello::before { content: "=EF=86=81"; }

.fa-female::before { content: "=EF=86=82"; }

.fa-male::before { content: "=EF=86=83"; }

.fa-gittip::before { content: "=EF=86=84"; }

.fa-sun-o::before { content: "=EF=86=85"; }

.fa-moon-o::before { content: "=EF=86=86"; }

.fa-archive::before { content: "=EF=86=87"; }

.fa-bug::before { content: "=EF=86=88"; }

.fa-vk::before { content: "=EF=86=89"; }

.fa-weibo::before { content: "=EF=86=8A"; }

.fa-renren::before { content: "=EF=86=8B"; }

.fa-pagelines::before { content: "=EF=86=8C"; }

.fa-stack-exchange::before { content: "=EF=86=8D"; }

.fa-arrow-circle-o-right::before { content: "=EF=86=8E"; }

.fa-arrow-circle-o-left::before { content: "=EF=86=90"; }

.fa-toggle-left::before, .fa-caret-square-o-left::before { content: "=EF=86=
=91"; }

.fa-dot-circle-o::before { content: "=EF=86=92"; }

.fa-wheelchair::before { content: "=EF=86=93"; }

.fa-vimeo-square::before { content: "=EF=86=94"; }

.fa-turkish-lira::before, .fa-try::before { content: "=EF=86=95"; }

.fa-plus-square-o::before { content: "=EF=86=96"; }

.fa-space-shuttle::before { content: "=EF=86=97"; }

.fa-slack::before { content: "=EF=86=98"; }

.fa-envelope-square::before { content: "=EF=86=99"; }

.fa-wordpress::before { content: "=EF=86=9A"; }

.fa-openid::before { content: "=EF=86=9B"; }

.fa-institution::before, .fa-bank::before, .fa-university::before { content=
: "=EF=86=9C"; }

.fa-mortar-board::before, .fa-graduation-cap::before { content: "=EF=86=9D"=
; }

.fa-yahoo::before { content: "=EF=86=9E"; }

.fa-google::before { content: "=EF=86=A0"; }

.fa-reddit::before { content: "=EF=86=A1"; }

.fa-reddit-square::before { content: "=EF=86=A2"; }

.fa-stumbleupon-circle::before { content: "=EF=86=A3"; }

.fa-stumbleupon::before { content: "=EF=86=A4"; }

.fa-delicious::before { content: "=EF=86=A5"; }

.fa-digg::before { content: "=EF=86=A6"; }

.fa-pied-piper::before { content: "=EF=86=A7"; }

.fa-pied-piper-alt::before { content: "=EF=86=A8"; }

.fa-drupal::before { content: "=EF=86=A9"; }

.fa-joomla::before { content: "=EF=86=AA"; }

.fa-language::before { content: "=EF=86=AB"; }

.fa-fax::before { content: "=EF=86=AC"; }

.fa-building::before { content: "=EF=86=AD"; }

.fa-child::before { content: "=EF=86=AE"; }

.fa-paw::before { content: "=EF=86=B0"; }

.fa-spoon::before { content: "=EF=86=B1"; }

.fa-cube::before { content: "=EF=86=B2"; }

.fa-cubes::before { content: "=EF=86=B3"; }

.fa-behance::before { content: "=EF=86=B4"; }

.fa-behance-square::before { content: "=EF=86=B5"; }

.fa-steam::before { content: "=EF=86=B6"; }

.fa-steam-square::before { content: "=EF=86=B7"; }

.fa-recycle::before { content: "=EF=86=B8"; }

.fa-automobile::before, .fa-car::before { content: "=EF=86=B9"; }

.fa-cab::before, .fa-taxi::before { content: "=EF=86=BA"; }

.fa-tree::before { content: "=EF=86=BB"; }

.fa-spotify::before { content: "=EF=86=BC"; }

.fa-deviantart::before { content: "=EF=86=BD"; }

.fa-soundcloud::before { content: "=EF=86=BE"; }

.fa-database::before { content: "=EF=87=80"; }

.fa-file-pdf-o::before { content: "=EF=87=81"; }

.fa-file-word-o::before { content: "=EF=87=82"; }

.fa-file-excel-o::before { content: "=EF=87=83"; }

.fa-file-powerpoint-o::before { content: "=EF=87=84"; }

.fa-file-photo-o::before, .fa-file-picture-o::before, .fa-file-image-o::bef=
ore { content: "=EF=87=85"; }

.fa-file-zip-o::before, .fa-file-archive-o::before { content: "=EF=87=86"; =
}

.fa-file-sound-o::before, .fa-file-audio-o::before { content: "=EF=87=87"; =
}

.fa-file-movie-o::before, .fa-file-video-o::before { content: "=EF=87=88"; =
}

.fa-file-code-o::before { content: "=EF=87=89"; }

.fa-vine::before { content: "=EF=87=8A"; }

.fa-codepen::before { content: "=EF=87=8B"; }

.fa-jsfiddle::before { content: "=EF=87=8C"; }

.fa-life-bouy::before, .fa-life-buoy::before, .fa-life-saver::before, .fa-s=
upport::before, .fa-life-ring::before { content: "=EF=87=8D"; }

.fa-circle-o-notch::before { content: "=EF=87=8E"; }

.fa-ra::before, .fa-rebel::before { content: "=EF=87=90"; }

.fa-ge::before, .fa-empire::before { content: "=EF=87=91"; }

.fa-git-square::before { content: "=EF=87=92"; }

.fa-git::before { content: "=EF=87=93"; }

.fa-hacker-news::before { content: "=EF=87=94"; }

.fa-tencent-weibo::before { content: "=EF=87=95"; }

.fa-qq::before { content: "=EF=87=96"; }

.fa-wechat::before, .fa-weixin::before { content: "=EF=87=97"; }

.fa-send::before, .fa-paper-plane::before { content: "=EF=87=98"; }

.fa-send-o::before, .fa-paper-plane-o::before { content: "=EF=87=99"; }

.fa-history::before { content: "=EF=87=9A"; }

.fa-circle-thin::before { content: "=EF=87=9B"; }

.fa-header::before { content: "=EF=87=9C"; }

.fa-paragraph::before { content: "=EF=87=9D"; }

.fa-sliders::before { content: "=EF=87=9E"; }

.fa-share-alt::before { content: "=EF=87=A0"; }

.fa-share-alt-square::before { content: "=EF=87=A1"; }

.fa-bomb::before { content: "=EF=87=A2"; }

.fa-soccer-ball-o::before, .fa-futbol-o::before { content: "=EF=87=A3"; }

.fa-tty::before { content: "=EF=87=A4"; }

.fa-binoculars::before { content: "=EF=87=A5"; }

.fa-plug::before { content: "=EF=87=A6"; }

.fa-slideshare::before { content: "=EF=87=A7"; }

.fa-twitch::before { content: "=EF=87=A8"; }

.fa-yelp::before { content: "=EF=87=A9"; }

.fa-newspaper-o::before { content: "=EF=87=AA"; }

.fa-wifi::before { content: "=EF=87=AB"; }

.fa-calculator::before { content: "=EF=87=AC"; }

.fa-paypal::before { content: "=EF=87=AD"; }

.fa-google-wallet::before { content: "=EF=87=AE"; }

.fa-cc-visa::before { content: "=EF=87=B0"; }

.fa-cc-mastercard::before { content: "=EF=87=B1"; }

.fa-cc-discover::before { content: "=EF=87=B2"; }

.fa-cc-amex::before { content: "=EF=87=B3"; }

.fa-cc-paypal::before { content: "=EF=87=B4"; }

.fa-cc-stripe::before { content: "=EF=87=B5"; }

.fa-bell-slash::before { content: "=EF=87=B6"; }

.fa-bell-slash-o::before { content: "=EF=87=B7"; }

.fa-trash::before { content: "=EF=87=B8"; }

.fa-copyright::before { content: "=EF=87=B9"; }

.fa-at::before { content: "=EF=87=BA"; }

.fa-eyedropper::before { content: "=EF=87=BB"; }

.fa-paint-brush::before { content: "=EF=87=BC"; }

.fa-birthday-cake::before { content: "=EF=87=BD"; }

.fa-area-chart::before { content: "=EF=87=BE"; }

.fa-pie-chart::before { content: "=EF=88=80"; }

.fa-line-chart::before { content: "=EF=88=81"; }

.fa-lastfm::before { content: "=EF=88=82"; }

.fa-lastfm-square::before { content: "=EF=88=83"; }

.fa-toggle-off::before { content: "=EF=88=84"; }

.fa-toggle-on::before { content: "=EF=88=85"; }

.fa-bicycle::before { content: "=EF=88=86"; }

.fa-bus::before { content: "=EF=88=87"; }

.fa-ioxhost::before { content: "=EF=88=88"; }

.fa-angellist::before { content: "=EF=88=89"; }

.fa-cc::before { content: "=EF=88=8A"; }

.fa-shekel::before, .fa-sheqel::before, .fa-ils::before { content: "=EF=88=
=8B"; }

.fa-meanpath::before { content: "=EF=88=8C"; }

a:hover { text-decoration: none; }

p a { text-decoration: underline; }

p a:hover { background-color: rgb(82, 0, 83); color: white; }

a:hover .big-circle, a:hover .circle { background-color: rgb(82, 0, 83); }

.navbar { margin-bottom: 0px; }

.navbar-brand { padding: 0px; margin: 4px 0px 0px; }

.jumbotron { text-align: center; padding-top: 0px; padding-bottom: 0px; mar=
gin-bottom: 0px; }

.jumbotron h1 { color: white; }

blockquote { margin: 0px; }

blockquote p { font-size: inherit; font-weight: inherit; line-height: inher=
it; }

::selection { background: rgba(114, 43, 114, 0.3); color: white; }

.top-pad { padding-top: 15px; }

.next-steps { text-align: center; }

footer .container { padding: 2em 0px 1em; }

footer .copyright { margin: 0px 10px; }

footer .social-icons { opacity: 0.7; font-size: 26px; margin-top: -20px; pa=
dding-top: 5px; }

footer .social-icons a { margin: 3px 10px; }

.next-steps + footer { padding-top: 1em; }

.next-steps + footer > .container { border-top: 1px solid rgb(238, 238, 238=
); }

.jumbotron { overflow: hidden; }

.jumbotron .screenshot { margin-top: 30px; height: auto; width: 100%; box-s=
hadow: black 0px 0px 10px; }

.main-content { padding: 30px 0px; background: rgb(245, 245, 245); }

.table .package-row span { margin-left: 0.7em; }

.nav.navbar-nav li:hover { background: rgb(114, 43, 114); }

.nav.navbar-nav li.selected { position: relative; }

.nav.navbar-nav li.selected::after { content: " "; display: block; position=
: absolute; bottom: 0px; height: 5px; width: 100%; background-color: rgb(11=
4, 43, 114); }

.navbar-brand .title { padding: 0px 0.4em; }

.navbar-brand .fa.fa-home { display: none; }

.navbar-brand:hover .fa.fa-home { display: inline-block; }

.fa.circle { background-color: rgb(114, 43, 114); color: white; border-radi=
us: 50%; padding: 0.8em; width: 1em; box-sizing: content-box; font-size: 20=
0%; }

.fa.big-circle { background-color: rgb(114, 43, 114); color: white; border-=
radius: 50%; padding: 0.8em; width: 1em; box-sizing: content-box; font-size=
: 250%; }

.manual-navigation { padding: 0px; }

.sticky { width: 285px; overflow-y: auto; height: calc(100vh - 108px); }

.sticky.sticked { position: fixed; top: 10px; height: calc(100% - 20px); }

.sticky ul { list-style-type: none; padding-left: 15px; display: none; }

.sticky ul.level-1 { display: block; margin: 0px; padding: 0px; }

.sticky ul.active { display: block; }

.sticky li a { border-bottom: 1px solid rgb(227, 227, 227); padding: 4px 8p=
x; display: block; }

.sticky li a:hover { background: rgb(227, 227, 227); }

.sticky li.active > a { background: rgb(114, 43, 114); color: white; }

.borderless, table.borderless td, table.borderless th { border: 0px; }

table.borderless td, table.borderless th { padding: 0px 0.5em 0px 0px !impo=
rtant; }

.first { margin-top: 0px !important; }

.last, .with-subtitle { margin-bottom: 0px !important; }

.hidden { display: none; }

a.toc-backref { text-decoration: none; color: black; }

blockquote.epigraph { margin: 2em 5em; }

dl.docutils dd { margin-bottom: 0.5em; }

object[type=3D"image/svg+xml"], object[type=3D"application/x-shockwave-flas=
h"] { overflow: hidden; }

div.abstract { margin: 2em 5em; }

div.abstract p.topic-title { font-weight: bold; text-align: center; }

div.admonition, div.attention, div.caution, div.danger, div.error, div.hint=
, div.important, div.note, div.tip, div.warning { margin: 2em; border: medi=
um outset; padding: 1em; }

div.admonition p.admonition-title, div.hint p.admonition-title, div.importa=
nt p.admonition-title, div.note p.admonition-title, div.tip p.admonition-ti=
tle { font-weight: bold; font-family: sans-serif; }

div.attention p.admonition-title, div.caution p.admonition-title, div.dange=
r p.admonition-title, div.error p.admonition-title, div.warning p.admonitio=
n-title, .code .error { color: red; font-weight: bold; font-family: sans-se=
rif; }

div.dedication { margin: 2em 5em; text-align: center; font-style: italic; }

div.dedication p.topic-title { font-weight: bold; font-style: normal; }

div.figure { margin-left: 2em; margin-right: 2em; }

div.footer, div.header { clear: both; font-size: smaller; }

div.line-block { display: block; margin-top: 1em; margin-bottom: 1em; }

div.line-block div.line-block { margin-top: 0px; margin-bottom: 0px; margin=
-left: 1.5em; }

div.sidebar { margin: 0px 0px 0.5em 1em; border: medium outset; padding: 1e=
m; background-color: rgb(255, 255, 238); width: 40%; float: right; clear: r=
ight; }

div.sidebar p.rubric { font-family: sans-serif; font-size: medium; }

div.system-messages { margin: 5em; }

div.system-messages h1 { color: red; }

div.system-message { border: medium outset; padding: 1em; }

div.system-message p.system-message-title { color: red; font-weight: bold; =
}

div.topic { margin: 2em; }

h1.section-subtitle, h2.section-subtitle, h3.section-subtitle, h4.section-s=
ubtitle, h5.section-subtitle, h6.section-subtitle { margin-top: 0.4em; }

h1.title { text-align: center; }

h2.subtitle { text-align: center; }

hr.docutils { width: 75%; }

img.align-left, .figure.align-left, object.align-left { clear: left; float:=
 left; margin-right: 1em; }

img.align-right, .figure.align-right, object.align-right { clear: right; fl=
oat: right; margin-left: 1em; }

img.align-center, .figure.align-center, object.align-center { display: bloc=
k; margin-left: auto; margin-right: auto; }

.align-left { text-align: left; }

.align-center { clear: both; text-align: center; }

.align-right { text-align: right; }

div.align-right { text-align: inherit; }

ol.simple, ul.simple { margin-bottom: 1em; }

ol.arabic { list-style: decimal; }

ol.loweralpha { list-style: lower-alpha; }

ol.upperalpha { list-style: upper-alpha; }

ol.lowerroman { list-style: lower-roman; }

ol.upperroman { list-style: upper-roman; }

p.attribution { text-align: right; margin-left: 50%; }

p.caption { font-style: italic; }

p.credits { font-style: italic; font-size: smaller; }

p.label { white-space: nowrap; }

p.rubric { font-weight: bold; font-size: larger; color: maroon; text-align:=
 center; }

p.sidebar-title { font-family: sans-serif; font-weight: bold; font-size: la=
rger; }

p.sidebar-subtitle { font-family: sans-serif; font-weight: bold; }

p.topic-title { font-weight: bold; }

pre.address { margin-bottom: 0px; margin-top: 0px; font: inherit; }

pre.literal-block, pre.doctest-block, pre.math, pre.code { margin-left: 2em=
; margin-right: 2em; }

pre.code .ln { color: grey; }

pre.code, code { background-color: rgb(238, 238, 238); }

pre.code .comment, code .comment { color: rgb(92, 101, 118); }

pre.code .keyword, code .keyword { color: rgb(59, 13, 6); font-weight: bold=
; }

pre.code .literal.string, code .literal.string { color: rgb(12, 84, 4); }

pre.code .name.builtin, code .name.builtin { color: rgb(53, 43, 132); }

pre.code .deleted, code .deleted { background-color: rgb(222, 176, 161); }

pre.code .inserted, code .inserted { background-color: rgb(163, 210, 137); =
}

span.classifier { font-family: sans-serif; font-style: oblique; }

span.classifier-delimiter { font-family: sans-serif; font-weight: bold; }

span.interpreted { font-family: sans-serif; }

span.option { white-space: nowrap; }

span.pre { white-space: pre; }

span.problematic { color: red; }

span.section-subtitle { font-size: 80%; }

table.citation { border-left: 1px solid gray; margin-left: 1px; }

table.docinfo { margin: 2em 4em; }

table.docutils { margin-top: 0.5em; margin-bottom: 0.5em; }

table.footnote { border-left: 1px solid black; margin-left: 1px; }

table.docutils td, table.docutils th, table.docinfo td, table.docinfo th { =
padding-left: 0.5em; padding-right: 0.5em; vertical-align: top; }

table.docutils th.field-name, table.docinfo th.docinfo-name { font-weight: =
bold; text-align: left; white-space: nowrap; padding-left: 0px; }

table.docutils.booktabs { border-width: 2px 0px; border-right-style: initia=
l; border-left-style: initial; border-color: initial; border-image: initial=
; border-top-style: solid; border-bottom-style: solid; border-collapse: col=
lapse; }

table.docutils.booktabs * { border: 0px; }

table.docutils.booktabs th { border-bottom: thin solid; text-align: left; }

h1 tt.docutils, h2 tt.docutils, h3 tt.docutils, h4 tt.docutils, h5 tt.docut=
ils, h6 tt.docutils { font-size: 100%; }

ul.auto-toc { list-style-type: none; }

.manual-container .section > dl > dt { font-size: 15px; line-height: 20px; =
}

.manual-container .section > dl > dd { margin-left: 25px; }

.manual-container .section > dl > dd + dt { margin-top: 1em; }

.manual-container .section blockquote { border-left: none; }

.manual-container div.admonition, .manual-container div.attention, .manual-=
container div.caution, .manual-container div.danger, .manual-container div.=
error, .manual-container div.hint, .manual-container div.important, .manual=
-container div.note, .manual-container div.tip, .manual-container div.warni=
ng { border: 1px solid rgb(227, 227, 227); }

.manual-container .anchor { padding: 3px; border-radius: 50%; display: none=
; }

.manual-container dt:hover .anchor { display: inline; }
------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://mpv.io/images/mpv-logo-128-0baae5aa.png

iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAApJElEQVR42u19fYxj13XfsfTiUA3T
UC3bsDVTMwgdMy2LEgYDEAEREwjRsCgLT5FpM2gHyBTdIFt0i67dKTxG549JOn8M0kkzMMbt/DEt
JtKsTO1yJWrF3WXWE4mOKYmSaYlyaYeuqJo2aIRSuDJlERZlvV31nEs+zn2X932SM7uS9i7eksNH
vo97fvec3/m4990P99qHut1/py/gXruz7R4APuTtHgA+5O0eAD7k7R4APuTtgwwARdg8Pp/Ps729
HTx79mx4ZWUlglsI38eWl5fDuAWXlpaCmUzGGwgEoFar8cf4wLYPEgAmgj44OAivr6+nV1dXl3A7
u7a2dh7/Xj9//vxmLBb7j6FQ6HeDweDv0Ob3+5dQ4P9q/Pe/iUQi/z6VSv1n+g225XPnzmURJEkE
S3hhYcGDbfjSSy/d6XudW3u/A4AJPJ/PRzc2NlZQaKv4uhWNRj+Pgv0tr9ebRIFFcPu7+D2voigf
EQ+gqiqoQxUGgyF7PzmwonwUt7+Jv/1FPM6nUHv8YwJJOp1GTJzLnDlzJoYaw4O/6X3zm9+80/3g
ur0fAcCEXi6XkyhsEvgOjtrPo4B+A4X1yyg0L//lQX8AzUYTKuUqHBWPoJgvQv6wALn9HBzu5dj7
Am7FfAmKh6N92melQgmq5Ro06g1ot9rQ7/cJGAqe62MIijiC7F8QIEhDIBi8+Hn3ueeeU7nTv3en
O8uqvV8AwNT73t5eeGdn5zwKfRfV+GdRCL9K8uC/2O32oFwqoxDzcLB7ALmDPFRKVWjVW9Br9WHY
U0EZKuAFH/gVP/hwo1f6m9778HC+8T4Pfqr2AXrtHrQbHahXGnBUKEMhV0COUIcengtBpwSCgV9E
4f+TRCJxljhFNptVS6VS+8c//vGd7jfLdrcDgI32o6Oj5NbW1nY8ntjx+byfRqH/Df5LNDrzKOjd
7T322qw1YdAZgqJ6IKAERgJGwXpQOXjwnzL+x/O70d8qd1oQ9hFoCBL0P2IOgdFutBFsFaY96BoI
DMFQ8JPIKRbRRCyRicAftl588cW7VivcrQDQ1HwaWft+OBz+L2TL8bP7tN3DwYB1/PbGDlPXnVYX
R7ZnPKoDKGwStWcmEq+OAaEYHMMz+edFwA2YuSAT0+v1AEHwIHKG30gmk2eWlpd8eP2NF154YXin
OxbucgCwoUYjngSPav4L2HG/wH+h0+nC/s4+7GzuQgNHOqlzPwqcVLcmcGWOnpuTY9F3CQx9NDVH
hSOo1evg83s9COBfQ/OwQhqh0+k0Xn31VdX2QU+43U0AUFDoof39/W0kddso+BC/s9PuMKGT8Lto
k9FKM/VOqp0XEZoHKapOD8HK+NXDzEStXIdqpQpev/cBvK9PZzLpReQI/YcPD1twF5iFuwEATN3X
642zyKgPkdgl8O+P8Cx+Z4sEfwD9bp/EzsgaqXgngp1lyKkGv1aE48q1BX42AGiUG1BBIATDwQfD
kfBnVlbOxFEz1L5y48YA7iAQ7jQAGLM/ODjIoc38PRy8D/A7yR3bWtti9h25+kTw1niaFY8wBZ25
mBUUde2oDq12C2Lx6C9FY9Fl1AaDw4cfbnBYOlUQ3CkAsFFfq9WWcNTnUN3/Cgisfv38BlSPqsw9
C3iCx6pVmaeFB4lusKcrrAiiGbCG6KGQ9+DxeX4agfCbKysrUeyD6vPPP6+RxNtzvUW4uwCgICHy
ViqVHSR5G/j3z/A7KUBDtn7YVyc23si2z6NR9G+oDtk2UAcwGNJ7eh2M9oE+QjhP3DWrLWg1URsk
Y7+cSMQX4vF4vVB4ogOnaBJOGwDK5uZmEMlewe/3/zMQbP36uQ2olCuM4BGzdzvCwGTUkmB7gy50
e7j1O7h1odfvsa0/6LP97BXdzP6wz96Ptt7klcCiGsQMnLZhbwjVEnKDaPDnorHYYiad7j+SyzXg
lEBwmgDwHB4eUuatiEQvyu9oNloo/HXodtB/VoLHo34OJyVBkcA7PRQ2biToAQqSCZFGtmpT7at6
jUEAoeMMECSkJdw0hTt2/Qhl7lF/Kp6Mpynp9NBDD1VOgxecFgA8xWIxmclkCqjK/w6/o4J2fmt9
C6gPSfg8yZtF7feGPSb0TreNQu+j4EjgMKM/AFJcqGg2SHPQNvpEcXXt7TqBtHtfIpX4NUpRo5k8
unmzd6IgOA0AUCg3nUwmc9gpD/I7KJK3t73HAjhBJQSzcvnRaO9Bu9tiKn44HBq6cCcVIaBzEpfQ
eIPTM1DeodVsQyId/wc4YKKNRqP0gx/8QD0pcnjSAGDCR9JHwv9Zfschy8YdjpMygakf0ghyMlZ5
wTslbUb+uxbScdOGYzJJABxpA/vH6XcH0Ky3CASfSKVTUeRFxZs/vHkimuAkAeApFIrJVCo5JXyK
5hVyxXEmLgBuNL02skm1t7QRrw5t2Fy9uBUbQp8GiGIbHgRG8iycmrQhpbHrTQRB4hOZbCZcyOdL
w3femTsITgoAVJUTy2aZzdelaw9w1BdJ+Izp+20dzGg8E4tvdVpstIGFgrcjWHvicacRRhxkaKEN
9J8P+kNoozmIp+O/kl3I+h76k4fK8yaGJwEAcvVCKysrAuFTWB6d/Hw28j16tW82nhRJZ9Kop6yb
zMYrNlW82XvFxrUcD2jFtsvKtBR+zTqiOWr9Xp9FQhOZeDyTzgxzj+Zq8wTBvAGghMNh3+7eXs7r
8fxDvnOoImd3a48VW/jGI99NTI/crmanydwwZyNVPtqtroHtVyTawoY6Nzo2K0PDf7ZB0O0zICAn
SCKfahYKhda83Jl5AkAL7277/f7PgJDC3Ti/wVKlAU/A5eGBBWFI5Y9InupK/HYYADhOBSu2AQUC
COzyAvIOPH7PfbF4LIX9W/ra177WH3fCTFpgngDwoN+6hBpgHSaFG6MbXTu7xkK7QS6mb7+pE5Z/
LHxwNOLsnFP6HYOf6YVmQ4OY3BoFmxUbmU0CC8UJwvHQA9FYNIEDLf/aa68NZzUF8wKAB+0+lU0f
ikWZVLFDbJaCPHxnyDpGlSZmlLHwmwA27bhiKACbNM9sVArmQAFrDmPVCNSjJJdi9UUGgkQ2/vNo
CjyPPPLIzNHCeQCAqf5cLncoZvUo40U1epTNG1XrmDN72e1T/J1Gvltf3s733XARR1pFsaa3I3Ng
zQnIpaQ4QTwdi0ej0dr1a9fbs5iCeQCA7P7ZYDD4u2I59sbqJrP7RPymR5c1h6HQKhE+cKH23e2R
Y4ZPRdtttsilU+0zbr12F/wh/0ci0Ui82WzkOp0fuDYFswLAs76+HkLVf4DvHxBVP5Vxkeo362mj
UC2pRRK+qtpJtNhx/Oz53rO0qbM6OLRVWZvYqEw9mY0/GIvHlS8/8mXXpmAWAGjTsLbH9fmTHfVq
nfn7FOXTVL9irAeljfx8yrZZKW+Yxf4KHS3rd1daRHIspybHCgSjGU0A0UQk5vP5Ss8++2zPjSmY
BQCU3k3G4/FNvNj7+B2ba1us/MknjfRZu1qUo6fUrRXps2/1nfEDp9drBHBHFcVTYLT+bafVgWgy
ooQj4eDDDz1cABdawC0A6Oq8u7u7e0j8Ps7voOlUNDPHr7hx+YBl0trk7rkIyDo7m8OEkVUpmgK2
r2MEFv0PpEbLhhYY9AYQS8V+KRKJ1G7cuNEe35jtrKFbAHgKhUIaWeiqeEFba9vgUWn+jNfRATUu
0O62x3l1MEnTOBf/JHkk+Qfcq/2m2P7LKv8wEyHs9iAcD0MoFAz9yUMP5bmbsAUCNwBgo39nZ2dX
nLRB+f1quTrO8NkLc4Lg8slVvzmnBxOha//iyRgsnFmAxZUFWD67hNvy+HUJls4sss+zy1kkVkmq
0QNfwAvdTtcw0cR5eILBd8oaFFMCYQQCHqoDdAtj6djHoqgFSjdutJxoATcAIOKXjMVinxd3UGUP
zcfzgruSLiJ+YkrXjRnRhJ5IJ+Dc+lm2pbNpQFsJ/oAfkLSOVLrQ0YrHA0ioIBgMQCweGwEik2Rg
aKO9FcEgSxObewXmQNGuR+4RGLvPvW6fuADdm//C4YWCEy3gFADa6N/ETvwkv4OSPeVieRzxsyck
saCj1+uadqhVB2uCX8SRvra9BtmFNARQmE49EL4RWNDfhsxSGkLRIEvPiomoqUM7PN1Ixsq0tzAl
fJP+HKgEgqDP5y899+wzXbtawCkAPOfPnw9ls9kt8aoo00dTqb1c+t/J6G2z0a+aOnuKxYgnNb99
sAnJVBIFN9vEUFkjMKUXUhSEgUa1IU4LAjMjMMXyrQSr2OMCWm6EuEAiE7/P5/cplx69eGTXI3AC
AOb3I/M/5/f7f52/KLKVVN5Fs3fcFENSlq/b7zm08JwmwS9t7K0zu04j9qRbKBRiXKHd7rCO14lU
sSN8EzaguDN9BASvzwvhaChYr9cPu3/ZHdiJCzgFgHdzc3MHyZ8PhClcrUabzdB1c/ntXpst02Is
fMVQ+MFQEHbzOxAJhx112KyNhJpIxYG4Ls1Sll/vbMkn3gTYGVhUQRRLRR8IBkOdq1eLdTtawAkA
PPv7+0T+/p24Y3drl83N9yrORx+FejsT5q9KLb2R8COxCFP5RNzuVCNiGQj7oV6uy3mK4pzSHnMW
ZaIV7AGAvIEo9odXuXDhEY0MqvPQAMp49JP6/xSIq3OgBmDkz8ZFyshffyrka+3Tx5JR2NzdoFU5
bN7C/GcNA8cNQtEQVI9qJiPaWfjXTWCIfQf7IxwLB9vt9mH7u9+1NAOOALCxsbEpq+1v69S/s0Z+
/9BQ/ctrBoLhIGztb84sfDMIqA6hQe6lL+BDctgEy+CPxM83TCQpdrORo+ulvkQzcD8O1Pa1q1ct
zYBdAHhQ+NFUKvU58UJoISaK+3ssIn+y2bREXEbqX8b+FflNosz38ruuyN5UNZH4p+p8jQC+BUMB
9r1Wo2U5cu2ElcVBwOZKWMx5IDOA3gAODkX9cu7RImcGXANAGVf8LAcCgU/rOgXRtrezP4r8CYGK
aRWmSvP9vX4X7LWRq7d1sEVhT5u/sRau0fi3N11QnfpqKBJiFVCD3lASJQRrYAi+v6IccwK5Bpi+
0EA4AP6g35/P5/fffffd4TwA4F1bWzuHo05Htev1BlRKFenMHjv5f7L/sri/UWdTZC67kLH1fb3g
LaSpgqnwZaNOrxH0+8PRMFSKFXkPSPGgmGQE9Z95bPAAMo3hWOgBfC298MILWlDoFswCADQBG3hB
P8NfMC28SIUJbu0/jX7R/TOs4cO3m3vOSB/JrbBbAK/fBx6v1e8kgrfLGlQ9UOgaWRFns22jFsAh
OWRmwBrU5A1ga18tXq2ZhYatAMDU/+rqaiSdTv8HcSdN7xp2h1y9nw29yXUCzeyxM4+POvP85jkW
krXbtE4q7pXQRWuw2vpAyI8s2Z4aVR1qFPE+iA/QApVmXWJYHqelnsVcxTgeYMkDBkNIZhPs7cWL
F4kHGJoBOxqAAJAOhUL/VEQjRf8o+SOK1w5hoptgGsBOOQeeYnXzvO0oI99BlUJ1dK5OjwGBWiDo
N+UIKsiE7IBEaAdDsLXrbVvT0QyDQcB5AmOLYAUA2h9NRYkIwoULjxzCDABQxvF/WlH7V8WTHIzD
v25Cl5T1E8O/8q5RYWV1GaKxqK3jin1DANB5Hc0ONCpNZhL8QRtzE83MgoQr8MIh13DEBbS1RhXz
+jMwygYq1lpD0JhERv0Bn7dYLO6/PRwOZgGAFzXAChLAT4CwJm8pXxyvyukiZYsAoByAlT2kmzm3
fs7S7TMaFDwAtOMPUUXS9OsWjk7sJFrDzxYKVJNRLx2VymhWFJkfx02sQNIUAOtrFawsZwBNUDAS
UIaqWqy/+JIhEbQCgGcMgLMogJ/nd5CvS5EvtwRwtBbPwJIKkd1eOrPk4Mj6nqnkqxJBqhOfmbQB
W38QtYHHozjSBqIU9G7h2B3GYzYqDWndoGHMg/8aBwRNG9gxsRSUoujkoN+vPF0uN43CwrY0wPr6
+iqe/K/xO+q1BkuJuon/w9gEyKt+9V1Krp9d9S8bGZoGmIxQiWmnbCat30ceCY0c24EknVZQpd8j
j6BSrNo2kYpiUElsZ+YQB0TKDEYTEapdaFy9dq025gEgegL3W9l/n8/vW109v8qv6EWtXqszFToC
gHMTQGapbyMGsHx+Gfx+v41FJFQbJsDEA6RpV60OW9GTRi1pHttN5ca89l4dgZGuu1lrsYINsJ0S
EuICyjQYxPkSE902Pj+ZzGiKAaD5xBNPlI2IoKUJWFpaDGUymX8r5rtrlRr6uR3LELARQuUaYLrC
Z+Xcsg3f31glmgJAnQ7xUtkXPVuAhEZqFPFvI0ws1xLa+36vx+b422lT3oAiVBEr9hxXSgrF0BPA
+2k/dvlyySgkbKkBstlsOJFI/mvxumqVOnSbXddLqKrjpdasGgHACfmz8gKm3htIlubj0wMiuu0u
0wbyQJKqOzEPJv5c9KQR0pZmVUBG8wJk8YApkzOeRKsHgELzBwkAnXz+Eh8LcGQCFBz94Xg8/tvi
CaqoAbqIaruLHICEA/QtAED2OLtkP/SrSnw0BgDVPJmjav+PCdyx8FS2diHxA/Ic6HqMTJEqRAR5
c0BAb1aa7gpEOCBohazqWNWb3RMrWMnGaQm7Xu7ixbxbAHgWFxej2P75tAYgAPSmZv06adNuoL6L
yJdNZVOujw8TL8AqcseTR65jNeCM+UGtVGMCEYmi7reqHkwwdjtJmyiGtt4aCFoUkDajUnXdQ69I
A2TiTAM8+uijBdcAQBMQQQB8RrxoIoGkARTbAJh2mfoWXgABIJlO2Dy+/FwTEyDTAhI37njwq8Ln
o43cX3oGgA9Ztj6QdCx8dQIcmLi8bCVQsHJ6JaWwGvvXKMAEACqYNfIC4mnGAfqPPnoxB8cAuOXU
BERisdhnxAtvoBtIiSA5BxBTwqrhRBCzFggHbQFAZsa1zyr5inyUcMydV6faiNczaz1IqAQtEo+w
IJJRjoCPCjINgKCxXJVMXxUqDRMrdkLB+I+IczwTG2sAZgIGrjRAKpUKIQf4LXFns9lilUDGXoCY
/p0GCi3GbHYzxMBTmaTt+mCdIQYuFyBBh0aJxfWGVMGl439LRDC7nIHFswvMQzBUw8IJiQRSHkJ8
UJXRfSlc0GdCBrlX8/UQ1UkYmvIBw8Ggc/HSpbxbDeBJJpNBBMC/FO0Vzf2nQBB7CpdifVNgQAQN
p16Nbzaz6IAESj4r58ucitZHAkX/fSiO/PErCY7KwJdXFyGIZslM8OpkTcDjI1GgqVVtyZPBisnf
itwLMO6zY8CSeYokwqR92pfylwpuNYASCoV8aAZ+R7w4qoenp2SRBnA//UKVFIQcH428BJqzZ3oC
kzIv6o5yvqpTEKpg22UuHK/2SdWvrC+zqJppNlI7hqrXKvSW6gLIXJpZfN30F92o50PBxzEUy3Q0
ms9wLMQCQZcfu1x0zQHwwJ6VlZXfk/V7uVB2HQrWZGUeC1AhvZh2Vfyp6txAYeTzql49niPME0Wq
9F0+vwjJhaT1+Tmtr3KC1z5p4OinZd7sRALF+YG8BiBmb6Yx+UYzhoPhAC2mWXvyySePwC0AXn/9
dUoHn1H0zim7Jnpen9dlMgi4pJBZx9B0L7JnTho/GjQToCN76jGzB8FwUAh14UwWsrgZ2XnD86mq
jvxp5yIiqlU+8QtHgaE54OYF8OFgTv1bEUEqmycz0Ot1K1evXq+4MQEwzgZ6zp07t4ij4OfEurNC
vuh6HQCtD6x4ALNlMZuVQJLgSJk6Xxr5my77SC2mYAlHPRVV2jZrXKxAHRfK8tdA90bXYL2kjKRU
nHMBtVezvuLvKLmQYKS11WoXnn76z+quI4G4ec6cOZPBkfExEakUDFJ7MHMzKwylkGx6IQ0Wd23Y
jkgDCIl83t8fTTKJwfLaEgIt7Gxuo8qrfFWnYTS7QPa/VWvbUvu8htCvSKJM3D97i2YBpJdS7LVW
qx58vVZruU0GMQAsLy8n/H7/3xcvFtHFKmxmfY6XGarJhUqk4yywAU6DAdjKufIUr+cnmCyvLrHj
O+MZghkRikJ5HkCp4EF3YEL+QF4IMrV2gWIjfT66NCpwoRgAtYODg52/pOodcJ4MmgCA8gHoDSTF
naMQZ12IBroBg2pq00j4TgpCQdAAqlCsQcdjdn4lwyJ6DgkGiCkHnk+oHBiof44OywZz/iV1IDqV
P10HoLF/1YKLUFl6OB6iv3t/9Ef/fQ9G9n/otiDEE41GffF4fEG8ASJMxVxpJk9AO42ZGSA1mkb7
7EQ9a4I4yh3pOpiOs3R+wbTwwzLWIAkTy2oCKf7fa3Y5NW5U+KlMhXyBi/2PRv9gyo01soU0+v3o
xQz6/ealy3k+CugKAEqn01HRFVzBi9F9n0hGqXgEHnW2OXp04+zJW5Kbo31006zEKRxyfGwNALFU
HFbQzodjYcfHAAmJ1DJ+IxOgsX/QzZoq7hVNlb4igIKfJyhqCvsTaAAyy2kGmm63e1QsFsswKwDe
eOMNBYlgGu3k3xK/0O10oNvq27NvFiAwu0mabpXKJi2CMTBlp6loZWl1EeKpmMGcAAfCF0LEE+Fz
VUXaeempp72WHYbMR1iFKWDKyNvSHmJpR/i0Mgp5ANRq9drhs5VnGkYxAHAyN3BhYSEaCASiMltG
xaEemO2x7Xye20ilU0dE43brA0ctiv6wJYE07FB+SAsC51X+RPijRk8yOTooS2L/ipTwifF+MQxs
h/yNzq+y+6UIILXd3d2t119/vTcXAMTicS9ygYx4GwgKNkPIOi2sWnY0gcgo0aGMuQAt1CQNDFkP
EOdtInQ+M3Ac8OEjibwgaDbSqAbQ3PXjzP2Uv6+My7r0GVPVHKTY0sspBnj0nppf+tKXDkBPAB1P
DZuYgUajMTyzsrKEF/5T4t52uw2Dtj0bZafS1mypuBoSqym3TaL63TY+Uij9jFP/YqUx/U0TQTqN
rsksQMnydLzwhXzA0NT2q7p+JFJOAKCGMildv369DHr772pqGAPAWz/6kbK0vJzAkwTFtBWRQZoH
J1u2zW7TrRtgIURak4dsuiWYVJNrkMTvRWGCgarXaQXup/VqA+rFBoBZV45Ht2zJWAYM5bhP++OZ
U1b9qF1rDPuENCS1Uqm08/LLL2sBIMMKEicrhNBTv33hcPjXRWSTGaCZwoqqmKo9u814AqQyeaYe
PV0zlohORpPYSdICUFFbCJ/zUb3JqwrTbp4k8EOVQuXDin4UT0X3eNLn0c8B4AfUWPXbegAm95WF
c1ktYdT9whe+sIMf9c3UPzgFAKqVwRI2GLuDihDOHak+9yEhzWpqKtGsA/q90dM1xTStRtSsZvby
wpt8LgvtqhJNIGgpqo4qH8jj/VO+/Vj4IIn7869OiB81qlOIj6aEM/V/7dq1I8H+z7REDLu21157
DRYXF2l9+o+Lt0o+Oq0XNGtYWN9V0yBQhKdrUrAlEg8fcwIDgelyAbpCEJhE8Ph8vjjqZWCAsQdU
y9f0+XyxvEvM9imgY/86AOAI7vftuI/6ZFb2THoyx7GQL2x9+y++3QYL+w9ONQCMCkQgFov9pnhX
NK+OHt86aLkjg8ZJEvNHQ1IeoYr8wxf06bwDETjHAgXOd9enh/Vh3em6Af4zOi+x/XatrVf4CkwB
QZfT154QJhE+2X16vL1dm69ypXPppaSWO2n+wX/9gz1O/Q/Nlox1vFZwpVLpnzlzJosuys+KO5Ef
MC0wzyZOh5bZWGrNapPxglAkyNwnfpxMsXVd+JbTFqC37+J3tF+T1iHh06PwZHH+qdpeRZmO7nF1
/qDZfSZ8Jy7t6IuZlTT4g75x9q9+8Od//tWaHfUPLlYKVW7fvs3IYCgYjItTmOkm6GkfvaaL6dBy
XmNKCsXqGXp4AnkjlIShDtF1OB+9051E786ZaQKKRpb2jtij28wCvDrlKHvQhAK6sNlk5NuK9ukz
jqT1CAAw0ob99fX1jbfffrvHjX6YqwagrVardZaXlxcUyUMBItEwlApHllzA8SPeDRMp+k6n9zSd
q1qsscJV2sXWFlBkKvQ4Q2g0u3c0RazOInuk7rVdimFUT6IN+AIPfpYvvh+5e+aMX6fwVf0QyZ7N
oAkY2f5Go5m7cuUJzfc3jP/DrA+MePPNNyGVSvnR/ftHUkFRcKjWcXFoC1poYwVOvpaO5v3TJM9q
scpyAiymPhxX7AqAYI9fQc3R63bZLCAq4y4flqF21BjF9FU93KanbsvTujoNwOX66VaIN/Ej367t
11oQzZ0W98d9g+3trY2/+iu25r4l+YMZnxii1Or1DnqEpAV+WhQDrZ9bKVdGl2GgxlwnjQwe7SUu
tsBX1LJEE3oMVJlLXIEmaVRLNQYMKtioobaolepQP6qzBSNIxbNVPQxGu9kDniZLuijCLyfCH+1i
5hJlZa4JVcNP6RhUxaQluJrNZu7w8JEjgfzBSQCA3cYPb94E5ALeYDD4KZD4OoROYucn1YxX2DZO
uoAOEpodVji/XOFGsyL48dPBHB3wJoSO0xJCQSf7N15CrmfD1VPBmAOkFpNsBRAY2/6NjY111Mw9
q9g/zPO5geVyuY1aIINonkq3+dE1oZvs2kqJmhMeozjB1GoaggC4b05FGKYKL/lVOU1Gur5m7zjI
o4Fp2u07hp7Hq7AIH8X3naYr+KAPET+y/VpDTrZ/5coVVLnORj/M+Ng4QLYJqAGG0Wj007od40ap
W5o8wq+OcRKNjWBZpZVuhBotuix5P8Xc9WDTqXohhi+N7jG3VB25eTbJr9m3VjaWJ+sZIaDaq6ur
m7fUW45HP8zh0bHKU0891aVaAZ/PF5T1KUXpyM46gbzTlboVkMlSPpLF9ft1L4JKP2buwmzdqWze
sXFXhKgejMO6k3p+F/fNgyazkqHVvybHyudy6/WXXm5K6v5OBwAwij23MplMdipVDCMXjKJ0owUS
TqIZB1fkgSO9RuAXYwaDdC3w35sa/XAMFu24npFG0gTvFNAghcqofD25mOAm6DaL29vbubHqH5gV
fsAJPj0cvve976mRSEQNhUIJmXBo2VSaCdxt2iE+Fq6QbXs5WlhZVoUrzcELXEAWaAKJxdB+w1ZK
GXNJKuBkdl6dTbvxySsqYl04nwVuWfju+vr62luDt3puRz/MCwDUrl+/3kFTEEFT8Auy/TS7BxE7
VSPvSLIuGoFBq6wFEzdSfC/m6scqYPK5MnbltO8Px2sejYpZ+ALR2W+MKnyW15cm58J7UnO5w/Xn
qs83Zxn9ME8AUKtWq41sNpserSquCHZXYfP8aH3BYX841S9iiNNJsxNREBMok6gct01n846/R6RL
mYBgdBwKLI1GunyeoZNmVM9AkUIS/qSuET+neP/u7m5BInzbIx9OAgA3b94km9dKJBJpZXqCC+s5
quShih56wtUda1ysX7rgkqL/sjZ/cbJpU7QEUM1DrYnr/JDwfdxStp1Op/K5//TZbZgWviv0zRUA
1F5++eU+uoYD5AQJcXFJbUQRCJoMBAPbeQF1Oi033ybL//O5glOwV6LwV0j43Azl/mDQXsM2eIvZ
/b7djB+cJgCooWvYicViCgIhZsTUY+kYq+gZ9GbLHM67qSdFRhycj9Q++fq88Cnat7Ozs/rtb32r
DXNQ/XCSAKB25cqTzVQqFfD7A5+Q7WeaAEFA6/Dxiyd8kJtqY/RTlG9lY0k3l0FF6R8cHKzduHGj
LhE+uB39MEcASC+gUCjUM5l02Ov1/j0wWciAPOWOZAkVN83NCLb+zUkYARXEWoVwNIQ2f1E3g4mE
f5jLrecvX64KwtdIlCPWD6elAajdvn2bQFBLp9NhI/cQxjfuD/vZPHrVkljNu52uyp+29yPhpxaS
kDmTFr8zzOfzmxcuXNDi/GKsf+aLPykATC7s3XdVFUFQRRCEUBN8HEyevkkPOqKUbd8lL3A++u8U
zFSdvae5i9FkRMdHUfbDw8PD9cMLj5Dwe1yRhyt/H04JAO/J7pLQjkiuUSlZIBD4JJg87kxb2IAW
njhR1m+Sa5+vGdLPMeJfwvEILK8tHpO9yTIzw/7+/v7a5ccerxkIfya7DyesAd6T9SmaA/Xxxx+v
U+FoMBiiAvb7wMQk0CKHnWaX1fk5GvGmEjydEW8VBWQLUZ3PQjIb11cmAavqbW9vb6099RR7wlXf
QPiuWT+ckgl4z6AHVGSyTRzpnUgkjHcPHzU6AE1zJm1AiSRall5cRua03TU7+LETq6ASrsXz+pVG
NT7QaXeq6Oavf+c732nDsc0/MeHDCZNA0RxMeub556udVqtVi8cTUQTDg2DxZG5a9pzcxi66i3bX
ybNqqs3PnKp7o2PGU3FYWluYVPHoF6oEtVarHX72c5/dGQwmQZ6+ZF7fXIUPJ+0FgNwcsJtpt7/X
LxTy5Vgs5vH7/ZHjqKFcDNRxDAhUSNnps+LOeTRb0+/sRCpVCc1TxoJfXYBwIiQkosaFqP1B9+Dw
YON/fOl/liSj/kSFD6cAADAwBwwIP/nJu+qVK1fQ1qlN5AYR7KC/bjrClBEQkgtxtn4gVRr1HD6S
zU2UwGmjmTr05E5S9VQQM7HzwqSTVqtdojr+r7/w9RbcAeHDKQEATMwBe//iiy910VU8ikQiCnoJ
2GOjLjMbefT0T3IbKZpIBRiUYdRyC+BamE5JJejcOSrYoEkaNEefFps0MhlI9DqHh7nNP/7j7fxb
epUvC/LMhe3DHQaAUW9PtnfeeUe9du1ao9lsVlEbBPiFKc3AQCYhPDYPlF9gD3lSR8/P5YMtMwfr
QP5IG3owkyZ0WppFC+GKk1LpT+Qvg0qlcoBEb7vxf75pNurn5udbtdMGwHucOuOlM9m+//3v9/P5
fAU7sInaIIAk8W+DCARxdte4Uc6eytFJKKnFBAsz00j0+Y8f+sSWcjWZgCdbTZx+S6yd1t9jx15K
MqGTBqK5iPwDpVRhupk6SuQMG41GYWNjY/Pa1avVW+qtvsTFG9qdzDHPdqc0wG3JONMBoV6v07Nu
yvi+iSTRh0AI8ERx2uWSzB1EwdATv2hkUqQtgXaZaurIbFBKOpKIMBtNS8Kz7ySibJElEjJpFArP
0simFcPpN5HxCtweyaJT+gWjQSsN6+N9FLaw5S9eLP/oR2/2BMEP7sSoh7sAADBG+S2Z8PntpZde
6ly6dKnS7XarPp9PQdNAQPiobC6fyv1nFothFT4+DzMXRCYJJLTRe5pUSqOdVLm4rJyYpRCXj9P+
7vV6rWq1mkOCt126fr3a/+EPZYIfCPd6YkQP7lIAgAlB1DZtdAxfeeWVXrFYrOFW9Hi8PQQCcj8P
LQhw/2Rat27tf3WqYsdo9RApv7BaDZTbTxVCw8Ggh/zl6PDwcPcP/9sfHj7zzDN15DV9wc7fMVsP
dzEAQOAGYKIRhm+//fbw2WefaV3KXyojoSrhcO6OCzS9oNXlCmv5iTZ58r86/fnUZ1OrjByvEtrv
9drIWo+KhcLBxu///v5XvvKVyquvvtoxGO1DOEX3zm67WwAAFiRxKGgFtr3xxhuDZyqVVuGJJ8q5
XK5IZoKekkWEezyD0sP+V0HHGY6XdVUF262tIQDAs3dWFzhUUd7dVrNJ2r1S2NnZ2d3/X/87/2dH
R9W/aDbbMBKyE8GfGtGD9xEAgAPCexZmQQeGW7dvD//vK690y1/9avOJQqGSe/TLxUK+UGi1W5VO
p1vv93sttM3t/mDQQXLWQ37WozIrdBfZe3zTJf+81+22EEgNClUjgStjKxxg++IXv5h77LHHS0dH
N6q12jeab/bflAnbSOjqafn1TtvdCgDgRsptK35gtP3k3Z8Mvvv/vtv7xjdq7aefLjf+9MaNWvHJ
J6uFQqH8+GOFo0uX8qXLly/h9ljpscuPHVEw6sni1fL10vXqU08/Vacy9299+1udXu9mz0TYdgR/
x0ieVbvbAQASjQBmHMFgG9h4HRj87VTgvNDfu1sFD+8zAIDAEW7bBIJbUIifyTZVIvhb7wehw/sY
ACBxH98zAARI+IJdcKgOBH7XEDo37f0MADAwE9omjTC63Ki9C8fa530rcPgAAwBsgOI2t90SttuS
jdcyH8j2QQfAvQb3AHCvwT0A3GsG7f8DhZAYBJrye64AAAAASUVORK5CYII=

------MultipartBoundary--SfBienyLtPuuSMeSDwIwjVgTdc5uAZ2heqo7ilQby5------
